[Script Info]
Title: Lecture 14. Circuits_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1s3411G7yM/?p=34&vd_source=6ffca0aa1006734a4fba52f389036611
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.47,0:00:02.70,*Default,NTP,0000,0000,0000,,61第14讲
Dialogue: 0,0:00:03.00,0:00:03.90,*Default,NTP,0000,0000,0000,,公告
Dialogue: 0,0:00:04.50,0:00:06.53,*Default,NTP,0000,0000,0000,,项目二将于周五截止
Dialogue: 0,0:00:06.87,0:00:09.33,*Default,NTP,0000,0000,0000,,但请到检查站
Dialogue: 0,0:00:09.50,0:00:11.67,*Default,NTP,0000,0000,0000,,今天之前提交第一阶段
Dialogue: 0,0:00:11.93,0:00:14.80,*Default,NTP,0000,0000,0000,,并通过提交整个项目获得奖励积分
Dialogue: 0,0:00:14.80,0:00:15.67,*Default,NTP,0000,0000,0000,,周四
Dialogue: 0,0:00:17.07,0:00:17.87,*Default,NTP,0000,0000,0000,,今天的讲座
Dialogue: 0,0:00:17.87,0:00:19.20,*Default,NTP,0000,0000,0000,,连同周一的讲座
Dialogue: 0,0:00:19.20,0:00:21.90,*Default,NTP,0000,0000,0000,,不包含在考试或作业中
Dialogue: 0,0:00:21.97,0:00:23.73,*Default,NTP,0000,0000,0000,,但它们很有趣
Dialogue: 0,0:00:23.77,0:00:26.57,*Default,NTP,0000,0000,0000,,所以一定要注意他们并来询问
Dialogue: 0,0:00:26.57,0:00:28.53,*Default,NTP,0000,0000,0000,,如果你好奇的话可以提问
Dialogue: 0,0:00:29.60,0:00:31.37,*Default,NTP,0000,0000,0000,,我们有一些建议办公时间
Dialogue: 0,0:00:31.37,0:00:32.57,*Default,NTP,0000,0000,0000,,即将到来的约会
Dialogue: 0,0:00:32.57,0:00:34.97,*Default,NTP,0000,0000,0000,,这周五周六和周一
Dialogue: 0,0:00:35.27,0:00:37.13,*Default,NTP,0000,0000,0000,,那些办公时间的约会
Dialogue: 0,0:00:37.13,0:00:39.77,*Default,NTP,0000,0000,0000,,其位置被标记为建议
Dialogue: 0,0:00:39.90,0:00:41.77,*Default,NTP,0000,0000,0000,,只是为了接受建议
Dialogue: 0,0:00:41.77,0:00:43.53,*Default,NTP,0000,0000,0000,,不是家庭作业或项目帮助
Dialogue: 0,0:00:44.17,0:00:45.30,*Default,NTP,0000,0000,0000,,所以如果你想问
Dialogue: 0,0:00:45.30,0:00:48.30,*Default,NTP,0000,0000,0000,,关于学习策略或未来课程
Dialogue: 0,0:00:48.30,0:00:52.13,*Default,NTP,0000,0000,0000,,或俱乐部或研究或实习或
Dialogue: 0,0:00:52.13,0:00:54.53,*Default,NTP,0000,0000,0000,,住在伯克利或其他地方是什么感觉
Dialogue: 0,0:00:54.53,0:00:56.87,*Default,NTP,0000,0000,0000,,然后进行一对一的预约
Dialogue: 0,0:00:56.87,0:00:58.47,*Default,NTP,0000,0000,0000,,但如果你的家庭作业需要帮助
Dialogue: 0,0:00:58.77,0:01:01.50,*Default,NTP,0000,0000,0000,,获取与以下位置不同的约会
Dialogue: 0,0:01:01.53,0:01:02.40,*Default,NTP,0000,0000,0000,,提供建议
Dialogue: 0,0:01:03.27,0:01:04.30,*Default,NTP,0000,0000,0000,,好的，我们开始吧
Dialogue: 0,0:01:04.30,0:01:06.87,*Default,NTP,0000,0000,0000,,周一继续讲座
Dialogue: 0,0:01:07.10,0:01:10.50,*Default,NTP,0000,0000,0000,,并描述了计算机中的电路如何
Dialogue: 0,0:01:10.50,0:01:11.97,*Default,NTP,0000,0000,0000,,实际上实现了
Dialogue: 0,0:01:12.13,0:01:14.67,*Default,NTP,0000,0000,0000,,数字的基本运算
Dialogue: 0,0:01:17.53,0:01:19.90,*Default,NTP,0000,0000,0000,,欢迎回来，让我们看看我们离开的地方
Dialogue: 0,0:01:19.90,0:01:21.13,*Default,NTP,0000,0000,0000,,所以此时
Dialogue: 0,0:01:21.37,0:01:24.07,*Default,NTP,0000,0000,0000,,我们知道您只能使用二进制数
Dialogue: 0,0:01:24.07,0:01:25.13,*Default,NTP,0000,0000,0000,,零和一
Dialogue: 0,0:01:25.13,0:01:27.47,*Default,NTP,0000,0000,0000,,表示正数和负数
Dialogue: 0,0:01:27.47,0:01:28.87,*Default,NTP,0000,0000,0000,,和浮点数
Dialogue: 0,0:01:29.27,0:01:32.53,*Default,NTP,0000,0000,0000,,我们知道我们有三个基本的
Dialogue: 0,0:01:32.93,0:01:34.73,*Default,NTP,0000,0000,0000,,布尔或逻辑运算符
Dialogue: 0,0:01:34.73,0:01:37.73,*Default,NTP,0000,0000,0000,,逻辑和逻辑或和逻辑非
Dialogue: 0,0:01:38.30,0:01:41.17,*Default,NTP,0000,0000,0000,,我向你展示了如何使用晶体管
Dialogue: 0,0:01:41.47,0:01:43.90,*Default,NTP,0000,0000,0000,,两个串联用于“与”门
Dialogue: 0,0:01:44.20,0:01:46.93,*Default,NTP,0000,0000,0000,,两个并联用于 nate 和 orgate
Dialogue: 0,0:01:47.17,0:01:49.87,*Default,NTP,0000,0000,0000,,以及一个用于非门的晶体管和电阻器
Dialogue: 0,0:01:49.87,0:01:51.27,*Default,NTP,0000,0000,0000,,我怎样才能在身体上
Dialogue: 0,0:01:51.73,0:01:56.27,*Default,NTP,0000,0000,0000,,构建这些逻辑布尔运算符 and or not
Dialogue: 0,0:01:56.60,0:01:58.30,*Default,NTP,0000,0000,0000,,现在我需要向你展示的是
Dialogue: 0,0:01:58.30,0:01:59.57,*Default,NTP,0000,0000,0000,,我怎样才能摆脱这三个
Dialogue: 0,0:01:59.57,0:02:02.97,*Default,NTP,0000,0000,0000,,极其简单的运算计算
Dialogue: 0,0:02:03.13,0:02:06.70,*Default,NTP,0000,0000,0000,,现代计算机上的两个完整计算
Dialogue: 0,0:02:06.70,0:02:08.73,*Default,NTP,0000,0000,0000,,这就是我们今天要开始讨论的
Dialogue: 0,0:02:08.73,0:02:09.93,*Default,NTP,0000,0000,0000,,所以让我们继续深入研究
Dialogue: 0,0:02:11.30,0:02:13.73,*Default,NTP,0000,0000,0000,,所以让我从定义一个电路开始
Dialogue: 0,0:02:13.87,0:02:16.87,*Default,NTP,0000,0000,0000,,电路是逻辑门的集合
Dialogue: 0,0:02:16.93,0:02:18.13,*Default,NTP,0000,0000,0000,,你知道什么是门
Dialogue: 0,0:02:18.20,0:02:20.53,*Default,NTP,0000,0000,0000,,这只是一个实例
Dialogue: 0,0:02:20.53,0:02:23.53,*Default,NTP,0000,0000,0000,,使用或不使用晶体管
Dialogue: 0,0:02:23.53,0:02:25.90,*Default,NTP,0000,0000,0000,,但你知道这又是抽象的力量
Dialogue: 0,0:02:25.90,0:02:26.57,*Default,NTP,0000,0000,0000,,所以此时
Dialogue: 0,0:02:26.57,0:02:28.37,*Default,NTP,0000,0000,0000,,我要开始称它们为“门”
Dialogue: 0,0:02:28.50,0:02:29.53,*Default,NTP,0000,0000,0000,,我不用再担心了
Dialogue: 0,0:02:29.53,0:02:31.10,*Default,NTP,0000,0000,0000,,它们是由多个构建而成
Dialogue: 0,0:02:31.10,0:02:32.60,*Default,NTP,0000,0000,0000,,串联 并联
Dialogue: 0,0:02:32.60,0:02:34.67,*Default,NTP,0000,0000,0000,,电阻晶体管并不重要
Dialogue: 0,0:02:34.77,0:02:35.57,*Default,NTP,0000,0000,0000,,它们只是大门
Dialogue: 0,0:02:35.57,0:02:37.77,*Default,NTP,0000,0000,0000,,它们是做或不做的操作
Dialogue: 0,0:02:37.77,0:02:41.27,*Default,NTP,0000,0000,0000,,好的，电路是逻辑门的集合
Dialogue: 0,0:02:41.60,0:02:45.50,*Default,NTP,0000,0000,0000,,将一组二进制输入转换为一组
Dialogue: 0,0:02:45.67,0:02:46.93,*Default,NTP,0000,0000,0000,,二进制输出
Dialogue: 0,0:02:46.93,0:02:47.87,*Default,NTP,0000,0000,0000,,这只是一个函数
Dialogue: 0,0:02:48.17,0:02:50.40,*Default,NTP,0000,0000,0000,,所以一堆东西都是二进制的
Dialogue: 0,0:02:50.40,0:02:52.67,*Default,NTP,0000,0000,0000,,因为那是现代计算机的语言
Dialogue: 0,0:02:52.80,0:02:54.77,*Default,NTP,0000,0000,0000,,然后就会出现一堆一个或多个东西
Dialogue: 0,0:02:54.77,0:02:56.37,*Default,NTP,0000,0000,0000,,这也是一个二进制文件
Dialogue: 0,0:02:56.37,0:02:57.90,*Default,NTP,0000,0000,0000,,例如电路的定义
Dialogue: 0,0:02:57.93,0:03:00.17,*Default,NTP,0000,0000,0000,,它的全部组成是门的集合
Dialogue: 0,0:03:00.17,0:03:03.47,*Default,NTP,0000,0000,0000,,所以你要做的就是和或或不是
Dialogue: 0,0:03:03.67,0:03:05.90,*Default,NTP,0000,0000,0000,,好的，让我们看一个非常简单的例子
Dialogue: 0,0:03:07.13,0:03:09.07,*Default,NTP,0000,0000,0000,,所以这不是一个有意义的计算
Dialogue: 0,0:03:09.07,0:03:10.87,*Default,NTP,0000,0000,0000,,我没有计算任何有意义的事情
Dialogue: 0,0:03:10.87,0:03:12.17,*Default,NTP,0000,0000,0000,,我只是想给你看
Dialogue: 0,0:03:12.40,0:03:13.80,*Default,NTP,0000,0000,0000,,电路示例
Dialogue: 0,0:03:13.80,0:03:14.33,*Default,NTP,0000,0000,0000,,然后当然
Dialogue: 0,0:03:14.33,0:03:16.20,*Default,NTP,0000,0000,0000,,我们将进行有意义的计算
Dialogue: 0,0:03:16.37,0:03:18.50,*Default,NTP,0000,0000,0000,,稍后我们将介绍如何构建这些电路
Dialogue: 0,0:03:18.50,0:03:20.50,*Default,NTP,0000,0000,0000,,我只是想让你看看电路是什么样子
Dialogue: 0,0:03:20.50,0:03:22.17,*Default,NTP,0000,0000,0000,,所以通常在电路中
Dialogue: 0,0:03:22.70,0:03:24.17,*Default,NTP,0000,0000,0000,,输入在左边
Dialogue: 0,0:03:24.17,0:03:26.53,*Default,NTP,0000,0000,0000,,我这里有两个输入和 b
Dialogue: 0,0:03:26.67,0:03:29.67,*Default,NTP,0000,0000,0000,,这可以是零或一 这可以是零或一
Dialogue: 0,0:03:30.10,0:03:31.73,*Default,NTP,0000,0000,0000,,我有两个输出
Dialogue: 0,0:03:31.97,0:03:35.07,*Default,NTP,0000,0000,0000,,c 和 d 当然这些必须是零或一
Dialogue: 0,0:03:35.07,0:03:36.50,*Default,NTP,0000,0000,0000,,因为它们是的输出
Dialogue: 0,0:03:36.50,0:03:39.53,*Default,NTP,0000,0000,0000,,将二进制输入推入一系列门
Dialogue: 0,0:03:39.67,0:03:40.87,*Default,NTP,0000,0000,0000,,这是我的大门
Dialogue: 0,0:03:40.87,0:03:41.87,*Default,NTP,0000,0000,0000,,所以这里有一个矿门
Dialogue: 0,0:03:41.87,0:03:42.87,*Default,NTP,0000,0000,0000,,记住矿门的形状
Dialogue: 0,0:03:42.87,0:03:44.73,*Default,NTP,0000,0000,0000,,它有一种有趣的圆背
Dialogue: 0,0:03:44.73,0:03:45.97,*Default,NTP,0000,0000,0000,,和中间的加号
Dialogue: 0,0:03:45.97,0:03:46.77,*Default,NTP,0000,0000,0000,,只是为了记住它
Dialogue: 0,0:03:46.77,0:03:49.97,*Default,NTP,0000,0000,0000,,矿石 这是一个带有小点的端门
Dialogue: 0,0:03:50.00,0:03:51.87,*Default,NTP,0000,0000,0000,,我那里有一个结门
Dialogue: 0,0:03:51.87,0:03:53.53,*Default,NTP,0000,0000,0000,,这里还有一个结门
Dialogue: 0,0:03:53.70,0:03:55.90,*Default,NTP,0000,0000,0000,,让我们看看这里发生了什么
Dialogue: 0,0:03:57.57,0:04:01.73,*Default,NTP,0000,0000,0000,,让我们看看这个输出的结果是什么
Dialogue: 0,0:04:01.73,0:04:03.97,*Default,NTP,0000,0000,0000,,a 正在进入这个矿门
Dialogue: 0,0:04:04.50,0:04:05.27,*Default,NTP,0000,0000,0000,,b 进来了
Dialogue: 0,0:04:05.27,0:04:07.70,*Default,NTP,0000,0000,0000,,注意那里的那个小白点
Dialogue: 0,0:04:07.70,0:04:09.90,*Default,NTP,0000,0000,0000,,这告诉我我将接受这个输入
Dialogue: 0,0:04:09.97,0:04:11.13,*Default,NTP,0000,0000,0000,,我将分叉
Dialogue: 0,0:04:11.13,0:04:14.00,*Default,NTP,0000,0000,0000,,我要把它带到这个机关
Dialogue: 0,0:04:14.10,0:04:16.37,*Default,NTP,0000,0000,0000,,但我也会把它带入这个结
Dialogue: 0,0:04:16.37,0:04:17.40,*Default,NTP,0000,0000,0000,,并最终进入这个
Dialogue: 0,0:04:17.40,0:04:20.13,*Default,NTP,0000,0000,0000,,所以那个小点告诉我同样的
Dialogue: 0,0:04:20.13,0:04:20.97,*Default,NTP,0000,0000,0000,,信号进入
Dialogue: 0,0:04:20.97,0:04:21.90,*Default,NTP,0000,0000,0000,,两个不同的方向
Dialogue: 0,0:04:21.90,0:04:23.10,*Default,NTP,0000,0000,0000,,所以无论 b 是什么
Dialogue: 0,0:04:23.30,0:04:27.57,*Default,NTP,0000,0000,0000,,它出现在这里，从这里出来的是 arb
Dialogue: 0,0:04:28.10,0:04:32.60,*Default,NTP,0000,0000,0000,,所以输出 c 只是 arb 的结果
Dialogue: 0,0:04:32.80,0:04:33.40,*Default,NTP,0000,0000,0000,,没有意义
Dialogue: 0,0:04:33.40,0:04:34.67,*Default,NTP,0000,0000,0000,,现在没有任何意义
Dialogue: 0,0:04:34.67,0:04:35.40,*Default,NTP,0000,0000,0000,,但我们不用担心
Dialogue: 0,0:04:35.40,0:04:37.33,*Default,NTP,0000,0000,0000,,我只是想向你展示电路是什么样子
Dialogue: 0,0:04:37.67,0:04:38.93,*Default,NTP,0000,0000,0000,,这就是输出
Dialogue: 0,0:04:38.93,0:04:39.77,*Default,NTP,0000,0000,0000,,而且当然
Dialogue: 0,0:04:39.87,0:04:42.37,*Default,NTP,0000,0000,0000,,因为 a 可以是 0 或 1 true 或 false
Dialogue: 0,0:04:42.37,0:04:44.13,*Default,NTP,0000,0000,0000,,b 可以是 0 1 true 或 false
Dialogue: 0,0:04:44.17,0:04:47.33,*Default,NTP,0000,0000,0000,,c 当然是零或一 true 或 false
Dialogue: 0,0:04:47.53,0:04:49.67,*Default,NTP,0000,0000,0000,,让我们看看 d 是什么
Dialogue: 0,0:04:49.67,0:04:51.47,*Default,NTP,0000,0000,0000,,好的，让我们看看
Dialogue: 0,0:04:51.47,0:04:57.87,*Default,NTP,0000,0000,0000,,所以这支桨的输出进入与门
Dialogue: 0,0:04:58.17,0:05:00.53,*Default,NTP,0000,0000,0000,,所以首先是允许确定
Dialogue: 0,0:05:00.53,0:05:01.73,*Default,NTP,0000,0000,0000,,这只是一个 0 1
Dialogue: 0,0:05:01.73,0:05:03.47,*Default,NTP,0000,0000,0000,,以及这两位的浮动结果
Dialogue: 0,0:05:03.47,0:05:06.10,*Default,NTP,0000,0000,0000,,所以这只是它进来的另一个二进制数
Dialogue: 0,0:05:06.33,0:05:10.00,*Default,NTP,0000,0000,0000,,所以这是 and or b 的结尾
Dialogue: 0,0:05:10.53,0:05:11.80,*Default,NTP,0000,0000,0000,,还有什么让我们看看
Dialogue: 0,0:05:11.80,0:05:12.80,*Default,NTP,0000,0000,0000,,b进来了
Dialogue: 0,0:05:12.80,0:05:14.30,*Default,NTP,0000,0000,0000,,它穿过结门
Dialogue: 0,0:05:14.30,0:05:15.73,*Default,NTP,0000,0000,0000,,我必须注意的是 b
Dialogue: 0,0:05:15.93,0:05:16.90,*Default,NTP,0000,0000,0000,,带有主题标签
Dialogue: 0,0:05:16.90,0:05:19.97,*Default,NTP,0000,0000,0000,,有时你会看到 ab 与 ab 和撇号
Dialogue: 0,0:05:20.10,0:05:22.93,*Default,NTP,0000,0000,0000,,有时你会看到 b 上面有一条线
Dialogue: 0,0:05:23.10,0:05:25.40,*Default,NTP,0000,0000,0000,,所以这也进入了 and 门
Dialogue: 0,0:05:25.40,0:05:27.80,*Default,NTP,0000,0000,0000,,所以我要结束 a 或 b
Dialogue: 0,0:05:28.00,0:05:29.20,*Default,NTP,0000,0000,0000,,这个的输出
Dialogue: 0,0:05:29.53,0:05:32.20,*Default,NTP,0000,0000,0000,,而不是b经过这里
Dialogue: 0,0:05:32.20,0:05:35.10,*Default,NTP,0000,0000,0000,,然后我要把整个事情打结起来
Dialogue: 0,0:05:35.30,0:05:37.90,*Default,NTP,0000,0000,0000,,d 在最后，所以表达式 d
Dialogue: 0,0:05:38.27,0:05:40.30,*Default,NTP,0000,0000,0000,,等于 a 或 b
Dialogue: 0,0:05:40.77,0:05:42.00,*Default,NTP,0000,0000,0000,,从这里进来
Dialogue: 0,0:05:42.73,0:05:46.50,*Default,NTP,0000,0000,0000,,不是然后整个事情都点头了
Dialogue: 0,0:05:46.50,0:05:48.27,*Default,NTP,0000,0000,0000,,那里有一个小撇号
Dialogue: 0,0:05:48.30,0:05:49.53,*Default,NTP,0000,0000,0000,,好吧，这是一个电路
Dialogue: 0,0:05:49.93,0:05:52.77,*Default,NTP,0000,0000,0000,,什么是电路，它是门的集合
Dialogue: 0,0:05:53.00,0:05:55.77,*Default,NTP,0000,0000,0000,,或不，这就是我能做的
Dialogue: 0,0:05:56.07,0:05:59.80,*Default,NTP,0000,0000,0000,,需要一系列一个或多个二进制输入
Dialogue: 0,0:06:00.27,0:06:03.93,*Default,NTP,0000,0000,0000,,并输出一系列一个或多个二进制输出
Dialogue: 0,0:06:03.93,0:06:04.90,*Default,NTP,0000,0000,0000,,那是一个电路
Dialogue: 0,0:06:05.20,0:06:06.93,*Default,NTP,0000,0000,0000,,这又不是特别有意义的
Dialogue: 0,0:06:06.93,0:06:08.67,*Default,NTP,0000,0000,0000,,事实上这根本没有意义
Dialogue: 0,0:06:08.73,0:06:11.07,*Default,NTP,0000,0000,0000,,现在我们也想问自己
Dialogue: 0,0:06:11.10,0:06:11.40,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:06:11.40,0:06:13.70,*Default,NTP,0000,0000,0000,,现在我有了创建电路的机制
Dialogue: 0,0:06:13.70,0:06:15.60,*Default,NTP,0000,0000,0000,,这是一个计算权
Dialogue: 0,0:06:15.60,0:06:17.30,*Default,NTP,0000,0000,0000,,我们将采用一堆二进制输入
Dialogue: 0,0:06:17.30,0:06:18.70,*Default,NTP,0000,0000,0000,,并创建一堆二进制输出
Dialogue: 0,0:06:18.70,0:06:20.53,*Default,NTP,0000,0000,0000,,所以想象我的二进制输入是两个
Dialogue: 0,0:06:20.53,0:06:21.97,*Default,NTP,0000,0000,0000,,我要添加的二进制数
Dialogue: 0,0:06:22.30,0:06:24.07,*Default,NTP,0000,0000,0000,,输出是总和
Dialogue: 0,0:06:24.30,0:06:25.67,*Default,NTP,0000,0000,0000,,或者我的输入是两件事
Dialogue: 0,0:06:25.67,0:06:27.37,*Default,NTP,0000,0000,0000,,我想比较它们是否相等
Dialogue: 0,0:06:27.50,0:06:29.80,*Default,NTP,0000,0000,0000,,我的输出是真还是假
Dialogue: 0,0:06:29.80,0:06:32.57,*Default,NTP,0000,0000,0000,,所以计算的本质将会发生
Dialogue: 0,0:06:32.80,0:06:35.97,*Default,NTP,0000,0000,0000,,通过按下输入 a 和 bc 和 d
Dialogue: 0,0:06:35.97,0:06:37.87,*Default,NTP,0000,0000,0000,,无论左边是什么
Dialogue: 0,0:06:37.97,0:06:40.20,*Default,NTP,0000,0000,0000,,通过一系列的门和/或不
Dialogue: 0,0:06:40.20,0:06:41.60,*Default,NTP,0000,0000,0000,,得到一系列的输出
Dialogue: 0,0:06:41.67,0:06:44.67,*Default,NTP,0000,0000,0000,,希望能够进行有意义的计算
Dialogue: 0,0:06:44.67,0:06:46.50,*Default,NTP,0000,0000,0000,,好的，所以我们要做连接
Dialogue: 0,0:06:46.50,0:06:47.00,*Default,NTP,0000,0000,0000,,我们要展示
Dialogue: 0,0:06:47.00,0:06:49.37,*Default,NTP,0000,0000,0000,,如何真正构建有意义的计算
Dialogue: 0,0:06:49.37,0:06:50.40,*Default,NTP,0000,0000,0000,,现在我们知道了
Dialogue: 0,0:06:50.53,0:06:52.30,*Default,NTP,0000,0000,0000,,什么是电路以及我们如何构建电路
Dialogue: 0,0:06:52.30,0:06:53.80,*Default,NTP,0000,0000,0000,,从大门所以
Dialogue: 0,0:06:53.80,0:06:54.57,*Default,NTP,0000,0000,0000,,现在就这样结束了
Dialogue: 0,0:06:54.57,0:06:56.17,*Default,NTP,0000,0000,0000,,我们会在几分钟内取走它
Dialogue: 0,0:06:58.10,0:06:58.90,*Default,NTP,0000,0000,0000,,可以，然后呢
Dialogue: 0,0:06:58.90,0:07:00.27,*Default,NTP,0000,0000,0000,,计算的本质
Dialogue: 0,0:07:00.27,0:07:02.97,*Default,NTP,0000,0000,0000,,使用布尔运算和/或结
Dialogue: 0,0:07:03.10,0:07:04.40,*Default,NTP,0000,0000,0000,,我们要建造一个电路吗
Dialogue: 0,0:07:04.40,0:07:06.40,*Default,NTP,0000,0000,0000,,变形之门的集合
Dialogue: 0,0:07:06.53,0:07:08.40,*Default,NTP,0000,0000,0000,,二进制输入到二进制输出
Dialogue: 0,0:07:08.40,0:07:10.37,*Default,NTP,0000,0000,0000,,这就是我们在上一讲中看到的
Dialogue: 0,0:07:10.57,0:07:10.93,*Default,NTP,0000,0000,0000,,现在
Dialogue: 0,0:07:10.93,0:07:12.73,*Default,NTP,0000,0000,0000,,我将引导您完成四个步骤
Dialogue: 0,0:07:12.73,0:07:15.97,*Default,NTP,0000,0000,0000,,从你想要计算的过程开始
Dialogue: 0,0:07:16.47,0:07:17.97,*Default,NTP,0000,0000,0000,,到电路
Dialogue: 0,0:07:17.97,0:07:19.67,*Default,NTP,0000,0000,0000,,好的，我将完成四个步骤
Dialogue: 0,0:07:19.67,0:07:21.30,*Default,NTP,0000,0000,0000,,然后我们会看到一堆例子
Dialogue: 0,0:07:21.30,0:07:23.53,*Default,NTP,0000,0000,0000,,您可能会看到的真正有意义的计算
Dialogue: 0,0:07:23.53,0:07:25.30,*Default,NTP,0000,0000,0000,,例如在现代计算机上
Dialogue: 0,0:07:25.80,0:07:27.10,*Default,NTP,0000,0000,0000,,所以我们要做的第一件事
Dialogue: 0,0:07:27.10,0:07:28.50,*Default,NTP,0000,0000,0000,,我们必须问自己
Dialogue: 0,0:07:28.50,0:07:30.27,*Default,NTP,0000,0000,0000,,输入是什么，输出是什么
Dialogue: 0,0:07:30.27,0:07:31.73,*Default,NTP,0000,0000,0000,,好的，让我举个例子
Dialogue: 0,0:07:31.73,0:07:33.70,*Default,NTP,0000,0000,0000,,我有两个进，两个出
Dialogue: 0,0:07:33.97,0:07:35.87,*Default,NTP,0000,0000,0000,,我可以一进三出
Dialogue: 0,0:07:35.87,0:07:37.93,*Default,NTP,0000,0000,0000,,我可以三进四出
Dialogue: 0,0:07:38.40,0:07:39.73,*Default,NTP,0000,0000,0000,,现在这无关紧要
Dialogue: 0,0:07:39.73,0:07:42.37,*Default,NTP,0000,0000,0000,,但我们将从这个简单的例子开始
Dialogue: 0,0:07:42.70,0:07:44.60,*Default,NTP,0000,0000,0000,,所以我们要遵循四个步骤
Dialogue: 0,0:07:45.70,0:07:49.53,*Default,NTP,0000,0000,0000,,第一步是为所有人建立真值表
Dialogue: 0,0:07:49.53,0:07:52.40,*Default,NTP,0000,0000,0000,,可能的输入输出值
Dialogue: 0,0:07:52.60,0:07:55.77,*Default,NTP,0000,0000,0000,,好吧，如果我有两个输入 a 和 b
Dialogue: 0,0:07:56.13,0:07:58.27,*Default,NTP,0000,0000,0000,,我的真值表必须有
Dialogue: 0,0:07:58.70,0:08:02.13,*Default,NTP,0000,0000,0000,,两到两四行
Dialogue: 0,0:08:02.17,0:08:05.80,*Default,NTP,0000,0000,0000,,所以我必须枚举每对可能的输入
Dialogue: 0,0:08:05.80,0:08:08.30,*Default,NTP,0000,0000,0000,,所以如果我需要三个输入
Dialogue: 0,0:08:09.00,0:08:12.77,*Default,NTP,0000,0000,0000,,如果我有 4 个输入，则需要 8 行 我需要 16 行
Dialogue: 0,0:08:12.77,0:08:14.90,*Default,NTP,0000,0000,0000,,我需要两行到最后一行
Dialogue: 0,0:08:15.00,0:08:17.40,*Default,NTP,0000,0000,0000,,因为我必须枚举所有可能的输入
Dialogue: 0,0:08:17.40,0:08:18.80,*Default,NTP,0000,0000,0000,,什么都不能遗漏
Dialogue: 0,0:08:19.17,0:08:21.27,*Default,NTP,0000,0000,0000,,所以如果我有两个输入 a 和 b
Dialogue: 0,0:08:21.50,0:08:23.67,*Default,NTP,0000,0000,0000,,我知道所有的可能性是什么
Dialogue: 0,0:08:23.67,0:08:25.80,*Default,NTP,0000,0000,0000,,有 0 0 1 0 1 1
Dialogue: 0,0:08:25.80,0:08:26.57,*Default,NTP,0000,0000,0000,,顺便通知一下
Dialogue: 0,0:08:26.57,0:08:28.67,*Default,NTP,0000,0000,0000,,这是构建真值表的最简单方法
Dialogue: 0,0:08:28.70,0:08:30.00,*Default,NTP,0000,0000,0000,,只用二进制数
Dialogue: 0,0:08:30.17,0:08:35.40,*Default,NTP,0000,0000,0000,,0 1 2 3 4行从零到二到最后减一
Dialogue: 0,0:08:35.40,0:08:36.97,*Default,NTP,0000,0000,0000,,总行数到最后两行
Dialogue: 0,0:08:37.13,0:08:38.80,*Default,NTP,0000,0000,0000,,好的，这是最简单的部分
Dialogue: 0,0:08:38.80,0:08:41.93,*Default,NTP,0000,0000,0000,,所以无论我正在构建什么电路
Dialogue: 0,0:08:43.07,0:08:44.20,*Default,NTP,0000,0000,0000,,有两个输入
Dialogue: 0,0:08:44.33,0:08:46.17,*Default,NTP,0000,0000,0000,,这四行将完全相同
Dialogue: 0,0:08:46.17,0:08:49.47,*Default,NTP,0000,0000,0000,,这是电路的四个可能的输入
Dialogue: 0,0:08:49.87,0:08:50.90,*Default,NTP,0000,0000,0000,,现在我必须决定
Dialogue: 0,0:08:50.90,0:08:52.47,*Default,NTP,0000,0000,0000,,我想要的输出是什么
Dialogue: 0,0:08:52.73,0:08:56.20,*Default,NTP,0000,0000,0000,,好吧，现在我要选择任意的东西
Dialogue: 0,0:08:56.50,0:08:57.30,*Default,NTP,0000,0000,0000,,因为这不是
Dialogue: 0,0:08:57.30,0:08:58.97,*Default,NTP,0000,0000,0000,,再次没有意义的计算
Dialogue: 0,0:08:58.97,0:09:00.67,*Default,NTP,0000,0000,0000,,就像我们之前做的电路一样
Dialogue: 0,0:09:00.67,0:09:01.73,*Default,NTP,0000,0000,0000,,最终演讲
Dialogue: 0,0:09:01.73,0:09:03.20,*Default,NTP,0000,0000,0000,,我要在这里做一些更有意义的事情
Dialogue: 0,0:09:03.20,0:09:05.50,*Default,NTP,0000,0000,0000,,但我想带你完成四个步骤
Dialogue: 0,0:09:05.70,0:09:06.67,*Default,NTP,0000,0000,0000,,然后我们要开始做
Dialogue: 0,0:09:06.67,0:09:07.87,*Default,NTP,0000,0000,0000,,有意义的计算
Dialogue: 0,0:09:08.37,0:09:10.67,*Default,NTP,0000,0000,0000,,那么我要确定的输出是什么
Dialogue: 0,0:09:10.67,0:09:12.60,*Default,NTP,0000,0000,0000,,我只是告诉你这是你的工作
Dialogue: 0,0:09:12.67,0:09:14.47,*Default,NTP,0000,0000,0000,,这就是计算的本质
Dialogue: 0,0:09:14.60,0:09:18.47,*Default,NTP,0000,0000,0000,,当 aa 01 时 c 应该是 1
Dialogue: 0,0:09:19.33,0:09:21.67,*Default,NTP,0000,0000,0000,,抱歉，当 a 为 1 而 b 为 0 时
Dialogue: 0,0:09:22.07,0:09:24.70,*Default,NTP,0000,0000,0000,,或者当a为1且b为0时
Dialogue: 0,0:09:24.80,0:09:26.07,*Default,NTP,0000,0000,0000,,否则它应该为零
Dialogue: 0,0:09:26.27,0:09:30.10,*Default,NTP,0000,0000,0000,,仅当 a 为 1 并且 b 为 1 时 d 才应为 1
Dialogue: 0,0:09:30.10,0:09:30.97,*Default,NTP,0000,0000,0000,,这是计算
Dialogue: 0,0:09:30.97,0:09:32.70,*Default,NTP,0000,0000,0000,,现在这并没有什么意义
Dialogue: 0,0:09:32.70,0:09:33.77,*Default,NTP,0000,0000,0000,,但我们会再看看
Dialogue: 0,0:09:33.77,0:09:35.70,*Default,NTP,0000,0000,0000,,有意义的计算就在一点点
Dialogue: 0,0:09:36.13,0:09:37.53,*Default,NTP,0000,0000,0000,,所以现在我有一个真值表
Dialogue: 0,0:09:38.00,0:09:39.47,*Default,NTP,0000,0000,0000,,我预先确定行
Dialogue: 0,0:09:39.47,0:09:40.37,*Default,NTP,0000,0000,0000,,这太简单了
Dialogue: 0,0:09:40.37,0:09:43.27,*Default,NTP,0000,0000,0000,,只需枚举所有可能的值而不是输入
Dialogue: 0,0:09:43.30,0:09:45.37,*Default,NTP,0000,0000,0000,,然后你告诉我你想要什么计算
Dialogue: 0,0:09:45.37,0:09:46.77,*Default,NTP,0000,0000,0000,,如果你想添加两件事
Dialogue: 0,0:09:46.77,0:09:48.93,*Default,NTP,0000,0000,0000,,你的输出必须与求和有关
Dialogue: 0,0:09:48.93,0:09:49.47,*Default,NTP,0000,0000,0000,,例如
Dialogue: 0,0:09:49.47,0:09:51.30,*Default,NTP,0000,0000,0000,,几分钟后我们就会看到这样的例子
Dialogue: 0,0:09:51.67,0:09:53.70,*Default,NTP,0000,0000,0000,,所以这些现在都是任意的
Dialogue: 0,0:09:53.77,0:09:57.13,*Default,NTP,0000,0000,0000,,第二步构建子表达式
Dialogue: 0,0:09:58.07,0:10:00.10,*Default,NTP,0000,0000,0000,,与和不
Dialogue: 0,0:10:00.13,0:10:03.13,*Default,NTP,0000,0000,0000,,对于每个输出列，我这里有两个输出列
Dialogue: 0,0:10:03.13,0:10:04.33,*Default,NTP,0000,0000,0000,,这真的很重要
Dialogue: 0,0:10:04.57,0:10:06.07,*Default,NTP,0000,0000,0000,,你要构建一个子表达式
Dialogue: 0,0:10:06.07,0:10:07.40,*Default,NTP,0000,0000,0000,,我会在一秒钟内向您展示如何做到这一点
Dialogue: 0,0:10:07.40,0:10:10.87,*Default,NTP,0000,0000,0000,,你唯一可以使用的是 and 和 not
Dialogue: 0,0:10:10.87,0:10:12.27,*Default,NTP,0000,0000,0000,,你还不能使用桨
Dialogue: 0,0:10:12.27,0:10:14.50,*Default,NTP,0000,0000,0000,,我会解释一下为什么
Dialogue: 0,0:10:14.60,0:10:17.07,*Default,NTP,0000,0000,0000,,好的，那么如何构建这些子表达式
Dialogue: 0,0:10:17.37,0:10:18.33,*Default,NTP,0000,0000,0000,,好吧，这就是我们要做的
Dialogue: 0,0:10:18.33,0:10:20.30,*Default,NTP,0000,0000,0000,,让我们做 d 因为这更容易一些
Dialogue: 0,0:10:20.30,0:10:21.87,*Default,NTP,0000,0000,0000,,然后我们回去做c
Dialogue: 0,0:10:22.17,0:10:25.60,*Default,NTP,0000,0000,0000,,所以对于每个输出列
Dialogue: 0,0:10:25.93,0:10:29.50,*Default,NTP,0000,0000,0000,,我们要下去看看哪里有一个
Dialogue: 0,0:10:29.50,0:10:31.20,*Default,NTP,0000,0000,0000,,啊那里有一个
Dialogue: 0,0:10:31.37,0:10:34.37,*Default,NTP,0000,0000,0000,,好的，那么 d 将等于
Dialogue: 0,0:10:34.37,0:10:38.00,*Default,NTP,0000,0000,0000,,现在显然 d 一定与 a 和 b 有关
Dialogue: 0,0:10:38.37,0:10:39.67,*Default,NTP,0000,0000,0000,,因为它是输出
Dialogue: 0,0:10:40.00,0:10:42.13,*Default,NTP,0000,0000,0000,,输入决定输出
Dialogue: 0,0:10:42.27,0:10:43.93,*Default,NTP,0000,0000,0000,,好的，我们要做的是
Dialogue: 0,0:10:43.93,0:10:44.80,*Default,NTP,0000,0000,0000,,我们要说的是
Dialogue: 0,0:10:44.80,0:10:46.47,*Default,NTP,0000,0000,0000,,d 等于
Dialogue: 0,0:10:46.47,0:10:49.17,*Default,NTP,0000,0000,0000,,再说一遍，我只能使用一个结，所以还没有结
Dialogue: 0,0:10:49.27,0:10:51.73,*Default,NTP,0000,0000,0000,,等于 a 和 b
Dialogue: 0,0:10:51.73,0:10:53.70,*Default,NTP,0000,0000,0000,,我这样做的原因是因为 a 有一个
Dialogue: 0,0:10:53.70,0:10:55.53,*Default,NTP,0000,0000,0000,,这里和 b 这里有一个 1
Dialogue: 0,0:10:55.70,0:10:57.60,*Default,NTP,0000,0000,0000,,好吧，从逻辑上来说
Dialogue: 0,0:10:57.60,0:10:58.27,*Default,NTP,0000,0000,0000,,你要做的是
Dialogue: 0,0:10:58.27,0:10:59.47,*Default,NTP,0000,0000,0000,,你会找到那个
Dialogue: 0,0:10:59.57,0:11:01.87,*Default,NTP,0000,0000,0000,,你会回到这里
Dialogue: 0,0:11:01.87,0:11:03.47,*Default,NTP,0000,0000,0000,,无论你在哪里看到一个
Dialogue: 0,0:11:03.47,0:11:05.13,*Default,NTP,0000,0000,0000,,你将使用该变量
Dialogue: 0,0:11:05.70,0:11:07.40,*Default,NTP,0000,0000,0000,,当你有一个零时你会点头
Dialogue: 0,0:11:07.40,0:11:09.17,*Default,NTP,0000,0000,0000,,我稍后会向您展示一个例子
Dialogue: 0,0:11:09.17,0:11:10.97,*Default,NTP,0000,0000,0000,,你要把两者加在一起
Dialogue: 0,0:11:11.27,0:11:13.77,*Default,NTP,0000,0000,0000,,现在让我们问问自己为什么这是有道理的
Dialogue: 0,0:11:13.87,0:11:14.87,*Default,NTP,0000,0000,0000,,好吧，让我们看看
Dialogue: 0,0:11:14.87,0:11:16.60,*Default,NTP,0000,0000,0000,,首先我们可以同意吗
Dialogue: 0,0:11:17.17,0:11:22.07,*Default,NTP,0000,0000,0000,,d 列实际上是 b 的末尾
Dialogue: 0,0:11:22.20,0:11:23.97,*Default,NTP,0000,0000,0000,,因为什么是和
Dialogue: 0,0:11:24.27,0:11:26.47,*Default,NTP,0000,0000,0000,,and 是当 a 和 b 为 1 时
Dialogue: 0,0:11:26.80,0:11:30.00,*Default,NTP,0000,0000,0000,,输出是 1，其他地方都是 0
Dialogue: 0,0:11:30.20,0:11:32.13,*Default,NTP,0000,0000,0000,,好吧，看看我在这里做什么
Dialogue: 0,0:11:32.13,0:11:35.33,*Default,NTP,0000,0000,0000,,我是说，当 a 是 1 时，它就在那里
Dialogue: 0,0:11:35.33,0:11:36.97,*Default,NTP,0000,0000,0000,,当 b 为 1 时
Dialogue: 0,0:11:38.10,0:11:39.97,*Default,NTP,0000,0000,0000,,输出是一
Dialogue: 0,0:11:40.33,0:11:43.00,*Default,NTP,0000,0000,0000,,并免费注意到这种情况
Dialogue: 0,0:11:43.07,0:11:45.87,*Default,NTP,0000,0000,0000,,我得到了该输出的所有其他行
Dialogue: 0,0:11:46.10,0:11:47.27,*Default,NTP,0000,0000,0000,,因为对于所有其他
Dialogue: 0,0:11:47.60,0:11:49.00,*Default,NTP,0000,0000,0000,,这方面的实例
Dialogue: 0,0:11:49.07,0:11:51.80,*Default,NTP,0000,0000,0000,,当 aa 零或 ba 零或它们的弓为零时
Dialogue: 0,0:11:51.87,0:11:55.10,*Default,NTP,0000,0000,0000,,我得到了零，所以这个小表达就是这样
Dialogue: 0,0:11:55.10,0:11:56.07,*Default,NTP,0000,0000,0000,,这个小和
Dialogue: 0,0:11:56.70,0:12:01.10,*Default,NTP,0000,0000,0000,,体现了这两个输入的整个输出
Dialogue: 0,0:12:01.17,0:12:01.97,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:12:02.07,0:12:04.30,*Default,NTP,0000,0000,0000,,让我们看另一个有点像的例子
Dialogue: 0,0:12:04.30,0:12:04.97,*Default,NTP,0000,0000,0000,,我们会做c
Dialogue: 0,0:12:04.97,0:12:07.80,*Default,NTP,0000,0000,0000,,我们现在就可以确切地看到它是从哪里来的
Dialogue: 0,0:12:08.37,0:12:09.97,*Default,NTP,0000,0000,0000,,好吧，我们要玩同一个游戏
Dialogue: 0,0:12:09.97,0:12:10.70,*Default,NTP,0000,0000,0000,,我们要滚下来
Dialogue: 0,0:12:10.70,0:12:12.60,*Default,NTP,0000,0000,0000,,我们来看看你在哪里看到一个
Dialogue: 0,0:12:12.77,0:12:14.13,*Default,NTP,0000,0000,0000,,好吧，它就在那里
Dialogue: 0,0:12:14.30,0:12:15.87,*Default,NTP,0000,0000,0000,,现在我要构建一个子表达式
Dialogue: 0,0:12:15.87,0:12:18.17,*Default,NTP,0000,0000,0000,,我只能使用蚂蚁或不使用ands和knots
Dialogue: 0,0:12:18.17,0:12:20.50,*Default,NTP,0000,0000,0000,,好的，我要转到输入框
Dialogue: 0,0:12:20.70,0:12:21.90,*Default,NTP,0000,0000,0000,,我有什么
Dialogue: 0,0:12:21.97,0:12:25.17,*Default,NTP,0000,0000,0000,,我这里有一个零，所以我要把它打结
Dialogue: 0,0:12:25.53,0:12:26.77,*Default,NTP,0000,0000,0000,,然后我这里有一个
Dialogue: 0,0:12:26.77,0:12:28.33,*Default,NTP,0000,0000,0000,,所以我会把它继续下去
Dialogue: 0,0:12:28.47,0:12:33.13,*Default,NTP,0000,0000,0000,,并且这个c不等于a和b
Dialogue: 0,0:12:33.13,0:12:34.90,*Default,NTP,0000,0000,0000,,所以让我们确保我们理解这一点
Dialogue: 0,0:12:35.27,0:12:41.17,*Default,NTP,0000,0000,0000,,好吧，那么当 a 为零时，a 的点头是什么
Dialogue: 0,0:12:41.60,0:12:42.90,*Default,NTP,0000,0000,0000,,当b为1时
Dialogue: 0,0:12:43.53,0:12:47.37,*Default,NTP,0000,0000,0000,,b 是 1，所以 0 和 1 的结是 1
Dialogue: 0,0:12:47.47,0:12:49.60,*Default,NTP,0000,0000,0000,,肯定就是那个
Dialogue: 0,0:12:49.97,0:12:52.33,*Default,NTP,0000,0000,0000,,现在与这里不同
Dialogue: 0,0:12:52.40,0:12:54.93,*Default,NTP,0000,0000,0000,,这个小表情并不能说明一切
Dialogue: 0,0:12:55.57,0:12:57.77,*Default,NTP,0000,0000,0000,,为什么只有一次
Dialogue: 0,0:12:57.77,0:13:01.97,*Default,NTP,0000,0000,0000,,该表达式为 1 的唯一时间是
Dialogue: 0,0:13:02.30,0:13:04.20,*Default,NTP,0000,0000,0000,,当a为0且b为1时
Dialogue: 0,0:13:04.20,0:13:05.27,*Default,NTP,0000,0000,0000,,我已经捕捉到了
Dialogue: 0,0:13:05.27,0:13:08.13,*Default,NTP,0000,0000,0000,,这里的一行有这个小子表达式
Dialogue: 0,0:13:08.57,0:13:10.67,*Default,NTP,0000,0000,0000,,但请注意，我还有另一个要捕捉的
Dialogue: 0,0:13:10.67,0:13:14.27,*Default,NTP,0000,0000,0000,,我也关心a何时为1，b何时为0
Dialogue: 0,0:13:14.37,0:13:15.70,*Default,NTP,0000,0000,0000,,我的输出应该是一
Dialogue: 0,0:13:16.00,0:13:17.50,*Default,NTP,0000,0000,0000,,好吧，如果我放一个
Dialogue: 0,0:13:17.93,0:13:20.37,*Default,NTP,0000,0000,0000,,一进入这里就会变成零
Dialogue: 0,0:13:20.70,0:13:22.77,*Default,NTP,0000,0000,0000,,b 变为非一的零
Dialogue: 0,0:13:22.77,0:13:25.90,*Default,NTP,0000,0000,0000,,所以这个小子表达式在这里对我没有帮助
Dialogue: 0,0:13:26.13,0:13:27.33,*Default,NTP,0000,0000,0000,,这对我有帮助
Dialogue: 0,0:13:27.33,0:13:28.33,*Default,NTP,0000,0000,0000,,我们稍后再讨论这个问题
Dialogue: 0,0:13:28.33,0:13:29.57,*Default,NTP,0000,0000,0000,,这对我有帮助
Dialogue: 0,0:13:29.60,0:13:30.53,*Default,NTP,0000,0000,0000,,但这对我没有帮助
Dialogue: 0,0:13:30.53,0:13:32.60,*Default,NTP,0000,0000,0000,,我需要另一个子表达式
Dialogue: 0,0:13:33.10,0:13:35.07,*Default,NTP,0000,0000,0000,,所以现在我们要再次下降 c
Dialogue: 0,0:13:35.07,0:13:36.77,*Default,NTP,0000,0000,0000,,我们已经捕获了那个子表达式
Dialogue: 0,0:13:36.77,0:13:38.50,*Default,NTP,0000,0000,0000,,让我们捕获子表达式
Dialogue: 0,0:13:38.67,0:13:40.70,*Default,NTP,0000,0000,0000,,现在我们回到输入
Dialogue: 0,0:13:40.70,0:13:43.17,*Default,NTP,0000,0000,0000,,a 是 1，所以我们只需带过来 a
Dialogue: 0,0:13:43.33,0:13:46.57,*Default,NTP,0000,0000,0000,,b 为零，所以我们再次点头
Dialogue: 0,0:13:46.57,0:13:48.07,*Default,NTP,0000,0000,0000,,让我们确保我们理解这一点
Dialogue: 0,0:13:48.20,0:13:53.47,*Default,NTP,0000,0000,0000,,当 a 为 1 并且 b 为 0 时，我得到 1 和 1
Dialogue: 0,0:13:53.47,0:13:55.13,*Default,NTP,0000,0000,0000,,所以我得到 c 等于 1
Dialogue: 0,0:13:55.20,0:13:57.67,*Default,NTP,0000,0000,0000,,再次注意它的本质是 and
Dialogue: 0,0:13:58.20,0:14:01.40,*Default,NTP,0000,0000,0000,,当且仅当
Dialogue: 0,0:14:02.10,0:14:05.20,*Default,NTP,0000,0000,0000,,a 是 1 b 是 0 并且这个子表达式
Dialogue: 0,0:14:05.33,0:14:08.73,*Default,NTP,0000,0000,0000,,在此子表达式中，a 为零，b 为 1
Dialogue: 0,0:14:08.77,0:14:10.67,*Default,NTP,0000,0000,0000,,请注意，这正是我想要的
Dialogue: 0,0:14:10.77,0:14:11.97,*Default,NTP,0000,0000,0000,,这正是我想要的
Dialogue: 0,0:14:11.97,0:14:15.60,*Default,NTP,0000,0000,0000,,我希望当 a 为零时 c 为 1 b 为 1 或
Dialogue: 0,0:14:16.90,0:14:19.30,*Default,NTP,0000,0000,0000,,a 为 1，b 为 0
Dialogue: 0,0:14:19.40,0:14:22.90,*Default,NTP,0000,0000,0000,,所以这两个子表达式捕获这两行
Dialogue: 0,0:14:22.90,0:14:24.70,*Default,NTP,0000,0000,0000,,当然我必须把它们结合起来
Dialogue: 0,0:14:24.80,0:14:26.07,*Default,NTP,0000,0000,0000,,我想你可以看看是什么
Dialogue: 0,0:14:26.07,0:14:26.93,*Default,NTP,0000,0000,0000,,那将如何发生
Dialogue: 0,0:14:26.93,0:14:28.07,*Default,NTP,0000,0000,0000,,但我们马上就做
Dialogue: 0,0:14:28.27,0:14:31.37,*Default,NTP,0000,0000,0000,,但还要注意，我们有点得到这一行
Dialogue: 0,0:14:31.47,0:14:33.10,*Default,NTP,0000,0000,0000,,这行是免费的
Dialogue: 0,0:14:33.40,0:14:35.60,*Default,NTP,0000,0000,0000,,因为对于 a 的所有其他值
Dialogue: 0,0:14:35.87,0:14:36.67,*Default,NTP,0000,0000,0000,,所以
Dialogue: 0,0:14:36.87,0:14:40.90,*Default,NTP,0000,0000,0000,,当a为0且b为0时，子表达式0是什么
Dialogue: 0,0:14:40.97,0:14:42.70,*Default,NTP,0000,0000,0000,,子表达式零是什么
Dialogue: 0,0:14:42.70,0:14:44.57,*Default,NTP,0000,0000,0000,,因为那是零 那是零
Dialogue: 0,0:14:45.00,0:14:48.13,*Default,NTP,0000,0000,0000,,当a为1且b为1时，子表达式是什么
Dialogue: 0,0:14:48.13,0:14:49.60,*Default,NTP,0000,0000,0000,,好吧，归零
Dialogue: 0,0:14:49.60,0:14:51.17,*Default,NTP,0000,0000,0000,,所以一切归零
Dialogue: 0,0:14:51.27,0:14:53.97,*Default,NTP,0000,0000,0000,,然后它会归零，所以整个事情都会归零
Dialogue: 0,0:14:54.20,0:14:57.10,*Default,NTP,0000,0000,0000,,所以这两个子表达式是免费的
Dialogue: 0,0:14:57.10,0:14:59.20,*Default,NTP,0000,0000,0000,,并且由于其性质
Dialogue: 0,0:14:59.20,0:15:01.07,*Default,NTP,0000,0000,0000,,把那两个给我
Dialogue: 0,0:15:01.07,0:15:03.37,*Default,NTP,0000,0000,0000,,第四行第一行为零
Dialogue: 0,0:15:03.57,0:15:04.87,*Default,NTP,0000,0000,0000,,好的 好的 好的
Dialogue: 0,0:15:04.87,0:15:08.33,*Default,NTP,0000,0000,0000,,所以我们现在在第二步中构建了子表达式
Dialogue: 0,0:15:08.33,0:15:09.60,*Default,NTP,0000,0000,0000,,对于每个输出列
Dialogue: 0,0:15:09.60,0:15:12.57,*Default,NTP,0000,0000,0000,,d 只需要一个，因为这里只有一个
Dialogue: 0,0:15:12.60,0:15:14.90,*Default,NTP,0000,0000,0000,,c 需要其中两个
Dialogue: 0,0:15:15.00,0:15:17.20,*Default,NTP,0000,0000,0000,,因为这里有两个
Dialogue: 0,0:15:18.10,0:15:21.70,*Default,NTP,0000,0000,0000,,现在我们要一次组合两个
Dialogue: 0,0:15:21.90,0:15:24.33,*Default,NTP,0000,0000,0000,,所有带有矿石的子表达式
Dialogue: 0,0:15:24.33,0:15:24.60,*Default,NTP,0000,0000,0000,,我是说
Dialogue: 0,0:15:24.60,0:15:26.33,*Default,NTP,0000,0000,0000,,你知道即将出现的矿石
Dialogue: 0,0:15:26.33,0:15:28.10,*Default,NTP,0000,0000,0000,,所以这是第三步
Dialogue: 0,0:15:28.20,0:15:30.37,*Default,NTP,0000,0000,0000,,第一步是建立真值表
Dialogue: 0,0:15:30.40,0:15:32.37,*Default,NTP,0000,0000,0000,,第二步是针对每个 outpa 列
Dialogue: 0,0:15:32.37,0:15:33.57,*Default,NTP,0000,0000,0000,,使用构建子表达式
Dialogue: 0,0:15:33.57,0:15:36.93,*Default,NTP,0000,0000,0000,,不仅如此，第三步说
Dialogue: 0,0:15:37.00,0:15:39.53,*Default,NTP,0000,0000,0000,,开始将这些东西与矿石结合起来
Dialogue: 0,0:15:39.77,0:15:41.90,*Default,NTP,0000,0000,0000,,好的，那么 c 是什么
Dialogue: 0,0:15:41.90,0:15:42.80,*Default,NTP,0000,0000,0000,,让我们回到这个
Dialogue: 0,0:15:42.80,0:15:44.67,*Default,NTP,0000,0000,0000,,好吧，我们这里有一个子表达式
Dialogue: 0,0:15:44.67,0:15:46.50,*Default,NTP,0000,0000,0000,,这不是 a 和 b
Dialogue: 0,0:15:46.67,0:15:48.60,*Default,NTP,0000,0000,0000,,我们这里有另一个子表达式
Dialogue: 0,0:15:48.60,0:15:50.37,*Default,NTP,0000,0000,0000,,这是 a 而不是 b
Dialogue: 0,0:15:50.87,0:15:51.90,*Default,NTP,0000,0000,0000,,c 是什么
Dialogue: 0,0:15:52.10,0:15:54.80,*Default,NTP,0000,0000,0000,,当正确时我希望 c 为 1
Dialogue: 0,0:15:54.87,0:15:58.37,*Default,NTP,0000,0000,0000,,当这是一个或那里时，它就在那里
Dialogue: 0,0:15:58.40,0:16:02.13,*Default,NTP,0000,0000,0000,,这是一个，所以我简单地或这两个子表达式
Dialogue: 0,0:16:02.17,0:16:02.87,*Default,NTP,0000,0000,0000,,现在
Dialogue: 0,0:16:02.87,0:16:06.00,*Default,NTP,0000,0000,0000,,这个表达式就在这里 这个完整的表达式
Dialogue: 0,0:16:06.73,0:16:07.87,*Default,NTP,0000,0000,0000,,子表达式
Dialogue: 0,0:16:08.00,0:16:11.60,*Default,NTP,0000,0000,0000,,它们的矿石捕获了整排的海洋
Dialogue: 0,0:16:11.97,0:16:13.50,*Default,NTP,0000,0000,0000,,因为我们刚刚说服了自己
Dialogue: 0,0:16:13.50,0:16:15.33,*Default,NTP,0000,0000,0000,,这是唯一一次
Dialogue: 0,0:16:15.40,0:16:19.00,*Default,NTP,0000,0000,0000,,是第二行吗？唯一一次是第三行
Dialogue: 0,0:16:19.07,0:16:21.00,*Default,NTP,0000,0000,0000,,和所有其他时间为零
Dialogue: 0,0:16:21.00,0:16:22.80,*Default,NTP,0000,0000,0000,,所以如果我把这两个一起订购
Dialogue: 0,0:16:22.93,0:16:24.87,*Default,NTP,0000,0000,0000,,我在这两种情况下得到了一个
Dialogue: 0,0:16:24.87,0:16:26.20,*Default,NTP,0000,0000,0000,,我在其他地方得了零
Dialogue: 0,0:16:26.20,0:16:28.00,*Default,NTP,0000,0000,0000,,所以现在我有一个子表达式
Dialogue: 0,0:16:28.00,0:16:29.47,*Default,NTP,0000,0000,0000,,我有一个表情
Dialogue: 0,0:16:29.60,0:16:32.17,*Default,NTP,0000,0000,0000,,体现了输出 c
Dialogue: 0,0:16:32.37,0:16:35.40,*Default,NTP,0000,0000,0000,,对于所有可能的输入 a 和 b
Dialogue: 0,0:16:36.00,0:16:38.13,*Default,NTP,0000,0000,0000,,好的，那么 d 的组合是什么样的
Dialogue: 0,0:16:38.13,0:16:39.57,*Default,NTP,0000,0000,0000,,虽然只有一个子表达式
Dialogue: 0,0:16:39.57,0:16:41.00,*Default,NTP,0000,0000,0000,,所以没有什么事情可做
Dialogue: 0,0:16:41.27,0:16:42.70,*Default,NTP,0000,0000,0000,,这个小子表达式
Dialogue: 0,0:16:42.70,0:16:44.47,*Default,NTP,0000,0000,0000,,现在让我称其为表达式
Dialogue: 0,0:16:44.53,0:16:48.27,*Default,NTP,0000,0000,0000,,体现了我如何获得 d 的整个专栏
Dialogue: 0,0:16:48.60,0:16:51.50,*Default,NTP,0000,0000,0000,,从 a 和 b 开始，注意这只是一个结束权利
Dialogue: 0,0:16:51.50,0:16:53.50,*Default,NTP,0000,0000,0000,,因为这正是该专栏的内容
Dialogue: 0,0:16:53.90,0:16:55.13,*Default,NTP,0000,0000,0000,,好的，第三步
Dialogue: 0,0:16:55.20,0:16:56.50,*Default,NTP,0000,0000,0000,,现在第四步
Dialogue: 0,0:16:56.77,0:16:57.90,*Default,NTP,0000,0000,0000,,画一个电路
Dialogue: 0,0:16:58.20,0:16:58.97,*Default,NTP,0000,0000,0000,,那是什么意思
Dialogue: 0,0:16:58.97,0:17:01.10,*Default,NTP,0000,0000,0000,,那么我现在有什么
Dialogue: 0,0:17:01.27,0:17:03.00,*Default,NTP,0000,0000,0000,,我有一个真值表
Dialogue: 0,0:17:03.37,0:17:06.07,*Default,NTP,0000,0000,0000,,我有布尔表达式和/或结
Dialogue: 0,0:17:06.40,0:17:10.80,*Default,NTP,0000,0000,0000,,告诉我如何将输入转换为输出
Dialogue: 0,0:17:10.80,0:17:14.33,*Default,NTP,0000,0000,0000,,使用符合逻辑或不符合逻辑的内容
Dialogue: 0,0:17:14.57,0:17:16.87,*Default,NTP,0000,0000,0000,,好吧，如果我可以用 and 或 not 做事
Dialogue: 0,0:17:16.87,0:17:17.80,*Default,NTP,0000,0000,0000,,我可以画一个电路
Dialogue: 0,0:17:17.80,0:17:19.50,*Default,NTP,0000,0000,0000,,因为这正是电路的本质
Dialogue: 0,0:17:19.50,0:17:20.57,*Default,NTP,0000,0000,0000,,好吧，让我们画一下电路
Dialogue: 0,0:17:20.57,0:17:22.20,*Default,NTP,0000,0000,0000,,这是现在最有趣的部分 这是最简单的部分
Dialogue: 0,0:17:22.20,0:17:24.10,*Default,NTP,0000,0000,0000,,你通常都这样做了
Dialogue: 0,0:17:24.10,0:17:26.27,*Default,NTP,0000,0000,0000,,并非总是如此，但通常我们会将输入放在
Dialogue: 0,0:17:26.33,0:17:28.27,*Default,NTP,0000,0000,0000,,在左边有时我们把它们放在底部
Dialogue: 0,0:17:28.27,0:17:30.67,*Default,NTP,0000,0000,0000,,当电路变得复杂时向上运行
Dialogue: 0,0:17:30.87,0:17:32.40,*Default,NTP,0000,0000,0000,,输出在右侧
Dialogue: 0,0:17:32.47,0:17:34.73,*Default,NTP,0000,0000,0000,,所以会有两个输入 a 和 b
Dialogue: 0,0:17:34.73,0:17:36.67,*Default,NTP,0000,0000,0000,,这些是您在真值表上看到的四行
Dialogue: 0,0:17:36.67,0:17:37.97,*Default,NTP,0000,0000,0000,,将会有两个输出
Dialogue: 0,0:17:37.97,0:17:39.77,*Default,NTP,0000,0000,0000,,c 当然会出现在这里
Dialogue: 0,0:17:39.87,0:17:40.77,*Default,NTP,0000,0000,0000,,d 在下面
Dialogue: 0,0:17:40.77,0:17:43.00,*Default,NTP,0000,0000,0000,,所以让我先做 d 因为那是最简单的
Dialogue: 0,0:17:43.50,0:17:46.17,*Default,NTP,0000,0000,0000,,那么 d 是什么，它是 a 和 b 的和
Dialogue: 0,0:17:46.33,0:17:49.47,*Default,NTP,0000,0000,0000,,所以我把它塞进安格特
Dialogue: 0,0:17:49.53,0:17:50.57,*Default,NTP,0000,0000,0000,,不要忘记那里的点
Dialogue: 0,0:17:50.57,0:17:51.97,*Default,NTP,0000,0000,0000,,提醒自己那是一颗玛瑙
Dialogue: 0,0:17:51.97,0:17:53.50,*Default,NTP,0000,0000,0000,,如果你的画画得不太好
Dialogue: 0,0:17:53.77,0:17:55.50,*Default,NTP,0000,0000,0000,,我把 b 推到这里
Dialogue: 0,0:17:55.50,0:17:58.17,*Default,NTP,0000,0000,0000,,我喜欢在这里写下表达式，因为
Dialogue: 0,0:17:58.17,0:17:59.37,*Default,NTP,0000,0000,0000,,在这项事业的早期
Dialogue: 0,0:17:59.37,0:18:01.07,*Default,NTP,0000,0000,0000,,它会提醒我我在做什么
Dialogue: 0,0:18:01.47,0:18:05.00,*Default,NTP,0000,0000,0000,,然后我将输出驱动到那里，我得到 d
Dialogue: 0,0:18:05.00,0:18:07.73,*Default,NTP,0000,0000,0000,,所以这是一个非常简单的电路，只有一个和
Dialogue: 0,0:18:07.73,0:18:08.53,*Default,NTP,0000,0000,0000,,门
Dialogue: 0,0:18:08.80,0:18:11.10,*Default,NTP,0000,0000,0000,,好吧，那么我们该怎么做呢？
Dialogue: 0,0:18:11.57,0:18:14.70,*Default,NTP,0000,0000,0000,,好吧，c 是两个事物共同作用的结果
Dialogue: 0,0:18:14.90,0:18:16.93,*Default,NTP,0000,0000,0000,,那个小子表达式就在那里
Dialogue: 0,0:18:16.97,0:18:19.73,*Default,NTP,0000,0000,0000,,那个小子表达式不是 a 和 b
Dialogue: 0,0:18:19.97,0:18:23.27,*Default,NTP,0000,0000,0000,,a 而不是 b 并且我的 c 将会或者在那里
Dialogue: 0,0:18:23.57,0:18:25.37,*Default,NTP,0000,0000,0000,,好吧，这是我的门
Dialogue: 0,0:18:25.37,0:18:26.77,*Default,NTP,0000,0000,0000,,我要冲进去
Dialogue: 0,0:18:27.27,0:18:29.70,*Default,NTP,0000,0000,0000,,我必须带进来，那是我的非门
Dialogue: 0,0:18:29.73,0:18:31.13,*Default,NTP,0000,0000,0000,,我必须带进来而不是b
Dialogue: 0,0:18:31.13,0:18:32.07,*Default,NTP,0000,0000,0000,,那是我的非门
Dialogue: 0,0:18:32.07,0:18:32.77,*Default,NTP,0000,0000,0000,,然后当然
Dialogue: 0,0:18:32.77,0:18:35.40,*Default,NTP,0000,0000,0000,,a将进入这里，b将进入这里
Dialogue: 0,0:18:35.47,0:18:38.07,*Default,NTP,0000,0000,0000,,所以我们只需从这里的输入中输入它们
Dialogue: 0,0:18:38.07,0:18:39.73,*Default,NTP,0000,0000,0000,,所以让我现在就开始吧
Dialogue: 0,0:18:40.17,0:18:41.40,*Default,NTP,0000,0000,0000,,好吧，让我们按照路线走
Dialogue: 0,0:18:41.40,0:18:43.30,*Default,NTP,0000,0000,0000,,所以请注意，每当我购买时
Dialogue: 0,0:18:43.30,0:18:45.10,*Default,NTP,0000,0000,0000,,给凯特或切断信号
Dialogue: 0,0:18:45.10,0:18:46.93,*Default,NTP,0000,0000,0000,,我要画一个实心点
Dialogue: 0,0:18:47.27,0:18:49.60,*Default,NTP,0000,0000,0000,,告诉自己信号a
Dialogue: 0,0:18:49.73,0:18:52.50,*Default,NTP,0000,0000,0000,,正在进入这个并且门在这儿
Dialogue: 0,0:18:52.57,0:18:54.97,*Default,NTP,0000,0000,0000,,它将进入这个结门
Dialogue: 0,0:18:54.97,0:18:56.30,*Default,NTP,0000,0000,0000,,进入这个门
Dialogue: 0,0:18:56.37,0:18:59.13,*Default,NTP,0000,0000,0000,,好的，现在开始了
Dialogue: 0,0:18:59.90,0:19:02.20,*Default,NTP,0000,0000,0000,,让我们看看我从哪里得到 b
Dialogue: 0,0:19:02.37,0:19:03.17,*Default,NTP,0000,0000,0000,,就在这里
Dialogue: 0,0:19:03.17,0:19:04.47,*Default,NTP,0000,0000,0000,,好的，这是 b
Dialogue: 0,0:19:04.87,0:19:05.97,*Default,NTP,0000,0000,0000,,我要分叉
Dialogue: 0,0:19:05.97,0:19:08.87,*Default,NTP,0000,0000,0000,,现在注意到我这里有一个开放的圆圈
Dialogue: 0,0:19:09.10,0:19:09.97,*Default,NTP,0000,0000,0000,,那就是告诉我
Dialogue: 0,0:19:09.97,0:19:12.53,*Default,NTP,0000,0000,0000,,两根电线正好交叉在彼此之上
Dialogue: 0,0:19:12.67,0:19:14.70,*Default,NTP,0000,0000,0000,,所以我不会在这里接受输入
Dialogue: 0,0:19:14.70,0:19:16.33,*Default,NTP,0000,0000,0000,,我只是要越过电线
Dialogue: 0,0:19:16.37,0:19:17.27,*Default,NTP,0000,0000,0000,,我要提出来
Dialogue: 0,0:19:17.27,0:19:19.17,*Default,NTP,0000,0000,0000,,我要把它提出来 我要把它提出来
Dialogue: 0,0:19:19.27,0:19:21.57,*Default,NTP,0000,0000,0000,,现在我没有 a 和 b
Dialogue: 0,0:19:21.93,0:19:23.67,*Default,NTP,0000,0000,0000,,好吧，下一个也是同样的事情
Dialogue: 0,0:19:23.77,0:19:24.97,*Default,NTP,0000,0000,0000,,a要进来了
Dialogue: 0,0:19:24.97,0:19:26.10,*Default,NTP,0000,0000,0000,,我们要分割信号
Dialogue: 0,0:19:26.10,0:19:28.17,*Default,NTP,0000,0000,0000,,我正在穿过一个开放的圆圈
Dialogue: 0,0:19:28.20,0:19:29.73,*Default,NTP,0000,0000,0000,,我走进了门
Dialogue: 0,0:19:29.90,0:19:31.87,*Default,NTP,0000,0000,0000,,然后当然还有 b
Dialogue: 0,0:19:31.87,0:19:33.80,*Default,NTP,0000,0000,0000,,我要取消信号
Dialogue: 0,0:19:33.80,0:19:35.47,*Default,NTP,0000,0000,0000,,我要把它塞进结门
Dialogue: 0,0:19:35.47,0:19:37.17,*Default,NTP,0000,0000,0000,,我要把它塞进大门
Dialogue: 0,0:19:37.30,0:19:38.17,*Default,NTP,0000,0000,0000,,然后一切都会过去
Dialogue: 0,0:19:38.17,0:19:40.53,*Default,NTP,0000,0000,0000,,那两个人要进入矿石，那是我的c
Dialogue: 0,0:19:40.97,0:19:42.47,*Default,NTP,0000,0000,0000,,所以没什么复杂的
Dialogue: 0,0:19:42.47,0:19:42.93,*Default,NTP,0000,0000,0000,,你可以看到
Dialogue: 0,0:19:42.93,0:19:44.93,*Default,NTP,0000,0000,0000,,电线有时会变得有点复杂
Dialogue: 0,0:19:44.93,0:19:45.80,*Default,NTP,0000,0000,0000,,你必须想
Dialogue: 0,0:19:45.80,0:19:47.73,*Default,NTP,0000,0000,0000,,你想如何布置这些电路
Dialogue: 0,0:19:48.20,0:19:51.10,*Default,NTP,0000,0000,0000,,所以通常我有时喜欢从后面开始
Dialogue: 0,0:19:51.50,0:19:52.77,*Default,NTP,0000,0000,0000,,然后按照我的方式工作
Dialogue: 0,0:19:52.77,0:19:54.80,*Default,NTP,0000,0000,0000,,因为我知道这里将会有一个奥门
Dialogue: 0,0:19:54.80,0:19:57.33,*Default,NTP,0000,0000,0000,,然后我向后退时喂食一切
Dialogue: 0,0:19:58.20,0:19:59.27,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:19:59.50,0:20:02.33,*Default,NTP,0000,0000,0000,,所以设计电路有四个步骤
Dialogue: 0,0:20:02.33,0:20:04.30,*Default,NTP,0000,0000,0000,,我们又没有做任何有意义的事
Dialogue: 0,0:20:04.40,0:20:05.97,*Default,NTP,0000,0000,0000,,就实际计算而言
Dialogue: 0,0:20:05.97,0:20:07.30,*Default,NTP,0000,0000,0000,,接下来会发生
Dialogue: 0,0:20:07.33,0:20:09.77,*Default,NTP,0000,0000,0000,,但让我们继续回顾一下这四个步骤
Dialogue: 0,0:20:09.97,0:20:11.00,*Default,NTP,0000,0000,0000,,步骤1
Dialogue: 0,0:20:11.37,0:20:12.97,*Default,NTP,0000,0000,0000,,首先弄清楚你的输入输出在哪里
Dialogue: 0,0:20:12.97,0:20:14.20,*Default,NTP,0000,0000,0000,,这可能是零步
Dialogue: 0,0:20:14.20,0:20:15.50,*Default,NTP,0000,0000,0000,,告诉我你想做什么
Dialogue: 0,0:20:15.53,0:20:16.93,*Default,NTP,0000,0000,0000,,输入输出所以
Dialogue: 0,0:20:16.93,0:20:18.57,*Default,NTP,0000,0000,0000,,为所有人建立一个真值表
Dialogue: 0,0:20:18.57,0:20:20.70,*Default,NTP,0000,0000,0000,,可能的输入输出值
Dialogue: 0,0:20:20.70,0:20:21.67,*Default,NTP,0000,0000,0000,,这意味着什么
Dialogue: 0,0:20:22.00,0:20:23.40,*Default,NTP,0000,0000,0000,,如果我有 n 个输入
Dialogue: 0,0:20:23.40,0:20:26.77,*Default,NTP,0000,0000,0000,,我有两到 n 行枚举每个
Dialogue: 0,0:20:26.77,0:20:29.73,*Default,NTP,0000,0000,0000,,单个可能的输入集
Dialogue: 0,0:20:29.77,0:20:31.80,*Default,NTP,0000,0000,0000,,所以最简单的方法就是开始
Dialogue: 0,0:20:31.80,0:20:33.53,*Default,NTP,0000,0000,0000,,从零开始以二进制计数
Dialogue: 0,0:20:33.87,0:20:40.73,*Default,NTP,0000,0000,0000,,所以如果是三个输入，我会执行 0 0 0 0 1 0 1 0 0 1 1 等
Dialogue: 0,0:20:40.73,0:20:43.07,*Default,NTP,0000,0000,0000,,所以你数数，最后应该总是有两个
Dialogue: 0,0:20:43.73,0:20:45.57,*Default,NTP,0000,0000,0000,,基本上是从零到二最后减一
Dialogue: 0,0:20:45.57,0:20:47.07,*Default,NTP,0000,0000,0000,,如果你把一切都转换成
Dialogue: 0,0:20:47.47,0:20:49.33,*Default,NTP,0000,0000,0000,,以 10 为底，这是第一步
Dialogue: 0,0:20:49.57,0:20:50.70,*Default,NTP,0000,0000,0000,,告诉我输出是什么
Dialogue: 0,0:20:50.70,0:20:52.30,*Default,NTP,0000,0000,0000,,你的计算的性质是什么
Dialogue: 0,0:20:52.30,0:20:54.10,*Default,NTP,0000,0000,0000,,我们会看到很多这样的例子
Dialogue: 0,0:20:54.10,0:20:55.60,*Default,NTP,0000,0000,0000,,下一组讲座
Dialogue: 0,0:20:56.10,0:20:57.60,*Default,NTP,0000,0000,0000,,每人两个
Dialogue: 0,0:20:57.60,0:21:00.30,*Default,NTP,0000,0000,0000,,并注意每个输出都是彼此独立的
Dialogue: 0,0:21:00.40,0:21:01.67,*Default,NTP,0000,0000,0000,,在前面的例子中
Dialogue: 0,0:21:01.67,0:21:03.50,*Default,NTP,0000,0000,0000,,d和c互不关心
Dialogue: 0,0:21:03.50,0:21:04.10,*Default,NTP,0000,0000,0000,,他们只是分开的
Dialogue: 0,0:21:04.10,0:21:05.53,*Default,NTP,0000,0000,0000,,它们在真实表中是完全分开的
Dialogue: 0,0:21:05.53,0:21:07.53,*Default,NTP,0000,0000,0000,,所以对于每一列
Dialogue: 0,0:21:07.73,0:21:12.00,*Default,NTP,0000,0000,0000,,仅使用 和 结构建子表达式
Dialogue: 0,0:21:12.00,0:21:13.47,*Default,NTP,0000,0000,0000,,现在没有桨
Dialogue: 0,0:21:13.57,0:21:14.57,*Default,NTP,0000,0000,0000,,那么你该怎么做呢
Dialogue: 0,0:21:14.73,0:21:15.90,*Default,NTP,0000,0000,0000,,找到那些
Dialogue: 0,0:21:15.97,0:21:19.40,*Default,NTP,0000,0000,0000,,返回到输入和所有内容
Dialogue: 0,0:21:19.47,0:21:20.87,*Default,NTP,0000,0000,0000,,如果它是零
Dialogue: 0,0:21:20.93,0:21:22.73,*Default,NTP,0000,0000,0000,,这是你和它共同的价值
Dialogue: 0,0:21:22.73,0:21:24.80,*Default,NTP,0000,0000,0000,,如果它的值为零，你就点头
Dialogue: 0,0:21:24.93,0:21:26.20,*Default,NTP,0000,0000,0000,,当你这样做时
Dialogue: 0,0:21:26.20,0:21:28.10,*Default,NTP,0000,0000,0000,,你得到的东西可以给你一个
Dialogue: 0,0:21:28.33,0:21:31.07,*Default,NTP,0000,0000,0000,,仅针对该组输入
Dialogue: 0,0:21:31.10,0:21:34.37,*Default,NTP,0000,0000,0000,,然后在第三步中对所有这些进行排序
Dialogue: 0,0:21:34.70,0:21:35.97,*Default,NTP,0000,0000,0000,,一起表达
Dialogue: 0,0:21:36.10,0:21:39.10,*Default,NTP,0000,0000,0000,,然后我得到整个列，无论哪里有一个
Dialogue: 0,0:21:39.13,0:21:42.07,*Default,NTP,0000,0000,0000,,按照设计，其他地方都是零
Dialogue: 0,0:21:42.40,0:21:46.33,*Default,NTP,0000,0000,0000,,现在我有每个输出列的表达式
Dialogue: 0,0:21:46.40,0:21:50.17,*Default,NTP,0000,0000,0000,,如何将输入转换为输出
Dialogue: 0,0:21:50.17,0:21:52.20,*Default,NTP,0000,0000,0000,,通过一系列的与或或不
Dialogue: 0,0:21:52.30,0:21:54.13,*Default,NTP,0000,0000,0000,,现在我简单地画了图
Dialogue: 0,0:21:54.13,0:21:55.33,*Default,NTP,0000,0000,0000,,在那里你必须得到一点
Dialogue: 0,0:21:55.33,0:21:57.07,*Default,NTP,0000,0000,0000,,练习找出在哪里画东西
Dialogue: 0,0:21:57.07,0:21:58.90,*Default,NTP,0000,0000,0000,,但我们会举很多例子
Dialogue: 0,0:21:59.00,0:22:00.27,*Default,NTP,0000,0000,0000,,看看那是什么样子
Dialogue: 0,0:22:00.57,0:22:03.70,*Default,NTP,0000,0000,0000,,进行基本电路设计的四个简单步骤
Dialogue: 0,0:22:03.80,0:22:05.70,*Default,NTP,0000,0000,0000,,现在唯一缺少的是
Dialogue: 0,0:22:05.70,0:22:07.60,*Default,NTP,0000,0000,0000,,有意义的计算是什么样的
Dialogue: 0,0:22:07.60,0:22:08.80,*Default,NTP,0000,0000,0000,,这就是我们接下来要做的
Dialogue: 0,0:22:08.80,0:22:10.13,*Default,NTP,0000,0000,0000,,所以我们几分钟后见
Dialogue: 0,0:22:12.07,0:22:14.50,*Default,NTP,0000,0000,0000,,我们还没有准备好进行第一个有意义的计算
Dialogue: 0,0:22:14.50,0:22:16.17,*Default,NTP,0000,0000,0000,,我们现在拥有所有基础设施
Dialogue: 0,0:22:16.17,0:22:18.97,*Default,NTP,0000,0000,0000,,我们知道什么是门 我们知道什么是电路
Dialogue: 0,0:22:19.00,0:22:21.13,*Default,NTP,0000,0000,0000,,我们知道如何从牙齿表开始
Dialogue: 0,0:22:21.57,0:22:26.07,*Default,NTP,0000,0000,0000,,输入输出子表达式表达式绘制电路
Dialogue: 0,0:22:26.07,0:22:27.77,*Default,NTP,0000,0000,0000,,好的，现在让我们实际构建
Dialogue: 0,0:22:29.37,0:22:32.80,*Default,NTP,0000,0000,0000,,小但至少有意义的计算
Dialogue: 0,0:22:32.93,0:22:34.97,*Default,NTP,0000,0000,0000,,所以我们要建造一个所谓的
Dialogue: 0,0:22:34.97,0:22:36.67,*Default,NTP,0000,0000,0000,,位比较是否相等
Dialogue: 0,0:22:36.67,0:22:40.87,*Default,NTP,0000,0000,0000,,一个 ce 电路那么我首先说的一个出价是什么意思
Dialogue: 0,0:22:40.90,0:22:42.77,*Default,NTP,0000,0000,0000,,我的意思是我有我的输入 r
Dialogue: 0,0:22:43.07,0:22:46.93,*Default,NTP,0000,0000,0000,,a 和 b 分别是零或一的一位
Dialogue: 0,0:22:47.07,0:22:48.80,*Default,NTP,0000,0000,0000,,四标比较是否相等
Dialogue: 0,0:22:48.80,0:22:50.10,*Default,NTP,0000,0000,0000,,我们稍后会做
Dialogue: 0,0:22:50.13,0:22:52.07,*Default,NTP,0000,0000,0000,,就是我有一个是
Dialogue: 0,0:22:52.47,0:22:56.20,*Default,NTP,0000,0000,0000,,0 1 1 0 和 b 作为示例 1 1 0 0
Dialogue: 0,0:22:56.50,0:22:58.10,*Default,NTP,0000,0000,0000,,我只想问
Dialogue: 0,0:22:58.10,0:23:01.30,*Default,NTP,0000,0000,0000,,这两个一位值a和b是
Dialogue: 0,0:23:01.30,0:23:03.07,*Default,NTP,0000,0000,0000,,相等或不相等
Dialogue: 0,0:23:03.37,0:23:06.67,*Default,NTP,0000,0000,0000,,这是我的计算伪代码
Dialogue: 0,0:23:06.80,0:23:09.80,*Default,NTP,0000,0000,0000,,如果 a 和 b 相等则返回 1
Dialogue: 0,0:23:09.90,0:23:11.33,*Default,NTP,0000,0000,0000,,否则返回零
Dialogue: 0,0:23:11.33,0:23:12.73,*Default,NTP,0000,0000,0000,,注意一切都是二进制的
Dialogue: 0,0:23:12.77,0:23:14.53,*Default,NTP,0000,0000,0000,,a 和 b 可以是零或一
Dialogue: 0,0:23:14.53,0:23:16.40,*Default,NTP,0000,0000,0000,,因为一切都是二进制表示
Dialogue: 0,0:23:16.47,0:23:18.67,*Default,NTP,0000,0000,0000,,我的对手要么是 1 要么是 0
Dialogue: 0,0:23:18.73,0:23:21.70,*Default,NTP,0000,0000,0000,,取决于这两个位是否相等
Dialogue: 0,0:23:21.80,0:23:23.07,*Default,NTP,0000,0000,0000,,非常简单
Dialogue: 0,0:23:23.20,0:23:24.80,*Default,NTP,0000,0000,0000,,现在让我们开始转动曲柄
Dialogue: 0,0:23:24.80,0:23:27.50,*Default,NTP,0000,0000,0000,,让我们弄清楚如何设计一个电路来实现这一点
Dialogue: 0,0:23:27.80,0:23:29.20,*Default,NTP,0000,0000,0000,,所以第一步就是
Dialogue: 0,0:23:29.27,0:23:30.37,*Default,NTP,0000,0000,0000,,建立真值表
Dialogue: 0,0:23:30.97,0:23:34.80,*Default,NTP,0000,0000,0000,,两个表的前两列是什么
Dialogue: 0,0:23:34.80,0:23:36.07,*Default,NTP,0000,0000,0000,,他们是我的投入
Dialogue: 0,0:23:36.07,0:23:40.33,*Default,NTP,0000,0000,0000,,我有两个一位输入 a 和 b
Dialogue: 0,0:23:40.53,0:23:42.70,*Default,NTP,0000,0000,0000,,我有一个输出 c
Dialogue: 0,0:23:42.87,0:23:44.00,*Default,NTP,0000,0000,0000,,这将等于
Dialogue: 0,0:23:44.00,0:23:45.93,*Default,NTP,0000,0000,0000,,当两位相等时为 1
Dialogue: 0,0:23:45.93,0:23:47.07,*Default,NTP,0000,0000,0000,,否则为零
Dialogue: 0,0:23:47.47,0:23:49.27,*Default,NTP,0000,0000,0000,,好的，第一部分很简单
Dialogue: 0,0:23:49.37,0:23:52.30,*Default,NTP,0000,0000,0000,,简单地枚举所有可能的输入集
Dialogue: 0,0:23:52.30,0:23:54.20,*Default,NTP,0000,0000,0000,,0 0 1 1 0 1 1
Dialogue: 0,0:23:54.20,0:23:56.07,*Default,NTP,0000,0000,0000,,顺便说一句，你应该按这个顺序做
Dialogue: 0,0:23:56.13,0:23:57.87,*Default,NTP,0000,0000,0000,,因为它可以确保你不会错过任何东西
Dialogue: 0,0:23:57.87,0:23:58.97,*Default,NTP,0000,0000,0000,,这只是一个很好的纪律
Dialogue: 0,0:23:58.97,0:24:00.60,*Default,NTP,0000,0000,0000,,其他人都是这么做的
Dialogue: 0,0:24:00.70,0:24:01.90,*Default,NTP,0000,0000,0000,,所以输入是微不足道的
Dialogue: 0,0:24:01.90,0:24:03.27,*Default,NTP,0000,0000,0000,,只用二进制数
Dialogue: 0,0:24:03.33,0:24:06.13,*Default,NTP,0000,0000,0000,,从零到二到联合国减一
Dialogue: 0,0:24:06.57,0:24:07.87,*Default,NTP,0000,0000,0000,,现在你必须告诉我输出是什么
Dialogue: 0,0:24:07.87,0:24:08.80,*Default,NTP,0000,0000,0000,,所以这就是工作
Dialogue: 0,0:24:08.80,0:24:10.73,*Default,NTP,0000,0000,0000,,告诉我你想计算什么
Dialogue: 0,0:24:10.97,0:24:11.87,*Default,NTP,0000,0000,0000,,我想计算什么
Dialogue: 0,0:24:11.87,0:24:13.47,*Default,NTP,0000,0000,0000,,让我们回到上一张幻灯片
Dialogue: 0,0:24:13.80,0:24:14.70,*Default,NTP,0000,0000,0000,,我说
Dialogue: 0,0:24:14.80,0:24:18.17,*Default,NTP,0000,0000,0000,,当这两位相等时，我希望这是 1
Dialogue: 0,0:24:18.17,0:24:19.33,*Default,NTP,0000,0000,0000,,否则为零
Dialogue: 0,0:24:19.47,0:24:23.10,*Default,NTP,0000,0000,0000,,好吧，所以在这里它们是相等的，不等于不相等
Dialogue: 0,0:24:23.13,0:24:25.80,*Default,NTP,0000,0000,0000,,不等于，所以现在我知道我的输出是什么
Dialogue: 0,0:24:26.10,0:24:27.73,*Default,NTP,0000,0000,0000,,这是第一排的一个
Dialogue: 0,0:24:27.97,0:24:30.13,*Default,NTP,0000,0000,0000,,零零，最后一行是一个
Dialogue: 0,0:24:30.13,0:24:31.70,*Default,NTP,0000,0000,0000,,一一，否则为零
Dialogue: 0,0:24:31.70,0:24:33.57,*Default,NTP,0000,0000,0000,,所以这是一个有意义的计算
Dialogue: 0,0:24:33.57,0:24:35.73,*Default,NTP,0000,0000,0000,,这是天赋，简单但有意义
Dialogue: 0,0:24:35.73,0:24:38.20,*Default,NTP,0000,0000,0000,,它告诉我这两个位是否相等
Dialogue: 0,0:24:38.50,0:24:39.57,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:24:39.57,0:24:42.70,*Default,NTP,0000,0000,0000,,我们已经完成了四步电路设计的第一步
Dialogue: 0,0:24:42.70,0:24:44.07,*Default,NTP,0000,0000,0000,,让我们执行第二步
Dialogue: 0,0:24:44.40,0:24:46.67,*Default,NTP,0000,0000,0000,,第二步要做的是构建
Dialogue: 0,0:24:46.77,0:24:49.93,*Default,NTP,0000,0000,0000,,对于每个输出列现在只有一个输出
Dialogue: 0,0:24:50.07,0:24:51.37,*Default,NTP,0000,0000,0000,,子表达式
Dialogue: 0,0:24:51.37,0:24:53.33,*Default,NTP,0000,0000,0000,,好的，让我提醒您我们是如何做到的
Dialogue: 0,0:24:53.47,0:24:55.07,*Default,NTP,0000,0000,0000,,我们隔离有的地方
Dialogue: 0,0:24:55.07,0:24:58.70,*Default,NTP,0000,0000,0000,,我们去弄清楚什么是 and 和 not 的组合
Dialogue: 0,0:24:58.77,0:25:00.53,*Default,NTP,0000,0000,0000,,导致那个的
Dialogue: 0,0:25:00.60,0:25:03.07,*Default,NTP,0000,0000,0000,,然后我们继续第三步，然后第四步
Dialogue: 0,0:25:03.07,0:25:05.33,*Default,NTP,0000,0000,0000,,所以现在我们只做子表达式
Dialogue: 0,0:25:05.97,0:25:08.60,*Default,NTP,0000,0000,0000,,好吧，所以这里有一个，这里有一个
Dialogue: 0,0:25:08.60,0:25:10.67,*Default,NTP,0000,0000,0000,,所以这是我唯一有子表达式的地方
Dialogue: 0,0:25:10.90,0:25:12.90,*Default,NTP,0000,0000,0000,,那么我该怎么办我回到输入
Dialogue: 0,0:25:12.90,0:25:15.17,*Default,NTP,0000,0000,0000,,那是零，所以我不是
Dialogue: 0,0:25:15.17,0:25:16.33,*Default,NTP,0000,0000,0000,,就在那里
Dialogue: 0,0:25:16.40,0:25:18.67,*Default,NTP,0000,0000,0000,,那是零，所以我不是 b
Dialogue: 0,0:25:19.10,0:25:21.60,*Default,NTP,0000,0000,0000,,我再次成为那两个人
Dialogue: 0,0:25:21.80,0:25:23.80,*Default,NTP,0000,0000,0000,,请记住为什么这有效
Dialogue: 0,0:25:23.80,0:25:26.17,*Default,NTP,0000,0000,0000,,因为当 a 为 0 时，a 不再为 1
Dialogue: 0,0:25:26.53,0:25:28.73,*Default,NTP,0000,0000,0000,,什么时候是零而不是一
Dialogue: 0,0:25:28.73,0:25:31.13,*Default,NTP,0000,0000,0000,,所以当我和一又一时我得到一个
Dialogue: 0,0:25:31.33,0:25:33.33,*Default,NTP,0000,0000,0000,,这是我唯一能得到的地方
Dialogue: 0,0:25:33.50,0:25:34.47,*Default,NTP,0000,0000,0000,,没有其他的了
Dialogue: 0,0:25:34.47,0:25:37.07,*Default,NTP,0000,0000,0000,,a 和 b 的可能值将产生 1
Dialogue: 0,0:25:37.07,0:25:37.87,*Default,NTP,0000,0000,0000,,所以这是这个
Dialogue: 0,0:25:37.90,0:25:40.90,*Default,NTP,0000,0000,0000,,非常外科手术式的打击这个小子表情
Dialogue: 0,0:25:41.20,0:25:44.50,*Default,NTP,0000,0000,0000,,它将在这里且仅在这里评估一个
Dialogue: 0,0:25:44.67,0:25:46.50,*Default,NTP,0000,0000,0000,,这是这里别人的问题
Dialogue: 0,0:25:46.50,0:25:47.70,*Default,NTP,0000,0000,0000,,这不是任何人的问题
Dialogue: 0,0:25:47.70,0:25:49.70,*Default,NTP,0000,0000,0000,,因为默认情况下一切都会
Dialogue: 0,0:25:49.70,0:25:50.90,*Default,NTP,0000,0000,0000,,评估为零
Dialogue: 0,0:25:50.97,0:25:52.97,*Default,NTP,0000,0000,0000,,如果不是这个或不是这个
Dialogue: 0,0:25:53.07,0:25:54.70,*Default,NTP,0000,0000,0000,,好吧，让我们再次构建该子表达式
Dialogue: 0,0:25:54.70,0:25:55.77,*Default,NTP,0000,0000,0000,,回到a和b
Dialogue: 0,0:25:55.90,0:25:57.97,*Default,NTP,0000,0000,0000,,那是一个，所以我们把 a 过来
Dialogue: 0,0:25:57.97,0:26:00.17,*Default,NTP,0000,0000,0000,,那是a，我们一遍又一遍地带来b
Dialogue: 0,0:26:00.60,0:26:04.07,*Default,NTP,0000,0000,0000,,这个子表达式是一个当且仅当
Dialogue: 0,0:26:04.17,0:26:07.97,*Default,NTP,0000,0000,0000,,a 是 1，b 是 1，其他地方都是 0
Dialogue: 0,0:26:08.13,0:26:11.57,*Default,NTP,0000,0000,0000,,所以再次注意这些为什么我们喜欢这里的 ans 因为
Dialogue: 0,0:26:11.87,0:26:14.57,*Default,NTP,0000,0000,0000,,对于任何不为零的值零
Dialogue: 0,0:26:14.57,0:26:16.87,*Default,NTP,0000,0000,0000,,以及任何不是一一的值
Dialogue: 0,0:26:17.47,0:26:19.37,*Default,NTP,0000,0000,0000,,这些表达式的值将为零
Dialogue: 0,0:26:19.37,0:26:22.67,*Default,NTP,0000,0000,0000,,所以这里对于 a 和 b 的所有其他值
Dialogue: 0,0:26:22.73,0:26:24.17,*Default,NTP,0000,0000,0000,,这评估为零
Dialogue: 0,0:26:24.20,0:26:27.27,*Default,NTP,0000,0000,0000,,这里 a 和 b 的所有其他值都为零
Dialogue: 0,0:26:27.27,0:26:28.90,*Default,NTP,0000,0000,0000,,所以我免费得到这两个
Dialogue: 0,0:26:28.90,0:26:31.00,*Default,NTP,0000,0000,0000,,仅仅因为这些是如此外科手术
Dialogue: 0,0:26:31.13,0:26:33.97,*Default,NTP,0000,0000,0000,,当且仅当我们在这里时评估为 1
Dialogue: 0,0:26:34.17,0:26:35.13,*Default,NTP,0000,0000,0000,,或者我们在这里
Dialogue: 0,0:26:35.57,0:26:37.87,*Default,NTP,0000,0000,0000,,很好，第二步完成了
Dialogue: 0,0:26:38.00,0:26:40.00,*Default,NTP,0000,0000,0000,,我现在有了子表达式
Dialogue: 0,0:26:40.17,0:26:41.53,*Default,NTP,0000,0000,0000,,所以让我们执行第三步
Dialogue: 0,0:26:41.70,0:26:44.13,*Default,NTP,0000,0000,0000,,将子表达式与我们的组合起来
Dialogue: 0,0:26:44.30,0:26:45.40,*Default,NTP,0000,0000,0000,,对于每个输出列
Dialogue: 0,0:26:45.40,0:26:47.80,*Default,NTP,0000,0000,0000,,当然，我们只有一个输出列，所以 c
Dialogue: 0,0:26:48.17,0:26:53.90,*Default,NTP,0000,0000,0000,,我的输出将等于 not a 和 not b
Dialogue: 0,0:26:53.90,0:26:54.87,*Default,NTP,0000,0000,0000,,就在那里
Dialogue: 0,0:26:54.87,0:26:57.33,*Default,NTP,0000,0000,0000,,或 a 和 b 并再次
Dialogue: 0,0:26:57.33,0:26:59.00,*Default,NTP,0000,0000,0000,,你必须说服自己
Dialogue: 0,0:26:59.00,0:27:00.80,*Default,NTP,0000,0000,0000,,这正是你想要的
Dialogue: 0,0:27:00.80,0:27:04.50,*Default,NTP,0000,0000,0000,,好吧，这可能是一种且唯一的一种情况
Dialogue: 0,0:27:04.50,0:27:05.73,*Default,NTP,0000,0000,0000,,这一行就在这里
Dialogue: 0,0:27:05.93,0:27:08.10,*Default,NTP,0000,0000,0000,,这只能是一种情况
Dialogue: 0,0:27:08.10,0:27:09.27,*Default,NTP,0000,0000,0000,,这一行就在这里
Dialogue: 0,0:27:09.30,0:27:13.87,*Default,NTP,0000,0000,0000,,所以在这种情况下整个表达式将是一个
Dialogue: 0,0:27:13.87,0:27:14.70,*Default,NTP,0000,0000,0000,,在这种情况下
Dialogue: 0,0:27:14.70,0:27:17.10,*Default,NTP,0000,0000,0000,,再次注意到其他地方都是零
Dialogue: 0,0:27:17.10,0:27:18.53,*Default,NTP,0000,0000,0000,,我们是免费来的
Dialogue: 0,0:27:18.67,0:27:20.30,*Default,NTP,0000,0000,0000,,由于安的性质
Dialogue: 0,0:27:20.70,0:27:23.47,*Default,NTP,0000,0000,0000,,所以我有一个布尔表达式
Dialogue: 0,0:27:23.50,0:27:26.57,*Default,NTP,0000,0000,0000,,这就是一点比较的平等
Dialogue: 0,0:27:26.70,0:27:28.37,*Default,NTP,0000,0000,0000,,所以现在你已经完成了
Dialogue: 0,0:27:28.37,0:27:29.90,*Default,NTP,0000,0000,0000,,画电路只是有趣的部分
Dialogue: 0,0:27:29.90,0:27:30.57,*Default,NTP,0000,0000,0000,,这只是为了
Dialogue: 0,0:27:30.57,0:27:31.17,*Default,NTP,0000,0000,0000,,证明这一点
Dialogue: 0,0:27:31.17,0:27:32.57,*Default,NTP,0000,0000,0000,,你可以真正实现这个东西
Dialogue: 0,0:27:32.67,0:27:35.10,*Default,NTP,0000,0000,0000,,但我现在有了一个计算
Dialogue: 0,0:27:35.17,0:27:36.90,*Default,NTP,0000,0000,0000,,一位比较是否相等
Dialogue: 0,0:27:36.97,0:27:40.20,*Default,NTP,0000,0000,0000,,使用逻辑土地逻辑矿石而不是
Dialogue: 0,0:27:40.47,0:27:41.93,*Default,NTP,0000,0000,0000,,让我们继续画电路
Dialogue: 0,0:27:42.73,0:27:44.87,*Default,NTP,0000,0000,0000,,好的，再次在左边输入
Dialogue: 0,0:27:45.13,0:27:46.10,*Default,NTP,0000,0000,0000,,输出在右边
Dialogue: 0,0:27:46.10,0:27:48.47,*Default,NTP,0000,0000,0000,,这是两个
Dialogue: 0,0:27:48.53,0:27:50.37,*Default,NTP,0000,0000,0000,,一位比较是否相等
Dialogue: 0,0:27:50.37,0:27:52.50,*Default,NTP,0000,0000,0000,,我只是比较两个二进制数
Dialogue: 0,0:27:52.53,0:27:53.37,*Default,NTP,0000,0000,0000,,这是我的输出
Dialogue: 0,0:27:53.37,0:27:55.27,*Default,NTP,0000,0000,0000,,我把我的表情带过来了
Dialogue: 0,0:27:55.27,0:27:56.67,*Default,NTP,0000,0000,0000,,这样我们就可以把它继续下去
Dialogue: 0,0:27:57.00,0:27:57.30,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:27:57.30,0:27:59.90,*Default,NTP,0000,0000,0000,,所以我们知道这里某个地方会有矿石
Dialogue: 0,0:27:59.90,0:28:01.73,*Default,NTP,0000,0000,0000,,这里会有两端
Dialogue: 0,0:28:01.73,0:28:04.40,*Default,NTP,0000,0000,0000,,我需要几个用于 a 和 b 的结门
Dialogue: 0,0:28:04.40,0:28:04.73,*Default,NTP,0000,0000,0000,,可以，然后呢
Dialogue: 0,0:28:04.73,0:28:05.27,*Default,NTP,0000,0000,0000,,让我们继续吧
Dialogue: 0,0:28:05.27,0:28:06.80,*Default,NTP,0000,0000,0000,,开始把这些碎片拼凑起来
Dialogue: 0,0:28:07.40,0:28:08.50,*Default,NTP,0000,0000,0000,,好吧，让我们看看
Dialogue: 0,0:28:08.50,0:28:09.10,*Default,NTP,0000,0000,0000,,我要采取
Dialogue: 0,0:28:09.10,0:28:11.20,*Default,NTP,0000,0000,0000,,a 和 b 我要把它们塞进去
Dialogue: 0,0:28:11.20,0:28:13.53,*Default,NTP,0000,0000,0000,,门就是这里的子表达式
Dialogue: 0,0:28:13.53,0:28:14.57,*Default,NTP,0000,0000,0000,,好的，这是最简单的部分
Dialogue: 0,0:28:14.57,0:28:15.93,*Default,NTP,0000,0000,0000,,我不需要任何结
Dialogue: 0,0:28:16.17,0:28:18.93,*Default,NTP,0000,0000,0000,,现在我要再次剥离a和b
Dialogue: 0,0:28:19.30,0:28:21.67,*Default,NTP,0000,0000,0000,,当我剥离信号时填充圆圈
Dialogue: 0,0:28:21.67,0:28:23.70,*Default,NTP,0000,0000,0000,,当我穿过电线时打开圆圈
Dialogue: 0,0:28:23.70,0:28:26.33,*Default,NTP,0000,0000,0000,,你必须这样做才能跟随输入
Dialogue: 0,0:28:26.33,0:28:27.73,*Default,NTP,0000,0000,0000,,所以当你遵循这条线时
Dialogue: 0,0:28:27.73,0:28:30.10,*Default,NTP,0000,0000,0000,,你知道继续在这里你可以忽略它
Dialogue: 0,0:28:30.17,0:28:31.60,*Default,NTP,0000,0000,0000,,然后它进入敲门
Dialogue: 0,0:28:31.60,0:28:33.10,*Default,NTP,0000,0000,0000,,它进入安门
Dialogue: 0,0:28:33.37,0:28:34.13,*Default,NTP,0000,0000,0000,,与 b 相同
Dialogue: 0,0:28:34.13,0:28:35.40,*Default,NTP,0000,0000,0000,,我要把它剥掉
Dialogue: 0,0:28:35.67,0:28:37.33,*Default,NTP,0000,0000,0000,,将其驶入结门
Dialogue: 0,0:28:37.50,0:28:38.77,*Default,NTP,0000,0000,0000,,将其推入端门
Dialogue: 0,0:28:38.77,0:28:40.17,*Default,NTP,0000,0000,0000,,不要忘记和门上的点
Dialogue: 0,0:28:40.17,0:28:41.57,*Default,NTP,0000,0000,0000,,这样我们就可以看到你在做什么
Dialogue: 0,0:28:41.70,0:28:44.20,*Default,NTP,0000,0000,0000,,这当然不是 a 也不是 b
Dialogue: 0,0:28:44.30,0:28:46.40,*Default,NTP,0000,0000,0000,,这是 amb 我又喜欢画这些
Dialogue: 0,0:28:46.90,0:28:48.30,*Default,NTP,0000,0000,0000,,这里的实际表达
Dialogue: 0,0:28:48.30,0:28:50.17,*Default,NTP,0000,0000,0000,,因为这让我想起
Dialogue: 0,0:28:50.33,0:28:51.10,*Default,NTP,0000,0000,0000,,你知道我在做什么
Dialogue: 0,0:28:51.10,0:28:53.07,*Default,NTP,0000,0000,0000,,我可以回去好好检查我的工作
Dialogue: 0,0:28:53.13,0:28:55.30,*Default,NTP,0000,0000,0000,,现在这两个当然所以这个
Dialogue: 0,0:28:55.87,0:28:57.70,*Default,NTP,0000,0000,0000,,子表达式对应于此
Dialogue: 0,0:28:57.77,0:28:59.67,*Default,NTP,0000,0000,0000,,这个子表达式对应于这个
Dialogue: 0,0:28:59.73,0:29:00.97,*Default,NTP,0000,0000,0000,,我想用这两个人做什么
Dialogue: 0,0:29:00.97,0:29:02.70,*Default,NTP,0000,0000,0000,,我想把它们塞进器官门
Dialogue: 0,0:29:02.80,0:29:04.17,*Default,NTP,0000,0000,0000,,然后我就有了我的输出
Dialogue: 0,0:29:04.30,0:29:06.13,*Default,NTP,0000,0000,0000,,好吧，很好，推到了一个 orgate
Dialogue: 0,0:29:06.20,0:29:09.33,*Default,NTP,0000,0000,0000,,这就是完整的表达式，我有我的输出
Dialogue: 0,0:29:09.37,0:29:11.50,*Default,NTP,0000,0000,0000,,现在我们有了第一个有意义的计算
Dialogue: 0,0:29:11.50,0:29:12.93,*Default,NTP,0000,0000,0000,,这非常简单
Dialogue: 0,0:29:13.33,0:29:16.37,*Default,NTP,0000,0000,0000,,这只是一位比较是否相等
Dialogue: 0,0:29:16.37,0:29:18.40,*Default,NTP,0000,0000,0000,,但这是有意义的，它确实做了一些事情
Dialogue: 0,0:29:18.57,0:29:21.20,*Default,NTP,0000,0000,0000,,好吧，请注意这里在某些方面有一些东西
Dialogue: 0,0:29:21.37,0:29:23.27,*Default,NTP,0000,0000,0000,,我总是觉得这些很神奇
Dialogue: 0,0:29:23.97,0:29:25.80,*Default,NTP,0000,0000,0000,,设计这些电路是因为注意到
Dialogue: 0,0:29:26.67,0:29:28.70,*Default,NTP,0000,0000,0000,,你并没有真正计算一比特
Dialogue: 0,0:29:28.70,0:29:30.10,*Default,NTP,0000,0000,0000,,比较是否相等
Dialogue: 0,0:29:30.47,0:29:31.33,*Default,NTP,0000,0000,0000,,我这是什么意思
Dialogue: 0,0:29:31.33,0:29:32.70,*Default,NTP,0000,0000,0000,,我的意思是
Dialogue: 0,0:29:32.80,0:29:36.40,*Default,NTP,0000,0000,0000,,你已经记住了一点比较相等性
Dialogue: 0,0:29:36.50,0:29:38.73,*Default,NTP,0000,0000,0000,,真值表和第一步
Dialogue: 0,0:29:39.00,0:29:40.93,*Default,NTP,0000,0000,0000,,给了计算机答案
Dialogue: 0,0:29:41.33,0:29:41.90,*Default,NTP,0000,0000,0000,,你说什么
Dialogue: 0,0:29:41.90,0:29:44.30,*Default,NTP,0000,0000,0000,,你说看这里是所有可能的输入集
Dialogue: 0,0:29:44.30,0:29:46.53,*Default,NTP,0000,0000,0000,,0 0 1 1 0 1 1
Dialogue: 0,0:29:46.60,0:29:48.97,*Default,NTP,0000,0000,0000,,这是与之相关的所有输出
Dialogue: 0,0:29:49.00,0:29:50.53,*Default,NTP,0000,0000,0000,,所以当你看到零零时
Dialogue: 0,0:29:50.70,0:29:53.07,*Default,NTP,0000,0000,0000,,看到一就输出一 一输出一
Dialogue: 0,0:29:53.07,0:29:55.00,*Default,NTP,0000,0000,0000,,并在所有其他时间输出零
Dialogue: 0,0:29:55.20,0:29:56.60,*Default,NTP,0000,0000,0000,,你给了它答案
Dialogue: 0,0:29:56.87,0:29:58.47,*Default,NTP,0000,0000,0000,,现在它所做的只是
Dialogue: 0,0:29:58.47,0:29:59.73,*Default,NTP,0000,0000,0000,,我的意思是它正在计算它
Dialogue: 0,0:29:59.73,0:30:01.57,*Default,NTP,0000,0000,0000,,因为它正在推动它通过电路
Dialogue: 0,0:30:01.87,0:30:03.60,*Default,NTP,0000,0000,0000,,但你是那个付出了所有努力的人
Dialogue: 0,0:30:03.73,0:30:05.93,*Default,NTP,0000,0000,0000,,你是告诉它答案的人
Dialogue: 0,0:30:05.97,0:30:08.67,*Default,NTP,0000,0000,0000,,现在它只是对所有可能的输入执行此操作
Dialogue: 0,0:30:08.67,0:30:10.47,*Default,NTP,0000,0000,0000,,使用这些操作
Dialogue: 0,0:30:10.57,0:30:13.50,*Default,NTP,0000,0000,0000,,所以在某些方面这就是电路的魔力
Dialogue: 0,0:30:13.50,0:30:15.70,*Default,NTP,0000,0000,0000,,你实际上做了很多艰苦的工作吗
Dialogue: 0,0:30:15.70,0:30:17.37,*Default,NTP,0000,0000,0000,,以及那张真正的桌子的设计
Dialogue: 0,0:30:17.40,0:30:19.70,*Default,NTP,0000,0000,0000,,构建子表达式 构建表达式
Dialogue: 0,0:30:19.70,0:30:21.13,*Default,NTP,0000,0000,0000,,最终我们会看到如何简化
Dialogue: 0,0:30:21.13,0:30:22.67,*Default,NTP,0000,0000,0000,,那些让他们更有效率的事情
Dialogue: 0,0:30:22.77,0:30:25.53,*Default,NTP,0000,0000,0000,,然后这只是转动曲柄
Dialogue: 0,0:30:25.53,0:30:27.97,*Default,NTP,0000,0000,0000,,这只是简单地实现机器
Dialogue: 0,0:30:27.97,0:30:29.30,*Default,NTP,0000,0000,0000,,你实际设计的
Dialogue: 0,0:30:29.30,0:30:30.60,*Default,NTP,0000,0000,0000,,你给了它答案
Dialogue: 0,0:30:30.77,0:30:32.30,*Default,NTP,0000,0000,0000,,好的 好的 好的
Dialogue: 0,0:30:32.33,0:30:35.47,*Default,NTP,0000,0000,0000,,所以这是第一个也是最简单的现在
Dialogue: 0,0:30:35.47,0:30:37.80,*Default,NTP,0000,0000,0000,,我们实际上已经完成了有意义的计算
Dialogue: 0,0:30:37.80,0:30:39.17,*Default,NTP,0000,0000,0000,,使用我们的四个步骤
Dialogue: 0,0:30:39.37,0:30:41.40,*Default,NTP,0000,0000,0000,,输入输出构建真值表
Dialogue: 0,0:30:41.47,0:30:42.27,*Default,NTP,0000,0000,0000,,子表达式
Dialogue: 0,0:30:42.27,0:30:44.33,*Default,NTP,0000,0000,0000,,结合表达式绘制电路
Dialogue: 0,0:30:44.40,0:30:45.87,*Default,NTP,0000,0000,0000,,以及我们现在要做的事情
Dialogue: 0,0:30:45.87,0:30:47.33,*Default,NTP,0000,0000,0000,,我们会做很多例子
Dialogue: 0,0:30:47.33,0:30:47.93,*Default,NTP,0000,0000,0000,,我们将会看到
Dialogue: 0,0:30:47.93,0:30:50.50,*Default,NTP,0000,0000,0000,,如何获得越来越复杂的计算
Dialogue: 0,0:30:50.60,0:30:52.00,*Default,NTP,0000,0000,0000,,然后在接近尾声时我将向你展示
Dialogue: 0,0:30:52.00,0:30:52.47,*Default,NTP,0000,0000,0000,,因为我确信
Dialogue: 0,0:30:52.47,0:30:53.80,*Default,NTP,0000,0000,0000,,你们中的一些人已经在考虑这个问题了
Dialogue: 0,0:30:53.80,0:30:55.33,*Default,NTP,0000,0000,0000,,会有吗
Dialogue: 0,0:30:55.40,0:30:57.37,*Default,NTP,0000,0000,0000,,在某些时候将会有很多这样的门
Dialogue: 0,0:30:57.40,0:30:58.60,*Default,NTP,0000,0000,0000,,我怎样才能让它们更简单
Dialogue: 0,0:30:58.60,0:31:00.40,*Default,NTP,0000,0000,0000,,这真的是设计电路的最佳方法吗
Dialogue: 0,0:31:00.40,0:31:01.70,*Default,NTP,0000,0000,0000,,答案绝对不是
Dialogue: 0,0:31:01.70,0:31:02.93,*Default,NTP,0000,0000,0000,,这不是最好的设计方式
Dialogue: 0,0:31:02.93,0:31:05.13,*Default,NTP,0000,0000,0000,,服务电路设计极其复杂
Dialogue: 0,0:31:05.30,0:31:06.70,*Default,NTP,0000,0000,0000,,并且你确实想优化它
Dialogue: 0,0:31:06.70,0:31:08.30,*Default,NTP,0000,0000,0000,,这样你就能获得最大的冲击力
Dialogue: 0,0:31:08.30,0:31:09.53,*Default,NTP,0000,0000,0000,,为你的电路上的钱
Dialogue: 0,0:31:09.60,0:31:10.80,*Default,NTP,0000,0000,0000,,我们正在经历最简单的
Dialogue: 0,0:31:10.80,0:31:11.87,*Default,NTP,0000,0000,0000,,可能的电路设计
Dialogue: 0,0:31:11.87,0:31:14.17,*Default,NTP,0000,0000,0000,,我将向您展示一些优化技术
Dialogue: 0,0:31:14.53,0:31:16.90,*Default,NTP,0000,0000,0000,,临近课程结束时
Dialogue: 0,0:31:17.17,0:31:18.17,*Default,NTP,0000,0000,0000,,但在那之前
Dialogue: 0,0:31:18.17,0:31:20.10,*Default,NTP,0000,0000,0000,,我们将做很多例子来确保我们
Dialogue: 0,0:31:20.10,0:31:21.77,*Default,NTP,0000,0000,0000,,了解这四个步骤的过程
Dialogue: 0,0:31:21.77,0:31:22.73,*Default,NTP,0000,0000,0000,,好吧，现在就这样
Dialogue: 0,0:31:22.73,0:31:24.53,*Default,NTP,0000,0000,0000,,我们会在几分钟后取走，再见
Dialogue: 0,0:31:26.93,0:31:28.47,*Default,NTP,0000,0000,0000,,在上一堂课中我们
Dialogue: 0,0:31:28.70,0:31:31.50,*Default,NTP,0000,0000,0000,,构建了我们的第一个有意义的计算
Dialogue: 0,0:31:31.70,0:31:33.47,*Default,NTP,0000,0000,0000,,从真值表开始
Dialogue: 0,0:31:33.53,0:31:34.93,*Default,NTP,0000,0000,0000,,通过构建子表达式
Dialogue: 0,0:31:34.93,0:31:35.97,*Default,NTP,0000,0000,0000,,中的表达式
Dialogue: 0,0:31:36.37,0:31:39.90,*Default,NTP,0000,0000,0000,,一位比较相等的电路
Dialogue: 0,0:31:39.90,0:31:43.77,*Default,NTP,0000,0000,0000,,所以我们问是否有两个一位数 a 和 b
Dialogue: 0,0:31:44.20,0:31:46.37,*Default,NTP,0000,0000,0000,,我们可以建立一个电路来告诉我它们是否相等
Dialogue: 0,0:31:46.37,0:31:48.07,*Default,NTP,0000,0000,0000,,它们都是零或者都是一
Dialogue: 0,0:31:48.27,0:31:50.73,*Default,NTP,0000,0000,0000,,非常简单也许不是很有用
Dialogue: 0,0:31:50.87,0:31:53.10,*Default,NTP,0000,0000,0000,,让我们看一些更多的例子
Dialogue: 0,0:31:53.10,0:31:55.57,*Default,NTP,0000,0000,0000,,下一个例子是
Dialogue: 0,0:31:55.80,0:31:58.57,*Default,NTP,0000,0000,0000,,四位比较是否相等
Dialogue: 0,0:31:58.57,0:32:01.30,*Default,NTP,0000,0000,0000,,所以我这是什么意思所以请记住，当
Dialogue: 0,0:32:01.30,0:32:02.97,*Default,NTP,0000,0000,0000,,当我们指定二进制数时
Dialogue: 0,0:32:02.97,0:32:04.87,*Default,NTP,0000,0000,0000,,我们指定有多少位
Dialogue: 0,0:32:05.00,0:32:06.57,*Default,NTP,0000,0000,0000,,以及它们是否已签名
Dialogue: 0,0:32:06.57,0:32:08.47,*Default,NTP,0000,0000,0000,,所以现在我们只做 unsigned
Dialogue: 0,0:32:08.47,0:32:10.20,*Default,NTP,0000,0000,0000,,禁止二进制数
Dialogue: 0,0:32:10.87,0:32:15.27,*Default,NTP,0000,0000,0000,,我有两个四位二进制数，我想返回
Dialogue: 0,0:32:15.90,0:32:19.33,*Default,NTP,0000,0000,0000,,如果这两个数字相同，则为 true
Dialogue: 0,0:32:19.50,0:32:20.90,*Default,NTP,0000,0000,0000,,否则为零
Dialogue: 0,0:32:21.47,0:32:24.33,*Default,NTP,0000,0000,0000,,好吧，让我们开始转动曲柄
Dialogue: 0,0:32:24.33,0:32:24.90,*Default,NTP,0000,0000,0000,,所以第一件事
Dialogue: 0,0:32:24.90,0:32:26.90,*Default,NTP,0000,0000,0000,,这确实是所有艰苦工作的所在
Dialogue: 0,0:32:26.93,0:32:28.57,*Default,NTP,0000,0000,0000,,正在弄清楚真值表是什么
Dialogue: 0,0:32:28.57,0:32:29.90,*Default,NTP,0000,0000,0000,,真值表是什么样的
Dialogue: 0,0:32:29.90,0:32:31.70,*Default,NTP,0000,0000,0000,,有多少个输入列
Dialogue: 0,0:32:31.70,0:32:32.53,*Default,NTP,0000,0000,0000,,输出是什么
Dialogue: 0,0:32:32.53,0:32:34.27,*Default,NTP,0000,0000,0000,,然后填充真值表
Dialogue: 0,0:32:34.27,0:32:36.30,*Default,NTP,0000,0000,0000,,所以我们当然从这里开始
Dialogue: 0,0:32:38.00,0:32:39.20,*Default,NTP,0000,0000,0000,,好吧，首先
Dialogue: 0,0:32:39.20,0:32:41.60,*Default,NTP,0000,0000,0000,,四位二进制数是什么样的
Dialogue: 0,0:32:41.60,0:32:42.33,*Default,NTP,0000,0000,0000,,所以这是
Dialogue: 0,0:32:42.33,0:32:43.30,*Default,NTP,0000,0000,0000,,让我给它们贴上标签
Dialogue: 0,0:32:44.53,0:32:45.33,*Default,NTP,0000,0000,0000,,800
Dialogue: 0,0:32:45.67,0:32:48.93,*Default,NTP,0000,0000,0000,,a18283 显着
Dialogue: 0,0:32:49.00,0:32:50.27,*Default,NTP,0000,0000,0000,,所以这是我的第一个
Dialogue: 0,0:32:50.73,0:32:52.77,*Default,NTP,0000,0000,0000,,二进制4位
Dialogue: 0,0:32:53.07,0:32:54.10,*Default,NTP,0000,0000,0000,,我们称其为
Dialogue: 0,0:32:54.10,0:32:56.50,*Default,NTP,0000,0000,0000,,但请注意，那里实际上有四个数字
Dialogue: 0,0:32:56.67,0:32:59.00,*Default,NTP,0000,0000,0000,,然后当然我有 b 其中有 b 三个
Dialogue: 0,0:32:59.00,0:33:00.10,*Default,NTP,0000,0000,0000,,乙二乙一乙
Dialogue: 0,0:33:00.27,0:33:02.60,*Default,NTP,0000,0000,0000,,0 我想知道这两个相等
Dialogue: 0,0:33:02.93,0:33:06.20,*Default,NTP,0000,0000,0000,,那么这两个数字 b 相等意味着什么
Dialogue: 0,0:33:06.80,0:33:10.27,*Default,NTP,0000,0000,0000,,这意味着 a 3 等于 b 3
Dialogue: 0,0:33:10.27,0:33:13.40,*Default,NTP,0000,0000,0000,,a 2 等于 b 2 和某人等等
Dialogue: 0,0:33:14.40,0:33:18.50,*Default,NTP,0000,0000,0000,,好吧，请注意，即使我只有两个数字
Dialogue: 0,0:33:18.50,0:33:21.67,*Default,NTP,0000,0000,0000,,它们各自以四位表示
Dialogue: 0,0:33:21.97,0:33:25.40,*Default,NTP,0000,0000,0000,,所以我实际上有八个输入列
Dialogue: 0,0:33:25.60,0:33:28.57,*Default,NTP,0000,0000,0000,,a 3 到 a 0 b 三个做 b 0
Dialogue: 0,0:33:28.97,0:33:32.27,*Default,NTP,0000,0000,0000,,所以不要对数字和位感到困惑
Dialogue: 0,0:33:32.27,0:33:34.77,*Default,NTP,0000,0000,0000,,因为我们生活在二元世界
Dialogue: 0,0:33:34.90,0:33:36.67,*Default,NTP,0000,0000,0000,,我们必须时刻思考
Dialogue: 0,0:33:36.67,0:33:39.37,*Default,NTP,0000,0000,0000,,关于底层的位表示
Dialogue: 0,0:33:39.93,0:33:44.40,*Default,NTP,0000,0000,0000,,好的，让我们看一下这里的四个，这里的四个
Dialogue: 0,0:33:44.40,0:33:45.67,*Default,NTP,0000,0000,0000,,这是我的输入
Dialogue: 0,0:33:45.80,0:33:48.70,*Default,NTP,0000,0000,0000,,我当然有一个输出，即 c
Dialogue: 0,0:33:49.20,0:33:52.27,*Default,NTP,0000,0000,0000,,当它们相等时它是 1 而其他地方都是 0
Dialogue: 0,0:33:52.40,0:33:55.57,*Default,NTP,0000,0000,0000,,好吧，如果我有八个输入，我有多少行
Dialogue: 0,0:33:55.87,0:33:57.73,*Default,NTP,0000,0000,0000,,记住关系
Dialogue: 0,0:33:58.10,0:33:59.47,*Default,NTP,0000,0000,0000,,两个幂
Dialogue: 0,0:33:59.60,0:34:00.50,*Default,NTP,0000,0000,0000,,输入数量
Dialogue: 0,0:34:00.50,0:34:02.50,*Default,NTP,0000,0000,0000,,所以在这种情况下它是二的八次方
Dialogue: 0,0:34:02.50,0:34:03.53,*Default,NTP,0000,0000,0000,,这当然是
Dialogue: 0,0:34:03.73,0:34:04.93,*Default,NTP,0000,0000,0000,,两点五十六
Dialogue: 0,0:34:05.87,0:34:07.97,*Default,NTP,0000,0000,0000,,你必须填充很多行
Dialogue: 0,0:34:08.20,0:34:12.30,*Default,NTP,0000,0000,0000,,所以你必须仔细检查 256 个中的每一个
Dialogue: 0,0:34:12.77,0:34:14.10,*Default,NTP,0000,0000,0000,,寺庙输入
Dialogue: 0,0:34:14.37,0:34:15.70,*Default,NTP,0000,0000,0000,,就在行外
Dialogue: 0,0:34:16.10,0:34:19.50,*Default,NTP,0000,0000,0000,,告诉我输出值是多少，你就可以做到
Dialogue: 0,0:34:19.70,0:34:21.37,*Default,NTP,0000,0000,0000,,有点乏味，但你可以做到
Dialogue: 0,0:34:21.60,0:34:22.67,*Default,NTP,0000,0000,0000,,但让我们想想
Dialogue: 0,0:34:22.67,0:34:24.07,*Default,NTP,0000,0000,0000,,我们是否真的需要去所有
Dialogue: 0,0:34:24.07,0:34:25.30,*Default,NTP,0000,0000,0000,,这个麻烦与否
Dialogue: 0,0:34:26.17,0:34:27.17,*Default,NTP,0000,0000,0000,,因为
Dialogue: 0,0:34:27.80,0:34:29.77,*Default,NTP,0000,0000,0000,,当我们思考这一点时
Dialogue: 0,0:34:30.00,0:34:31.87,*Default,NTP,0000,0000,0000,,这两个四位数字
Dialogue: 0,0:34:31.93,0:34:33.20,*Default,NTP,0000,0000,0000,,真的有
Dialogue: 0,0:34:33.20,0:34:34.60,*Default,NTP,0000,0000,0000,,我有点在做
Dialogue: 0,0:34:34.67,0:34:37.10,*Default,NTP,0000,0000,0000,,一次又一次非常简单的计算
Dialogue: 0,0:34:37.10,0:34:38.13,*Default,NTP,0000,0000,0000,,那么那是什么
Dialogue: 0,0:34:38.37,0:34:39.53,*Default,NTP,0000,0000,0000,,好吧，我是这么说的
Dialogue: 0,0:34:39.53,0:34:42.87,*Default,NTP,0000,0000,0000,,我说这个禁止数a
Dialogue: 0,0:34:43.07,0:34:46.27,*Default,NTP,0000,0000,0000,,和这个 forbit 数 b 相等，如果
Dialogue: 0,0:34:46.90,0:34:48.47,*Default,NTP,0000,0000,0000,,a 3 等于 b 3
Dialogue: 0,0:34:48.50,0:34:50.20,*Default,NTP,0000,0000,0000,,a 2 等于 b 2
Dialogue: 0,0:34:50.20,0:34:53.27,*Default,NTP,0000,0000,0000,,a 1 等于 b 1，a 0 等于 b 0
Dialogue: 0,0:34:53.67,0:34:55.07,*Default,NTP,0000,0000,0000,,所以真的如果我能想到的话
Dialogue: 0,0:34:55.07,0:34:57.10,*Default,NTP,0000,0000,0000,,如果我能解决这个大问题
Dialogue: 0,0:34:57.10,0:34:58.47,*Default,NTP,0000,0000,0000,,然后这个一点问题
Dialogue: 0,0:34:58.47,0:35:00.50,*Default,NTP,0000,0000,0000,,这是一个大问题 这是一个大问题
Dialogue: 0,0:35:00.67,0:35:01.70,*Default,NTP,0000,0000,0000,,那么我就可以
Dialogue: 0,0:35:01.87,0:35:04.60,*Default,NTP,0000,0000,0000,,使用 and 运算符将它们逻辑组合
Dialogue: 0,0:35:04.60,0:35:08.00,*Default,NTP,0000,0000,0000,,所以也许我们可以稍微简化一下这个计算
Dialogue: 0,0:35:08.30,0:35:11.27,*Default,NTP,0000,0000,0000,,并且不必填写完整的 2006 年
Dialogue: 0,0:35:11.80,0:35:13.80,*Default,NTP,0000,0000,0000,,行表所以让我们
Dialogue: 0,0:35:14.33,0:35:15.73,*Default,NTP,0000,0000,0000,,提醒你那是什么
Dialogue: 0,0:35:15.73,0:35:17.70,*Default,NTP,0000,0000,0000,,位比较一下质量看起来像
Dialogue: 0,0:35:17.87,0:35:20.33,*Default,NTP,0000,0000,0000,,我取两个单位所以
Dialogue: 0,0:35:20.93,0:35:22.73,*Default,NTP,0000,0000,0000,,小心这里的开关和符号
Dialogue: 0,0:35:22.73,0:35:25.30,*Default,NTP,0000,0000,0000,,你可以把它想象成 a 0 和 b 0
Dialogue: 0,0:35:25.80,0:35:28.17,*Default,NTP,0000,0000,0000,,这告诉我这两个位是否相等
Dialogue: 0,0:35:28.17,0:35:29.47,*Default,NTP,0000,0000,0000,,所以这些只是两个一位
Dialogue: 0,0:35:29.87,0:35:32.10,*Default,NTP,0000,0000,0000,,并记住该电路的工作方式
Dialogue: 0,0:35:32.10,0:35:33.97,*Default,NTP,0000,0000,0000,,它说如果他们都是一个
Dialogue: 0,0:35:33.97,0:35:37.00,*Default,NTP,0000,0000,0000,,所以如果它们都是一个那么这一端将响应一个
Dialogue: 0,0:35:37.67,0:35:39.17,*Default,NTP,0000,0000,0000,,如果它们都为零
Dialogue: 0,0:35:39.27,0:35:42.30,*Default,NTP,0000,0000,0000,,他们走进敲门 他们翻转到这里的门
Dialogue: 0,0:35:42.30,0:35:43.80,*Default,NTP,0000,0000,0000,,这将回应一个
Dialogue: 0,0:35:43.80,0:35:46.60,*Default,NTP,0000,0000,0000,,所以如果这是一个或者这是一个
Dialogue: 0,0:35:46.60,0:35:49.10,*Default,NTP,0000,0000,0000,,然后我在这里得到一个 1，否则我得到一个零
Dialogue: 0,0:35:49.10,0:35:50.13,*Default,NTP,0000,0000,0000,,所以这就是一点
Dialogue: 0,0:35:50.13,0:35:51.93,*Default,NTP,0000,0000,0000,,与我们之前所做的平等相比
Dialogue: 0,0:35:52.33,0:35:53.17,*Default,NTP,0000,0000,0000,,让我
Dialogue: 0,0:35:54.20,0:35:55.00,*Default,NTP,0000,0000,0000,,让我
Dialogue: 0,0:35:55.60,0:35:57.60,*Default,NTP,0000,0000,0000,,用一点点抽象来画这个
Dialogue: 0,0:35:57.60,0:35:58.13,*Default,NTP,0000,0000,0000,,因为这很多
Dialogue: 0,0:35:58.13,0:35:59.93,*Default,NTP,0000,0000,0000,,我不想一遍又一遍地画这个
Dialogue: 0,0:35:59.93,0:36:01.80,*Default,NTP,0000,0000,0000,,再次，所以我将代表一个大
Dialogue: 0,0:36:01.80,0:36:03.10,*Default,NTP,0000,0000,0000,,比较是否相等
Dialogue: 0,0:36:03.13,0:36:05.60,*Default,NTP,0000,0000,0000,,这里有一个小盒子，里面有一个 ce
Dialogue: 0,0:36:05.73,0:36:07.50,*Default,NTP,0000,0000,0000,,一场平等的大比较
Dialogue: 0,0:36:07.50,0:36:08.70,*Default,NTP,0000,0000,0000,,并做了
Dialogue: 0,0:36:08.77,0:36:10.50,*Default,NTP,0000,0000,0000,,现在有两个层次的抽象
Dialogue: 0,0:36:10.50,0:36:12.20,*Default,NTP,0000,0000,0000,,因为这里有两个晶体管
Dialogue: 0,0:36:12.20,0:36:13.87,*Default,NTP,0000,0000,0000,,这里有两个晶体管
Dialogue: 0,0:36:14.50,0:36:16.10,*Default,NTP,0000,0000,0000,,但我不会每次都画那个
Dialogue: 0,0:36:16.10,0:36:18.30,*Default,NTP,0000,0000,0000,,我只是画这个小抽象
Dialogue: 0,0:36:18.30,0:36:20.80,*Default,NTP,0000,0000,0000,,晶体管的门是什么样子
Dialogue: 0,0:36:20.90,0:36:22.97,*Default,NTP,0000,0000,0000,,现在我可以画另一个抽象了
Dialogue: 0,0:36:23.07,0:36:24.77,*Default,NTP,0000,0000,0000,,对于整个电路
Dialogue: 0,0:36:24.77,0:36:25.80,*Default,NTP,0000,0000,0000,,下面是这个
Dialogue: 0,0:36:25.80,0:36:27.60,*Default,NTP,0000,0000,0000,,下面是一堆晶体管
Dialogue: 0,0:36:27.60,0:36:30.17,*Default,NTP,0000,0000,0000,,再次强调抽象的力量
Dialogue: 0,0:36:31.50,0:36:32.53,*Default,NTP,0000,0000,0000,,现在让我们想想
Dialogue: 0,0:36:32.53,0:36:33.50,*Default,NTP,0000,0000,0000,,我们如何结合
Dialogue: 0,0:36:33.50,0:36:35.70,*Default,NTP,0000,0000,0000,,那些小小的一点比较是否相等
Dialogue: 0,0:36:35.73,0:36:38.57,*Default,NTP,0000,0000,0000,,获得四位比较是否相等
Dialogue: 0,0:36:38.73,0:36:41.10,*Default,NTP,0000,0000,0000,,好吧，我想再次比较 a 3 和 b 3
Dialogue: 0,0:36:41.10,0:36:43.27,*Default,NTP,0000,0000,0000,,我想比较 a 两个和 b 两个等等
Dialogue: 0,0:36:43.53,0:36:45.70,*Default,NTP,0000,0000,0000,,当然我仍然想要一个输出
Dialogue: 0,0:36:45.70,0:36:47.17,*Default,NTP,0000,0000,0000,,也就是说，如果这些相等
Dialogue: 0,0:36:47.20,0:36:48.30,*Default,NTP,0000,0000,0000,,这些是相等的
Dialogue: 0,0:36:48.30,0:36:50.27,*Default,NTP,0000,0000,0000,,这些是相等的 这些是相等的
Dialogue: 0,0:36:50.27,0:36:51.57,*Default,NTP,0000,0000,0000,,那么我想说是的
Dialogue: 0,0:36:51.57,0:36:53.40,*Default,NTP,0000,0000,0000,,否则我想说不
Dialogue: 0,0:36:54.00,0:36:56.27,*Default,NTP,0000,0000,0000,,好吧，让我们开始推动吧
Dialogue: 0,0:36:56.30,0:36:58.30,*Default,NTP,0000,0000,0000,,通过比较是否相等
Dialogue: 0,0:36:58.30,0:37:00.27,*Default,NTP,0000,0000,0000,,所以 a 3 和 b 3 经过 a 1
Dialogue: 0,0:37:00.37,0:37:02.33,*Default,NTP,0000,0000,0000,,位比较平等和结果
Dialogue: 0,0:37:02.33,0:37:04.20,*Default,NTP,0000,0000,0000,,什么是一或零
Dialogue: 0,0:37:04.27,0:37:06.40,*Default,NTP,0000,0000,0000,,如果是一个 如果那两个是
Dialogue: 0,0:37:06.50,0:37:09.00,*Default,NTP,0000,0000,0000,,零零或一一，否则为零
Dialogue: 0,0:37:09.80,0:37:12.00,*Default,NTP,0000,0000,0000,,同样我可以推 a 2 和 b 2
Dialogue: 0,0:37:12.00,0:37:13.93,*Default,NTP,0000,0000,0000,,a 1 和 b 1 和 a 0 b 0
Dialogue: 0,0:37:13.93,0:37:15.40,*Default,NTP,0000,0000,0000,,所以每个出价位置
Dialogue: 0,0:37:15.50,0:37:17.97,*Default,NTP,0000,0000,0000,,每个人都通过自己的一大比较来获得平等
Dialogue: 0,0:37:18.20,0:37:19.93,*Default,NTP,0000,0000,0000,,注意这里摘要的力量
Dialogue: 0,0:37:19.93,0:37:21.70,*Default,NTP,0000,0000,0000,,我不必编写整个电路
Dialogue: 0,0:37:21.70,0:37:23.13,*Default,NTP,0000,0000,0000,,我可以写那个小盒子
Dialogue: 0,0:37:23.20,0:37:25.30,*Default,NTP,0000,0000,0000,,我从上一张幻灯片中知道它是什么
Dialogue: 0,0:37:26.10,0:37:28.57,*Default,NTP,0000,0000,0000,,现在我想做的是我这里有四个输出
Dialogue: 0,0:37:28.57,0:37:29.70,*Default,NTP,0000,0000,0000,,我想做什么
Dialogue: 0,0:37:29.70,0:37:31.17,*Default,NTP,0000,0000,0000,,好吧，让我们想想规则是什么
Dialogue: 0,0:37:31.17,0:37:33.10,*Default,NTP,0000,0000,0000,,规则是这应该是一个
Dialogue: 0,0:37:33.10,0:37:35.33,*Default,NTP,0000,0000,0000,,输出到整个电路
Dialogue: 0,0:37:35.77,0:37:37.00,*Default,NTP,0000,0000,0000,,如果这是一个
Dialogue: 0,0:37:37.13,0:37:41.37,*Default,NTP,0000,0000,0000,,这是一，这是一，这是一
Dialogue: 0,0:37:41.60,0:37:42.80,*Default,NTP,0000,0000,0000,,我知道该怎么做
Dialogue: 0,0:37:42.80,0:37:44.13,*Default,NTP,0000,0000,0000,,我现在只需要一个安门
Dialogue: 0,0:37:44.13,0:37:45.53,*Default,NTP,0000,0000,0000,,所以这应该很容易
Dialogue: 0,0:37:45.87,0:37:48.47,*Default,NTP,0000,0000,0000,,顺便注意一下，安门只接受两个输入
Dialogue: 0,0:37:48.47,0:37:50.97,*Default,NTP,0000,0000,0000,,所以我不能把所有四个都塞进安格特
Dialogue: 0,0:37:50.97,0:37:52.60,*Default,NTP,0000,0000,0000,,所以我必须一次做两个
Dialogue: 0,0:37:52.77,0:37:54.80,*Default,NTP,0000,0000,0000,,当然顺序是什么并不重要
Dialogue: 0,0:37:55.57,0:37:57.40,*Default,NTP,0000,0000,0000,,所以这两个人进入了安格特
Dialogue: 0,0:37:57.40,0:37:59.60,*Default,NTP,0000,0000,0000,,现在这会告诉我他们是否是同一个人
Dialogue: 0,0:37:59.87,0:38:01.67,*Default,NTP,0000,0000,0000,,然后我将得到它的输出
Dialogue: 0,0:38:01.67,0:38:02.73,*Default,NTP,0000,0000,0000,,我会把它推到
Dialogue: 0,0:38:02.73,0:38:04.93,*Default,NTP,0000,0000,0000,,并在它所在的地方设置一个门
Dialogue: 0,0:38:05.40,0:38:06.60,*Default,NTP,0000,0000,0000,,这里的一点
Dialogue: 0,0:38:06.73,0:38:08.60,*Default,NTP,0000,0000,0000,,然后我会再做一次
Dialogue: 0,0:38:08.87,0:38:11.13,*Default,NTP,0000,0000,0000,,所以让我们思考一下这里的逻辑
Dialogue: 0,0:38:11.20,0:38:12.27,*Default,NTP,0000,0000,0000,,假设这些是
Dialogue: 0,0:38:12.27,0:38:14.40,*Default,NTP,0000,0000,0000,,为了简单起见，我们假设它们都是 1
Dialogue: 0,0:38:14.47,0:38:17.50,*Default,NTP,0000,0000,0000,,所以从这里出来会出现一个因为他们是平等的
Dialogue: 0,0:38:17.50,0:38:20.20,*Default,NTP,0000,0000,0000,,一个人进入反门，离开这里将会出现一个人
Dialogue: 0,0:38:20.20,0:38:20.93,*Default,NTP,0000,0000,0000,,它将进入这里
Dialogue: 0,0:38:20.93,0:38:22.57,*Default,NTP,0000,0000,0000,,所以这是一个出来的
Dialogue: 0,0:38:22.57,0:38:24.13,*Default,NTP,0000,0000,0000,,前两位相等
Dialogue: 0,0:38:24.57,0:38:26.47,*Default,NTP,0000,0000,0000,,这是一个来到这里的人，因为他们是平等的
Dialogue: 0,0:38:26.47,0:38:27.80,*Default,NTP,0000,0000,0000,,从这里出来一个
Dialogue: 0,0:38:27.97,0:38:31.07,*Default,NTP,0000,0000,0000,,这将是这里的一个，最终也是一个
Dialogue: 0,0:38:31.27,0:38:34.07,*Default,NTP,0000,0000,0000,,并注意其中任何一项是否不相等
Dialogue: 0,0:38:34.07,0:38:35.90,*Default,NTP,0000,0000,0000,,所以假设这些不相等
Dialogue: 0,0:38:36.00,0:38:38.27,*Default,NTP,0000,0000,0000,,好吧，那么这个安门就变成了零
Dialogue: 0,0:38:38.53,0:38:40.30,*Default,NTP,0000,0000,0000,,这意味着从这里出来的是零
Dialogue: 0,0:38:40.30,0:38:41.87,*Default,NTP,0000,0000,0000,,如果这里出来的是零
Dialogue: 0,0:38:41.87,0:38:44.30,*Default,NTP,0000,0000,0000,,一个零从这里出来，一个零从这里出来
Dialogue: 0,0:38:44.30,0:38:47.97,*Default,NTP,0000,0000,0000,,所以一旦这些安门中的任何一个翻转了其中任何一个
Dialogue: 0,0:38:48.57,0:38:50.57,*Default,NTP,0000,0000,0000,,因为其中一位不为零
Dialogue: 0,0:38:50.57,0:38:51.90,*Default,NTP,0000,0000,0000,,我们的输出为零
Dialogue: 0,0:38:51.90,0:38:53.27,*Default,NTP,0000,0000,0000,,和唯一的方法
Dialogue: 0,0:38:53.37,0:38:56.40,*Default,NTP,0000,0000,0000,,如果这些相等，我们在输出上得到一个 1
Dialogue: 0,0:38:56.40,0:38:57.40,*Default,NTP,0000,0000,0000,,这些是相等的
Dialogue: 0,0:38:57.40,0:38:59.27,*Default,NTP,0000,0000,0000,,这些是相等的 这些是相等的
Dialogue: 0,0:38:59.40,0:39:01.90,*Default,NTP,0000,0000,0000,,现在看看这个电路的功率
Dialogue: 0,0:39:01.93,0:39:03.70,*Default,NTP,0000,0000,0000,,我这里有一个非常简单的电路
Dialogue: 0,0:39:03.70,0:39:05.57,*Default,NTP,0000,0000,0000,,这里和这里我有三个和门
Dialogue: 0,0:39:05.57,0:39:09.13,*Default,NTP,0000,0000,0000,,因此不必构建一个真正的 256 个条目的表
Dialogue: 0,0:39:09.33,0:39:11.07,*Default,NTP,0000,0000,0000,,构建所有这些子表达式
Dialogue: 0,0:39:11.07,0:39:11.80,*Default,NTP,0000,0000,0000,,构建表达式
Dialogue: 0,0:39:11.80,0:39:13.97,*Default,NTP,0000,0000,0000,,然后画一个相当复杂的电路
Dialogue: 0,0:39:14.00,0:39:16.20,*Default,NTP,0000,0000,0000,,有八个输入和一个输出
Dialogue: 0,0:39:16.20,0:39:18.00,*Default,NTP,0000,0000,0000,,具有一点抽象的力量
Dialogue: 0,0:39:18.00,0:39:20.33,*Default,NTP,0000,0000,0000,,我能够做一些更好的事情
Dialogue: 0,0:39:20.90,0:39:22.57,*Default,NTP,0000,0000,0000,,所以我用这个例子是因为
Dialogue: 0,0:39:22.67,0:39:24.50,*Default,NTP,0000,0000,0000,,我们要讨论的一件事是
Dialogue: 0,0:39:24.57,0:39:27.07,*Default,NTP,0000,0000,0000,,是的，我们要转动电路上的曲柄
Dialogue: 0,0:39:27.13,0:39:29.00,*Default,NTP,0000,0000,0000,,true 表子表达式
Dialogue: 0,0:39:29.00,0:39:31.07,*Default,NTP,0000,0000,0000,,但有时候确实很不方便
Dialogue: 0,0:39:31.07,0:39:33.40,*Default,NTP,0000,0000,0000,,有时我们必须更聪明一点
Dialogue: 0,0:39:34.07,0:39:35.10,*Default,NTP,0000,0000,0000,,好的，现在就这样
Dialogue: 0,0:39:35.10,0:39:35.70,*Default,NTP,0000,0000,0000,,当我们回来时
Dialogue: 0,0:39:35.70,0:39:37.13,*Default,NTP,0000,0000,0000,,我们要设计更多电路
Dialogue: 0,0:39:37.13,0:39:38.27,*Default,NTP,0000,0000,0000,,我们会保持某种
Dialogue: 0,0:39:38.47,0:39:40.57,*Default,NTP,0000,0000,0000,,看看这些东西是如何建造的
Dialogue: 0,0:39:40.67,0:39:42.87,*Default,NTP,0000,0000,0000,,以及如何构建越来越有意义的计算
Dialogue: 0,0:39:42.87,0:39:44.37,*Default,NTP,0000,0000,0000,,那么几分钟后见
Dialogue: 0,0:39:46.27,0:39:48.73,*Default,NTP,0000,0000,0000,,好吧，我们要建造
Dialogue: 0,0:39:49.17,0:39:50.57,*Default,NTP,0000,0000,0000,,我们要做的加法器
Dialogue: 0,0:39:51.27,0:39:53.97,*Default,NTP,0000,0000,0000,,从这些相对简单的电路到一些东西
Dialogue: 0,0:39:54.10,0:39:56.33,*Default,NTP,0000,0000,0000,,你真的可以想象一台计算机需要做什么
Dialogue: 0,0:39:56.33,0:39:58.17,*Default,NTP,0000,0000,0000,,就是把一堆成员加在一起
Dialogue: 0,0:39:58.60,0:39:59.93,*Default,NTP,0000,0000,0000,,所以我们将分两步完成
Dialogue: 0,0:39:59.93,0:40:01.50,*Default,NTP,0000,0000,0000,,我要构建一个一位加法器
Dialogue: 0,0:40:01.70,0:40:04.27,*Default,NTP,0000,0000,0000,,然后我将向您展示它如何推广到
Dialogue: 0,0:40:04.27,0:40:04.97,*Default,NTP,0000,0000,0000,,四位加法器
Dialogue: 0,0:40:04.97,0:40:06.67,*Default,NTP,0000,0000,0000,,所以以同样的方式我们从一点开始
Dialogue: 0,0:40:06.67,0:40:08.40,*Default,NTP,0000,0000,0000,,与四位比较是否相等
Dialogue: 0,0:40:08.40,0:40:09.40,*Default,NTP,0000,0000,0000,,比较是否相等
Dialogue: 0,0:40:09.47,0:40:12.13,*Default,NTP,0000,0000,0000,,我们会慢慢地建立这个
Dialogue: 0,0:40:12.33,0:40:13.70,*Default,NTP,0000,0000,0000,,所以这是任务
Dialogue: 0,0:40:13.70,0:40:16.30,*Default,NTP,0000,0000,0000,,请为我建立一个电路，增加两个
Dialogue: 0,0:40:16.77,0:40:17.73,*Default,NTP,0000,0000,0000,,一位数
Dialogue: 0,0:40:17.73,0:40:20.40,*Default,NTP,0000,0000,0000,,所以再次记住我们必须用比特来思考
Dialogue: 0,0:40:20.53,0:40:23.60,*Default,NTP,0000,0000,0000,,所以我有两个数字，每个数字都是一位
Dialogue: 0,0:40:23.60,0:40:25.00,*Default,NTP,0000,0000,0000,,所以要么是零要么是一
Dialogue: 0,0:40:25.00,0:40:27.57,*Default,NTP,0000,0000,0000,,我要把它加到零或一上
Dialogue: 0,0:40:28.87,0:40:30.60,*Default,NTP,0000,0000,0000,,好吧，所以我们知道我们必须做什么
Dialogue: 0,0:40:30.73,0:40:32.13,*Default,NTP,0000,0000,0000,,让我们首先开始确保我们
Dialogue: 0,0:40:32.13,0:40:33.70,*Default,NTP,0000,0000,0000,,让我们首先了解我们
Dialogue: 0,0:40:33.80,0:40:35.93,*Default,NTP,0000,0000,0000,,让我们首先确保我们理解
Dialogue: 0,0:40:36.20,0:40:37.77,*Default,NTP,0000,0000,0000,,一位加法是如何工作的
Dialogue: 0,0:40:38.33,0:40:41.17,*Default,NTP,0000,0000,0000,,所以在这里我要添加一点一一点二
Dialogue: 0,0:40:41.17,0:40:42.37,*Default,NTP,0000,0000,0000,,我们称之为 a 和 b
Dialogue: 0,0:40:42.50,0:40:45.70,*Default,NTP,0000,0000,0000,,我们只做加法，所以 0+0 当然是零
Dialogue: 0,0:40:45.70,0:40:49.00,*Default,NTP,0000,0000,0000,,零加一等于一，一加零等于一
Dialogue: 0,0:40:49.00,0:40:52.70,*Default,NTP,0000,0000,0000,,这很简单，好吧，1+1 是什么，让我们看看
Dialogue: 0,0:40:52.90,0:40:56.80,*Default,NTP,0000,0000,0000,,所以这是以十为底的一加一 一加一等于二
Dialogue: 0,0:40:56.97,0:41:02.57,*Default,NTP,0000,0000,0000,,二进制中的二是多少 1 0
Dialogue: 0,0:41:02.87,0:41:05.30,*Default,NTP,0000,0000,0000,,所以现在我们已经遇到了一点问题
Dialogue: 0,0:41:05.47,0:41:08.17,*Default,NTP,0000,0000,0000,,因为这里我只有一个输出权
Dialogue: 0,0:41:08.17,0:41:09.33,*Default,NTP,0000,0000,0000,,没有携带
Dialogue: 0,0:41:09.73,0:41:14.37,*Default,NTP,0000,0000,0000,,但这里我有两个输出我有总和
Dialogue: 0,0:41:14.53,0:41:16.70,*Default,NTP,0000,0000,0000,,这是零，但还有这样的进位
Dialogue: 0,0:41:16.70,0:41:18.13,*Default,NTP,0000,0000,0000,,或者我有两个位出来
Dialogue: 0,0:41:18.13,0:41:20.40,*Default,NTP,0000,0000,0000,,现在是 1 0 所以也许我必须这样做
Dialogue: 0,0:41:20.40,0:41:22.07,*Default,NTP,0000,0000,0000,,想想这个有点不同
Dialogue: 0,0:41:22.07,0:41:22.87,*Default,NTP,0000,0000,0000,,所以
Dialogue: 0,0:41:23.80,0:41:24.60,*Default,NTP,0000,0000,0000,,携带和
Dialogue: 0,0:41:24.67,0:41:26.10,*Default,NTP,0000,0000,0000,,这是一个思考的好地方
Dialogue: 0,0:41:26.10,0:41:28.13,*Default,NTP,0000,0000,0000,,关于接下来会发生什么
Dialogue: 0,0:41:28.37,0:41:31.60,*Default,NTP,0000,0000,0000,,所以最终我们想要构建一个四位
Dialogue: 0,0:41:31.60,0:41:33.77,*Default,NTP,0000,0000,0000,,一个 8 位和一个 16 位加法器
Dialogue: 0,0:41:34.00,0:41:35.10,*Default,NTP,0000,0000,0000,,为了做到这一点，我们
Dialogue: 0,0:41:35.13,0:41:36.97,*Default,NTP,0000,0000,0000,,肯定希望能够携带数字
Dialogue: 0,0:41:36.97,0:41:37.97,*Default,NTP,0000,0000,0000,,因为当我们堆叠时
Dialogue: 0,0:41:37.97,0:41:39.80,*Default,NTP,0000,0000,0000,,两个二进制数彼此重叠
Dialogue: 0,0:41:40.27,0:41:41.37,*Default,NTP,0000,0000,0000,,我们需要携带
Dialogue: 0,0:41:41.80,0:41:44.20,*Default,NTP,0000,0000,0000,,我们求和时左侧的信息
Dialogue: 0,0:41:44.87,0:41:46.37,*Default,NTP,0000,0000,0000,,所以让我们看看
Dialogue: 0,0:41:46.37,0:41:48.27,*Default,NTP,0000,0000,0000,,所以最初我想我会
Dialogue: 0,0:41:48.33,0:41:51.67,*Default,NTP,0000,0000,0000,,两个输入 a 和 b 以及一个输出 c
Dialogue: 0,0:41:51.93,0:41:53.27,*Default,NTP,0000,0000,0000,,但也许我应该重新考虑一下
Dialogue: 0,0:41:53.27,0:41:57.10,*Default,NTP,0000,0000,0000,,也许输入应该是两个数字a和b
Dialogue: 0,0:41:57.37,0:41:59.10,*Default,NTP,0000,0000,0000,,然后可能是进位
Dialogue: 0,0:41:59.10,0:42:00.60,*Default,NTP,0000,0000,0000,,这又是关于
Dialogue: 0,0:42:00.67,0:42:02.07,*Default,NTP,0000,0000,0000,,稍微思考一下
Dialogue: 0,0:42:02.07,0:42:04.57,*Default,NTP,0000,0000,0000,,当我从一位到两位再到一位时
Dialogue: 0,0:42:05.10,0:42:07.13,*Default,NTP,0000,0000,0000,,或者我要把这些堆起来
Dialogue: 0,0:42:07.13,0:42:09.97,*Default,NTP,0000,0000,0000,,想想如何添加正常的算术
Dialogue: 0,0:42:10.07,0:42:11.80,*Default,NTP,0000,0000,0000,,您添加列中的数字
Dialogue: 0,0:42:11.80,0:42:13.70,*Default,NTP,0000,0000,0000,,但你可能会带来一些东西
Dialogue: 0,0:42:13.70,0:42:15.33,*Default,NTP,0000,0000,0000,,来自上一专栏
Dialogue: 0,0:42:15.70,0:42:18.17,*Default,NTP,0000,0000,0000,,所以让我们考虑一下二进制版本
Dialogue: 0,0:42:18.20,0:42:20.37,*Default,NTP,0000,0000,0000,,现在有三个输入
Dialogue: 0,0:42:20.37,0:42:22.17,*Default,NTP,0000,0000,0000,,ab 和可能的进位
Dialogue: 0,0:42:22.17,0:42:24.20,*Default,NTP,0000,0000,0000,,这将让我们再次概括
Dialogue: 0,0:42:24.20,0:42:25.87,*Default,NTP,0000,0000,0000,,电路沿线
Dialogue: 0,0:42:26.07,0:42:27.27,*Default,NTP,0000,0000,0000,,现在好吧
Dialogue: 0,0:42:27.27,0:42:30.97,*Default,NTP,0000,0000,0000,,当然，输出必须不仅仅是这个
Dialogue: 0,0:42:30.97,0:42:34.37,*Default,NTP,0000,0000,0000,,它必须有一个输出
Dialogue: 0,0:42:34.90,0:42:37.87,*Default,NTP,0000,0000,0000,,水平线以下还进行货物
Dialogue: 0,0:42:38.33,0:42:39.40,*Default,NTP,0000,0000,0000,,所以现在即使这样
Dialogue: 0,0:42:39.40,0:42:40.80,*Default,NTP,0000,0000,0000,,一点点的加起来就已经得到了一点点
Dialogue: 0,0:42:40.80,0:42:44.77,*Default,NTP,0000,0000,0000,,很复杂，我们有两个，再加上一个三进位
Dialogue: 0,0:42:44.93,0:42:47.40,*Default,NTP,0000,0000,0000,,然后输出就是总和
Dialogue: 0,0:42:47.40,0:42:49.33,*Default,NTP,0000,0000,0000,,那么这里的结转是什么
Dialogue: 0,0:42:49.33,0:42:51.60,*Default,NTP,0000,0000,0000,,所以我们会有两个输出
Dialogue: 0,0:42:51.87,0:42:52.07,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:42:52.07,0:42:54.73,*Default,NTP,0000,0000,0000,,让我们确保我们看到这里发生了什么
Dialogue: 0,0:42:54.77,0:42:56.33,*Default,NTP,0000,0000,0000,,所以让我们想象一下我想要一些
Dialogue: 0,0:42:56.47,0:42:56.87,*Default,NTP,0000,0000,0000,,我有一个
Dialogue: 0,0:42:56.87,0:42:59.30,*Default,NTP,0000,0000,0000,,三位表示，我想总结它们
Dialogue: 0,0:42:59.30,0:43:01.77,*Default,NTP,0000,0000,0000,,所以我们首先要确保这是有道理的
Dialogue: 0,0:43:01.77,0:43:05.53,*Default,NTP,0000,0000,0000,,a 1 0 1 记住这是 2 到 0 2 到 1
Dialogue: 0,0:43:05.53,0:43:06.47,*Default,NTP,0000,0000,0000,,两个对两个
Dialogue: 0,0:43:06.60,0:43:09.57,*Default,NTP,0000,0000,0000,,所以这是 4+1 即 5
Dialogue: 0,0:43:10.00,0:43:13.37,*Default,NTP,0000,0000,0000,,这是二的零，当然只是一
Dialogue: 0,0:43:13.37,0:43:14.57,*Default,NTP,0000,0000,0000,,那条毒蛇一是六
Dialogue: 0,0:43:14.57,0:43:15.97,*Default,NTP,0000,0000,0000,,所以我要把这两个数字相加
Dialogue: 0,0:43:15.97,0:43:17.30,*Default,NTP,0000,0000,0000,,我最好买六个
Dialogue: 0,0:43:17.47,0:43:18.73,*Default,NTP,0000,0000,0000,,所以让我们开始把它们加起来
Dialogue: 0,0:43:18.90,0:43:23.00,*Default,NTP,0000,0000,0000,,我希望你跟踪这三个
Dialogue: 0,0:43:23.17,0:43:25.13,*Default,NTP,0000,0000,0000,,两个出局还好
Dialogue: 0,0:43:25.87,0:43:27.93,*Default,NTP,0000,0000,0000,,好吧，所以这里我有明确的两位数
Dialogue: 0,0:43:27.93,0:43:30.17,*Default,NTP,0000,0000,0000,,上一列的进位是多少
Dialogue: 0,0:43:30.53,0:43:31.17,*Default,NTP,0000,0000,0000,,空无一人
Dialogue: 0,0:43:31.17,0:43:33.40,*Default,NTP,0000,0000,0000,,它是零 上面隐含着一个零
Dialogue: 0,0:43:33.40,0:43:34.70,*Default,NTP,0000,0000,0000,,因为那里什么也没有
Dialogue: 0,0:43:34.87,0:43:36.67,*Default,NTP,0000,0000,0000,,好吧，一加一二是多少
Dialogue: 0,0:43:36.70,0:43:40.60,*Default,NTP,0000,0000,0000,,2 是多少，它是 1 0 所以它就在那里
Dialogue: 0,0:43:40.97,0:43:44.13,*Default,NTP,0000,0000,0000,,我有两个加上隐式进位零
Dialogue: 0,0:43:44.17,0:43:47.07,*Default,NTP,0000,0000,0000,,我的输出就是我要带到下一栏的内容
Dialogue: 0,0:43:47.07,0:43:49.53,*Default,NTP,0000,0000,0000,,这就是其中之一，我该拿下什么
Dialogue: 0,0:43:49.53,0:43:51.70,*Default,NTP,0000,0000,0000,,那是零 好的 好的
Dialogue: 0,0:43:51.87,0:43:53.57,*Default,NTP,0000,0000,0000,,现在你可以看到我的三个输入
Dialogue: 0,0:43:53.57,0:43:56.33,*Default,NTP,0000,0000,0000,,我将对上一栏中的进位求和
Dialogue: 0,0:43:56.33,0:43:59.80,*Default,NTP,0000,0000,0000,,加0+0是多少 那是一
Dialogue: 0,0:43:59.80,0:44:01.37,*Default,NTP,0000,0000,0000,,所以我把零拉下来
Dialogue: 0,0:44:01.37,0:44:02.73,*Default,NTP,0000,0000,0000,,我隐含地带来了
Dialogue: 0,0:44:02.73,0:44:04.37,*Default,NTP,0000,0000,0000,,从零到下一个
Dialogue: 0,0:44:04.80,0:44:07.97,*Default,NTP,0000,0000,0000,,所以然后我就得到了零加一加零
Dialogue: 0,0:44:07.97,0:44:09.93,*Default,NTP,0000,0000,0000,,当然，这是一个
Dialogue: 0,0:44:09.97,0:44:10.93,*Default,NTP,0000,0000,0000,,当然如果
Dialogue: 0,0:44:11.20,0:44:13.90,*Default,NTP,0000,0000,0000,,我在这里计算的是二比二
Dialogue: 0,0:44:13.90,0:44:15.67,*Default,NTP,0000,0000,0000,,二到一 二到零
Dialogue: 0,0:44:15.67,0:44:18.20,*Default,NTP,0000,0000,0000,,所以是 4+2 也就是 6
Dialogue: 0,0:44:18.27,0:44:20.67,*Default,NTP,0000,0000,0000,,好吧，还有一点补充
Dialogue: 0,0:44:20.67,0:44:23.13,*Default,NTP,0000,0000,0000,,如果我们最终要
Dialogue: 0,0:44:23.30,0:44:27.53,*Default,NTP,0000,0000,0000,,将其概括为 3 4 5 6 7 8 适合版本
Dialogue: 0,0:44:27.73,0:44:29.87,*Default,NTP,0000,0000,0000,,我们现在有三个端点
Dialogue: 0,0:44:30.13,0:44:31.60,*Default,NTP,0000,0000,0000,,你求和的两位数字是多少
Dialogue: 0,0:44:31.60,0:44:33.20,*Default,NTP,0000,0000,0000,,加上可能的携带
Dialogue: 0,0:44:33.40,0:44:34.80,*Default,NTP,0000,0000,0000,,我们有两个出局
Dialogue: 0,0:44:34.80,0:44:37.90,*Default,NTP,0000,0000,0000,,发生了什么以及延续到什么
Dialogue: 0,0:44:38.10,0:44:40.17,*Default,NTP,0000,0000,0000,,下一栏第三和两个出局
Dialogue: 0,0:44:40.17,0:44:41.87,*Default,NTP,0000,0000,0000,,很好，看看需要多少工作
Dialogue: 0,0:44:41.87,0:44:42.93,*Default,NTP,0000,0000,0000,,顺便说一句，我们必须做的就是
Dialogue: 0,0:44:42.93,0:44:44.70,*Default,NTP,0000,0000,0000,,确定输入输出是什么
Dialogue: 0,0:44:45.37,0:44:46.67,*Default,NTP,0000,0000,0000,,但这是困难的部分
Dialogue: 0,0:44:46.67,0:44:48.33,*Default,NTP,0000,0000,0000,,现在我们已经确定了问题所在
Dialogue: 0,0:44:48.33,0:44:49.90,*Default,NTP,0000,0000,0000,,我们已经确定了如何定义它
Dialogue: 0,0:44:49.97,0:44:51.73,*Default,NTP,0000,0000,0000,,现在我们只需开始
Dialogue: 0,0:44:52.07,0:44:54.47,*Default,NTP,0000,0000,0000,,十亿真表子表达式表达式电路
Dialogue: 0,0:44:54.47,0:44:56.60,*Default,NTP,0000,0000,0000,,好的，所以我有三个ins
Dialogue: 0,0:44:56.77,0:44:58.73,*Default,NTP,0000,0000,0000,,我应该被称为“随身携带”
Dialogue: 0,0:44:58.80,0:45:00.17,*Default,NTP,0000,0000,0000,,和执行
Dialogue: 0,0:45:00.47,0:45:03.47,*Default,NTP,0000,0000,0000,,是的，所以这就是进来的然后出去的
Dialogue: 0,0:45:03.47,0:45:04.97,*Default,NTP,0000,0000,0000,,好的，3进2出
Dialogue: 0,0:45:04.97,0:45:05.77,*Default,NTP,0000,0000,0000,,好吧，很好
Dialogue: 0,0:45:05.97,0:45:07.27,*Default,NTP,0000,0000,0000,,让我们构建一个真正的表
Dialogue: 0,0:45:07.33,0:45:09.80,*Default,NTP,0000,0000,0000,,好吧，真实的表有三列
Dialogue: 0,0:45:09.80,0:45:12.20,*Default,NTP,0000,0000,0000,,如果它有三列则有多少行
Dialogue: 0,0:45:12.57,0:45:14.00,*Default,NTP,0000,0000,0000,,二的三次方
Dialogue: 0,0:45:14.17,0:45:15.47,*Default,NTP,0000,0000,0000,,这是八
Dialogue: 0,0:45:15.67,0:45:17.50,*Default,NTP,0000,0000,0000,,你的填充方式很简单
Dialogue: 0,0:45:17.50,0:45:19.27,*Default,NTP,0000,0000,0000,,从零开始以二进制计数
Dialogue: 0,0:45:19.27,0:45:21.50,*Default,NTP,0000,0000,0000,,八减一七
Dialogue: 0,0:45:21.50,0:45:25.33,*Default,NTP,0000,0000,0000,,所以 0 0 0 0 1 0 1 0 等等
Dialogue: 0,0:45:25.80,0:45:27.33,*Default,NTP,0000,0000,0000,,这是我的八个
Dialogue: 0,0:45:27.40,0:45:29.80,*Default,NTP,0000,0000,0000,,与三个输入列关联的行
Dialogue: 0,0:45:29.80,0:45:32.37,*Default,NTP,0000,0000,0000,,那些必须再次列举每一个
Dialogue: 0,0:45:32.40,0:45:35.17,*Default,NTP,0000,0000,0000,,单个可能的输入对
Dialogue: 0,0:45:35.30,0:45:38.17,*Default,NTP,0000,0000,0000,,现在我必须告诉你将会发生什么
Dialogue: 0,0:45:38.30,0:45:39.53,*Default,NTP,0000,0000,0000,,下降的总和
Dialogue: 0,0:45:39.67,0:45:41.67,*Default,NTP,0000,0000,0000,,和过去的进位
Dialogue: 0,0:45:41.87,0:45:43.10,*Default,NTP,0000,0000,0000,,这又是两个数字
Dialogue: 0,0:45:43.10,0:45:45.13,*Default,NTP,0000,0000,0000,,求和加上可能的进位
Dialogue: 0,0:45:45.17,0:45:46.33,*Default,NTP,0000,0000,0000,,这就是进位
Dialogue: 0,0:45:46.57,0:45:48.60,*Default,NTP,0000,0000,0000,,这是总和和执行
Dialogue: 0,0:45:48.60,0:45:51.20,*Default,NTP,0000,0000,0000,,好吧，现在就有节奏了
Dialogue: 0,0:45:51.20,0:45:53.00,*Default,NTP,0000,0000,0000,,我们要告诉计算机答案是什么
Dialogue: 0,0:45:53.00,0:45:54.50,*Default,NTP,0000,0000,0000,,以与我们进行比较相同的方式
Dialogue: 0,0:45:54.50,0:45:56.30,*Default,NTP,0000,0000,0000,,为了平等我要做
Dialogue: 0,0:45:56.47,0:45:57.47,*Default,NTP,0000,0000,0000,,为您添加
Dialogue: 0,0:45:57.47,0:45:57.80,*Default,NTP,0000,0000,0000,,然后是
Dialogue: 0,0:45:57.80,0:46:00.20,*Default,NTP,0000,0000,0000,,电路只是简单地执行这些规则
Dialogue: 0,0:46:00.37,0:46:01.77,*Default,NTP,0000,0000,0000,,好吧，让我们开始讨论吧
Dialogue: 0,0:46:02.70,0:46:05.93,*Default,NTP,0000,0000,0000,,好吧，零加零加零就是零
Dialogue: 0,0:46:05.93,0:46:07.13,*Default,NTP,0000,0000,0000,,并且关怀为零
Dialogue: 0,0:46:07.13,0:46:08.30,*Default,NTP,0000,0000,0000,,好吧，这很简单
Dialogue: 0,0:46:08.37,0:46:11.57,*Default,NTP,0000,0000,0000,,零加零加一等于一
Dialogue: 0,0:46:11.80,0:46:15.53,*Default,NTP,0000,0000,0000,,所以有人来到这里，执行零是什么
Dialogue: 0,0:46:15.53,0:46:17.53,*Default,NTP,0000,0000,0000,,没有什么可携带的，没有溢出
Dialogue: 0,0:46:17.87,0:46:18.93,*Default,NTP,0000,0000,0000,,好吧，这很容易
Dialogue: 0,0:46:18.93,0:46:20.13,*Default,NTP,0000,0000,0000,,让我们看看这个
Dialogue: 0,0:46:20.27,0:46:23.57,*Default,NTP,0000,0000,0000,,那么零加一加零等于多少，它仍然是一
Dialogue: 0,0:46:23.57,0:46:25.07,*Default,NTP,0000,0000,0000,,它实际上和这个一样
Dialogue: 0,0:46:25.07,0:46:27.30,*Default,NTP,0000,0000,0000,,是的，我不在乎这些位的顺序是什么
Dialogue: 0,0:46:27.37,0:46:29.17,*Default,NTP,0000,0000,0000,,所以没有理由在这里做额外的工作
Dialogue: 0,0:46:29.17,0:46:31.20,*Default,NTP,0000,0000,0000,,一旦我知道这里只有一个
Dialogue: 0,0:46:31.20,0:46:32.27,*Default,NTP,0000,0000,0000,,我知道答案是什么
Dialogue: 0,0:46:32.27,0:46:33.77,*Default,NTP,0000,0000,0000,,将会是 1 0
Dialogue: 0,0:46:34.33,0:46:35.57,*Default,NTP,0000,0000,0000,,这样现在就容易了
Dialogue: 0,0:46:35.77,0:46:37.33,*Default,NTP,0000,0000,0000,,啊这个让我们考虑一下
Dialogue: 0,0:46:37.33,0:46:39.93,*Default,NTP,0000,0000,0000,,所以这是零加一加一等于二
Dialogue: 0,0:46:40.20,0:46:41.90,*Default,NTP,0000,0000,0000,,那么二进制中的二是多少
Dialogue: 0,0:46:42.00,0:46:44.77,*Default,NTP,0000,0000,0000,,携带一滴零
Dialogue: 0,0:46:44.87,0:46:46.70,*Default,NTP,0000,0000,0000,,所以这里是零
Dialogue: 0,0:46:46.70,0:46:47.70,*Default,NTP,0000,0000,0000,,这就是结果
Dialogue: 0,0:46:47.70,0:46:51.20,*Default,NTP,0000,0000,0000,,一个是延续到下一栏的内容
Dialogue: 0,0:46:51.50,0:46:52.20,*Default,NTP,0000,0000,0000,,这个很简单
Dialogue: 0,0:46:52.20,0:46:55.40,*Default,NTP,0000,0000,0000,,只有一个 1 所以我们知道答案是什么 1 0
Dialogue: 0,0:46:55.97,0:46:58.73,*Default,NTP,0000,0000,0000,,这个很简单，这里有两个，答案是两个
Dialogue: 0,0:46:58.73,0:47:00.93,*Default,NTP,0000,0000,0000,,和零下来是一样的
Dialogue: 0,0:47:01.00,0:47:03.40,*Default,NTP,0000,0000,0000,,随身携带 这个很方便
Dialogue: 0,0:47:03.77,0:47:04.77,*Default,NTP,0000,0000,0000,,正确的工作聪明
Dialogue: 0,0:47:04.77,0:47:05.73,*Default,NTP,0000,0000,0000,,我们已经完成了工作
Dialogue: 0,0:47:05.73,0:47:07.27,*Default,NTP,0000,0000,0000,,没有理由进行计算
Dialogue: 0,0:47:07.40,0:47:08.90,*Default,NTP,0000,0000,0000,,现在让我们做最后一个
Dialogue: 0,0:47:08.90,0:47:11.57,*Default,NTP,0000,0000,0000,,一加一加一当然是三
Dialogue: 0,0:47:11.77,0:47:14.10,*Default,NTP,0000,0000,0000,,二进制中的三是多少，它是一
Dialogue: 0,0:47:14.20,0:47:16.93,*Default,NTP,0000,0000,0000,,一滴一运一
Dialogue: 0,0:47:16.97,0:47:20.33,*Default,NTP,0000,0000,0000,,所以现在 c 是 d 是 1，e 是 1
Dialogue: 0,0:47:20.80,0:47:23.47,*Default,NTP,0000,0000,0000,,现在真的很好，所有的努力都完成了
Dialogue: 0,0:47:23.47,0:47:25.20,*Default,NTP,0000,0000,0000,,现在我们要开始转动曲柄
Dialogue: 0,0:47:25.20,0:47:25.80,*Default,NTP,0000,0000,0000,,子表达式
Dialogue: 0,0:47:25.80,0:47:27.17,*Default,NTP,0000,0000,0000,,表达式和电路
Dialogue: 0,0:47:27.47,0:47:29.30,*Default,NTP,0000,0000,0000,,所以我有三进二出
Dialogue: 0,0:47:29.30,0:47:32.27,*Default,NTP,0000,0000,0000,,我已经确定了总和的价值
Dialogue: 0,0:47:32.27,0:47:33.60,*Default,NTP,0000,0000,0000,,执行是
Dialogue: 0,0:47:33.67,0:47:35.90,*Default,NTP,0000,0000,0000,,对于所有可能的输入
Dialogue: 0,0:47:35.93,0:47:38.97,*Default,NTP,0000,0000,0000,,现在让我们开始构建子表达式
Dialogue: 0,0:47:38.97,0:47:41.07,*Default,NTP,0000,0000,0000,,好的，记住子表达式是如何工作的
Dialogue: 0,0:47:41.20,0:47:43.80,*Default,NTP,0000,0000,0000,,您分别处理每个输出列
Dialogue: 0,0:47:43.80,0:47:44.77,*Default,NTP,0000,0000,0000,,d 和 e
Dialogue: 0,0:47:44.77,0:47:47.20,*Default,NTP,0000,0000,0000,,输出列彼此完全独立
Dialogue: 0,0:47:47.47,0:47:49.87,*Default,NTP,0000,0000,0000,,我们要找出哪里有一个
Dialogue: 0,0:47:50.50,0:47:52.20,*Default,NTP,0000,0000,0000,,然后这里这里这里这里
Dialogue: 0,0:47:52.20,0:47:54.60,*Default,NTP,0000,0000,0000,,我们将仅使用构建一个子表达式
Dialogue: 0,0:47:54.73,0:47:56.13,*Default,NTP,0000,0000,0000,,并且并且不
Dialogue: 0,0:47:56.53,0:47:58.93,*Default,NTP,0000,0000,0000,,然后我们将组合这些子表达式
Dialogue: 0,0:47:58.93,0:48:01.20,*Default,NTP,0000,0000,0000,,使用或运算符
Dialogue: 0,0:48:01.30,0:48:03.00,*Default,NTP,0000,0000,0000,,然后一旦我们有了最终的表达式
Dialogue: 0,0:48:03.00,0:48:04.90,*Default,NTP,0000,0000,0000,,当然我们要画一些电路
Dialogue: 0,0:48:04.90,0:48:05.97,*Default,NTP,0000,0000,0000,,那么让我们开始吧
Dialogue: 0,0:48:06.50,0:48:07.57,*Default,NTP,0000,0000,0000,,好吧，让我们从 d 开始
Dialogue: 0,0:48:07.97,0:48:11.47,*Default,NTP,0000,0000,0000,,我在这里隔离了 1 2 3 4 个
Dialogue: 0,0:48:11.47,0:48:15.10,*Default,NTP,0000,0000,0000,,那么与此相关的子表达式是什么
Dialogue: 0,0:48:15.10,0:48:16.73,*Default,NTP,0000,0000,0000,,记住你回到输入变量
Dialogue: 0,0:48:16.73,0:48:17.80,*Default,NTP,0000,0000,0000,,如果是的话你会点头
Dialogue: 0,0:48:17.80,0:48:19.33,*Default,NTP,0000,0000,0000,,如果是零你就点头
Dialogue: 0,0:48:19.33,0:48:20.57,*Default,NTP,0000,0000,0000,,如果是零你就点头
Dialogue: 0,0:48:20.57,0:48:22.33,*Default,NTP,0000,0000,0000,,如果是的话你就把它带过来
Dialogue: 0,0:48:22.67,0:48:24.80,*Default,NTP,0000,0000,0000,,所以这个子表达式不应该是
Dialogue: 0,0:48:25.20,0:48:27.87,*Default,NTP,0000,0000,0000,,而不是 b 和 c
Dialogue: 0,0:48:28.40,0:48:30.57,*Default,NTP,0000,0000,0000,,很容易做到，但再次记住你在做什么
Dialogue: 0,0:48:31.00,0:48:35.47,*Default,NTP,0000,0000,0000,,您正在寻找 1 合 1 的表达式
Dialogue: 0,0:48:35.47,0:48:37.33,*Default,NTP,0000,0000,0000,,并且只有一种情况
Dialogue: 0,0:48:37.33,0:48:39.00,*Default,NTP,0000,0000,0000,,当a为0时ba 0
Dialogue: 0,0:48:39.20,0:48:42.47,*Default,NTP,0000,0000,0000,,c 是 1，所以如果我不是这两个，它们就会变成 1
Dialogue: 0,0:48:42.73,0:48:43.53,*Default,NTP,0000,0000,0000,,那是一个
Dialogue: 0,0:48:43.53,0:48:46.27,*Default,NTP,0000,0000,0000,,唯一一次那个小子表情
Dialogue: 0,0:48:46.37,0:48:48.30,*Default,NTP,0000,0000,0000,,我在这里画的是一个
Dialogue: 0,0:48:48.37,0:48:50.37,*Default,NTP,0000,0000,0000,,就在那一小排
Dialogue: 0,0:48:50.37,0:48:52.27,*Default,NTP,0000,0000,0000,,所以不是 a 不是 b 和 c
Dialogue: 0,0:48:52.60,0:48:53.87,*Default,NTP,0000,0000,0000,,好吧，让我们做下一个
Dialogue: 0,0:48:53.87,0:48:54.67,*Default,NTP,0000,0000,0000,,它是什么
Dialogue: 0,0:48:55.57,0:48:57.30,*Default,NTP,0000,0000,0000,,不是 ab
Dialogue: 0,0:48:57.70,0:48:59.47,*Default,NTP,0000,0000,0000,,不好
Dialogue: 0,0:48:59.60,0:49:00.80,*Default,NTP,0000,0000,0000,,就在那里
Dialogue: 0,0:49:00.87,0:49:02.50,*Default,NTP,0000,0000,0000,,然后我们就做最后两个
Dialogue: 0,0:49:02.50,0:49:03.90,*Default,NTP,0000,0000,0000,,所以这是一个
Dialogue: 0,0:49:04.17,0:49:05.80,*Default,NTP,0000,0000,0000,,不是 b 也不是 c
Dialogue: 0,0:49:06.90,0:49:08.13,*Default,NTP,0000,0000,0000,,最后一个很简单
Dialogue: 0,0:49:08.17,0:49:11.27,*Default,NTP,0000,0000,0000,,ab 和 c 好
Dialogue: 0,0:49:11.37,0:49:12.33,*Default,NTP,0000,0000,0000,,所以有我的
Dialogue: 0,0:49:12.50,0:49:13.67,*Default,NTP,0000,0000,0000,,四个子表达式
Dialogue: 0,0:49:13.67,0:49:15.07,*Default,NTP,0000,0000,0000,,对应于任何有一个
Dialogue: 0,0:49:15.07,0:49:16.73,*Default,NTP,0000,0000,0000,,输出通道上有一个
Dialogue: 0,0:49:17.37,0:49:19.40,*Default,NTP,0000,0000,0000,,我不会再经历这些
Dialogue: 0,0:49:19.40,0:49:21.27,*Default,NTP,0000,0000,0000,,我认为我们不会忽视规则是什么
Dialogue: 0,0:49:21.37,0:49:24.17,*Default,NTP,0000,0000,0000,,所以这个例子不是 ab 和 c
Dialogue: 0,0:49:24.17,0:49:25.57,*Default,NTP,0000,0000,0000,,这三个你可以
Dialogue: 0,0:49:26.40,0:49:27.90,*Default,NTP,0000,0000,0000,,从这里衍生出来
Dialogue: 0,0:49:28.13,0:49:30.37,*Default,NTP,0000,0000,0000,,所以我有 d 的四个子表达式
Dialogue: 0,0:49:30.57,0:49:32.87,*Default,NTP,0000,0000,0000,,我有 e 的四个子表达式
Dialogue: 0,0:49:32.90,0:49:35.20,*Default,NTP,0000,0000,0000,,现在我准备把它们放在一起
Dialogue: 0,0:49:35.30,0:49:36.13,*Default,NTP,0000,0000,0000,,一种表达
Dialogue: 0,0:49:36.13,0:49:37.87,*Default,NTP,0000,0000,0000,,然后我们就可以画出电路了
Dialogue: 0,0:49:38.20,0:49:39.67,*Default,NTP,0000,0000,0000,,好吧，那么表达是什么
Dialogue: 0,0:49:40.70,0:49:44.20,*Default,NTP,0000,0000,0000,,该子表达式仅在这一行中存在
Dialogue: 0,0:49:44.20,0:49:46.27,*Default,NTP,0000,0000,0000,,子表达式仅在这一行中存在
Dialogue: 0,0:49:46.27,0:49:47.57,*Default,NTP,0000,0000,0000,,等等等等
Dialogue: 0,0:49:47.77,0:49:52.00,*Default,NTP,0000,0000,0000,,如果这是真的，我希望我的输出 d 为 1
Dialogue: 0,0:49:52.13,0:49:55.47,*Default,NTP,0000,0000,0000,,或者这是真的 或者这是真的 或者这是真的
Dialogue: 0,0:49:55.53,0:49:58.30,*Default,NTP,0000,0000,0000,,所以我简单地将所有子表达式放在一起
Dialogue: 0,0:49:58.70,0:50:01.20,*Default,NTP,0000,0000,0000,,好吧，这句话就在那里，超级简单
Dialogue: 0,0:50:01.70,0:50:02.77,*Default,NTP,0000,0000,0000,,这同样的事情
Dialogue: 0,0:50:02.77,0:50:05.10,*Default,NTP,0000,0000,0000,,这是一个关于这个这个这个这个的
Dialogue: 0,0:50:05.10,0:50:06.53,*Default,NTP,0000,0000,0000,,我想要他们的矿石
Dialogue: 0,0:50:06.53,0:50:09.33,*Default,NTP,0000,0000,0000,,所以我要把它们与三个矿石门结合起来
Dialogue: 0,0:50:09.33,0:50:12.17,*Default,NTP,0000,0000,0000,,所以现在我已经有了 d 的完整表达式
Dialogue: 0,0:50:12.70,0:50:15.87,*Default,NTP,0000,0000,0000,,和 e 现在我准备好构建我的一位添加
Dialogue: 0,0:50:18.00,0:50:21.07,*Default,NTP,0000,0000,0000,,好的，这是一位加法器
Dialogue: 0,0:50:21.67,0:50:22.77,*Default,NTP,0000,0000,0000,,现在 过去
Dialogue: 0,0:50:22.77,0:50:23.80,*Default,NTP,0000,0000,0000,,我们所做的是
Dialogue: 0,0:50:23.80,0:50:26.13,*Default,NTP,0000,0000,0000,,我们从最左边引入了输入
Dialogue: 0,0:50:26.13,0:50:27.33,*Default,NTP,0000,0000,0000,,输出在右边
Dialogue: 0,0:50:27.33,0:50:29.10,*Default,NTP,0000,0000,0000,,我做的事情有点不同
Dialogue: 0,0:50:29.17,0:50:30.07,*Default,NTP,0000,0000,0000,,你可以在这里看到
Dialogue: 0,0:50:30.07,0:50:32.37,*Default,NTP,0000,0000,0000,,输入是自下而上的
Dialogue: 0,0:50:32.67,0:50:34.00,*Default,NTP,0000,0000,0000,,然后输出就在这里
Dialogue: 0,0:50:34.00,0:50:37.90,*Default,NTP,0000,0000,0000,,所以a和b又是两个输入c是进位
Dialogue: 0,0:50:38.20,0:50:42.27,*Default,NTP,0000,0000,0000,,d 是总和，e 是进位
Dialogue: 0,0:50:42.50,0:50:43.97,*Default,NTP,0000,0000,0000,,可以，然后呢
Dialogue: 0,0:50:44.13,0:50:45.93,*Default,NTP,0000,0000,0000,,我这样做的原因
Dialogue: 0,0:50:45.93,0:50:47.77,*Default,NTP,0000,0000,0000,,我要在这里接受这三个输入
Dialogue: 0,0:50:47.77,0:50:50.50,*Default,NTP,0000,0000,0000,,我将带领他们一路到达顶峰
Dialogue: 0,0:50:50.80,0:50:53.87,*Default,NTP,0000,0000,0000,,然后注意这里的三个结门
Dialogue: 0,0:50:54.17,0:50:56.70,*Default,NTP,0000,0000,0000,,我正在剥去结门的信号
Dialogue: 0,0:50:56.70,0:50:58.93,*Default,NTP,0000,0000,0000,,我要把它们一路推高
Dialogue: 0,0:50:59.00,0:51:00.87,*Default,NTP,0000,0000,0000,,然后我就发出信号
Dialogue: 0,0:51:01.27,0:51:04.40,*Default,NTP,0000,0000,0000,,和信号的 not
Dialogue: 0,0:51:04.80,0:51:06.97,*Default,NTP,0000,0000,0000,,进入安加特
Dialogue: 0,0:51:07.10,0:51:09.47,*Default,NTP,0000,0000,0000,,进入这里的安门，然后进入矿石门
Dialogue: 0,0:51:09.47,0:51:11.27,*Default,NTP,0000,0000,0000,,这里的颜色编码当然是
Dialogue: 0,0:51:11.33,0:51:14.67,*Default,NTP,0000,0000,0000,,红色对应d输出
Dialogue: 0,0:51:14.73,0:51:18.27,*Default,NTP,0000,0000,0000,,蓝色对应于 e 输出
Dialogue: 0,0:51:18.47,0:51:19.50,*Default,NTP,0000,0000,0000,,这里的安加特
Dialogue: 0,0:51:19.50,0:51:21.80,*Default,NTP,0000,0000,0000,,当然来自原始的子表达式
Dialogue: 0,0:51:21.90,0:51:22.87,*Default,NTP,0000,0000,0000,,然后是矿石
Dialogue: 0,0:51:22.87,0:51:24.70,*Default,NTP,0000,0000,0000,,这三个矿石总结了它们
Dialogue: 0,0:51:24.70,0:51:26.13,*Default,NTP,0000,0000,0000,,得到最终输出
Dialogue: 0,0:51:26.50,0:51:27.77,*Default,NTP,0000,0000,0000,,并注意这里
Dialogue: 0,0:51:27.77,0:51:29.60,*Default,NTP,0000,0000,0000,,这里有相当多的电路
Dialogue: 0,0:51:29.60,0:51:33.10,*Default,NTP,0000,0000,0000,,即使对于这个非常简单的一个投标加法器
Dialogue: 0,0:51:33.47,0:51:35.37,*Default,NTP,0000,0000,0000,,你需要相当数量的电路
Dialogue: 0,0:51:35.37,0:51:37.37,*Default,NTP,0000,0000,0000,,那么我们接下来要讨论的是什么
Dialogue: 0,0:51:37.53,0:51:40.17,*Default,NTP,0000,0000,0000,,你知道我们能做什么来减少电路吗
Dialogue: 0,0:51:40.17,0:51:41.50,*Default,NTP,0000,0000,0000,,这些事情会发生什么
Dialogue: 0,0:51:41.50,0:51:42.93,*Default,NTP,0000,0000,0000,,开始变得更加复杂
Dialogue: 0,0:51:43.07,0:51:45.13,*Default,NTP,0000,0000,0000,,以及当我尝试构建时会发生什么
Dialogue: 0,0:51:45.13,0:51:46.37,*Default,NTP,0000,0000,0000,,例如四位加法器
Dialogue: 0,0:51:46.37,0:51:47.50,*Default,NTP,0000,0000,0000,,突然间我必须画画
Dialogue: 0,0:51:47.50,0:51:48.73,*Default,NTP,0000,0000,0000,,很多不同的门
Dialogue: 0,0:51:48.73,0:51:50.27,*Default,NTP,0000,0000,0000,,事情很快就会变得复杂
Dialogue: 0,0:51:50.27,0:51:52.80,*Default,NTP,0000,0000,0000,,我们将看看如何思考这些更大的问题
Dialogue: 0,0:51:52.90,0:51:53.97,*Default,NTP,0000,0000,0000,,更复杂的电路
Dialogue: 0,0:51:53.97,0:51:55.97,*Default,NTP,0000,0000,0000,,所以我们稍后会再处理，很快再见
Dialogue: 0,0:51:59.07,0:52:01.20,*Default,NTP,0000,0000,0000,,正如我们现在要建造的承诺
Dialogue: 0,0:52:01.87,0:52:04.73,*Default,NTP,0000,0000,0000,,用于进行四位版本的电路
Dialogue: 0,0:52:04.73,0:52:07.17,*Default,NTP,0000,0000,0000,,所以我们要取两个四位数字
Dialogue: 0,0:52:07.20,0:52:08.40,*Default,NTP,0000,0000,0000,,我们将添加它们
Dialogue: 0,0:52:08.40,0:52:10.13,*Default,NTP,0000,0000,0000,,就像我们在上一讲中所做的那样
Dialogue: 0,0:52:10.13,0:52:11.73,*Default,NTP,0000,0000,0000,,我们只是将它们堆叠在一起
Dialogue: 0,0:52:12.07,0:52:12.60,*Default,NTP,0000,0000,0000,,我们总结
Dialogue: 0,0:52:12.60,0:52:15.17,*Default,NTP,0000,0000,0000,,我们携带我们总和我们携带我们总和我们继续前进
Dialogue: 0,0:52:15.17,0:52:16.57,*Default,NTP,0000,0000,0000,,我们做二进制
Dialogue: 0,0:52:16.80,0:52:18.27,*Default,NTP,0000,0000,0000,,算术或版本
Dialogue: 0,0:52:18.33,0:52:21.37,*Default,NTP,0000,0000,0000,,显然我们将使用一位
Dialogue: 0,0:52:21.70,0:52:24.53,*Default,NTP,0000,0000,0000,,我们刚刚构建的加法器是因为我们知道
Dialogue: 0,0:52:24.67,0:52:26.73,*Default,NTP,0000,0000,0000,,结束位添加只是其中的一系列
Dialogue: 0,0:52:26.73,0:52:27.47,*Default,NTP,0000,0000,0000,,一位加法
Dialogue: 0,0:52:27.47,0:52:30.07,*Default,NTP,0000,0000,0000,,所以我们将以一种聪明的方式构建它
Dialogue: 0,0:52:30.10,0:52:33.10,*Default,NTP,0000,0000,0000,,好吧，请为我构建一个电路，添加
Dialogue: 0,0:52:33.10,0:52:34.10,*Default,NTP,0000,0000,0000,,两个四位数字
Dialogue: 0,0:52:34.10,0:52:35.67,*Default,NTP,0000,0000,0000,,我想再次强调
Dialogue: 0,0:52:35.93,0:52:37.73,*Default,NTP,0000,0000,0000,,注意位
Dialogue: 0,0:52:37.93,0:52:39.80,*Default,NTP,0000,0000,0000,,因为输入不是两个
Dialogue: 0,0:52:40.13,0:52:43.10,*Default,NTP,0000,0000,0000,,现在至少八点了
Dialogue: 0,0:52:43.10,0:52:45.60,*Default,NTP,0000,0000,0000,,但我们知道我们拥有所有这些带有两个权利
Dialogue: 0,0:52:45.60,0:52:46.37,*Default,NTP,0000,0000,0000,,所以我们总是
Dialogue: 0,0:52:46.37,0:52:49.00,*Default,NTP,0000,0000,0000,,必须从位表示的角度来思考
Dialogue: 0,0:52:49.00,0:52:52.00,*Default,NTP,0000,0000,0000,,因为我们所做的一切都是基于位的
Dialogue: 0,0:52:52.47,0:52:54.90,*Default,NTP,0000,0000,0000,,好吧，我们知道如何进行一位加法
Dialogue: 0,0:52:54.90,0:52:56.33,*Default,NTP,0000,0000,0000,,所以请注意我在这里做了一些事情
Dialogue: 0,0:52:56.33,0:52:57.73,*Default,NTP,0000,0000,0000,,与我所做的非常相似
Dialogue: 0,0:52:57.93,0:52:59.90,*Default,NTP,0000,0000,0000,,与一位比较是否相等
Dialogue: 0,0:52:59.90,0:53:00.57,*Default,NTP,0000,0000,0000,,我已经接受了
Dialogue: 0,0:53:00.57,0:53:02.80,*Default,NTP,0000,0000,0000,,我在之前向您展示的完整电路
Dialogue: 0,0:53:02.80,0:53:04.37,*Default,NTP,0000,0000,0000,,我有讲座
Dialogue: 0,0:53:06.77,0:53:08.40,*Default,NTP,0000,0000,0000,,我有携带
Dialogue: 0,0:53:08.47,0:53:10.60,*Default,NTP,0000,0000,0000,,这就是上一篇专栏的内容
Dialogue: 0,0:53:10.70,0:53:11.93,*Default,NTP,0000,0000,0000,,我有两个输出
Dialogue: 0,0:53:11.93,0:53:13.73,*Default,NTP,0000,0000,0000,,下面掉下来的总和
Dialogue: 0,0:53:13.73,0:53:15.80,*Default,NTP,0000,0000,0000,,并执行结转的内容
Dialogue: 0,0:53:15.93,0:53:18.57,*Default,NTP,0000,0000,0000,,好的，所以 3 进 2 出
Dialogue: 0,0:53:18.60,0:53:20.17,*Default,NTP,0000,0000,0000,,现在我只是画了一个小盒子
Dialogue: 0,0:53:20.17,0:53:21.47,*Default,NTP,0000,0000,0000,,我写了一个添加
Dialogue: 0,0:53:21.47,0:53:22.93,*Default,NTP,0000,0000,0000,,这是一位版本
Dialogue: 0,0:53:23.00,0:53:24.57,*Default,NTP,0000,0000,0000,,这就是完整的电路
Dialogue: 0,0:53:24.57,0:53:26.37,*Default,NTP,0000,0000,0000,,这又是抽象的力量
Dialogue: 0,0:53:26.67,0:53:27.97,*Default,NTP,0000,0000,0000,,一旦我知道这里有什么
Dialogue: 0,0:53:27.97,0:53:29.90,*Default,NTP,0000,0000,0000,,就像我知道门里面有什么一样
Dialogue: 0,0:53:29.93,0:53:31.90,*Default,NTP,0000,0000,0000,,我可以简单地用这种抽象的方式画出来
Dialogue: 0,0:53:31.90,0:53:33.27,*Default,NTP,0000,0000,0000,,我不用再担心了
Dialogue: 0,0:53:33.27,0:53:35.30,*Default,NTP,0000,0000,0000,,我构建了它，我已经测试过它，我知道它有效
Dialogue: 0,0:53:35.33,0:53:36.97,*Default,NTP,0000,0000,0000,,现在我可以简单地使用它
Dialogue: 0,0:53:37.27,0:53:38.57,*Default,NTP,0000,0000,0000,,所以现在我们想做的是
Dialogue: 0,0:53:38.57,0:53:40.70,*Default,NTP,0000,0000,0000,,把一堆这些东西连接起来
Dialogue: 0,0:53:40.73,0:53:42.33,*Default,NTP,0000,0000,0000,,为了做禁止版
Dialogue: 0,0:53:42.33,0:53:44.17,*Default,NTP,0000,0000,0000,,当然我们可以做六八
Dialogue: 0,0:53:44.17,0:53:45.17,*Default,NTP,0000,0000,0000,,等等等等
Dialogue: 0,0:53:45.17,0:53:47.13,*Default,NTP,0000,0000,0000,,我们会阻止它除非我想你会明白的
Dialogue: 0,0:53:47.50,0:53:50.27,*Default,NTP,0000,0000,0000,,所以让我们开始思考我们希望它如何运作
Dialogue: 0,0:53:50.27,0:53:53.87,*Default,NTP,0000,0000,0000,,你只需要考虑会发生什么并努力
Dialogue: 0,0:53:53.97,0:53:55.40,*Default,NTP,0000,0000,0000,,我拿这两件事
Dialogue: 0,0:53:56.87,0:53:59.30,*Default,NTP,0000,0000,0000,,然后我要去
Dialogue: 0,0:53:59.40,0:54:01.37,*Default,NTP,0000,0000,0000,,将下一个进位推到下一个进位
Dialogue: 0,0:54:01.37,0:54:03.40,*Default,NTP,0000,0000,0000,,这应该是下一个的输入
Dialogue: 0,0:54:03.40,0:54:03.97,*Default,NTP,0000,0000,0000,,投标加法器
Dialogue: 0,0:54:03.97,0:54:06.53,*Default,NTP,0000,0000,0000,,我们不断地重复这一点
Dialogue: 0,0:54:06.53,0:54:07.90,*Default,NTP,0000,0000,0000,,让我们看看它是如何工作的
Dialogue: 0,0:54:08.00,0:54:09.53,*Default,NTP,0000,0000,0000,,好吧，首先
Dialogue: 0,0:54:09.70,0:54:14.57,*Default,NTP,0000,0000,0000,,这是我的 a 的四位和 b 的四位
Dialogue: 0,0:54:15.53,0:54:17.13,*Default,NTP,0000,0000,0000,,这就是我想总结的
Dialogue: 0,0:54:17.53,0:54:19.17,*Default,NTP,0000,0000,0000,,在那些我们必须带进来的地方
Dialogue: 0,0:54:19.17,0:54:20.70,*Default,NTP,0000,0000,0000,,没关系，我们一会儿就做
Dialogue: 0,0:54:20.80,0:54:23.07,*Default,NTP,0000,0000,0000,,这是我的一点补充
Dialogue: 0,0:54:23.13,0:54:24.37,*Default,NTP,0000,0000,0000,,这是我的两个输出
Dialogue: 0,0:54:24.37,0:54:27.17,*Default,NTP,0000,0000,0000,,有一个进位，然后是
Dialogue: 0,0:54:27.53,0:54:28.53,*Default,NTP,0000,0000,0000,,数字总和
Dialogue: 0,0:54:28.77,0:54:29.60,*Default,NTP,0000,0000,0000,,顺便注意一下
Dialogue: 0,0:54:29.60,0:54:31.27,*Default,NTP,0000,0000,0000,,这就是即将出现的东西
Dialogue: 0,0:54:31.27,0:54:33.80,*Default,NTP,0000,0000,0000,,此携带用于内部目的
Dialogue: 0,0:54:33.80,0:54:35.97,*Default,NTP,0000,0000,0000,,我不会向总结报告这一点
Dialogue: 0,0:54:36.10,0:54:39.47,*Default,NTP,0000,0000,0000,,我只需要它来传播这些位
Dialogue: 0,0:54:39.53,0:54:42.47,*Default,NTP,0000,0000,0000,,所以电路外部的输出在这里
Dialogue: 0,0:54:42.87,0:54:45.53,*Default,NTP,0000,0000,0000,,现在好吧，这里是一个零，这里是b零
Dialogue: 0,0:54:45.53,0:54:48.97,*Default,NTP,0000,0000,0000,,这是两端，但我还需要进位
Dialogue: 0,0:54:49.37,0:54:52.50,*Default,NTP,0000,0000,0000,,那么最右边的进位是多少
Dialogue: 0,0:54:52.53,0:54:53.47,*Default,NTP,0000,0000,0000,,好吧，它是零
Dialogue: 0,0:54:53.47,0:54:56.13,*Default,NTP,0000,0000,0000,,好的，所以我们只需在其中塞入一个零就可以了
Dialogue: 0,0:54:56.13,0:54:57.13,*Default,NTP,0000,0000,0000,,这很容易做到
Dialogue: 0,0:54:57.20,0:54:58.73,*Default,NTP,0000,0000,0000,,所以现在我已经有了三个
Dialogue: 0,0:54:59.00,0:55:00.40,*Default,NTP,0000,0000,0000,,我要买一个随身携带
Dialogue: 0,0:55:00.40,0:55:03.33,*Default,NTP,0000,0000,0000,,再次内部用途将用于
Dialogue: 0,0:55:03.40,0:55:05.10,*Default,NTP,0000,0000,0000,,下一位 a 1 和 b 1
Dialogue: 0,0:55:05.13,0:55:06.87,*Default,NTP,0000,0000,0000,,输出实际上只是 d 零
Dialogue: 0,0:55:06.87,0:55:08.10,*Default,NTP,0000,0000,0000,,这是我唯一关心的事
Dialogue: 0,0:55:08.10,0:55:09.33,*Default,NTP,0000,0000,0000,,那实际上会出来
Dialogue: 0,0:55:09.90,0:55:12.00,*Default,NTP,0000,0000,0000,,好吧，那么我们如何添加下一个
Dialogue: 0,0:55:12.07,0:55:14.50,*Default,NTP,0000,0000,0000,,虽然我想拿 a 1 和 b 1
Dialogue: 0,0:55:14.50,0:55:16.13,*Default,NTP,0000,0000,0000,,携带什么
Dialogue: 0,0:55:16.37,0:55:19.47,*Default,NTP,0000,0000,0000,,这是前一位的进位
Dialogue: 0,0:55:19.60,0:55:22.73,*Default,NTP,0000,0000,0000,,所以这只是进入一位加法器
Dialogue: 0,0:55:22.90,0:55:25.27,*Default,NTP,0000,0000,0000,,很好，所以我又在这里得到了一个
Dialogue: 0,0:55:25.27,0:55:27.13,*Default,NTP,0000,0000,0000,,交叉线开圆
Dialogue: 0,0:55:27.17,0:55:28.97,*Default,NTP,0000,0000,0000,,b 来了，就在这里
Dialogue: 0,0:55:29.00,0:55:31.87,*Default,NTP,0000,0000,0000,,进位来自该加法器上方
Dialogue: 0,0:55:31.97,0:55:33.77,*Default,NTP,0000,0000,0000,,输出是相同的 d
Dialogue: 0,0:55:33.80,0:55:35.30,*Default,NTP,0000,0000,0000,,现在我已经有了下一个进位
Dialogue: 0,0:55:35.37,0:55:36.93,*Default,NTP,0000,0000,0000,,很好，现在我们看到了模式
Dialogue: 0,0:55:37.30,0:55:39.33,*Default,NTP,0000,0000,0000,,好吧，从进位零开始
Dialogue: 0,0:55:39.33,0:55:40.87,*Default,NTP,0000,0000,0000,,我们不断地把它放下
Dialogue: 0,0:55:40.90,0:55:42.70,*Default,NTP,0000,0000,0000,,将其推入加法器
Dialogue: 0,0:55:42.73,0:55:45.90,*Default,NTP,0000,0000,0000,,与我们左边的列相关联
Dialogue: 0,0:55:46.30,0:55:47.10,*Default,NTP,0000,0000,0000,,好吧，很好
Dialogue: 0,0:55:47.10,0:55:48.53,*Default,NTP,0000,0000,0000,,这是一个二
Dialogue: 0,0:55:48.53,0:55:50.80,*Default,NTP,0000,0000,0000,,交叉线 交叉线进入加法器
Dialogue: 0,0:55:50.80,0:55:53.10,*Default,NTP,0000,0000,0000,,这是 b2 进入加法器
Dialogue: 0,0:55:53.13,0:55:54.60,*Default,NTP,0000,0000,0000,,进行 进行 进行
Dialogue: 0,0:55:54.60,0:55:56.40,*Default,NTP,0000,0000,0000,,我的下一笔钱就在那里
Dialogue: 0,0:55:56.53,0:55:58.10,*Default,NTP,0000,0000,0000,,现在我们快到家了
Dialogue: 0,0:55:58.13,0:56:00.97,*Default,NTP,0000,0000,0000,,我们在这里得到了最后一个 我们得到了最后一个
Dialogue: 0,0:56:01.93,0:56:04.30,*Default,NTP,0000,0000,0000,,总而言之，我该如何处理
Dialogue: 0,0:56:04.57,0:56:07.17,*Default,NTP,0000,0000,0000,,好吧我只能有四个输出
Dialogue: 0,0:56:07.17,0:56:08.77,*Default,NTP,0000,0000,0000,,我就是这么设计的
Dialogue: 0,0:56:08.77,0:56:10.40,*Default,NTP,0000,0000,0000,,所以我有四进四出
Dialogue: 0,0:56:10.40,0:56:12.80,*Default,NTP,0000,0000,0000,,所以如果这两件事总结起来
Dialogue: 0,0:56:12.93,0:56:14.70,*Default,NTP,0000,0000,0000,,大于四位
Dialogue: 0,0:56:14.70,0:56:16.33,*Default,NTP,0000,0000,0000,,我将会遇到所谓的溢出
Dialogue: 0,0:56:16.33,0:56:17.73,*Default,NTP,0000,0000,0000,,现在我要忽略它
Dialogue: 0,0:56:17.73,0:56:18.97,*Default,NTP,0000,0000,0000,,还有其他方法可以解决这个问题
Dialogue: 0,0:56:18.97,0:56:20.17,*Default,NTP,0000,0000,0000,,我们不会涉及
Dialogue: 0,0:56:21.13,0:56:22.73,*Default,NTP,0000,0000,0000,,第 5 个输出求和并表示
Dialogue: 0,0:56:22.73,0:56:25.07,*Default,NTP,0000,0000,0000,,我有 4 个 24 位数字
Dialogue: 0,0:56:25.07,0:56:26.37,*Default,NTP,0000,0000,0000,,请允许我
Dialogue: 0,0:56:26.90,0:56:29.17,*Default,NTP,0000,0000,0000,,溢出，但我会忽略它
Dialogue: 0,0:56:29.17,0:56:31.90,*Default,NTP,0000,0000,0000,,这样进位就会变成垃圾并被忽略
Dialogue: 0,0:56:32.93,0:56:35.50,*Default,NTP,0000,0000,0000,,所以再次注意抽象的力量
Dialogue: 0,0:56:35.57,0:56:36.33,*Default,NTP,0000,0000,0000,,注意多少
Dialogue: 0,0:56:36.33,0:56:37.70,*Default,NTP,0000,0000,0000,,这更容易做到
Dialogue: 0,0:56:37.70,0:56:39.80,*Default,NTP,0000,0000,0000,,一旦我们明白我们这里有这个构建块
Dialogue: 0,0:56:39.80,0:56:41.27,*Default,NTP,0000,0000,0000,,它很像函数
Dialogue: 0,0:56:41.40,0:56:42.40,*Default,NTP,0000,0000,0000,,一旦你构建了这些
Dialogue: 0,0:56:42.50,0:56:44.50,*Default,NTP,0000,0000,0000,,具有功能性的简单函数
Dialogue: 0,0:56:44.50,0:56:46.33,*Default,NTP,0000,0000,0000,,你可以一遍又一遍地使用它们来构建
Dialogue: 0,0:56:46.33,0:56:48.40,*Default,NTP,0000,0000,0000,,越来越多、越来越复杂的事情
Dialogue: 0,0:56:48.57,0:56:50.00,*Default,NTP,0000,0000,0000,,好的，我当然可以接受
Dialogue: 0,0:56:50.13,0:56:52.47,*Default,NTP,0000,0000,0000,,现在两个四位加法器并生成一个八
Dialogue: 0,0:56:52.47,0:56:54.50,*Default,NTP,0000,0000,0000,,位加法器然后我可以使用两个八位加法器
Dialogue: 0,0:56:54.50,0:56:56.53,*Default,NTP,0000,0000,0000,,每次做一个16位加法器
Dialogue: 0,0:56:56.60,0:56:59.67,*Default,NTP,0000,0000,0000,,我可以让它分散注意力，让事情不再复杂
Dialogue: 0,0:57:00.60,0:57:01.53,*Default,NTP,0000,0000,0000,,在它下面
Dialogue: 0,0:57:01.93,0:57:02.87,*Default,NTP,0000,0000,0000,,好吧所以
Dialogue: 0,0:57:03.33,0:57:05.50,*Default,NTP,0000,0000,0000,,这又是一位加法器的电路
Dialogue: 0,0:57:05.50,0:57:06.67,*Default,NTP,0000,0000,0000,,如果你还记得上一位医生
Dialogue: 0,0:57:06.67,0:57:07.73,*Default,NTP,0000,0000,0000,,我说有很多
Dialogue: 0,0:57:07.73,0:57:10.30,*Default,NTP,0000,0000,0000,,门可以做一些像一位加法器一样简单的事情
Dialogue: 0,0:57:10.67,0:57:12.20,*Default,NTP,0000,0000,0000,,我只是想简单介绍一下
Dialogue: 0,0:57:12.20,0:57:14.13,*Default,NTP,0000,0000,0000,,后面的间隔计算和你在这里
Dialogue: 0,0:57:14.13,0:57:16.20,*Default,NTP,0000,0000,0000,,想象一下我正在尝试构建一个 32 出价加法器
Dialogue: 0,0:57:16.20,0:57:17.30,*Default,NTP,0000,0000,0000,,就是这样合理
Dialogue: 0,0:57:17.67,0:57:20.07,*Default,NTP,0000,0000,0000,,允许您表示相当大的数字
Dialogue: 0,0:57:20.20,0:57:21.53,*Default,NTP,0000,0000,0000,,那么我需要什么
Dialogue: 0,0:57:21.80,0:57:27.77,*Default,NTP,0000,0000,0000,,分别是96个结门、512个蚂蚁门和192个
Dialogue: 0,0:57:28.17,0:57:29.97,*Default,NTP,0000,0000,0000,,我是怎么做到的
Dialogue: 0,0:57:30.07,0:57:30.40,*Default,NTP,0000,0000,0000,,出色地
Dialogue: 0,0:57:30.40,0:57:33.10,*Default,NTP,0000,0000,0000,,这里的这个东西有六个矿石门
Dialogue: 0,0:57:33.10,0:57:35.53,*Default,NTP,0000,0000,0000,,16并门和三结门
Dialogue: 0,0:57:35.67,0:57:38.57,*Default,NTP,0000,0000,0000,,好的，所以我只是将其分别乘以 32
Dialogue: 0,0:57:38.57,0:57:42.17,*Default,NTP,0000,0000,0000,,我只有 800 个门要做
Dialogue: 0,0:57:42.17,0:57:44.80,*Default,NTP,0000,0000,0000,,仅有加法权
Dialogue: 0,0:57:45.60,0:57:48.33,*Default,NTP,0000,0000,0000,,乘法除法所有这些事情都不能完成
Dialogue: 0,0:57:48.33,0:57:51.10,*Default,NTP,0000,0000,0000,,那么很多就是 800 个门很多
Dialogue: 0,0:57:51.30,0:57:52.10,*Default,NTP,0000,0000,0000,,出色地
Dialogue: 0,0:57:52.33,0:57:56.90,*Default,NTP,0000,0000,0000,,800 个门对应大约 1500 个晶体管
Dialogue: 0,0:57:56.90,0:57:59.30,*Default,NTP,0000,0000,0000,,因为当你构建电路时
Dialogue: 0,0:57:59.50,0:58:00.33,*Default,NTP,0000,0000,0000,,你正在建造大门
Dialogue: 0,0:58:00.33,0:58:02.17,*Default,NTP,0000,0000,0000,,但实际上是在晶体管下面
Dialogue: 0,0:58:02.17,0:58:03.70,*Default,NTP,0000,0000,0000,,现在看看我在做什么
Dialogue: 0,0:58:03.70,0:58:06.27,*Default,NTP,0000,0000,0000,,我正在弹出抽象层次
Dialogue: 0,0:58:06.73,0:58:08.50,*Default,NTP,0000,0000,0000,,我正在努力克服一点点
Dialogue: 0,0:58:08.50,0:58:10.20,*Default,NTP,0000,0000,0000,,我已经有了电路
Dialogue: 0,0:58:10.20,0:58:11.20,*Default,NTP,0000,0000,0000,,对于 32 位加法器
Dialogue: 0,0:58:11.20,0:58:13.13,*Default,NTP,0000,0000,0000,,它由一堆一位加法器组成
Dialogue: 0,0:58:13.13,0:58:14.50,*Default,NTP,0000,0000,0000,,它是由一堆门组成的
Dialogue: 0,0:58:14.50,0:58:16.67,*Default,NTP,0000,0000,0000,,它是由一堆晶体管组成的
Dialogue: 0,0:58:16.67,0:58:19.27,*Default,NTP,0000,0000,0000,,我需要 1500 个晶体管
Dialogue: 0,0:58:19.30,0:58:22.00,*Default,NTP,0000,0000,0000,,进行一项数学运算
Dialogue: 0,0:58:22.00,0:58:23.73,*Default,NTP,0000,0000,0000,,这是 32 位加法
Dialogue: 0,0:58:24.00,0:58:25.87,*Default,NTP,0000,0000,0000,,现在如果我们在 1945 年
Dialogue: 0,0:58:26.30,0:58:30.07,*Default,NTP,0000,0000,0000,,我需要一台冰箱大小的电脑
Dialogue: 0,0:58:30.10,0:58:32.20,*Default,NTP,0000,0000,0000,,进行单一计算
Dialogue: 0,0:58:32.57,0:58:33.57,*Default,NTP,0000,0000,0000,,太疯狂了
Dialogue: 0,0:58:33.57,0:58:35.47,*Default,NTP,0000,0000,0000,,那是因为晶体管不是这些
Dialogue: 0,0:58:35.47,0:58:37.67,*Default,NTP,0000,0000,0000,,我们今天所拥有的微小事物
Dialogue: 0,0:58:37.67,0:58:39.50,*Default,NTP,0000,0000,0000,,它们是巨大的物质实体
Dialogue: 0,0:58:39.77,0:58:41.07,*Default,NTP,0000,0000,0000,,占据了很多空间
Dialogue: 0,0:58:41.07,0:58:42.70,*Default,NTP,0000,0000,0000,,所以其中的魔力
Dialogue: 0,0:58:43.10,0:58:46.93,*Default,NTP,0000,0000,0000,,今天的计算机，如果我有 1500 个晶体管
Dialogue: 0,0:58:47.10,0:58:48.97,*Default,NTP,0000,0000,0000,,我可以把它放在很多东西上
Dialogue: 0,0:58:48.97,0:58:50.57,*Default,NTP,0000,0000,0000,,小得多
Dialogue: 0,0:58:50.67,0:58:52.77,*Default,NTP,0000,0000,0000,,比打印的句点
Dialogue: 0,0:58:53.00,0:58:53.97,*Default,NTP,0000,0000,0000,,一张纸
Dialogue: 0,0:58:54.40,0:58:56.60,*Default,NTP,0000,0000,0000,,这就是现代计算机的魔力
Dialogue: 0,0:58:56.60,0:58:58.27,*Default,NTP,0000,0000,0000,,这些晶体管
Dialogue: 0,0:58:58.97,0:59:02.27,*Default,NTP,0000,0000,0000,,现在可以做得非常小
Dialogue: 0,0:59:02.40,0:59:03.73,*Default,NTP,0000,0000,0000,,这样你就可以打包更多东西
Dialogue: 0,0:59:03.73,0:59:05.33,*Default,NTP,0000,0000,0000,,在电路板上安装更多晶体管
Dialogue: 0,0:59:05.33,0:59:06.67,*Default,NTP,0000,0000,0000,,这意味着您可以装更多的门
Dialogue: 0,0:59:06.67,0:59:08.50,*Default,NTP,0000,0000,0000,,这意味着您可以封装更多电路
Dialogue: 0,0:59:08.53,0:59:10.30,*Default,NTP,0000,0000,0000,,这意味着您现在可以在
Dialogue: 0,0:59:10.87,0:59:12.47,*Default,NTP,0000,0000,0000,,你的夹克口袋
Dialogue: 0,0:59:12.67,0:59:13.47,*Default,NTP,0000,0000,0000,,一个手机
Dialogue: 0,0:59:13.47,0:59:15.97,*Default,NTP,0000,0000,0000,,这相当于一台超级计算机
Dialogue: 0,0:59:16.53,0:59:19.07,*Default,NTP,0000,0000,0000,,60 年前，所以这是
Dialogue: 0,0:59:19.17,0:59:20.60,*Default,NTP,0000,0000,0000,,这有什么奇妙之处
Dialogue: 0,0:59:20.60,0:59:21.87,*Default,NTP,0000,0000,0000,,知道你何时进行这些计算
Dialogue: 0,0:59:21.87,0:59:24.93,*Default,NTP,0000,0000,0000,,你看到现代计算机的复杂性了吗
Dialogue: 0,0:59:25.17,0:59:28.13,*Default,NTP,0000,0000,0000,,我们所做的只是构建版本，甚至不是计算器
Dialogue: 0,0:59:28.20,0:59:30.07,*Default,NTP,0000,0000,0000,,看看我们做了多少工作
Dialogue: 0,0:59:30.10,0:59:33.30,*Default,NTP,0000,0000,0000,,但看看这些微型晶体管的功率
Dialogue: 0,0:59:34.20,0:59:34.90,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:59:34.90,0:59:37.13,*Default,NTP,0000,0000,0000,,所以在接下来的两堂课中，这是最后两堂课
Dialogue: 0,0:59:37.13,0:59:38.87,*Default,NTP,0000,0000,0000,,我们要多谈谈电路
Dialogue: 0,0:59:38.87,0:59:40.27,*Default,NTP,0000,0000,0000,,我们要讨论优化
Dialogue: 0,0:59:40.27,0:59:41.73,*Default,NTP,0000,0000,0000,,你怎么做这些东西
Dialogue: 0,0:59:42.17,0:59:44.33,*Default,NTP,0000,0000,0000,,因为它们可以变得有多大
Dialogue: 0,0:59:44.33,0:59:47.30,*Default,NTP,0000,0000,0000,,如果你做这种非常简单的设计
Dialogue: 0,0:59:47.30,0:59:49.40,*Default,NTP,0000,0000,0000,,你最终可能会得到非常大的电路
Dialogue: 0,0:59:49.40,0:59:51.20,*Default,NTP,0000,0000,0000,,你可以做一些聪明的事情
Dialogue: 0,0:59:51.30,0:59:53.17,*Default,NTP,0000,0000,0000,,我将给你举几个例子
Dialogue: 0,0:59:53.17,0:59:55.47,*Default,NTP,0000,0000,0000,,只是为了完善这里的电路设计
Dialogue: 0,0:59:55.47,0:59:56.70,*Default,NTP,0000,0000,0000,,好的，几分钟后见
Dialogue: 0,0:59:59.33,1:00:00.57,*Default,NTP,0000,0000,0000,,在这口井里
Dialogue: 0,1:00:00.57,1:00:02.30,*Default,NTP,0000,0000,0000,,我要请你建立一个
Dialogue: 0,1:00:02.30,1:00:04.00,*Default,NTP,0000,0000,0000,,电路，确定是否
Dialogue: 0,1:00:04.00,1:00:05.10,*Default,NTP,0000,0000,0000,,八位数字
Dialogue: 0,1:00:05.20,1:00:06.67,*Default,NTP,0000,0000,0000,,完全为零
Dialogue: 0,1:00:06.87,1:00:07.97,*Default,NTP,0000,0000,0000,,那么我为什么要这样做
Dialogue: 0,1:00:07.97,1:00:10.00,*Default,NTP,0000,0000,0000,,为什么有这种专门的东西
Dialogue: 0,1:00:10.40,1:00:13.47,*Default,NTP,0000,0000,0000,,事实证明你经常设计电路
Dialogue: 0,1:00:13.47,1:00:16.27,*Default,NTP,0000,0000,0000,,取决于计算机被要求做什么
Dialogue: 0,1:00:16.70,1:00:18.87,*Default,NTP,0000,0000,0000,,我认为你不会感到惊讶
Dialogue: 0,1:00:18.87,1:00:21.80,*Default,NTP,0000,0000,0000,,通常会检查数字是否为零
Dialogue: 0,1:00:21.80,1:00:23.87,*Default,NTP,0000,0000,0000,,所以想象一下你正在倒计时
Dialogue: 0,1:00:23.93,1:00:25.07,*Default,NTP,0000,0000,0000,,想象一下如果你想知道
Dialogue: 0,1:00:25.07,1:00:27.57,*Default,NTP,0000,0000,0000,,我应该除以这个东西是否为零
Dialogue: 0,1:00:27.77,1:00:28.87,*Default,NTP,0000,0000,0000,,我愿意打赌
Dialogue: 0,1:00:28.87,1:00:29.40,*Default,NTP,0000,0000,0000,,如果你回去
Dialogue: 0,1:00:29.40,1:00:30.70,*Default,NTP,0000,0000,0000,,并查看您编写的所有代码
Dialogue: 0,1:00:30.70,1:00:31.47,*Default,NTP,0000,0000,0000,,在某一点
Dialogue: 0,1:00:31.47,1:00:33.97,*Default,NTP,0000,0000,0000,,你已经检查了某个变量是否等于零
Dialogue: 0,1:00:34.33,1:00:35.37,*Default,NTP,0000,0000,0000,,有时
Dialogue: 0,1:00:35.37,1:00:36.77,*Default,NTP,0000,0000,0000,,拥有它很有用
Dialogue: 0,1:00:36.77,1:00:39.50,*Default,NTP,0000,0000,0000,,高度专业化的电路只做一件事
Dialogue: 0,1:00:39.50,1:00:40.30,*Default,NTP,0000,0000,0000,,非常具体
Dialogue: 0,1:00:40.30,1:00:41.70,*Default,NTP,0000,0000,0000,,这很常见
Dialogue: 0,1:00:41.90,1:00:43.17,*Default,NTP,0000,0000,0000,,因为你可以把它
Dialogue: 0,1:00:43.37,1:00:44.50,*Default,NTP,0000,0000,0000,,在总体上
Dialogue: 0,1:00:44.50,1:00:46.40,*Default,NTP,0000,0000,0000,,电路板位于非常高效的地方
Dialogue: 0,1:00:46.50,1:00:47.07,*Default,NTP,0000,0000,0000,,你可以
Dialogue: 0,1:00:47.07,1:00:49.17,*Default,NTP,0000,0000,0000,,以尽可能高效的方式进行设计
Dialogue: 0,1:00:49.17,1:00:51.47,*Default,NTP,0000,0000,0000,,所以总是有通用电路
Dialogue: 0,1:00:51.67,1:00:52.93,*Default,NTP,0000,0000,0000,,那么让我们来做这个吧
Dialogue: 0,1:00:53.17,1:00:55.53,*Default,NTP,0000,0000,0000,,非常专业的电路，这只是一个很好的练习
Dialogue: 0,1:00:55.53,1:00:56.97,*Default,NTP,0000,0000,0000,,也转动曲柄
Dialogue: 0,1:00:57.07,1:00:59.30,*Default,NTP,0000,0000,0000,,完成我们的四步流程
Dialogue: 0,1:00:59.30,1:01:00.57,*Default,NTP,0000,0000,0000,,所以首先要做的事情
Dialogue: 0,1:01:00.90,1:01:03.30,*Default,NTP,0000,0000,0000,,我们的输入输出总是这样
Dialogue: 0,1:01:03.30,1:01:06.30,*Default,NTP,0000,0000,0000,,我有一个八位二进制数
Dialogue: 0,1:01:06.40,1:01:09.40,*Default,NTP,0000,0000,0000,,这意味着我有八个对应于 0 的输入
Dialogue: 0,1:01:09.67,1:01:11.80,*Default,NTP,0000,0000,0000,,到七位位置
Dialogue: 0,1:01:11.93,1:01:15.77,*Default,NTP,0000,0000,0000,,我想知道这个数字是否等于那个数字
Dialogue: 0,1:01:15.77,1:01:18.00,*Default,NTP,0000,0000,0000,,也就是说所有的数字都是零
Dialogue: 0,1:01:18.00,1:01:19.73,*Default,NTP,0000,0000,0000,,零零a100
Dialogue: 0,1:01:20.13,1:01:21.47,*Default,NTP,0000,0000,0000,,等等等等
Dialogue: 0,1:01:21.47,1:01:23.90,*Default,NTP,0000,0000,0000,,好的，所以我可以写一种方法来做到这一点
Dialogue: 0,1:01:23.90,1:01:25.80,*Default,NTP,0000,0000,0000,,我可以说，好吧，让我们写一点
Dialogue: 0,1:01:25.90,1:01:27.37,*Default,NTP,0000,0000,0000,,比较零
Dialogue: 0,1:01:27.50,1:01:29.73,*Default,NTP,0000,0000,0000,,构建该电路，然后将所有东西连接在一起
Dialogue: 0,1:01:29.73,1:01:31.10,*Default,NTP,0000,0000,0000,,因为看起来也许
Dialogue: 0,1:01:31.17,1:01:32.07,*Default,NTP,0000,0000,0000,,嗯，这就是趋势
Dialogue: 0,1:01:32.07,1:01:33.80,*Default,NTP,0000,0000,0000,,我们从一点点的平等比较开始
Dialogue: 0,1:01:33.80,1:01:35.20,*Default,NTP,0000,0000,0000,,四位比较是否相等
Dialogue: 0,1:01:35.20,1:01:37.57,*Default,NTP,0000,0000,0000,,从一位加法器变为四位加法器
Dialogue: 0,1:01:38.10,1:01:39.70,*Default,NTP,0000,0000,0000,,这似乎有很多输入
Dialogue: 0,1:01:39.70,1:01:41.67,*Default,NTP,0000,0000,0000,,因为如果我有八个输入
Dialogue: 0,1:01:41.70,1:01:44.20,*Default,NTP,0000,0000,0000,,我的表中有多少行
Dialogue: 0,1:01:44.60,1:01:46.73,*Default,NTP,0000,0000,0000,,2 的 8 次方 56
Dialogue: 0,1:01:46.80,1:01:48.97,*Default,NTP,0000,0000,0000,,我不是在写 56 个世纪的真实表 2
Dialogue: 0,1:01:48.97,1:01:50.37,*Default,NTP,0000,0000,0000,,我认为你也不应该
Dialogue: 0,1:01:50.97,1:01:52.10,*Default,NTP,0000,0000,0000,,但在我们之前
Dialogue: 0,1:01:52.30,1:01:54.73,*Default,NTP,0000,0000,0000,,尝试设计一位比较零
Dialogue: 0,1:01:54.73,1:01:55.67,*Default,NTP,0000,0000,0000,,然后概括它
Dialogue: 0,1:01:55.67,1:01:58.10,*Default,NTP,0000,0000,0000,,让我们思考一下这个真值表
Dialogue: 0,1:01:59.30,1:02:01.40,*Default,NTP,0000,0000,0000,,所以我知道我必须枚举每一个
Dialogue: 0,1:02:01.40,1:02:02.37,*Default,NTP,0000,0000,0000,,单个可能的行
Dialogue: 0,1:02:02.37,1:02:03.53,*Default,NTP,0000,0000,0000,,为了所有可能的
Dialogue: 0,1:02:03.87,1:02:06.67,*Default,NTP,0000,0000,0000,,输入，我知道其中有 256 个
Dialogue: 0,1:02:07.07,1:02:08.37,*Default,NTP,0000,0000,0000,,但我还知道什么
Dialogue: 0,1:02:08.37,1:02:10.10,*Default,NTP,0000,0000,0000,,这将在第二步中发生
Dialogue: 0,1:02:10.67,1:02:12.67,*Default,NTP,0000,0000,0000,,我将浏览这个输出列
Dialogue: 0,1:02:12.67,1:02:13.40,*Default,NTP,0000,0000,0000,,我要做什么
Dialogue: 0,1:02:13.40,1:02:16.10,*Default,NTP,0000,0000,0000,,我要找到所有有它的地方
Dialogue: 0,1:02:16.20,1:02:17.97,*Default,NTP,0000,0000,0000,,我要构建一个子表达式
Dialogue: 0,1:02:18.00,1:02:18.97,*Default,NTP,0000,0000,0000,,使用和打结
Dialogue: 0,1:02:18.97,1:02:19.97,*Default,NTP,0000,0000,0000,,然后我要结合
Dialogue: 0,1:02:19.97,1:02:21.77,*Default,NTP,0000,0000,0000,,那些使用 ores 的子表达式
Dialogue: 0,1:02:22.20,1:02:23.53,*Default,NTP,0000,0000,0000,,好吧，但让我们考虑一下
Dialogue: 0,1:02:23.53,1:02:25.53,*Default,NTP,0000,0000,0000,,仔细考虑这里的任何行
Dialogue: 0,1:02:26.10,1:02:28.47,*Default,NTP,0000,0000,0000,,那不是 0 0 0 0
Dialogue: 0,1:02:28.47,1:02:30.93,*Default,NTP,0000,0000,0000,,我的价值是什么
Dialogue: 0,1:02:31.73,1:02:33.33,*Default,NTP,0000,0000,0000,,零它不是零
Dialogue: 0,1:02:33.53,1:02:36.13,*Default,NTP,0000,0000,0000,,有一行且只有一行
Dialogue: 0,1:02:36.40,1:02:41.57,*Default,NTP,0000,0000,0000,,0 0 0 0 0 0 0 0 其中有一个 1
Dialogue: 0,1:02:41.97,1:02:45.00,*Default,NTP,0000,0000,0000,,所以事实上这并不像看起来那么糟糕
Dialogue: 0,1:02:45.00,1:02:47.73,*Default,NTP,0000,0000,0000,,因为每一行都是第一行
Dialogue: 0,1:02:47.73,1:02:48.37,*Default,NTP,0000,0000,0000,,最重要的是
Dialogue: 0,1:02:48.37,1:02:51.10,*Default,NTP,0000,0000,0000,,之后的每一行都会有一个零
Dialogue: 0,1:02:51.33,1:02:53.07,*Default,NTP,0000,0000,0000,,我不必担心那些行
Dialogue: 0,1:02:53.07,1:02:53.47,*Default,NTP,0000,0000,0000,,因为
Dialogue: 0,1:02:53.47,1:02:55.57,*Default,NTP,0000,0000,0000,,我不会为他们构建子表达式
Dialogue: 0,1:02:56.07,1:02:58.53,*Default,NTP,0000,0000,0000,,所以事实上这个真值表非常简单
Dialogue: 0,1:02:58.53,1:03:01.27,*Default,NTP,0000,0000,0000,,只有一行与我们相关
Dialogue: 0,1:03:01.40,1:03:03.80,*Default,NTP,0000,0000,0000,,因为所有其他行都是免费的
Dialogue: 0,1:03:03.90,1:03:06.30,*Default,NTP,0000,0000,0000,,因为有零和眼柱
Dialogue: 0,1:03:06.33,1:03:07.80,*Default,NTP,0000,0000,0000,,好吧，一旦我有了这个
Dialogue: 0,1:03:08.20,1:03:09.80,*Default,NTP,0000,0000,0000,,我有一个很简单的表达方式
Dialogue: 0,1:03:09.80,1:03:10.87,*Default,NTP,0000,0000,0000,,让我们把它写出来
Dialogue: 0,1:03:11.33,1:03:13.93,*Default,NTP,0000,0000,0000,,那么这个的子表达式是什么
Dialogue: 0,1:03:14.13,1:03:14.57,*Default,NTP,0000,0000,0000,,又好了
Dialogue: 0,1:03:14.57,1:03:15.37,*Default,NTP,0000,0000,0000,,我们要结合
Dialogue: 0,1:03:15.37,1:03:17.80,*Default,NTP,0000,0000,0000,,所有输入的组合
Dialogue: 0,1:03:17.80,1:03:19.20,*Default,NTP,0000,0000,0000,,和一个结
Dialogue: 0,1:03:19.90,1:03:22.67,*Default,NTP,0000,0000,0000,,好吧，当我有八个零时，我如何得到一个 1
Dialogue: 0,1:03:22.67,1:03:27.77,*Default,NTP,0000,0000,0000,,不是a，不是b，不是c，也不是h
Dialogue: 0,1:03:28.10,1:03:29.53,*Default,NTP,0000,0000,0000,,我抓住一切的结
Dialogue: 0,1:03:29.70,1:03:32.77,*Default,NTP,0000,0000,0000,,如果它们全为零，那么所有这些都将是一
Dialogue: 0,1:03:32.77,1:03:34.40,*Default,NTP,0000,0000,0000,,如果他们都是一个
Dialogue: 0,1:03:34.53,1:03:34.77,*Default,NTP,0000,0000,0000,,出色地
Dialogue: 0,1:03:34.77,1:03:37.07,*Default,NTP,0000,0000,0000,,那么整个express子表达式将是一个
Dialogue: 0,1:03:37.07,1:03:39.80,*Default,NTP,0000,0000,0000,,如果其中任何一个是一开始的
Dialogue: 0,1:03:40.10,1:03:41.80,*Default,NTP,0000,0000,0000,,当我点头时它会翻转为零
Dialogue: 0,1:03:41.80,1:03:43.07,*Default,NTP,0000,0000,0000,,他们有否决权
Dialogue: 0,1:03:43.07,1:03:45.37,*Default,NTP,0000,0000,0000,,整个事情将评估为零
Dialogue: 0,1:03:45.37,1:03:48.73,*Default,NTP,0000,0000,0000,,下面是 255 行
Dialogue: 0,1:03:48.93,1:03:50.90,*Default,NTP,0000,0000,0000,,好吧，事实证明这很简单
Dialogue: 0,1:03:51.17,1:03:52.13,*Default,NTP,0000,0000,0000,,子表达式
Dialogue: 0,1:03:52.13,1:03:52.80,*Default,NTP,0000,0000,0000,,这也是
Dialogue: 0,1:03:52.80,1:03:54.50,*Default,NTP,0000,0000,0000,,表达式，因为只有其中之一
Dialogue: 0,1:03:54.50,1:03:55.37,*Default,NTP,0000,0000,0000,,只是不是一个
Dialogue: 0,1:03:55.37,1:03:58.60,*Default,NTP,0000,0000,0000,,不且不b且不c直至不h
Dialogue: 0,1:03:59.17,1:04:01.00,*Default,NTP,0000,0000,0000,,好了，现在我们可以画电路了
Dialogue: 0,1:04:01.37,1:04:03.37,*Default,NTP,0000,0000,0000,,我这里有八个输入
Dialogue: 0,1:04:03.37,1:04:05.53,*Default,NTP,0000,0000,0000,,对应于我的每一位
Dialogue: 0,1:04:05.70,1:04:07.60,*Default,NTP,0000,0000,0000,,我要推的一点数字
Dialogue: 0,1:04:08.10,1:04:09.30,*Default,NTP,0000,0000,0000,,他们进入结门
Dialogue: 0,1:04:09.30,1:04:11.20,*Default,NTP,0000,0000,0000,,你看到他们就在这里排队
Dialogue: 0,1:04:11.27,1:04:13.10,*Default,NTP,0000,0000,0000,,现在我必须开始结束它们
Dialogue: 0,1:04:13.10,1:04:16.37,*Default,NTP,0000,0000,0000,,现在要小心，只能接受两个正确的输入
Dialogue: 0,1:04:16.37,1:04:18.37,*Default,NTP,0000,0000,0000,,你不能把所有这些东西都塞进一些大的东西里
Dialogue: 0,1:04:18.37,1:04:19.20,*Default,NTP,0000,0000,0000,,脂肪和门
Dialogue: 0,1:04:19.20,1:04:21.07,*Default,NTP,0000,0000,0000,,所以你得开始把它们配对一点
Dialogue: 0,1:04:21.07,1:04:23.27,*Default,NTP,0000,0000,0000,,你可以用任何不同的方式做到这一点
Dialogue: 0,1:04:23.27,1:04:25.53,*Default,NTP,0000,0000,0000,,你可以将这两个这两个这两个这两个配对
Dialogue: 0,1:04:25.53,1:04:26.57,*Default,NTP,0000,0000,0000,,然后将它们组合起来
Dialogue: 0,1:04:26.90,1:04:28.53,*Default,NTP,0000,0000,0000,,没关系，因为只要
Dialogue: 0,1:04:28.70,1:04:30.67,*Default,NTP,0000,0000,0000,,他们都进入同一个大门
Dialogue: 0,1:04:30.67,1:04:31.00,*Default,NTP,0000,0000,0000,,最终
Dialogue: 0,1:04:31.00,1:04:33.00,*Default,NTP,0000,0000,0000,,他们做的顺序并不重要
Dialogue: 0,1:04:33.57,1:04:35.87,*Default,NTP,0000,0000,0000,,所以让我一次将它们配对两个
Dialogue: 0,1:04:35.93,1:04:38.70,*Default,NTP,0000,0000,0000,,所以a和b穿过他们的结他们进入了终点
Dialogue: 0,1:04:38.70,1:04:41.57,*Default,NTP,0000,0000,0000,,所以现在我已经配对了一切
Dialogue: 0,1:04:41.73,1:04:42.90,*Default,NTP,0000,0000,0000,,现在我要做同样的事情
Dialogue: 0,1:04:42.90,1:04:45.60,*Default,NTP,0000,0000,0000,,我要配对，配对，
Dialogue: 0,1:04:46.17,1:04:46.50,*Default,NTP,0000,0000,0000,,进而
Dialogue: 0,1:04:46.50,1:04:49.13,*Default,NTP,0000,0000,0000,,当然我最后还需要一个
Dialogue: 0,1:04:49.13,1:04:50.17,*Default,NTP,0000,0000,0000,,然后我就完成了
Dialogue: 0,1:04:50.57,1:04:51.50,*Default,NTP,0000,0000,0000,,并注意
Dialogue: 0,1:04:51.53,1:04:54.27,*Default,NTP,0000,0000,0000,,坚持下去，确保这个逻辑适合你
Dialogue: 0,1:04:54.53,1:04:57.70,*Default,NTP,0000,0000,0000,,假设除了这个之外它们都为零
Dialogue: 0,1:04:57.73,1:04:59.40,*Default,NTP,0000,0000,0000,,好的，所以 g 是 1
Dialogue: 0,1:04:59.40,1:05:01.17,*Default,NTP,0000,0000,0000,,让我们看一下电路
Dialogue: 0,1:05:01.40,1:05:02.40,*Default,NTP,0000,0000,0000,,那是一个过来的
Dialogue: 0,1:05:02.40,1:05:03.53,*Default,NTP,0000,0000,0000,,它得到点头
Dialogue: 0,1:05:03.77,1:05:04.87,*Default,NTP,0000,0000,0000,,它得到点头
Dialogue: 0,1:05:04.90,1:05:08.17,*Default,NTP,0000,0000,0000,,所以现在是零所以这个角度为零
Dialogue: 0,1:05:08.17,1:05:08.97,*Default,NTP,0000,0000,0000,,结果是什么
Dialogue: 0,1:05:08.97,1:05:11.10,*Default,NTP,0000,0000,0000,,如果这是零，我什至不在乎 h 是什么
Dialogue: 0,1:05:11.10,1:05:12.20,*Default,NTP,0000,0000,0000,,零出来了
Dialogue: 0,1:05:12.40,1:05:13.87,*Default,NTP,0000,0000,0000,,好吧，零出来了
Dialogue: 0,1:05:15.53,1:05:16.70,*Default,NTP,0000,0000,0000,,一切都是零
Dialogue: 0,1:05:16.93,1:05:19.93,*Default,NTP,0000,0000,0000,,注意其中任何一个如何翻转为一个
Dialogue: 0,1:05:20.10,1:05:22.53,*Default,NTP,0000,0000,0000,,它通过整个电路传播
Dialogue: 0,1:05:22.53,1:05:23.67,*Default,NTP,0000,0000,0000,,我得到了零
Dialogue: 0,1:05:23.67,1:05:25.77,*Default,NTP,0000,0000,0000,,这是我在那里得到一个的唯一方法
Dialogue: 0,1:05:25.90,1:05:27.57,*Default,NTP,0000,0000,0000,,如果这些都为零
Dialogue: 0,1:05:27.60,1:05:29.10,*Default,NTP,0000,0000,0000,,他们都翻转到一个
Dialogue: 0,1:05:29.10,1:05:32.77,*Default,NTP,0000,0000,0000,,然后我只通过一系列传播
Dialogue: 0,1:05:33.77,1:05:35.97,*Default,NTP,0000,0000,0000,,好吧，这么简单的小技巧就是这样
Dialogue: 0,1:05:35.97,1:05:37.93,*Default,NTP,0000,0000,0000,,因为子表达式
Dialogue: 0,1:05:38.07,1:05:40.57,*Default,NTP,0000,0000,0000,,我们只关心输出列中的那个
Dialogue: 0,1:05:40.57,1:05:43.07,*Default,NTP,0000,0000,0000,,如果你有一套非常好的
Dialogue: 0,1:05:43.07,1:05:45.17,*Default,NTP,0000,0000,0000,,事实上你不必枚举
Dialogue: 0,1:05:45.17,1:05:46.47,*Default,NTP,0000,0000,0000,,整个真值表
Dialogue: 0,1:05:46.47,1:05:48.90,*Default,NTP,0000,0000,0000,,这些零最终会被踢掉
Dialogue: 0,1:05:49.07,1:05:50.30,*Default,NTP,0000,0000,0000,,很高兴有他们在那里
Dialogue: 0,1:05:50.30,1:05:51.77,*Default,NTP,0000,0000,0000,,当你有少量输入时
Dialogue: 0,1:05:51.77,1:05:53.10,*Default,NTP,0000,0000,0000,,只是为了让你能看到一切
Dialogue: 0,1:05:53.33,1:05:55.13,*Default,NTP,0000,0000,0000,,但随着你的投入越来越大
Dialogue: 0,1:05:55.13,1:05:58.10,*Default,NTP,0000,0000,0000,,您可以在如何构建这些方面具有相当的战略性
Dialogue: 0,1:05:58.33,1:06:00.97,*Default,NTP,0000,0000,0000,,真值表很好，所以这是一个简单的步骤
Dialogue: 0,1:06:01.30,1:06:01.93,*Default,NTP,0000,0000,0000,,在最后这样的
Dialogue: 0,1:06:01.93,1:06:03.87,*Default,NTP,0000,0000,0000,,我要谈谈卡诺夫地图
Dialogue: 0,1:06:03.87,1:06:06.50,*Default,NTP,0000,0000,0000,,现在这些设计略有不同
Dialogue: 0,1:06:06.67,1:06:10.17,*Default,NTP,0000,0000,0000,,这使我们能够尝试减少门的数量
Dialogue: 0,1:06:10.17,1:06:11.87,*Default,NTP,0000,0000,0000,,为什么我要减少门的数量
Dialogue: 0,1:06:11.87,1:06:14.07,*Default,NTP,0000,0000,0000,,因为这减少了晶体管的数量
Dialogue: 0,1:06:14.07,1:06:16.13,*Default,NTP,0000,0000,0000,,这意味着我可以携带越来越多的能量
Dialogue: 0,1:06:16.30,1:06:18.13,*Default,NTP,0000,0000,0000,,所以有很多不同的优化
Dialogue: 0,1:06:18.13,1:06:19.13,*Default,NTP,0000,0000,0000,,我们可以谈谈
Dialogue: 0,1:06:19.60,1:06:20.47,*Default,NTP,0000,0000,0000,,几个月的事
Dialogue: 0,1:06:20.47,1:06:22.37,*Default,NTP,0000,0000,0000,,我将向您展示一个非常简单的想法
Dialogue: 0,1:06:22.53,1:06:23.70,*Default,NTP,0000,0000,0000,,给你一些直觉
Dialogue: 0,1:06:23.70,1:06:24.80,*Default,NTP,0000,0000,0000,,这个电路的一些部分是如何
Dialogue: 0,1:06:24.80,1:06:26.07,*Default,NTP,0000,0000,0000,,优化工作
Dialogue: 0,1:06:26.07,1:06:27.67,*Default,NTP,0000,0000,0000,,好的，我们会在几分钟内取走它
Dialogue: 0,1:06:29.97,1:06:31.13,*Default,NTP,0000,0000,0000,,好吧，最后一步
Dialogue: 0,1:06:31.13,1:06:32.60,*Default,NTP,0000,0000,0000,,你会像我保证的那样谈论
Dialogue: 0,1:06:32.60,1:06:33.50,*Default,NTP,0000,0000,0000,,卡诺夫地图
Dialogue: 0,1:06:33.50,1:06:37.13,*Default,NTP,0000,0000,0000,,这是一种非常简单的优化技术
Dialogue: 0,1:06:37.53,1:06:38.47,*Default,NTP,0000,0000,0000,,你的电路设计
Dialogue: 0,1:06:38.47,1:06:40.67,*Default,NTP,0000,0000,0000,,即通过最小化门的数量
Dialogue: 0,1:06:40.67,1:06:41.97,*Default,NTP,0000,0000,0000,,未达到真正的最小值
Dialogue: 0,1:06:41.97,1:06:44.47,*Default,NTP,0000,0000,0000,,但我应该说减少了门的数量
Dialogue: 0,1:06:44.60,1:06:45.80,*Default,NTP,0000,0000,0000,,你要去
Dialogue: 0,1:06:45.80,1:06:48.70,*Default,NTP,0000,0000,0000,,必须使用来实现特定的
Dialogue: 0,1:06:49.33,1:06:50.60,*Default,NTP,0000,0000,0000,,真值表和表达式
Dialogue: 0,1:06:50.60,1:06:52.47,*Default,NTP,0000,0000,0000,,所以让我们想象一下这非常简单
Dialogue: 0,1:06:52.47,1:06:53.77,*Default,NTP,0000,0000,0000,,这里的输出是什么并不重要
Dialogue: 0,1:06:53.77,1:06:56.13,*Default,NTP,0000,0000,0000,,但想象一下我有四个
Dialogue: 0,1:06:56.20,1:06:59.40,*Default,NTP,0000,0000,0000,,那么我有多少行 4 in 2 to 4
Dialogue: 0,1:06:59.40,1:07:03.30,*Default,NTP,0000,0000,0000,,这是 16，我有一个输出，这里是 e
Dialogue: 0,1:07:03.30,1:07:05.57,*Default,NTP,0000,0000,0000,,我只是将其颜色编码略有不同
Dialogue: 0,1:07:05.70,1:07:08.73,*Default,NTP,0000,0000,0000,,好的，这样我们就可以做到目前为止我们一直在做的事情了
Dialogue: 0,1:07:08.77,1:07:11.53,*Default,NTP,0000,0000,0000,,我们可以识别这里的所有内容
Dialogue: 0,1:07:11.53,1:07:13.97,*Default,NTP,0000,0000,0000,,那里有一个那里有一个等等等等
Dialogue: 0,1:07:14.37,1:07:16.70,*Default,NTP,0000,0000,0000,,使用以下命令从这四个输入构建子表达式
Dialogue: 0,1:07:16.70,1:07:19.77,*Default,NTP,0000,0000,0000,,和一个结将它们结合起来或绘制电路
Dialogue: 0,1:07:19.77,1:07:20.97,*Default,NTP,0000,0000,0000,,但你可以看到这将会得到
Dialogue: 0,1:07:20.97,1:07:22.27,*Default,NTP,0000,0000,0000,,是一个相当大的电路
Dialogue: 0,1:07:22.27,1:07:23.17,*Default,NTP,0000,0000,0000,,但让我们继续吧
Dialogue: 0,1:07:23.33,1:07:25.10,*Default,NTP,0000,0000,0000,,把它作为一个很好的提醒
Dialogue: 0,1:07:25.10,1:07:26.07,*Default,NTP,0000,0000,0000,,然后我们会看到
Dialogue: 0,1:07:26.17,1:07:27.77,*Default,NTP,0000,0000,0000,,我们怎样才能做得更好一点
Dialogue: 0,1:07:28.00,1:07:29.57,*Default,NTP,0000,0000,0000,,好吧，那我们要做什么
Dialogue: 0,1:07:29.57,1:07:31.27,*Default,NTP,0000,0000,0000,,我们将遍历输出并
Dialogue: 0,1:07:31.27,1:07:32.37,*Default,NTP,0000,0000,0000,,隔离那里的人
Dialogue: 0,1:07:32.37,1:07:33.73,*Default,NTP,0000,0000,0000,,那里那里那里那里那里
Dialogue: 0,1:07:33.90,1:07:35.80,*Default,NTP,0000,0000,0000,,好的，我们将构建子表达式
Dialogue: 0,1:07:35.80,1:07:37.20,*Default,NTP,0000,0000,0000,,所以让我们构建第一个
Dialogue: 0,1:07:37.53,1:07:38.67,*Default,NTP,0000,0000,0000,,你回到输入
Dialogue: 0,1:07:38.67,1:07:41.53,*Default,NTP,0000,0000,0000,,不是 ABC 不是 d
Dialogue: 0,1:07:41.67,1:07:42.87,*Default,NTP,0000,0000,0000,,就在那里
Dialogue: 0,1:07:43.07,1:07:44.13,*Default,NTP,0000,0000,0000,,让我们进入下一个
Dialogue: 0,1:07:44.13,1:07:45.60,*Default,NTP,0000,0000,0000,,这个子表达式是什么
Dialogue: 0,1:07:46.07,1:07:49.17,*Default,NTP,0000,0000,0000,,a 不是 b 不是 c 不是 d
Dialogue: 0,1:07:49.50,1:07:51.67,*Default,NTP,0000,0000,0000,,很好，其中之一就在那里
Dialogue: 0,1:07:51.67,1:07:52.87,*Default,NTP,0000,0000,0000,,让我们再做一些
Dialogue: 0,1:07:52.87,1:07:55.30,*Default,NTP,0000,0000,0000,,就像练习一样，我有什么
Dialogue: 0,1:07:55.57,1:07:58.10,*Default,NTP,0000,0000,0000,,不是 b 不是 CD
Dialogue: 0,1:07:58.60,1:08:00.33,*Default,NTP,0000,0000,0000,,好吧，这很简单
Dialogue: 0,1:08:00.33,1:08:01.53,*Default,NTP,0000,0000,0000,,让我们再做一个
Dialogue: 0,1:08:01.67,1:08:03.80,*Default,NTP,0000,0000,0000,,a 不是 bc
Dialogue: 0,1:08:04.17,1:08:04.97,*Default,NTP,0000,0000,0000,,不d
Dialogue: 0,1:08:05.73,1:08:07.67,*Default,NTP,0000,0000,0000,,现在我想我们可以
Dialogue: 0,1:08:07.67,1:08:08.70,*Default,NTP,0000,0000,0000,,继续做剩下的事
Dialogue: 0,1:08:08.70,1:08:11.30,*Default,NTP,0000,0000,0000,,好吧，所以只要说服自己这些都映射回来
Dialogue: 0,1:08:11.30,1:08:13.30,*Default,NTP,0000,0000,0000,,到那些子表达式
Dialogue: 0,1:08:13.47,1:08:13.93,*Default,NTP,0000,0000,0000,,好吧
Dialogue: 0,1:08:13.93,1:08:15.53,*Default,NTP,0000,0000,0000,,所以我们得到了很多点头
Dialogue: 0,1:08:15.53,1:08:16.77,*Default,NTP,0000,0000,0000,,我们有一大堆安玛瑙
Dialogue: 0,1:08:16.77,1:08:19.60,*Default,NTP,0000,0000,0000,,当然我可以将它们与 Orgate 结合起来
Dialogue: 0,1:08:19.70,1:08:21.80,*Default,NTP,0000,0000,0000,,我们可以继续完成这个过程
Dialogue: 0,1:08:21.80,1:08:22.70,*Default,NTP,0000,0000,0000,,好的，你可以看到
Dialogue: 0,1:08:22.70,1:08:23.93,*Default,NTP,0000,0000,0000,,有相当数量的电路
Dialogue: 0,1:08:23.93,1:08:24.73,*Default,NTP,0000,0000,0000,,在所有那些
Dialogue: 0,1:08:24.73,1:08:26.33,*Default,NTP,0000,0000,0000,,和门所有那些小点
Dialogue: 0,1:08:26.57,1:08:27.47,*Default,NTP,0000,0000,0000,,对应一个门
Dialogue: 0,1:08:27.47,1:08:29.27,*Default,NTP,0000,0000,0000,,对应两个晶体管
Dialogue: 0,1:08:29.27,1:08:31.50,*Default,NTP,0000,0000,0000,,我将用矿石来组合所有这些
Dialogue: 0,1:08:31.50,1:08:33.60,*Default,NTP,0000,0000,0000,,那些对应于两个晶体管
Dialogue: 0,1:08:34.00,1:08:35.27,*Default,NTP,0000,0000,0000,,正如我之前所说
Dialogue: 0,1:08:35.27,1:08:37.47,*Default,NTP,0000,0000,0000,,如果我们能尝试减少就好了
Dialogue: 0,1:08:37.53,1:08:39.17,*Default,NTP,0000,0000,0000,,门的数量，因此
Dialogue: 0,1:08:39.17,1:08:40.47,*Default,NTP,0000,0000,0000,,晶体管，因此
Dialogue: 0,1:08:40.47,1:08:43.07,*Default,NTP,0000,0000,0000,,底层电路上的空间量
Dialogue: 0,1:08:43.40,1:08:44.37,*Default,NTP,0000,0000,0000,,所以我要做的是
Dialogue: 0,1:08:44.50,1:08:46.27,*Default,NTP,0000,0000,0000,,这些卡诺夫地图的工作方式
Dialogue: 0,1:08:46.27,1:08:47.30,*Default,NTP,0000,0000,0000,,就在那里
Dialogue: 0,1:08:47.30,1:08:48.70,*Default,NTP,0000,0000,0000,,卡诺夫 这就是你的拼写方式
Dialogue: 0,1:08:48.90,1:08:51.57,*Default,NTP,0000,0000,0000,,他们重新构想了真值表吗
Dialogue: 0,1:08:51.80,1:08:54.13,*Default,NTP,0000,0000,0000,,以及我们绘制真值表的方式
Dialogue: 0,1:08:54.20,1:08:55.50,*Default,NTP,0000,0000,0000,,是而不是有
Dialogue: 0,1:08:56.13,1:08:59.53,*Default,NTP,0000,0000,0000,,四个输入的每个条目占一行
Dialogue: 0,1:08:59.73,1:09:01.90,*Default,NTP,0000,0000,0000,,我们会让他们占据这个小地方
Dialogue: 0,1:09:01.90,1:09:03.30,*Default,NTP,0000,0000,0000,,四乘四矩阵
Dialogue: 0,1:09:03.50,1:09:04.93,*Default,NTP,0000,0000,0000,,所以注意我所出现的
Dialogue: 0,1:09:04.93,1:09:07.90,*Default,NTP,0000,0000,0000,,上面我有输入对 ab
Dialogue: 0,1:09:08.47,1:09:11.60,*Default,NTP,0000,0000,0000,,侧面有输入对 CD
Dialogue: 0,1:09:12.10,1:09:15.47,*Default,NTP,0000,0000,0000,,所以这个条目对应于a为0且ba为0时
Dialogue: 0,1:09:16.10,1:09:19.53,*Default,NTP,0000,0000,0000,,a 是 0 b 是 1 a 是 1 b 是 1 并且
Dialogue: 0,1:09:20.07,1:09:21.17,*Default,NTP,0000,0000,0000,,a 为 1 b 为 0
Dialogue: 0,1:09:21.33,1:09:22.33,*Default,NTP,0000,0000,0000,,可以，然后呢
Dialogue: 0,1:09:22.33,1:09:25.10,*Default,NTP,0000,0000,0000,,然后这当然对应于 c 中的内容
Dialogue: 0,1:09:25.10,1:09:26.47,*Default,NTP,0000,0000,0000,,d 为 c 为 0
Dialogue: 0,1:09:26.70,1:09:29.57,*Default,NTP,0000,0000,0000,,d 为 0 直至 c 为 1，d 为 0
Dialogue: 0,1:09:30.00,1:09:31.10,*Default,NTP,0000,0000,0000,,顺便注意一下
Dialogue: 0,1:09:31.10,1:09:32.87,*Default,NTP,0000,0000,0000,,不会丢失信息
Dialogue: 0,1:09:32.87,1:09:35.30,*Default,NTP,0000,0000,0000,,这是四乘四，即 16
Dialogue: 0,1:09:35.30,1:09:36.57,*Default,NTP,0000,0000,0000,,这是我有多少行
Dialogue: 0,1:09:36.57,1:09:40.17,*Default,NTP,0000,0000,0000,,所以这里的每个单元格对应一行
Dialogue: 0,1:09:40.30,1:09:42.87,*Default,NTP,0000,0000,0000,,所以这只是一个不同的可视化
Dialogue: 0,1:09:42.93,1:09:45.30,*Default,NTP,0000,0000,0000,,标准真值表
Dialogue: 0,1:09:45.87,1:09:47.00,*Default,NTP,0000,0000,0000,,那么我该怎么办
Dialogue: 0,1:09:47.53,1:09:48.73,*Default,NTP,0000,0000,0000,,好好填充它
Dialogue: 0,1:09:48.90,1:09:50.60,*Default,NTP,0000,0000,0000,,对于这里的任何单元格
Dialogue: 0,1:09:50.77,1:09:52.67,*Default,NTP,0000,0000,0000,,我知道 rowa 对应什么
Dialogue: 0,1:09:52.67,1:09:54.57,*Default,NTP,0000,0000,0000,,例如让我们做细胞
Dialogue: 0,1:09:54.67,1:09:57.07,*Default,NTP,0000,0000,0000,,该单元格为零 ba 0
Dialogue: 0,1:09:57.20,1:10:00.40,*Default,NTP,0000,0000,0000,,ca 0 da 0 就是那一行
Dialogue: 0,1:10:00.87,1:10:05.20,*Default,NTP,0000,0000,0000,,该单元格为 1 0 0 0
Dialogue: 0,1:10:05.27,1:10:07.60,*Default,NTP,0000,0000,0000,,所以一定是这里的这个
Dialogue: 0,1:10:07.80,1:10:11.27,*Default,NTP,0000,0000,0000,,所以这里的每一行都有一个直接翻译
Dialogue: 0,1:10:11.40,1:10:14.17,*Default,NTP,0000,0000,0000,,特别是那些输出被推到这里
Dialogue: 0,1:10:14.17,1:10:16.07,*Default,NTP,0000,0000,0000,,现在显然我需要其中一个不同的
Dialogue: 0,1:10:16.40,1:10:17.73,*Default,NTP,0000,0000,0000,,对于每个输出
Dialogue: 0,1:10:17.73,1:10:19.20,*Default,NTP,0000,0000,0000,,这仅适用于一个输出
Dialogue: 0,1:10:19.73,1:10:19.93,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,1:10:19.93,1:10:21.70,*Default,NTP,0000,0000,0000,,所以让我们继续并开始填充它
Dialogue: 0,1:10:21.80,1:10:23.53,*Default,NTP,0000,0000,0000,,好吧，有 00 00
Dialogue: 0,1:10:23.77,1:10:26.33,*Default,NTP,0000,0000,0000,,我知道输出为零，所以我在其中加了零
Dialogue: 0,1:10:26.33,1:10:29.40,*Default,NTP,0000,0000,0000,,现在它被称为二维牙表
Dialogue: 0,1:10:30.53,1:10:33.93,*Default,NTP,0000,0000,0000,,让我们这样做 1 1 0 0 0
Dialogue: 0,1:10:33.97,1:10:36.40,*Default,NTP,0000,0000,0000,,就是这一行，那里有一个
Dialogue: 0,1:10:36.47,1:10:37.97,*Default,NTP,0000,0000,0000,,所以我放了一个
Dialogue: 0,1:10:38.20,1:10:39.20,*Default,NTP,0000,0000,0000,,让我们再做一些
Dialogue: 0,1:10:39.37,1:10:42.67,*Default,NTP,0000,0000,0000,,所以这对应于 1 1 1 1
Dialogue: 0,1:10:43.00,1:10:44.67,*Default,NTP,0000,0000,0000,,让我们看看它就在那里
Dialogue: 0,1:10:44.77,1:10:45.97,*Default,NTP,0000,0000,0000,,我在这里打了一个零
Dialogue: 0,1:10:45.97,1:10:48.10,*Default,NTP,0000,0000,0000,,顺便注意一下这里的顺序
Dialogue: 0,1:10:49.50,1:10:54.27,*Default,NTP,0000,0000,0000,,我有 0 0 0 1 然后我有一一和一零
Dialogue: 0,1:10:54.27,1:10:55.47,*Default,NTP,0000,0000,0000,,顺序很重要
Dialogue: 0,1:10:55.47,1:10:56.70,*Default,NTP,0000,0000,0000,,你必须按这个顺序做
Dialogue: 0,1:10:56.70,1:10:58.33,*Default,NTP,0000,0000,0000,,我会稍微解释一下
Dialogue: 0,1:10:58.50,1:11:00.60,*Default,NTP,0000,0000,0000,,为什么这个顺序很重要
Dialogue: 0,1:11:00.67,1:11:02.40,*Default,NTP,0000,0000,0000,,但在我这样做之前请注意
Dialogue: 0,1:11:02.57,1:11:03.87,*Default,NTP,0000,0000,0000,,就在这里
Dialogue: 0,1:11:03.87,1:11:06.27,*Default,NTP,0000,0000,0000,,第二个零和第一个零相同
Dialogue: 0,1:11:06.50,1:11:08.33,*Default,NTP,0000,0000,0000,,['one'] 毫秒和第一个相同
Dialogue: 0,1:11:08.47,1:11:09.90,*Default,NTP,0000,0000,0000,,第二个和第一个相同
Dialogue: 0,1:11:09.90,1:11:11.07,*Default,NTP,0000,0000,0000,,这不是意外
Dialogue: 0,1:11:11.07,1:11:12.17,*Default,NTP,0000,0000,0000,,当然这里也是如此
Dialogue: 0,1:11:12.17,1:11:13.77,*Default,NTP,0000,0000,0000,,我们将利用这一点
Dialogue: 0,1:11:13.80,1:11:15.07,*Default,NTP,0000,0000,0000,,一分钟的结构
Dialogue: 0,1:11:16.10,1:11:17.10,*Default,NTP,0000,0000,0000,,好吧，我们再做一个
Dialogue: 0,1:11:17.60,1:11:24.53,*Default,NTP,0000,0000,0000,,0 1 1 0 对应于让我们看看 0 1 0 1
Dialogue: 0,1:11:24.53,1:11:29.07,*Default,NTP,0000,0000,0000,,那 oopsari 0 1 1 0 0 1 1 0 这是一个一
Dialogue: 0,1:11:29.10,1:11:30.73,*Default,NTP,0000,0000,0000,,所以我要在那里放一个
Dialogue: 0,1:11:30.77,1:11:32.93,*Default,NTP,0000,0000,0000,,好的好的所以
Dialogue: 0,1:11:33.50,1:11:35.80,*Default,NTP,0000,0000,0000,,我可以去那里直接映射
Dialogue: 0,1:11:36.00,1:11:37.97,*Default,NTP,0000,0000,0000,,一维齿表对此
Dialogue: 0,1:11:37.97,1:11:39.67,*Default,NTP,0000,0000,0000,,二维齿表
Dialogue: 0,1:11:39.80,1:11:41.07,*Default,NTP,0000,0000,0000,,所有这些信息都在这里
Dialogue: 0,1:11:41.07,1:11:42.30,*Default,NTP,0000,0000,0000,,这正是我想要的
Dialogue: 0,1:11:42.30,1:11:44.10,*Default,NTP,0000,0000,0000,,我希望电路合而为一
Dialogue: 0,1:11:44.17,1:11:46.57,*Default,NTP,0000,0000,0000,,对于这些输入这里这里这里和这里
Dialogue: 0,1:11:46.57,1:11:48.13,*Default,NTP,0000,0000,0000,,其他地方为零
Dialogue: 0,1:11:48.13,1:11:49.93,*Default,NTP,0000,0000,0000,,好的，这对我有什么帮助
Dialogue: 0,1:11:50.10,1:11:52.27,*Default,NTP,0000,0000,0000,,好吧，让我们看一下这里的一些事情
Dialogue: 0,1:11:52.47,1:11:54.97,*Default,NTP,0000,0000,0000,,让我们看看这里的这一串
Dialogue: 0,1:11:54.97,1:11:55.93,*Default,NTP,0000,0000,0000,,好的，所以记住
Dialogue: 0,1:11:56.20,1:11:57.57,*Default,NTP,0000,0000,0000,,再次从概念上讲我想要什么
Dialogue: 0,1:11:57.57,1:12:01.13,*Default,NTP,0000,0000,0000,,我想构建一些计算结果为 1 的表达式
Dialogue: 0,1:12:01.27,1:12:04.13,*Default,NTP,0000,0000,0000,,这里这里和这里
Dialogue: 0,1:12:04.47,1:12:06.57,*Default,NTP,0000,0000,0000,,如果我能做到的话我就回家了
Dialogue: 0,1:12:06.57,1:12:08.93,*Default,NTP,0000,0000,0000,,我已经实现了这个计算
Dialogue: 0,1:12:08.93,1:12:10.67,*Default,NTP,0000,0000,0000,,我在真值表中指定的
Dialogue: 0,1:12:11.57,1:12:13.50,*Default,NTP,0000,0000,0000,,看看这里的这个表达
Dialogue: 0,1:12:14.70,1:12:15.80,*Default,NTP,0000,0000,0000,,好吧，走着瞧
Dialogue: 0,1:12:17.87,1:12:19.77,*Default,NTP,0000,0000,0000,,一个人在这里
Dialogue: 0,1:12:19.90,1:12:23.13,*Default,NTP,0000,0000,0000,,我关心 crds 的价值吗
Dialogue: 0,1:12:24.17,1:12:28.47,*Default,NTP,0000,0000,0000,,否，因为请注意无论 crd 值对是什么
Dialogue: 0,1:12:29.47,1:12:30.53,*Default,NTP,0000,0000,0000,,这东西是一个
Dialogue: 0,1:12:30.97,1:12:35.20,*Default,NTP,0000,0000,0000,,正确，事实上，当 a 在 ba 0 中为 1 时，它就是 1
Dialogue: 0,1:12:35.30,1:12:37.67,*Default,NTP,0000,0000,0000,,无论 c 和 dr 的值是多少
Dialogue: 0,1:12:38.00,1:12:39.07,*Default,NTP,0000,0000,0000,,那很有意思
Dialogue: 0,1:12:39.30,1:12:41.17,*Default,NTP,0000,0000,0000,,好的，那是什么意思
Dialogue: 0,1:12:41.17,1:12:43.80,*Default,NTP,0000,0000,0000,,如果我在这里有这个小表情
Dialogue: 0,1:12:43.80,1:12:45.73,*Default,NTP,0000,0000,0000,,一个不是b
Dialogue: 0,1:12:45.77,1:12:48.33,*Default,NTP,0000,0000,0000,,我怎么得到a而不是b
Dialogue: 0,1:12:48.33,1:12:51.13,*Default,NTP,0000,0000,0000,,所以当 a 为 1 并且 b 为 0 时
Dialogue: 0,1:12:51.17,1:12:52.97,*Default,NTP,0000,0000,0000,,这意味着并且是一
Dialogue: 0,1:12:53.27,1:12:55.30,*Default,NTP,0000,0000,0000,,我想要一个在我的输出上
Dialogue: 0,1:12:55.53,1:12:56.87,*Default,NTP,0000,0000,0000,,我不在乎 c 是什么
Dialogue: 0,1:12:57.13,1:12:58.40,*Default,NTP,0000,0000,0000,,与我完全无关
Dialogue: 0,1:12:58.53,1:13:00.93,*Default,NTP,0000,0000,0000,,是的，请注意我刚刚做的时候
Dialogue: 0,1:13:00.93,1:13:04.17,*Default,NTP,0000,0000,0000,,具有一端和一个结的单个子表达式
Dialogue: 0,1:13:04.20,1:13:07.90,*Default,NTP,0000,0000,0000,,给了我四行真值表
Dialogue: 0,1:13:07.93,1:13:10.40,*Default,NTP,0000,0000,0000,,这太不可思议了 这太高效了
Dialogue: 0,1:13:10.73,1:13:13.93,*Default,NTP,0000,0000,0000,,是的，我这样做是因为我注意到了这种模式
Dialogue: 0,1:13:14.07,1:13:14.77,*Default,NTP,0000,0000,0000,,而且当然
Dialogue: 0,1:13:14.77,1:13:16.77,*Default,NTP,0000,0000,0000,,那是因为我把它放在这个漂亮的小东西里
Dialogue: 0,1:13:16.77,1:13:17.80,*Default,NTP,0000,0000,0000,,二维
Dialogue: 0,1:13:19.47,1:13:24.60,*Default,NTP,0000,0000,0000,,牙表就是这四个不依赖cnd
Dialogue: 0,1:13:24.87,1:13:28.33,*Default,NTP,0000,0000,0000,,我所关心的就是那里的价值
Dialogue: 0,1:13:28.33,1:13:30.13,*Default,NTP,0000,0000,0000,,所以你的钱绝对物超所值
Dialogue: 0,1:13:30.13,1:13:32.10,*Default,NTP,0000,0000,0000,,我已经拿出四张了
Dialogue: 0,1:13:32.20,1:13:34.90,*Default,NTP,0000,0000,0000,,来自带有一个和一个结的单个子表达式
Dialogue: 0,1:13:34.90,1:13:37.70,*Default,NTP,0000,0000,0000,,非常好，好吧，现在我该怎么办
Dialogue: 0,1:13:37.73,1:13:39.27,*Default,NTP,0000,0000,0000,,我还需要记住
Dialogue: 0,1:13:39.27,1:13:40.33,*Default,NTP,0000,0000,0000,,我所要做的就是建立一个
Dialogue: 0,1:13:40.33,1:13:42.20,*Default,NTP,0000,0000,0000,,计算结果为 1 的表达式
Dialogue: 0,1:13:42.33,1:13:45.67,*Default,NTP,0000,0000,0000,,占据了这里所有的单元格
Dialogue: 0,1:13:45.87,1:13:47.70,*Default,NTP,0000,0000,0000,,所以一旦我得到了这些
Dialogue: 0,1:13:48.00,1:13:48.80,*Default,NTP,0000,0000,0000,,我有
Dialogue: 0,1:13:49.57,1:13:51.30,*Default,NTP,0000,0000,0000,,然后我就可以开始构建我的电路了
Dialogue: 0,1:13:51.30,1:13:52.37,*Default,NTP,0000,0000,0000,,好吧，让我们开始吧
Dialogue: 0,1:13:52.60,1:13:54.07,*Default,NTP,0000,0000,0000,,让我们看看这个
Dialogue: 0,1:13:54.20,1:13:56.37,*Default,NTP,0000,0000,0000,,所以有两个相邻的
Dialogue: 0,1:13:56.77,1:13:59.87,*Default,NTP,0000,0000,0000,,让我们看看它不像这里那么干净
Dialogue: 0,1:13:59.87,1:14:02.17,*Default,NTP,0000,0000,0000,,我不能忽略 ab 或 CD
Dialogue: 0,1:14:02.17,1:14:04.00,*Default,NTP,0000,0000,0000,,这仍然取决于他们俩
Dialogue: 0,1:14:04.53,1:14:07.30,*Default,NTP,0000,0000,0000,,但我在这里知道什么并不重要
Dialogue: 0,1:14:07.30,1:14:08.47,*Default,NTP,0000,0000,0000,,这么说吧
Dialogue: 0,1:14:08.60,1:14:11.53,*Default,NTP,0000,0000,0000,,好吧，这里和这里都有一个，什么是真实的
Dialogue: 0,1:14:11.73,1:14:14.53,*Default,NTP,0000,0000,0000,,当 c 为 1 且 d 为零时
Dialogue: 0,1:14:14.53,1:14:15.33,*Default,NTP,0000,0000,0000,,所以很清楚
Dialogue: 0,1:14:15.33,1:14:16.90,*Default,NTP,0000,0000,0000,,就在你必须在这一排的地方
Dialogue: 0,1:14:17.70,1:14:19.13,*Default,NTP,0000,0000,0000,,二维真值表
Dialogue: 0,1:14:19.73,1:14:23.07,*Default,NTP,0000,0000,0000,,现在我关心 a 和 br 的值是多少
Dialogue: 0,1:14:23.07,1:14:25.40,*Default,NTP,0000,0000,0000,,是的，因为这不是整个事情的一个
Dialogue: 0,1:14:25.40,1:14:27.20,*Default,NTP,0000,0000,0000,,几乎是因为我这里有一个
Dialogue: 0,1:14:27.30,1:14:28.53,*Default,NTP,0000,0000,0000,,但我那里没有
Dialogue: 0,1:14:28.53,1:14:31.20,*Default,NTP,0000,0000,0000,,所以如果我在这里有一个那么我也会获得同样的胜利
Dialogue: 0,1:14:31.20,1:14:32.10,*Default,NTP,0000,0000,0000,,我会把它们全部得到
Dialogue: 0,1:14:32.20,1:14:35.87,*Default,NTP,0000,0000,0000,,是的，但是我不关心什么，让我们看看
Dialogue: 0,1:14:36.17,1:14:38.37,*Default,NTP,0000,0000,0000,,a 在这里为零，a 在这里为 1
Dialogue: 0,1:14:38.37,1:14:40.73,*Default,NTP,0000,0000,0000,,这是唯一两个可能的值，所以事实上
Dialogue: 0,1:14:41.10,1:14:43.60,*Default,NTP,0000,0000,0000,,这两个在这里不依赖于
Dialogue: 0,1:14:44.20,1:14:46.80,*Default,NTP,0000,0000,0000,,它们仅依赖于 b 等于 1
Dialogue: 0,1:14:47.07,1:14:52.57,*Default,NTP,0000,0000,0000,,让我们看看当 c 为 1 且 d 为 0 时会发生什么
Dialogue: 0,1:14:53.00,1:14:58.00,*Default,NTP,0000,0000,0000,,b 是一，然后我就得到那两个，很好
Dialogue: 0,1:14:58.30,1:15:00.27,*Default,NTP,0000,0000,0000,,它并不像爆炸那么大
Dialogue: 0,1:15:00.27,1:15:01.53,*Default,NTP,0000,0000,0000,,当你到达这里时
Dialogue: 0,1:15:01.60,1:15:03.57,*Default,NTP,0000,0000,0000,,但它确实可以节省一些东西
Dialogue: 0,1:15:03.57,1:15:05.73,*Default,NTP,0000,0000,0000,,所以当 b 是 1 时
Dialogue: 0,1:15:06.27,1:15:08.33,*Default,NTP,0000,0000,0000,,当 c 为零时
Dialogue: 0,1:15:08.57,1:15:10.77,*Default,NTP,0000,0000,0000,,b 是一
Dialogue: 0,1:15:11.10,1:15:12.67,*Default,NTP,0000,0000,0000,,c 为零且 d 为
Dialogue: 0,1:15:12.93,1:15:16.50,*Default,NTP,0000,0000,0000,,抱歉 dc 是 1，d 是 0，所以 bc
Dialogue: 0,1:15:16.93,1:15:18.67,*Default,NTP,0000,0000,0000,,不是我
Dialogue: 0,1:15:18.73,1:15:21.33,*Default,NTP,0000,0000,0000,,那个小子表达式对一个人有用
Dialogue: 0,1:15:21.40,1:15:23.67,*Default,NTP,0000,0000,0000,,在这两种情况下
Dialogue: 0,1:15:23.73,1:15:25.70,*Default,NTP,0000,0000,0000,,所以又是一个子表达式
Dialogue: 0,1:15:26.10,1:15:27.30,*Default,NTP,0000,0000,0000,,只有三个变量
Dialogue: 0,1:15:27.30,1:15:29.17,*Default,NTP,0000,0000,0000,,顺便说一句，因为 a 在这里无关紧要
Dialogue: 0,1:15:29.17,1:15:31.50,*Default,NTP,0000,0000,0000,,给了我两个很好的
Dialogue: 0,1:15:31.80,1:15:33.00,*Default,NTP,0000,0000,0000,,好吧，我们快到家了
Dialogue: 0,1:15:33.00,1:15:34.77,*Default,NTP,0000,0000,0000,,我们只需要涵盖这两个
Dialogue: 0,1:15:34.80,1:15:36.90,*Default,NTP,0000,0000,0000,,好的，所以我可以做同样的伎俩
Dialogue: 0,1:15:36.97,1:15:39.27,*Default,NTP,0000,0000,0000,,我可以在这里画一个彩色的小盒子
Dialogue: 0,1:15:39.27,1:15:40.37,*Default,NTP,0000,0000,0000,,以及什么是真实的
Dialogue: 0,1:15:41.47,1:15:43.70,*Default,NTP,0000,0000,0000,,a 必须为 1，b 必须为 1
Dialogue: 0,1:15:43.70,1:15:47.00,*Default,NTP,0000,0000,0000,,还有什么是真的我不关心d
Dialogue: 0,1:15:47.27,1:15:49.50,*Default,NTP,0000,0000,0000,,因为 d 可以在 0 和 1 之间翻转
Dialogue: 0,1:15:49.77,1:15:54.17,*Default,NTP,0000,0000,0000,,所以我可以写另一个表达式 ab
Dialogue: 0,1:15:54.47,1:15:58.27,*Default,NTP,0000,0000,0000,,而不是 c，我会在那里得到那两个
Dialogue: 0,1:15:58.73,1:16:01.10,*Default,NTP,0000,0000,0000,,但事实证明我们可以做得更好一点
Dialogue: 0,1:16:01.47,1:16:05.77,*Default,NTP,0000,0000,0000,,所以我们不仅要考虑这两个，还要考虑这四个
Dialogue: 0,1:16:05.93,1:16:06.73,*Default,NTP,0000,0000,0000,,可以，然后呢
Dialogue: 0,1:16:06.73,1:16:08.80,*Default,NTP,0000,0000,0000,,请注意它们与前一个重叠
Dialogue: 0,1:16:08.80,1:16:10.33,*Default,NTP,0000,0000,0000,,我们稍后会回到这个话题
Dialogue: 0,1:16:10.67,1:16:13.10,*Default,NTP,0000,0000,0000,,好吧，这里没关系
Dialogue: 0,1:16:13.40,1:16:14.60,*Default,NTP,0000,0000,0000,,好吧，但我知道什么
Dialogue: 0,1:16:14.60,1:16:17.33,*Default,NTP,0000,0000,0000,,我知道为了把这些拿到这里
Dialogue: 0,1:16:17.33,1:16:18.67,*Default,NTP,0000,0000,0000,,c 必须为零
Dialogue: 0,1:16:18.77,1:16:20.40,*Default,NTP,0000,0000,0000,,正确的 c 不能是 1
Dialogue: 0,1:16:20.97,1:16:24.77,*Default,NTP,0000,0000,0000,,我也知道 a 一定是 1
Dialogue: 0,1:16:25.37,1:16:26.73,*Default,NTP,0000,0000,0000,,所以想想那件事
Dialogue: 0,1:16:27.13,1:16:29.90,*Default,NTP,0000,0000,0000,,c 等于 0 切出行
Dialogue: 0,1:16:30.10,1:16:32.10,*Default,NTP,0000,0000,0000,,a 等于 1 分割出这两列
Dialogue: 0,1:16:32.10,1:16:34.17,*Default,NTP,0000,0000,0000,,交叉点就是那个小正方形
Dialogue: 0,1:16:34.73,1:16:37.70,*Default,NTP,0000,0000,0000,,所以这四个不依赖于 b
Dialogue: 0,1:16:37.70,1:16:39.17,*Default,NTP,0000,0000,0000,,因为 b 可以是一或零
Dialogue: 0,1:16:39.27,1:16:40.57,*Default,NTP,0000,0000,0000,,他们不依赖于 d
Dialogue: 0,1:16:40.57,1:16:42.00,*Default,NTP,0000,0000,0000,,因为那可能是零或一
Dialogue: 0,1:16:42.07,1:16:44.90,*Default,NTP,0000,0000,0000,,我唯一关心的是什么时候是一个
Dialogue: 0,1:16:44.93,1:16:46.60,*Default,NTP,0000,0000,0000,,c 何时为零
Dialogue: 0,1:16:46.60,1:16:49.97,*Default,NTP,0000,0000,0000,,子表达式 a 不是 c 是什么
Dialogue: 0,1:16:50.80,1:16:53.67,*Default,NTP,0000,0000,0000,,现在请注意这个子表达式
Dialogue: 0,1:16:53.67,1:16:55.10,*Default,NTP,0000,0000,0000,,让我把它们全部放在这里
Dialogue: 0,1:16:55.33,1:16:57.57,*Default,NTP,0000,0000,0000,,这个小子表达式 a 而不是 c
Dialogue: 0,1:16:57.57,1:17:00.10,*Default,NTP,0000,0000,0000,,在这四种情况下将值为 1
Dialogue: 0,1:17:00.80,1:17:02.40,*Default,NTP,0000,0000,0000,,这个小子表达式在这里
Dialogue: 0,1:17:02.40,1:17:04.53,*Default,NTP,0000,0000,0000,,a 而非 b 将适用于 1
Dialogue: 0,1:17:04.67,1:17:07.17,*Default,NTP,0000,0000,0000,,在这些例子中存在重叠
Dialogue: 0,1:17:07.40,1:17:08.27,*Default,NTP,0000,0000,0000,,我关心的
Dialogue: 0,1:17:09.07,1:17:10.10,*Default,NTP,0000,0000,0000,,不，我关心什么
Dialogue: 0,1:17:10.33,1:17:12.73,*Default,NTP,0000,0000,0000,,所以让我们考虑一下这种情况
Dialogue: 0,1:17:12.73,1:17:13.70,*Default,NTP,0000,0000,0000,,其中 a 是一
Dialogue: 0,1:17:13.70,1:17:15.93,*Default,NTP,0000,0000,0000,,b 为零且 c 为 0
Dialogue: 0,1:17:16.30,1:17:17.07,*Default,NTP,0000,0000,0000,,并且 d 为零
Dialogue: 0,1:17:17.07,1:17:19.27,*Default,NTP,0000,0000,0000,,那么我们的表达会发生什么
Dialogue: 0,1:17:19.40,1:17:21.00,*Default,NTP,0000,0000,0000,,这将评估为一
Dialogue: 0,1:17:21.13,1:17:22.73,*Default,NTP,0000,0000,0000,,这将评估为零
Dialogue: 0,1:17:22.80,1:17:24.30,*Default,NTP,0000,0000,0000,,这将评估为一
Dialogue: 0,1:17:24.77,1:17:27.00,*Default,NTP,0000,0000,0000,,两个都很棒，一个我只需要其中一个
Dialogue: 0,1:17:27.00,1:17:29.27,*Default,NTP,0000,0000,0000,,但我关心什么 我会在输出处得到一个
Dialogue: 0,1:17:29.30,1:17:30.20,*Default,NTP,0000,0000,0000,,没关系
Dialogue: 0,1:17:30.20,1:17:33.70,*Default,NTP,0000,0000,0000,,这两个子表达式都表示“是的，我在这里”
Dialogue: 0,1:17:33.80,1:17:35.70,*Default,NTP,0000,0000,0000,,因为当我们
Dialogue: 0,1:17:35.70,1:17:38.13,*Default,NTP,0000,0000,0000,,或者只要其中一个或多个是一个
Dialogue: 0,1:17:38.17,1:17:39.67,*Default,NTP,0000,0000,0000,,我们仍然会得到相同的答案
Dialogue: 0,1:17:39.67,1:17:41.60,*Default,NTP,0000,0000,0000,,所以你可以重叠这些东西
Dialogue: 0,1:17:41.87,1:17:43.27,*Default,NTP,0000,0000,0000,,重叠有什么好处
Dialogue: 0,1:17:43.27,1:17:44.27,*Default,NTP,0000,0000,0000,,为什么我重叠的是
Dialogue: 0,1:17:44.27,1:17:45.93,*Default,NTP,0000,0000,0000,,那么子表达式更容易
Dialogue: 0,1:17:46.13,1:17:47.47,*Default,NTP,0000,0000,0000,,我只打更简单更短的
Dialogue: 0,1:17:47.47,1:17:49.13,*Default,NTP,0000,0000,0000,,我只有两个变量
Dialogue: 0,1:17:49.17,1:17:50.50,*Default,NTP,0000,0000,0000,,而不是三个变量
Dialogue: 0,1:17:50.50,1:17:52.90,*Default,NTP,0000,0000,0000,,就像我在这里用这个做的那样
Dialogue: 0,1:17:53.37,1:17:55.00,*Default,NTP,0000,0000,0000,,所以注意现在发生了什么
Dialogue: 0,1:17:55.17,1:17:57.50,*Default,NTP,0000,0000,0000,,通过简单地绘制这个kernoff图
Dialogue: 0,1:17:57.50,1:17:59.37,*Default,NTP,0000,0000,0000,,这个二维真值表
Dialogue: 0,1:17:59.57,1:18:00.93,*Default,NTP,0000,0000,0000,,我能够采取
Dialogue: 0,1:18:00.93,1:18:02.70,*Default,NTP,0000,0000,0000,,我们继续看一下对比
Dialogue: 0,1:18:03.00,1:18:05.80,*Default,NTP,0000,0000,0000,,这些子表达式就在这里
Dialogue: 0,1:18:05.80,1:18:08.00,*Default,NTP,0000,0000,0000,,然后当然我必须将它们与矿石结合起来
Dialogue: 0,1:18:08.00,1:18:09.97,*Default,NTP,0000,0000,0000,,我可以将它们减少到这三个
Dialogue: 0,1:18:09.97,1:18:12.07,*Default,NTP,0000,0000,0000,,微小的子表达式
Dialogue: 0,1:18:12.20,1:18:13.53,*Default,NTP,0000,0000,0000,,等等电路的数量
Dialogue: 0,1:18:13.53,1:18:15.90,*Default,NTP,0000,0000,0000,,门的数量大大减少
Dialogue: 0,1:18:16.10,1:18:19.27,*Default,NTP,0000,0000,0000,,现在卡诺夫地图实际上只是众多地图之一
Dialogue: 0,1:18:19.27,1:18:21.37,*Default,NTP,0000,0000,0000,,许多不同的优化技术
Dialogue: 0,1:18:21.37,1:18:23.30,*Default,NTP,0000,0000,0000,,事实上减少
Dialogue: 0,1:18:23.33,1:18:23.57,*Default,NTP,0000,0000,0000,,这
Dialogue: 0,1:18:23.57,1:18:25.80,*Default,NTP,0000,0000,0000,,门和转换的数量只是众多之一
Dialogue: 0,1:18:25.80,1:18:26.97,*Default,NTP,0000,0000,0000,,你必须做的优化
Dialogue: 0,1:18:26.97,1:18:27.93,*Default,NTP,0000,0000,0000,,你还必须考虑
Dialogue: 0,1:18:27.93,1:18:29.87,*Default,NTP,0000,0000,0000,,物体的位置在哪里，功率有多大
Dialogue: 0,1:18:29.87,1:18:32.67,*Default,NTP,0000,0000,0000,,以及电路设计的许多复杂性
Dialogue: 0,1:18:32.67,1:18:34.70,*Default,NTP,0000,0000,0000,,但我希望你能摆脱这一切
Dialogue: 0,1:18:34.80,1:18:35.87,*Default,NTP,0000,0000,0000,,从一开始
Dialogue: 0,1:18:35.87,1:18:37.60,*Default,NTP,0000,0000,0000,,当我们从二进制数开始时
Dialogue: 0,1:18:37.60,1:18:38.90,*Default,NTP,0000,0000,0000,,通过布尔逻辑
Dialogue: 0,1:18:38.93,1:18:40.70,*Default,NTP,0000,0000,0000,,通过门 通过晶体管
Dialogue: 0,1:18:40.70,1:18:42.10,*Default,NTP,0000,0000,0000,,最终的电路设计
Dialogue: 0,1:18:42.20,1:18:44.97,*Default,NTP,0000,0000,0000,,是对计算本质的欣赏
Dialogue: 0,1:18:45.20,1:18:46.00,*Default,NTP,0000,0000,0000,,你现在知道了
Dialogue: 0,1:18:46.00,1:18:48.27,*Default,NTP,0000,0000,0000,,现代计算机的组成部分
Dialogue: 0,1:18:48.37,1:18:50.53,*Default,NTP,0000,0000,0000,,以及我们如何进行实际计算
Dialogue: 0,1:18:50.53,1:18:53.37,*Default,NTP,0000,0000,0000,,它有一定的简单性和美感
Dialogue: 0,1:18:53.47,1:18:56.17,*Default,NTP,0000,0000,0000,,实际运行起来非常复杂
Dialogue: 0,1:18:56.17,1:18:57.70,*Default,NTP,0000,0000,0000,,我希望有一天你能够拥有一台电脑
Dialogue: 0,1:18:57.70,1:18:58.47,*Default,NTP,0000,0000,0000,,建筑课程
Dialogue: 0,1:18:58.47,1:18:59.70,*Default,NTP,0000,0000,0000,,并了解更多相关信息
Dialogue: 0,1:19:00.00,1:19:02.67,*Default,NTP,0000,0000,0000,,好吧，现在就这样，就这样
Dialogue: 0,1:19:02.93,1:19:04.17,*Default,NTP,0000,0000,0000,,这是最后一堂课
Dialogue: 0,1:19:04.27,1:19:05.70,*Default,NTP,0000,0000,0000,,我们稍后会见到你
Dialogue: 0,1:19:05.70,1:19:07.60,*Default,NTP,0000,0000,0000,,不过在课程结束之前我们会再聊一些
Dialogue: 0,1:19:07.60,1:19:08.40,*Default,NTP,0000,0000,0000,,以后再聊
