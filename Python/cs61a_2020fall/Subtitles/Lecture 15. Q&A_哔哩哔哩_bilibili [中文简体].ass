[Script Info]
Title: Lecture 15. Q&A_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1s3411G7yM?p=37&vd_source=6ffca0aa1006734a4fba52f389036611
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.40,0:00:04.56,*Default,NTP,0000,0000,0000,,61a 讲座 15 问与答
Dialogue: 0,0:00:04.56,0:00:06.64,*Default,NTP,0000,0000,0000,,呃所以问题是这是什么意思
Dialogue: 0,0:00:06.64,0:00:08.24,*Default,NTP,0000,0000,0000,,引用列表
Dialogue: 0,0:00:08.24,0:00:10.24,*Default,NTP,0000,0000,0000,,在上一个视频中有很多
Dialogue: 0,0:00:10.24,0:00:11.36,*Default,NTP,0000,0000,0000,,示例数
Dialogue: 0,0:00:11.36,0:00:15.12,*Default,NTP,0000,0000,0000,,评估不同表达式的
Dialogue: 0,0:00:15.12,0:00:17.04,*Default,NTP,0000,0000,0000,,到同一个列表
Dialogue: 0,0:00:17.04,0:00:20.24,*Default,NTP,0000,0000,0000,,以及你能想到的每一种评估方式
Dialogue: 0,0:00:20.24,0:00:22.24,*Default,NTP,0000,0000,0000,,作为参考，所以这个通知
Dialogue: 0,0:00:22.24,0:00:23.20,*Default,NTP,0000,0000,0000,,参考是
Dialogue: 0,0:00:23.20,0:00:26.40,*Default,NTP,0000,0000,0000,,我可以将哈尼称为哈尼或
Dialogue: 0,0:00:26.40,0:00:29.52,*Default,NTP,0000,0000,0000,,cs61a教授或
Dialogue: 0,0:00:29.52,0:00:31.36,*Default,NTP,0000,0000,0000,,我认识的最酷的人，这些都是
Dialogue: 0,0:00:31.36,0:00:33.44,*Default,NTP,0000,0000,0000,,喜欢不同的引用方式
Dialogue: 0,0:00:33.44,0:00:34.40,*Default,NTP,0000,0000,0000,,一样
Dialogue: 0,0:00:34.40,0:00:36.80,*Default,NTP,0000,0000,0000,,所以不同的参考文献和相同的
Dialogue: 0,0:00:36.80,0:00:38.16,*Default,NTP,0000,0000,0000,,故事适用于
Dialogue: 0,0:00:38.16,0:00:40.32,*Default,NTP,0000,0000,0000,,python 中的任何对象，但它实际上是
Dialogue: 0,0:00:40.32,0:00:42.40,*Default,NTP,0000,0000,0000,,对于列表很重要，因为
Dialogue: 0,0:00:42.40,0:00:46.00,*Default,NTP,0000,0000,0000,,列表会发生变化，因此如果您有多个
Dialogue: 0,0:00:46.00,0:00:47.76,*Default,NTP,0000,0000,0000,,引用同一个列表并且
Dialogue: 0,0:00:47.76,0:00:49.04,*Default,NTP,0000,0000,0000,,列表更改
Dialogue: 0,0:00:49.04,0:00:52.32,*Default,NTP,0000,0000,0000,,然后你会看到的值
Dialogue: 0,0:00:52.32,0:00:53.92,*Default,NTP,0000,0000,0000,,当你评估其中任何一个时
Dialogue: 0,0:00:53.92,0:00:56.00,*Default,NTP,0000,0000,0000,,引用该列表的表达式是
Dialogue: 0,0:00:56.00,0:00:58.08,*Default,NTP,0000,0000,0000,,也会改变
Dialogue: 0,0:00:58.08,0:01:01.12,*Default,NTP,0000,0000,0000,,所以我们在简单的例子中看到了这一点
Dialogue: 0,0:01:01.12,0:01:02.80,*Default,NTP,0000,0000,0000,,中等复杂的例子
Dialogue: 0,0:01:02.80,0:01:04.48,*Default,NTP,0000,0000,0000,,和非常复杂的例子所以也许
Dialogue: 0,0:01:04.48,0:01:05.60,*Default,NTP,0000,0000,0000,,我们将从适度开始
Dialogue: 0,0:01:05.60,0:01:07.04,*Default,NTP,0000,0000,0000,,复杂的，然后我们再决定
Dialogue: 0,0:01:07.04,0:01:08.88,*Default,NTP,0000,0000,0000,,我们应该更简单还是更进一步
Dialogue: 0,0:01:08.88,0:01:09.92,*Default,NTP,0000,0000,0000,,复杂的
Dialogue: 0,0:01:09.92,0:01:13.52,*Default,NTP,0000,0000,0000,,所以如果你有一份清单
Dialogue: 0,0:01:13.52,0:01:14.80,*Default,NTP,0000,0000,0000,,列在其中
Dialogue: 0,0:01:14.80,0:01:17.92,*Default,NTP,0000,0000,0000,,二三然后你就有了
Dialogue: 0,0:01:17.92,0:01:21.52,*Default,NTP,0000,0000,0000,,b 等于 a，c 等于 a
Dialogue: 0,0:01:21.52,0:01:25.36,*Default,NTP,0000,0000,0000,,一和
Dialogue: 0,0:01:25.36,0:01:28.96,*Default,NTP,0000,0000,0000,,然后你追加四个
Dialogue: 0,0:01:28.96,0:01:32.32,*Default,NTP,0000,0000,0000,,对于 c 这实际上会改变 b
Dialogue: 0,0:01:32.32,0:01:35.12,*Default,NTP,0000,0000,0000,,让我们看看为什么如果我们打印 b 我们
Dialogue: 0,0:01:35.12,0:01:36.00,*Default,NTP,0000,0000,0000,,不会得到
Dialogue: 0,0:01:36.00,0:01:38.84,*Default,NTP,0000,0000,0000,,一二三而是一二三
Dialogue: 0,0:01:38.84,0:01:41.84,*Default,NTP,0000,0000,0000,,四
Dialogue: 0,0:01:42.00,0:01:45.20,*Default,NTP,0000,0000,0000,,在这种情况下 a 和 b 都是引用
Dialogue: 0,0:01:45.20,0:01:46.40,*Default,NTP,0000,0000,0000,,到同一个列表
Dialogue: 0,0:01:46.40,0:01:49.28,*Default,NTP,0000,0000,0000,,恰好是这个列表这个框
Dialogue: 0,0:01:49.28,0:01:50.88,*Default,NTP,0000,0000,0000,,其内容为 1
Dialogue: 0,0:01:50.88,0:01:54.00,*Default,NTP,0000,0000,0000,,和另一个列表 2 3. 3
Dialogue: 0,0:01:54.00,0:01:57.28,*Default,NTP,0000,0000,0000,,c 是引用或名称
Dialogue: 0,0:01:57.28,0:02:00.64,*Default,NTP,0000,0000,0000,,对于索引 1 处的元素
Dialogue: 0,0:02:00.64,0:02:02.64,*Default,NTP,0000,0000,0000,,的 a 也与
Dialogue: 0,0:02:02.64,0:02:03.92,*Default,NTP,0000,0000,0000,,索引 1 处的元素
Dialogue: 0,0:02:03.92,0:02:05.68,*Default,NTP,0000,0000,0000,,b 因为 a 和 b 只是两个
Dialogue: 0,0:02:05.68,0:02:08.08,*Default,NTP,0000,0000,0000,,同一事物的不同名称
Dialogue: 0,0:02:08.08,0:02:11.20,*Default,NTP,0000,0000,0000,,这意味着如果我追加到 c 我已经
Dialogue: 0,0:02:11.20,0:02:12.48,*Default,NTP,0000,0000,0000,,真的改变了一个
Dialogue: 0,0:02:12.48,0:02:16.32,*Default,NTP,0000,0000,0000,,和 b 也是如此
Dialogue: 0,0:02:16.32,0:02:20.00,*Default,NTP,0000,0000,0000,,我的表达是 c 附加为
Dialogue: 0,0:02:20.00,0:02:23.52,*Default,NTP,0000,0000,0000,,任何包含这个值的东西
Dialogue: 0,0:02:23.52,0:02:25.76,*Default,NTP,0000,0000,0000,,c 也会受到影响，所以
Dialogue: 0,0:02:25.76,0:02:27.04,*Default,NTP,0000,0000,0000,,当我们打印b时
Dialogue: 0,0:02:27.04,0:02:29.04,*Default,NTP,0000,0000,0000,,我们会看到一二三四
Dialogue: 0,0:02:29.04,0:02:30.32,*Default,NTP,0000,0000,0000,,到原来的
Dialogue: 0,0:02:30.32,0:02:32.88,*Default,NTP,0000,0000,0000,,我们输入的一二三是因为
Dialogue: 0,0:02:32.88,0:02:37.76,*Default,NTP,0000,0000,0000,,我们突变或改变了它的一部分
Dialogue: 0,0:02:37.76,0:02:39.60,*Default,NTP,0000,0000,0000,,所以让我在这里注入一些东西
Dialogue: 0,0:02:39.60,0:02:41.20,*Default,NTP,0000,0000,0000,,最多的
Dialogue: 0,0:02:41.20,0:02:44.00,*Default,NTP,0000,0000,0000,,这里重要的一行是 b 等于 a
Dialogue: 0,0:02:44.00,0:02:45.28,*Default,NTP,0000,0000,0000,,线
Dialogue: 0,0:02:45.28,0:02:48.40,*Default,NTP,0000,0000,0000,,是的，所以在我们这样做之前
Dialogue: 0,0:02:48.40,0:02:51.36,*Default,NTP,0000,0000,0000,,例如，如果我说 a 等于 5
Dialogue: 0,0:02:51.36,0:02:51.92,*Default,NTP,0000,0000,0000,,和b
Dialogue: 0,0:02:51.92,0:02:55.04,*Default,NTP,0000,0000,0000,,如果我改变 ab 则等于六
Dialogue: 0,0:02:55.04,0:02:56.32,*Default,NTP,0000,0000,0000,,改变
Dialogue: 0,0:02:56.32,0:02:58.32,*Default,NTP,0000,0000,0000,,是的，这就是一个
Dialogue: 0,0:02:58.32,0:03:00.08,*Default,NTP,0000,0000,0000,,这里有点令人困惑，但与
Dialogue: 0,0:03:00.08,0:03:03.76,*Default,NTP,0000,0000,0000,,分配时列出并包含对象
Dialogue: 0,0:03:03.76,0:03:04.00,*Default,NTP,0000,0000,0000,,一
Dialogue: 0,0:03:04.00,0:03:06.32,*Default,NTP,0000,0000,0000,,var one 将一个变量列出到另一个变量
Dialogue: 0,0:03:06.32,0:03:08.40,*Default,NTP,0000,0000,0000,,现在列出了每个变量
Dialogue: 0,0:03:08.40,0:03:11.28,*Default,NTP,0000,0000,0000,,数据只有一份副本 是的
Dialogue: 0,0:03:11.28,0:03:13.20,*Default,NTP,0000,0000,0000,,这是重要的部分但是当我说
Dialogue: 0,0:03:13.20,0:03:14.64,*Default,NTP,0000,0000,0000,,a 等于五
Dialogue: 0,0:03:14.64,0:03:17.28,*Default,NTP,0000,0000,0000,,b 等于 a 有点二五出局
Dialogue: 0,0:03:17.28,0:03:18.08,*Default,NTP,0000,0000,0000,,在太空中
Dialogue: 0,0:03:18.08,0:03:19.28,*Default,NTP,0000,0000,0000,,这就是这些的好处
Dialogue: 0,0:03:19.28,0:03:22.16,*Default,NTP,0000,0000,0000,,环境图就在你之后
Dialogue: 0,0:03:22.16,0:03:23.12,*Default,NTP,0000,0000,0000,,你可以在此处看到它
Dialogue: 0,0:03:23.12,0:03:24.32,*Default,NTP,0000,0000,0000,,环境图
Dialogue: 0,0:03:24.32,0:03:26.64,*Default,NTP,0000,0000,0000,,b 没有指向它自己的列表
Dialogue: 0,0:03:26.64,0:03:28.32,*Default,NTP,0000,0000,0000,,指出只有只有一个
Dialogue: 0,0:03:28.32,0:03:30.00,*Default,NTP,0000,0000,0000,,现在在内存中列出
Dialogue: 0,0:03:30.00,0:03:32.24,*Default,NTP,0000,0000,0000,,a 和 b 都指向它，现在
Dialogue: 0,0:03:32.24,0:03:34.72,*Default,NTP,0000,0000,0000,,我可以修改这个
Dialogue: 0,0:03:34.72,0:03:37.28,*Default,NTP,0000,0000,0000,,有点可怕又有趣
Dialogue: 0,0:03:37.28,0:03:38.00,*Default,NTP,0000,0000,0000,,这是
Dialogue: 0,0:03:38.00,0:03:41.12,*Default,NTP,0000,0000,0000,,如果 a 修改它也会修改 b 如果 b
Dialogue: 0,0:03:41.12,0:03:43.84,*Default,NTP,0000,0000,0000,,修改它修改它们只是
Dialogue: 0,0:03:43.84,0:03:44.16,*Default,NTP,0000,0000,0000,,那里
Dialogue: 0,0:03:44.16,0:03:46.32,*Default,NTP,0000,0000,0000,,内存中只有一个列表
Dialogue: 0,0:03:46.32,0:03:48.40,*Default,NTP,0000,0000,0000,,这是要记住的事情
Dialogue: 0,0:03:48.40,0:03:50.32,*Default,NTP,0000,0000,0000,,你做了第二行的事情，但你没有
Dialogue: 0,0:03:50.32,0:03:52.96,*Default,NTP,0000,0000,0000,,制作清单的副本
Dialogue: 0,0:03:52.96,0:03:55.60,*Default,NTP,0000,0000,0000,,很好的问题，所以问题是关于
Dialogue: 0,0:03:55.60,0:03:56.64,*Default,NTP,0000,0000,0000,,这个例子
Dialogue: 0,0:03:56.64,0:03:59.04,*Default,NTP,0000,0000,0000,,来自涉及打印的讲座
Dialogue: 0,0:03:59.04,0:03:59.76,*Default,NTP,0000,0000,0000,,t
Dialogue: 0,0:03:59.76,0:04:03.04,*Default,NTP,0000,0000,0000,,并看到一些点
Dialogue: 0,0:04:03.04,0:04:04.96,*Default,NTP,0000,0000,0000,,让我们看看能否找到他们哦
Dialogue: 0,0:04:04.96,0:04:06.16,*Default,NTP,0000,0000,0000,,他们是
Dialogue: 0,0:04:06.16,0:04:09.04,*Default,NTP,0000,0000,0000,,那是什么让我给你友善
Dialogue: 0,0:04:09.04,0:04:10.64,*Default,NTP,0000,0000,0000,,一个更简单的例子，没有
Dialogue: 0,0:04:10.64,0:04:11.52,*Default,NTP,0000,0000,0000,,涉及
Dialogue: 0,0:04:11.52,0:04:13.84,*Default,NTP,0000,0000,0000,,切片分配只是为了确保
Dialogue: 0,0:04:13.84,0:04:15.60,*Default,NTP,0000,0000,0000,,每个人都可以跟随所以我只是
Dialogue: 0,0:04:15.60,0:04:17.12,*Default,NTP,0000,0000,0000,,将注释掉那些
Dialogue: 0,0:04:17.12,0:04:20.32,*Default,NTP,0000,0000,0000,,并创建一个新的 t ，即
Dialogue: 0,0:04:20.32,0:04:22.80,*Default,NTP,0000,0000,0000,,一个包含一个的列表，然后我会
Dialogue: 0,0:04:22.80,0:04:23.68,*Default,NTP,0000,0000,0000,,附加
Dialogue: 0,0:04:23.68,0:04:27.60,*Default,NTP,0000,0000,0000,,这应该是什么样子
Dialogue: 0,0:04:27.60,0:04:30.96,*Default,NTP,0000,0000,0000,,这应该是一个包含一个的列表
Dialogue: 0,0:04:30.96,0:04:32.96,*Default,NTP,0000,0000,0000,,然后里面有一个列表
Dialogue: 0,0:04:32.96,0:04:35.04,*Default,NTP,0000,0000,0000,,有一个，里面有一个列表
Dialogue: 0,0:04:35.04,0:04:37.04,*Default,NTP,0000,0000,0000,,有一个，里面有一个列表
Dialogue: 0,0:04:37.04,0:04:38.96,*Default,NTP,0000,0000,0000,,有一个，里面有一个列表
Dialogue: 0,0:04:38.96,0:04:39.20,*Default,NTP,0000,0000,0000,,有
Dialogue: 0,0:04:39.20,0:04:40.80,*Default,NTP,0000,0000,0000,,这可能会继续下去，因为你知道
Dialogue: 0,0:04:40.80,0:04:43.84,*Default,NTP,0000,0000,0000,,一会儿
Dialogue: 0,0:04:44.08,0:04:47.28,*Default,NTP,0000,0000,0000,,有趣的是
Dialogue: 0,0:04:47.28,0:04:50.00,*Default,NTP,0000,0000,0000,,python 中内置了一些逻辑
Dialogue: 0,0:04:50.00,0:04:53.20,*Default,NTP,0000,0000,0000,,关于如何显示值
Dialogue: 0,0:04:53.20,0:04:56.40,*Default,NTP,0000,0000,0000,,例如，一个列表
Dialogue: 0,0:04:56.40,0:04:59.28,*Default,NTP,0000,0000,0000,,出现后仅一个空格
Dialogue: 0,0:04:59.28,0:05:00.40,*Default,NTP,0000,0000,0000,,逗号
Dialogue: 0,0:05:00.40,0:05:03.44,*Default,NTP,0000,0000,0000,,是 python 工作方式的一部分
Dialogue: 0,0:05:03.44,0:05:05.36,*Default,NTP,0000,0000,0000,,现在关于 python 如何工作的部分是
Dialogue: 0,0:05:05.36,0:05:06.72,*Default,NTP,0000,0000,0000,,实际上只是一个函数
Dialogue: 0,0:05:06.72,0:05:09.68,*Default,NTP,0000,0000,0000,,这表示每当需要显示时
Dialogue: 0,0:05:09.68,0:05:10.00,*Default,NTP,0000,0000,0000,,A
Dialogue: 0,0:05:10.00,0:05:12.16,*Default,NTP,0000,0000,0000,,列表你应该显示它在此
Dialogue: 0,0:05:12.16,0:05:14.00,*Default,NTP,0000,0000,0000,,具体做法
Dialogue: 0,0:05:14.00,0:05:17.52,*Default,NTP,0000,0000,0000,,该函数具有以下内容
Dialogue: 0,0:05:17.52,0:05:18.80,*Default,NTP,0000,0000,0000,,行为
Dialogue: 0,0:05:18.80,0:05:22.00,*Default,NTP,0000,0000,0000,,如果您想在任何时候显示
Dialogue: 0,0:05:22.00,0:05:24.08,*Default,NTP,0000,0000,0000,,您所在的整个列表
Dialogue: 0,0:05:24.08,0:05:26.16,*Default,NTP,0000,0000,0000,,显示过程
Dialogue: 0,0:05:26.16,0:05:29.36,*Default,NTP,0000,0000,0000,,然后不显示它而是
Dialogue: 0,0:05:29.36,0:05:31.68,*Default,NTP,0000,0000,0000,,显示这个点点点表示你知道
Dialogue: 0,0:05:31.68,0:05:33.52,*Default,NTP,0000,0000,0000,,这会永远持续下去，因为
Dialogue: 0,0:05:33.52,0:05:33.76,*Default,NTP,0000,0000,0000,,t
Dialogue: 0,0:05:33.76,0:05:35.92,*Default,NTP,0000,0000,0000,,包含自身但我们不想
Dialogue: 0,0:05:35.92,0:05:37.52,*Default,NTP,0000,0000,0000,,充满你的屏幕
Dialogue: 0,0:05:37.52,0:05:40.72,*Default,NTP,0000,0000,0000,,所以我们就到此为止
Dialogue: 0,0:05:40.72,0:05:43.68,*Default,NTP,0000,0000,0000,,嗯，是的，我想我们会研究这个
Dialogue: 0,0:05:43.68,0:05:45.28,*Default,NTP,0000,0000,0000,,课程稍后会更深入，但有一个
Dialogue: 0,0:05:45.28,0:05:46.64,*Default,NTP,0000,0000,0000,,有趣的是
Dialogue: 0,0:05:46.64,0:05:48.40,*Default,NTP,0000,0000,0000,,之间有一个关系
Dialogue: 0,0:05:48.40,0:05:50.88,*Default,NTP,0000,0000,0000,,这个物体很奇怪
Dialogue: 0,0:05:50.88,0:05:52.64,*Default,NTP,0000,0000,0000,,自我指涉
Dialogue: 0,0:05:52.64,0:05:56.00,*Default,NTP,0000,0000,0000,,以及它的显示方式和
Dialogue: 0,0:05:56.00,0:05:57.68,*Default,NTP,0000,0000,0000,,这种关系是某种函数
Dialogue: 0,0:05:57.68,0:05:59.36,*Default,NTP,0000,0000,0000,,内置于 python 中，但我们可以编写它
Dialogue: 0,0:05:59.36,0:06:01.12,*Default,NTP,0000,0000,0000,,如果我们愿意的话
Dialogue: 0,0:06:01.12,0:06:04.96,*Default,NTP,0000,0000,0000,,接受 t 并开始显示它
Dialogue: 0,0:06:04.96,0:06:07.76,*Default,NTP,0000,0000,0000,,因为 t 是一个列表，所以它有一个开括号
Dialogue: 0,0:06:07.76,0:06:09.68,*Default,NTP,0000,0000,0000,,因为第一个元素是它写的
Dialogue: 0,0:06:09.68,0:06:10.24,*Default,NTP,0000,0000,0000,,一
Dialogue: 0,0:06:10.24,0:06:11.84,*Default,NTP,0000,0000,0000,,因为它写了另一个元素
Dialogue: 0,0:06:11.84,0:06:13.52,*Default,NTP,0000,0000,0000,,逗号和空格
Dialogue: 0,0:06:13.52,0:06:16.16,*Default,NTP,0000,0000,0000,,然后由于下一个元素是 t
Dialogue: 0,0:06:16.16,0:06:16.72,*Default,NTP,0000,0000,0000,,再次
Dialogue: 0,0:06:16.72,0:06:18.80,*Default,NTP,0000,0000,0000,,它有一个特殊的情况，它说
Dialogue: 0,0:06:18.80,0:06:20.08,*Default,NTP,0000,0000,0000,,好时候画画了
Dialogue: 0,0:06:20.08,0:06:22.16,*Default,NTP,0000,0000,0000,,列表但不显示其内容
Dialogue: 0,0:06:22.16,0:06:25.28,*Default,NTP,0000,0000,0000,,因为那将需要永远
Dialogue: 0,0:06:27.12,0:06:30.00,*Default,NTP,0000,0000,0000,,所以也许我们会回到这个
Dialogue: 0,0:06:30.00,0:06:31.92,*Default,NTP,0000,0000,0000,,特别
Dialogue: 0,0:06:31.92,0:06:33.92,*Default,NTP,0000,0000,0000,,你可以用 python 做一些奇怪的事情
Dialogue: 0,0:06:33.92,0:06:35.04,*Default,NTP,0000,0000,0000,,这是切片
Dialogue: 0,0:06:35.04,0:06:37.92,*Default,NTP,0000,0000,0000,,分配所以切片分配基本上
Dialogue: 0,0:06:37.92,0:06:38.56,*Default,NTP,0000,0000,0000,,说
Dialogue: 0,0:06:38.56,0:06:40.96,*Default,NTP,0000,0000,0000,,取出清单中的一部分
Dialogue: 0,0:06:40.96,0:06:42.64,*Default,NTP,0000,0000,0000,,从一切成三
Dialogue: 0,0:06:42.64,0:06:44.72,*Default,NTP,0000,0000,0000,,并将其替换为
Dialogue: 0,0:06:44.72,0:06:45.84,*Default,NTP,0000,0000,0000,,另一个清单
Dialogue: 0,0:06:45.84,0:06:48.40,*Default,NTP,0000,0000,0000,,所以我可以用五六来代替它
Dialogue: 0,0:06:48.40,0:06:49.68,*Default,NTP,0000,0000,0000,,七
Dialogue: 0,0:06:49.68,0:06:51.28,*Default,NTP,0000,0000,0000,,然后两个人和三个人就走了
Dialogue: 0,0:06:51.28,0:06:52.80,*Default,NTP,0000,0000,0000,,离开，五六七将是
Dialogue: 0,0:06:52.80,0:06:55.44,*Default,NTP,0000,0000,0000,,在那里我会得到一五六七
Dialogue: 0,0:06:55.44,0:06:57.60,*Default,NTP,0000,0000,0000,,如果你用一些东西代替它
Dialogue: 0,0:06:57.60,0:06:59.44,*Default,NTP,0000,0000,0000,,那你就明白了
Dialogue: 0,0:06:59.44,0:07:01.04,*Default,NTP,0000,0000,0000,,点点点但我的意思是这可能有
Dialogue: 0,0:07:01.04,0:07:03.04,*Default,NTP,0000,0000,0000,,五六七然后t
Dialogue: 0,0:07:03.04,0:07:04.96,*Default,NTP,0000,0000,0000,,然后点点就会出现在
Dialogue: 0,0:07:04.96,0:07:06.40,*Default,NTP,0000,0000,0000,,结尾
Dialogue: 0,0:07:06.40,0:07:09.28,*Default,NTP,0000,0000,0000,,顺便说一句，请注意我的意思是我的意思是
Dialogue: 0,0:07:09.28,0:07:09.68,*Default,NTP,0000,0000,0000,,约翰
Dialogue: 0,0:07:09.68,0:07:11.04,*Default,NTP,0000,0000,0000,,说得完全正确，有一个
Dialogue: 0,0:07:11.04,0:07:12.88,*Default,NTP,0000,0000,0000,,数据的区别
Dialogue: 0,0:07:12.88,0:07:14.32,*Default,NTP,0000,0000,0000,,正在存储
Dialogue: 0,0:07:14.32,0:07:17.76,*Default,NTP,0000,0000,0000,,以及数据是如何打印的
Dialogue: 0,0:07:17.76,0:07:19.52,*Default,NTP,0000,0000,0000,,在打印中看起来列表是这样的
Dialogue: 0,0:07:19.52,0:07:20.80,*Default,NTP,0000,0000,0000,,永远
Dialogue: 0,0:07:20.80,0:07:23.60,*Default,NTP,0000,0000,0000,,但在存储方面却并非如此
Dialogue: 0,0:07:23.60,0:07:25.28,*Default,NTP,0000,0000,0000,,最后一个元素只是一个返回的指针，所以
Dialogue: 0,0:07:25.28,0:07:26.40,*Default,NTP,0000,0000,0000,,这不像
Dialogue: 0,0:07:26.40,0:07:28.80,*Default,NTP,0000,0000,0000,,我们不得不存储这个，导致内存耗尽
Dialogue: 0,0:07:28.80,0:07:30.16,*Default,NTP,0000,0000,0000,,清单不是很大
Dialogue: 0,0:07:30.16,0:07:32.48,*Default,NTP,0000,0000,0000,,直到你去打印这个东西
Dialogue: 0,0:07:32.48,0:07:34.24,*Default,NTP,0000,0000,0000,,你必须像哦最后那是什么
Dialogue: 0,0:07:34.24,0:07:35.76,*Default,NTP,0000,0000,0000,,元素哦，这是第一个列表哦，是什么
Dialogue: 0,0:07:35.76,0:07:37.36,*Default,NTP,0000,0000,0000,,上一次，现在你已经
Dialogue: 0,0:07:37.36,0:07:38.64,*Default,NTP,0000,0000,0000,,有点问题
Dialogue: 0,0:07:38.64,0:07:40.40,*Default,NTP,0000,0000,0000,,但从存储容量
Dialogue: 0,0:07:40.40,0:07:42.40,*Default,NTP,0000,0000,0000,,代表能力
Dialogue: 0,0:07:42.40,0:07:43.60,*Default,NTP,0000,0000,0000,,没问题，我只是有一个
Dialogue: 0,0:07:43.60,0:07:45.76,*Default,NTP,0000,0000,0000,,自我参照，你就可以了
Dialogue: 0,0:07:45.76,0:07:47.12,*Default,NTP,0000,0000,0000,,有人问在
Dialogue: 0,0:07:47.12,0:07:48.48,*Default,NTP,0000,0000,0000,,问题你能这么想吗
Dialogue: 0,0:07:48.48,0:07:49.84,*Default,NTP,0000,0000,0000,,你能想到的递归
Dialogue: 0,0:07:49.84,0:07:50.56,*Default,NTP,0000,0000,0000,,有点像
Dialogue: 0,0:07:50.56,0:07:52.00,*Default,NTP,0000,0000,0000,,你正在定义一个列表
Dialogue: 0,0:07:52.00,0:07:54.08,*Default,NTP,0000,0000,0000,,你自己
Dialogue: 0,0:07:54.08,0:07:56.32,*Default,NTP,0000,0000,0000,,是的，列表是递归的
Dialogue: 0,0:07:56.32,0:07:58.40,*Default,NTP,0000,0000,0000,,它包含自身的感觉
Dialogue: 0,0:07:58.40,0:08:01.60,*Default,NTP,0000,0000,0000,,还有打印列表的功能
Dialogue: 0,0:08:01.60,0:08:03.36,*Default,NTP,0000,0000,0000,,是递归的意思是它是什么
Dialogue: 0,0:08:03.36,0:08:05.68,*Default,NTP,0000,0000,0000,,它会打印一些括号吗
Dialogue: 0,0:08:05.68,0:08:09.04,*Default,NTP,0000,0000,0000,,然后它显示所有元素
Dialogue: 0,0:08:09.04,0:08:10.96,*Default,NTP,0000,0000,0000,,以便显示您的整个内容
Dialogue: 0,0:08:10.96,0:08:12.56,*Default,NTP,0000,0000,0000,,显示每个发出声音的元素
Dialogue: 0,0:08:12.56,0:08:13.92,*Default,NTP,0000,0000,0000,,就像我的递归一样
Dialogue: 0,0:08:13.92,0:08:15.36,*Default,NTP,0000,0000,0000,,它恰好有这个低音盒
Dialogue: 0,0:08:15.36,0:08:17.20,*Default,NTP,0000,0000,0000,,表示是否有时间显示
Dialogue: 0,0:08:17.20,0:08:18.72,*Default,NTP,0000,0000,0000,,整个事情又来了
Dialogue: 0,0:08:18.72,0:08:21.84,*Default,NTP,0000,0000,0000,,只是呃返回这个特殊的点
Dialogue: 0,0:08:21.84,0:08:25.36,*Default,NTP,0000,0000,0000,,点事物而不是继续
Dialogue: 0,0:08:25.36,0:08:26.96,*Default,NTP,0000,0000,0000,,好吧，太好了，这很好，某人的
Dialogue: 0,0:08:26.96,0:08:28.48,*Default,NTP,0000,0000,0000,,询问聊天是什么样的情况
Dialogue: 0,0:08:28.48,0:08:30.00,*Default,NTP,0000,0000,0000,,这种自我引用会是
Dialogue: 0,0:08:30.00,0:08:30.80,*Default,NTP,0000,0000,0000,,应用
Dialogue: 0,0:08:30.80,0:08:33.92,*Default,NTP,0000,0000,0000,,这是一个好问题，是的，所以
Dialogue: 0,0:08:33.92,0:08:37.44,*Default,NTP,0000,0000,0000,,嗯，如果您想代表一个网站
Dialogue: 0,0:08:37.44,0:08:40.56,*Default,NTP,0000,0000,0000,,其中每个网站就像一个列表
Dialogue: 0,0:08:40.56,0:08:42.48,*Default,NTP,0000,0000,0000,,它链接到的东西
Dialogue: 0,0:08:42.48,0:08:44.88,*Default,NTP,0000,0000,0000,,有时网站会链接到自身
Dialogue: 0,0:08:44.88,0:08:45.92,*Default,NTP,0000,0000,0000,,和
Dialogue: 0,0:08:45.92,0:08:47.60,*Default,NTP,0000,0000,0000,,所以如果你想模拟这个想法
Dialogue: 0,0:08:47.60,0:08:49.44,*Default,NTP,0000,0000,0000,,点击该链接九次
Dialogue: 0,0:08:49.44,0:08:51.20,*Default,NTP,0000,0000,0000,,哪种只是循环回到自身
Dialogue: 0,0:08:51.20,0:08:52.96,*Default,NTP,0000,0000,0000,,一遍又一遍，你可以做的很好
Dialogue: 0,0:08:52.96,0:08:54.00,*Default,NTP,0000,0000,0000,,使用 python
Dialogue: 0,0:08:54.00,0:08:56.32,*Default,NTP,0000,0000,0000,,列出世界上的事物
Dialogue: 0,0:08:56.32,0:08:58.00,*Default,NTP,0000,0000,0000,,指的是自己，这就是为什么你
Dialogue: 0,0:08:58.00,0:08:59.36,*Default,NTP,0000,0000,0000,,会用这个
Dialogue: 0,0:08:59.36,0:09:01.44,*Default,NTP,0000,0000,0000,,我看不出还有什么好的理由
Dialogue: 0,0:09:01.44,0:09:03.04,*Default,NTP,0000,0000,0000,,你会用这个虽然也许有但是
Dialogue: 0,0:09:03.04,0:09:04.72,*Default,NTP,0000,0000,0000,,我认为这是主要的
Dialogue: 0,0:09:04.72,0:09:07.68,*Default,NTP,0000,0000,0000,,是的，还有一个问题是
Dialogue: 0,0:09:07.68,0:09:09.04,*Default,NTP,0000,0000,0000,,点点点因为
Dialogue: 0,0:09:09.04,0:09:11.04,*Default,NTP,0000,0000,0000,,quote unquote 调用 t 的无限循环
Dialogue: 0,0:09:11.04,0:09:12.64,*Default,NTP,0000,0000,0000,,或者因为它自称是的
Dialogue: 0,0:09:12.64,0:09:14.48,*Default,NTP,0000,0000,0000,,本质上是一个无限循环
Dialogue: 0,0:09:14.48,0:09:16.40,*Default,NTP,0000,0000,0000,,嗯，你可以这样想
Dialogue: 0,0:09:16.40,0:09:17.84,*Default,NTP,0000,0000,0000,,我就是这么说的
Dialogue: 0,0:09:17.84,0:09:21.44,*Default,NTP,0000,0000,0000,,显示列表的函数
Dialogue: 0,0:09:21.44,0:09:23.84,*Default,NTP,0000,0000,0000,,是的，如果不是的话，就会无限循环
Dialogue: 0,0:09:23.84,0:09:25.68,*Default,NTP,0000,0000,0000,,因为我们有这个特别的事实
Dialogue: 0,0:09:25.68,0:09:26.16,*Default,NTP,0000,0000,0000,,案件
Dialogue: 0,0:09:26.16,0:09:28.40,*Default,NTP,0000,0000,0000,,那会很糟糕，所以这个对象
Dialogue: 0,0:09:28.40,0:09:29.92,*Default,NTP,0000,0000,0000,,本身是有限的，就像
Dialogue: 0,0:09:29.92,0:09:32.08,*Default,NTP,0000,0000,0000,,它指的是它自己，但它实际上只是
Dialogue: 0,0:09:32.08,0:09:33.44,*Default,NTP,0000,0000,0000,,包含一二三的列表
Dialogue: 0,0:09:33.44,0:09:36.64,*Default,NTP,0000,0000,0000,,四个五个元素但显示它
Dialogue: 0,0:09:36.64,0:09:38.80,*Default,NTP,0000,0000,0000,,如果你不小心，可能会花很长时间
Dialogue: 0,0:09:38.80,0:09:40.24,*Default,NTP,0000,0000,0000,,所以这真的是真的
Dialogue: 0,0:09:40.24,0:09:41.68,*Default,NTP,0000,0000,0000,,我可以有有趣的区别
Dialogue: 0,0:09:41.68,0:09:43.36,*Default,NTP,0000,0000,0000,,有限的东西
Dialogue: 0,0:09:43.36,0:09:44.88,*Default,NTP,0000,0000,0000,,但这需要无限量的
Dialogue: 0,0:09:44.88,0:09:46.72,*Default,NTP,0000,0000,0000,,是时候显示了，因为它是
Dialogue: 0,0:09:46.72,0:09:48.16,*Default,NTP,0000,0000,0000,,自我指涉
Dialogue: 0,0:09:48.16,0:09:50.08,*Default,NTP,0000,0000,0000,,没关系，就像在追逐你的一样
Dialogue: 0,0:09:50.08,0:09:51.68,*Default,NTP,0000,0000,0000,,尾巴
Dialogue: 0,0:09:51.68,0:09:55.28,*Default,NTP,0000,0000,0000,,是的，就像呃，好吧，所以这个
Dialogue: 0,0:09:55.28,0:09:56.72,*Default,NTP,0000,0000,0000,,有时出现在数学中我
Dialogue: 0,0:09:56.72,0:09:57.76,*Default,NTP,0000,0000,0000,,我猜我们是
Dialogue: 0,0:09:57.76,0:09:59.04,*Default,NTP,0000,0000,0000,,走得太远了，但你可以
Dialogue: 0,0:09:59.04,0:10:01.28,*Default,NTP,0000,0000,0000,,定义一个数字序列，例如
Dialogue: 0,0:10:01.28,0:10:04.96,*Default,NTP,0000,0000,0000,,它以 1 0 开头，然后是 1
Dialogue: 0,0:10:04.96,0:10:07.44,*Default,NTP,0000,0000,0000,,然后每个元素是
Dialogue: 0,0:10:07.44,0:10:09.28,*Default,NTP,0000,0000,0000,,前两个是斐波那契数列
Dialogue: 0,0:10:09.28,0:10:10.96,*Default,NTP,0000,0000,0000,,这种描述是有限的，但
Dialogue: 0,0:10:10.96,0:10:12.40,*Default,NTP,0000,0000,0000,,如果我愿意的话，序列是无限的
Dialogue: 0,0:10:12.40,0:10:13.76,*Default,NTP,0000,0000,0000,,把它写出来，就是这样
Dialogue: 0,0:10:13.76,0:10:14.32,*Default,NTP,0000,0000,0000,,在这
Dialogue: 0,0:10:14.32,0:10:17.36,*Default,NTP,0000,0000,0000,,很好很好
Dialogue: 0,0:10:17.36,0:10:19.52,*Default,NTP,0000,0000,0000,,好问题所以问题是什么
Dialogue: 0,0:10:19.52,0:10:20.96,*Default,NTP,0000,0000,0000,,之间的关系
Dialogue: 0,0:10:20.96,0:10:23.68,*Default,NTP,0000,0000,0000,,选择器函数和数据抽象
Dialogue: 0,0:10:23.68,0:10:25.84,*Default,NTP,0000,0000,0000,,与引用的点表达式
Dialogue: 0,0:10:25.84,0:10:28.08,*Default,NTP,0000,0000,0000,,对象的属性
Dialogue: 0,0:10:28.08,0:10:31.28,*Default,NTP,0000,0000,0000,,在呃面向对象编程中
Dialogue: 0,0:10:31.28,0:10:32.96,*Default,NTP,0000,0000,0000,,这就是我们正在努力实现的目标
Dialogue: 0,0:10:32.96,0:10:34.80,*Default,NTP,0000,0000,0000,,答案是没有区别
Dialogue: 0,0:10:34.80,0:10:36.64,*Default,NTP,0000,0000,0000,,所以在典型的程序中你不会
Dialogue: 0,0:10:36.64,0:10:37.60,*Default,NTP,0000,0000,0000,,两者都有
Dialogue: 0,0:10:37.60,0:10:39.52,*Default,NTP,0000,0000,0000,,你可以选择你要做什么
Dialogue: 0,0:10:39.52,0:10:41.68,*Default,NTP,0000,0000,0000,,事物选择器功能
Dialogue: 0,0:10:41.68,0:10:44.88,*Default,NTP,0000,0000,0000,,是想通过数据告诉你
Dialogue: 0,0:10:44.88,0:10:46.40,*Default,NTP,0000,0000,0000,,抽象你可以捆绑东西
Dialogue: 0,0:10:46.40,0:10:48.08,*Default,NTP,0000,0000,0000,,在一起又分开
Dialogue: 0,0:10:48.08,0:10:49.92,*Default,NTP,0000,0000,0000,,使用构造函数和选择器
Dialogue: 0,0:10:49.92,0:10:51.76,*Default,NTP,0000,0000,0000,,函数和这个
Dialogue: 0,0:10:51.76,0:10:54.24,*Default,NTP,0000,0000,0000,,功能实际上并不需要
Dialogue: 0,0:10:54.24,0:10:56.00,*Default,NTP,0000,0000,0000,,你可以定义自己的函数
Dialogue: 0,0:10:56.00,0:10:58.56,*Default,NTP,0000,0000,0000,,内置于 python 中，我们看到
Dialogue: 0,0:10:58.56,0:10:59.52,*Default,NTP,0000,0000,0000,,首次
Dialogue: 0,0:10:59.52,0:11:03.52,*Default,NTP,0000,0000,0000,,今天的物体视频是这样的
Dialogue: 0,0:11:03.52,0:11:06.00,*Default,NTP,0000,0000,0000,,事实上有很多不同的值
Dialogue: 0,0:11:06.00,0:11:07.04,*Default,NTP,0000,0000,0000,,抽象
Dialogue: 0,0:11:07.04,0:11:09.84,*Default,NTP,0000,0000,0000,,有自己的组件和那些
Dialogue: 0,0:11:09.84,0:11:11.44,*Default,NTP,0000,0000,0000,,组件和对象系统是
Dialogue: 0,0:11:11.44,0:11:12.56,*Default,NTP,0000,0000,0000,,称为属性
Dialogue: 0,0:11:12.56,0:11:15.04,*Default,NTP,0000,0000,0000,,您可以通过点符号访问它们
Dialogue: 0,0:11:15.04,0:11:17.20,*Default,NTP,0000,0000,0000,,就像典型的 python 程序一样
Dialogue: 0,0:11:17.20,0:11:19.04,*Default,NTP,0000,0000,0000,,你不会写很多构造函数
Dialogue: 0,0:11:19.04,0:11:20.88,*Default,NTP,0000,0000,0000,,和选择器代替
Dialogue: 0,0:11:20.88,0:11:23.92,*Default,NTP,0000,0000,0000,,你写了一堆呃点表达式
Dialogue: 0,0:11:23.92,0:11:26.24,*Default,NTP,0000,0000,0000,,访问特定属性
Dialogue: 0,0:11:26.24,0:11:28.16,*Default,NTP,0000,0000,0000,,没关系，你知道 python 可以
Dialogue: 0,0:11:28.16,0:11:29.52,*Default,NTP,0000,0000,0000,,以另一种方式建造
Dialogue: 0,0:11:29.52,0:11:32.08,*Default,NTP,0000,0000,0000,,你知道它是用一个
Dialogue: 0,0:11:32.08,0:11:34.32,*Default,NTP,0000,0000,0000,,列表的构造函数，你可以
Dialogue: 0,0:11:34.32,0:11:36.16,*Default,NTP,0000,0000,0000,,建立一个列表，例如
Dialogue: 0,0:11:36.16,0:11:39.28,*Default,NTP,0000,0000,0000,,元组一
Dialogue: 0,0:11:39.28,0:11:40.56,*Default,NTP,0000,0000,0000,,所以看起来基本上就像
Dialogue: 0,0:11:40.56,0:11:41.92,*Default,NTP,0000,0000,0000,,我们在数据中拥有的构造函数
Dialogue: 0,0:11:41.92,0:11:42.88,*Default,NTP,0000,0000,0000,,抽象
Dialogue: 0,0:11:42.88,0:11:44.56,*Default,NTP,0000,0000,0000,,但不是只有一堆
Dialogue: 0,0:11:44.56,0:11:46.56,*Default,NTP,0000,0000,0000,,访问元素的函数
Dialogue: 0,0:11:46.56,0:11:49.44,*Default,NTP,0000,0000,0000,,这个值的方式是 python 的构建方式
Dialogue: 0,0:11:49.44,0:11:51.28,*Default,NTP,0000,0000,0000,,在内部是您访问
Dialogue: 0,0:11:51.28,0:11:52.00,*Default,NTP,0000,0000,0000,,成分
Dialogue: 0,0:11:52.00,0:11:53.92,*Default,NTP,0000,0000,0000,,不是通过选择器函数，而是
Dialogue: 0,0:11:53.92,0:11:55.68,*Default,NTP,0000,0000,0000,,通过点表达式得到
Dialogue: 0,0:11:55.68,0:11:57.36,*Default,NTP,0000,0000,0000,,特定特征
Dialogue: 0,0:11:57.36,0:12:01.04,*Default,NTP,0000,0000,0000,,就像呃我猜有这样的
Dialogue: 0,0:12:01.04,0:12:02.56,*Default,NTP,0000,0000,0000,,对于列表有这个特殊的语法
Dialogue: 0,0:12:02.56,0:12:03.36,*Default,NTP,0000,0000,0000,,你在哪里使用
Dialogue: 0,0:12:03.36,0:12:04.88,*Default,NTP,0000,0000,0000,,方括号，但对于很多
Dialogue: 0,0:12:04.88,0:12:06.48,*Default,NTP,0000,0000,0000,,我想我应该有不同的东西
Dialogue: 0,0:12:06.48,0:12:07.44,*Default,NTP,0000,0000,0000,,谈论了日期
Dialogue: 0,0:12:07.44,0:12:10.16,*Default,NTP,0000,0000,0000,,对于日期，您可以使用 uh 点表达式来
Dialogue: 0,0:12:10.16,0:12:11.52,*Default,NTP,0000,0000,0000,,访问零件
Dialogue: 0,0:12:11.52,0:12:14.72,*Default,NTP,0000,0000,0000,,所以相同的概念有两种不同的方式
Dialogue: 0,0:12:14.72,0:12:15.36,*Default,NTP,0000,0000,0000,,正在做
Dialogue: 0,0:12:15.36,0:12:17.60,*Default,NTP,0000,0000,0000,,你可以自己推出
Dialogue: 0,0:12:17.60,0:12:18.96,*Default,NTP,0000,0000,0000,,定义函数，因此选择您的
Dialogue: 0,0:12:18.96,0:12:20.48,*Default,NTP,0000,0000,0000,,函数和构造函数
Dialogue: 0,0:12:20.48,0:12:21.92,*Default,NTP,0000,0000,0000,,或者您可以使用内置的
Dialogue: 0,0:12:21.92,0:12:24.00,*Default,NTP,0000,0000,0000,,python 中的功能，以便
Dialogue: 0,0:12:24.00,0:12:24.32,*Default,NTP,0000,0000,0000,,使用
Dialogue: 0,0:12:24.32,0:12:26.00,*Default,NTP,0000,0000,0000,,属性并通过点访问它们
Dialogue: 0,0:12:26.00,0:12:27.52,*Default,NTP,0000,0000,0000,,表达和
Dialogue: 0,0:12:27.52,0:12:28.72,*Default,NTP,0000,0000,0000,,你基本上在做同样的事情
Dialogue: 0,0:12:28.72,0:12:31.28,*Default,NTP,0000,0000,0000,,代码略有不同
Dialogue: 0,0:12:31.28,0:12:32.64,*Default,NTP,0000,0000,0000,,是的，了解这一点很重要
Dialogue: 0,0:12:32.64,0:12:34.32,*Default,NTP,0000,0000,0000,,方括号符号
Dialogue: 0,0:12:34.32,0:12:36.64,*Default,NTP,0000,0000,0000,,是一个选择器，它只是语法上的一个
Dialogue: 0,0:12:36.64,0:12:38.08,*Default,NTP,0000,0000,0000,,不同的选择器
Dialogue: 0,0:12:38.08,0:12:39.76,*Default,NTP,0000,0000,0000,,是的，所以所有这些都有点像
Dialogue: 0,0:12:39.76,0:12:42.24,*Default,NTP,0000,0000,0000,,嗯使用加号而不是
Dialogue: 0,0:12:42.24,0:12:43.76,*Default,NTP,0000,0000,0000,,添加功能
Dialogue: 0,0:12:43.76,0:12:45.84,*Default,NTP,0000,0000,0000,,同样的事情，只是语法不同
Dialogue: 0,0:12:45.84,0:12:47.28,*Default,NTP,0000,0000,0000,,方便一点
Dialogue: 0,0:12:47.28,0:12:50.48,*Default,NTP,0000,0000,0000,,因为我们经常使用它
Dialogue: 0,0:12:50.64,0:12:52.72,*Default,NTP,0000,0000,0000,,所以这是一个很好的问题
Dialogue: 0,0:12:52.72,0:12:55.04,*Default,NTP,0000,0000,0000,,关于切片分配的工作原理
Dialogue: 0,0:12:55.04,0:12:56.96,*Default,NTP,0000,0000,0000,,这是Python中最奇怪的事情
Dialogue: 0,0:12:56.96,0:12:58.32,*Default,NTP,0000,0000,0000,,也许我们甚至不应该在这方面教它
Dialogue: 0,0:12:58.32,0:13:00.00,*Default,NTP,0000,0000,0000,,当然，但我这样做了，现在我们将学习
Dialogue: 0,0:13:00.00,0:13:01.20,*Default,NTP,0000,0000,0000,,关于它
Dialogue: 0,0:13:01.20,0:13:03.04,*Default,NTP,0000,0000,0000,,这称为切片分配，因为我们
Dialogue: 0,0:13:03.04,0:13:04.56,*Default,NTP,0000,0000,0000,,吃一片
Dialogue: 0,0:13:04.56,0:13:06.96,*Default,NTP,0000,0000,0000,,和一个赋值语句，这有
Dialogue: 0,0:13:06.96,0:13:08.32,*Default,NTP,0000,0000,0000,,它自己的行为
Dialogue: 0,0:13:08.32,0:13:10.48,*Default,NTP,0000,0000,0000,,这不是你能想到的
Dialogue: 0,0:13:10.48,0:13:11.36,*Default,NTP,0000,0000,0000,,作为
Dialogue: 0,0:13:11.36,0:13:13.52,*Default,NTP,0000,0000,0000,,你就像首先计算切片
Dialogue: 0,0:13:13.52,0:13:15.28,*Default,NTP,0000,0000,0000,,然后你分配给它
Dialogue: 0,0:13:15.28,0:13:17.60,*Default,NTP,0000,0000,0000,,相反，这整件事都是它的
Dialogue: 0,0:13:17.60,0:13:19.04,*Default,NTP,0000,0000,0000,,自己建造
Dialogue: 0,0:13:19.04,0:13:21.28,*Default,NTP,0000,0000,0000,,所以它有其独特的行为
Dialogue: 0,0:13:21.28,0:13:22.88,*Default,NTP,0000,0000,0000,,你必须学习，这是不同的
Dialogue: 0,0:13:22.88,0:13:23.76,*Default,NTP,0000,0000,0000,,从如何所有
Dialogue: 0,0:13:23.76,0:13:26.80,*Default,NTP,0000,0000,0000,,其他作业的工作方式与此相同
Dialogue: 0,0:13:26.80,0:13:28.40,*Default,NTP,0000,0000,0000,,作品
Dialogue: 0,0:13:28.40,0:13:30.96,*Default,NTP,0000,0000,0000,,这一定是你可以做的事情
Dialogue: 0,0:13:30.96,0:13:31.52,*Default,NTP,0000,0000,0000,,片
Dialogue: 0,0:13:31.52,0:13:34.24,*Default,NTP,0000,0000,0000,,比如一个列表和一些你可以改变的东西
Dialogue: 0,0:13:34.24,0:13:36.72,*Default,NTP,0000,0000,0000,,就像一个清单
Dialogue: 0,0:13:36.72,0:13:39.52,*Default,NTP,0000,0000,0000,,这必须有元素所以如果
Dialogue: 0,0:13:39.52,0:13:41.60,*Default,NTP,0000,0000,0000,,例如我在这里放了五个
Dialogue: 0,0:13:41.60,0:13:44.56,*Default,NTP,0000,0000,0000,,我会遇到一个错误，它会说
Dialogue: 0,0:13:44.56,0:13:46.00,*Default,NTP,0000,0000,0000,,只能分配一个
Dialogue: 0,0:13:46.00,0:13:48.56,*Default,NTP,0000,0000,0000,,可迭代，问题是五个
Dialogue: 0,0:13:48.56,0:13:49.28,*Default,NTP,0000,0000,0000,,在这儿
Dialogue: 0,0:13:49.28,0:13:52.08,*Default,NTP,0000,0000,0000,,这在切片中是不允许的
Dialogue: 0,0:13:52.08,0:13:53.04,*Default,NTP,0000,0000,0000,,任务
Dialogue: 0,0:13:53.04,0:13:54.48,*Default,NTP,0000,0000,0000,,你一定是这样的
Dialogue: 0,0:13:54.48,0:13:56.24,*Default,NTP,0000,0000,0000,,里面有类似元素的东西
Dialogue: 0,0:13:56.24,0:13:58.40,*Default,NTP,0000,0000,0000,,列表或元组或字符串或
Dialogue: 0,0:13:58.40,0:13:59.92,*Default,NTP,0000,0000,0000,,任何
Dialogue: 0,0:13:59.92,0:14:02.80,*Default,NTP,0000,0000,0000,,现在它做了什么所以我们有
Dialogue: 0,0:14:02.80,0:14:04.72,*Default,NTP,0000,0000,0000,,我们知道域名正确
Dialogue: 0,0:14:04.72,0:14:06.24,*Default,NTP,0000,0000,0000,,这需要是我们能够做到的
Dialogue: 0,0:14:06.24,0:14:08.24,*Default,NTP,0000,0000,0000,,切片，我们需要决定
Dialogue: 0,0:14:08.24,0:14:11.28,*Default,NTP,0000,0000,0000,,我们如何切割它以及我们
Dialogue: 0,0:14:11.28,0:14:14.56,*Default,NTP,0000,0000,0000,,需要插入一些元素
Dialogue: 0,0:14:14.56,0:14:16.16,*Default,NTP,0000,0000,0000,,现在我们必须谈谈行为
Dialogue: 0,0:14:16.16,0:14:17.92,*Default,NTP,0000,0000,0000,,其行为是
Dialogue: 0,0:14:17.92,0:14:22.00,*Default,NTP,0000,0000,0000,,被修改的方式被修改
Dialogue: 0,0:14:22.00,0:14:24.56,*Default,NTP,0000,0000,0000,,是这里的任何切片吗
Dialogue: 0,0:14:24.56,0:14:28.00,*Default,NTP,0000,0000,0000,,从 s 中删除，然后在
Dialogue: 0,0:14:28.00,0:14:30.72,*Default,NTP,0000,0000,0000,,该切片被删除的位置
Dialogue: 0,0:14:30.72,0:14:34.00,*Default,NTP,0000,0000,0000,,所有的元素都是
Dialogue: 0,0:14:34.00,0:14:37.20,*Default,NTP,0000,0000,0000,,插入到 s 中
Dialogue: 0,0:14:37.20,0:14:39.92,*Default,NTP,0000,0000,0000,,s 实际上没有任何元素
Dialogue: 0,0:14:39.92,0:14:40.24,*Default,NTP,0000,0000,0000,,从
Dialogue: 0,0:14:40.24,0:14:42.24,*Default,NTP,0000,0000,0000,,零到零，因为这是零
Dialogue: 0,0:14:42.24,0:14:44.16,*Default,NTP,0000,0000,0000,,length 切片它确实有一个位置
Dialogue: 0,0:14:44.16,0:14:47.60,*Default,NTP,0000,0000,0000,,就像就在这个之前
Dialogue: 0,0:14:47.60,0:14:49.52,*Default,NTP,0000,0000,0000,,但它不包括这个或那个
Dialogue: 0,0:14:49.52,0:14:51.36,*Default,NTP,0000,0000,0000,,两个或三个，因为它只会
Dialogue: 0,0:14:51.36,0:14:53.44,*Default,NTP,0000,0000,0000,,从零到零
Dialogue: 0,0:14:53.44,0:14:56.88,*Default,NTP,0000,0000,0000,,所以如果我有
Dialogue: 0,0:14:56.88,0:14:59.12,*Default,NTP,0000,0000,0000,,刚刚从零到零我切了一个切片
Dialogue: 0,0:14:59.12,0:15:01.76,*Default,NTP,0000,0000,0000,,会得到一个空列表
Dialogue: 0,0:15:01.76,0:15:03.36,*Default,NTP,0000,0000,0000,,因为没有任何元素来自
Dialogue: 0,0:15:03.36,0:15:04.96,*Default,NTP,0000,0000,0000,,从零到零的切片，但那就是
Dialogue: 0,0:15:04.96,0:15:06.96,*Default,NTP,0000,0000,0000,,不是我们正在做的事情，我们正在分配给
Dialogue: 0,0:15:06.96,0:15:08.00,*Default,NTP,0000,0000,0000,,这片
Dialogue: 0,0:15:08.00,0:15:09.76,*Default,NTP,0000,0000,0000,,我们正在分配一些新元素
Dialogue: 0,0:15:09.76,0:15:11.76,*Default,NTP,0000,0000,0000,,这意味着我们要插入到 s 中
Dialogue: 0,0:15:11.76,0:15:13.76,*Default,NTP,0000,0000,0000,,t 中所有为 4 的元素
Dialogue: 0,0:15:13.76,0:15:15.44,*Default,NTP,0000,0000,0000,,5 和 6 我们要把它们放在
Dialogue: 0,0:15:15.44,0:15:16.56,*Default,NTP,0000,0000,0000,,特定位置
Dialogue: 0,0:15:16.56,0:15:19.36,*Default,NTP,0000,0000,0000,,这恰好是在开始时所以
Dialogue: 0,0:15:19.36,0:15:20.72,*Default,NTP,0000,0000,0000,,我们得到 4 5 和 6
Dialogue: 0,0:15:20.72,0:15:24.00,*Default,NTP,0000,0000,0000,,如果一开始我有
Dialogue: 0,0:15:24.00,0:15:26.24,*Default,NTP,0000,0000,0000,,从 1 切片到 1 仍然是 0
Dialogue: 0,0:15:26.24,0:15:27.84,*Default,NTP,0000,0000,0000,,长度切片但它在不同的地方
Dialogue: 0,0:15:27.84,0:15:29.20,*Default,NTP,0000,0000,0000,,地方
Dialogue: 0,0:15:29.20,0:15:32.80,*Default,NTP,0000,0000,0000,,所以四五六就会出现
Dialogue: 0,0:15:32.80,0:15:34.72,*Default,NTP,0000,0000,0000,,从位置一开始，即
Dialogue: 0,0:15:34.72,0:15:36.80,*Default,NTP,0000,0000,0000,,这个空切片就是它
Dialogue: 0,0:15:36.80,0:15:37.52,*Default,NTP,0000,0000,0000,,会像
Dialogue: 0,0:15:37.52,0:15:40.24,*Default,NTP,0000,0000,0000,,就在那里，这就是我们的地方
Dialogue: 0,0:15:40.24,0:15:40.88,*Default,NTP,0000,0000,0000,,把四个
Dialogue: 0,0:15:40.88,0:15:45.04,*Default,NTP,0000,0000,0000,,五六如果我们没有非空
Dialogue: 0,0:15:45.04,0:15:45.84,*Default,NTP,0000,0000,0000,,片
Dialogue: 0,0:15:45.84,0:15:47.84,*Default,NTP,0000,0000,0000,,从位置一到位置的切片
Dialogue: 0,0:15:47.84,0:15:49.36,*Default,NTP,0000,0000,0000,,两个封面
Dialogue: 0,0:15:49.36,0:15:53.60,*Default,NTP,0000,0000,0000,,两个这将删除两个和
Dialogue: 0,0:15:53.60,0:15:54.00,*Default,NTP,0000,0000,0000,,代替
Dialogue: 0,0:15:54.00,0:15:57.28,*Default,NTP,0000,0000,0000,,它与四五六所以我们得到一个
Dialogue: 0,0:15:57.28,0:15:57.60,*Default,NTP,0000,0000,0000,,四
Dialogue: 0,0:15:57.60,0:16:00.16,*Default,NTP,0000,0000,0000,,五六三我想原因是这个
Dialogue: 0,0:16:00.16,0:16:00.96,*Default,NTP,0000,0000,0000,,存在
Dialogue: 0,0:16:00.96,0:16:03.12,*Default,NTP,0000,0000,0000,,python 试图做到这一点吗
Dialogue: 0,0:16:03.12,0:16:04.80,*Default,NTP,0000,0000,0000,,高效，所以如果你喜欢的话
Dialogue: 0,0:16:04.80,0:16:06.48,*Default,NTP,0000,0000,0000,,并删除了所有这些元素
Dialogue: 0,0:16:06.48,0:16:07.92,*Default,NTP,0000,0000,0000,,然后你开始插入
Dialogue: 0,0:16:07.92,0:16:09.92,*Default,NTP,0000,0000,0000,,之后有时会是这样
Dialogue: 0,0:16:09.92,0:16:11.04,*Default,NTP,0000,0000,0000,,慢一点
Dialogue: 0,0:16:11.04,0:16:12.72,*Default,NTP,0000,0000,0000,,而不是一次性完成所有事情
Dialogue: 0,0:16:12.72,0:16:14.32,*Default,NTP,0000,0000,0000,,就是去掉切片然后拍打
Dialogue: 0,0:16:14.32,0:16:17.28,*Default,NTP,0000,0000,0000,,在一些替换值中，但是
Dialogue: 0,0:16:17.28,0:16:19.12,*Default,NTP,0000,0000,0000,,这确实意味着它就像又一块
Dialogue: 0,0:16:19.12,0:16:20.56,*Default,NTP,0000,0000,0000,,语法
Dialogue: 0,0:16:20.56,0:16:23.12,*Default,NTP,0000,0000,0000,,你可能想知道，因为我们
Dialogue: 0,0:16:23.12,0:16:24.56,*Default,NTP,0000,0000,0000,,我想你需要在课程中教授
Dialogue: 0,0:16:24.56,0:16:26.24,*Default,NTP,0000,0000,0000,,知道它，虽然这绝对不是
Dialogue: 0,0:16:26.24,0:16:27.44,*Default,NTP,0000,0000,0000,,最重要的事情
Dialogue: 0,0:16:27.44,0:16:28.72,*Default,NTP,0000,0000,0000,,你应该从中学习
Dialogue: 0,0:16:28.72,0:16:30.72,*Default,NTP,0000,0000,0000,,讲座恰好又是一场
Dialogue: 0,0:16:30.72,0:16:32.48,*Default,NTP,0000,0000,0000,,这样你就可以改变内容
Dialogue: 0,0:16:32.48,0:16:34.48,*Default,NTP,0000,0000,0000,,一个列表
Dialogue: 0,0:16:34.48,0:16:36.80,*Default,NTP,0000,0000,0000,,好问题那么为什么不呢？
Dialogue: 0,0:16:36.80,0:16:37.52,*Default,NTP,0000,0000,0000,,成为一个
Dialogue: 0,0:16:37.52,0:16:40.64,*Default,NTP,0000,0000,0000,,s 的元素，原因是
Dialogue: 0,0:16:40.64,0:16:42.96,*Default,NTP,0000,0000,0000,,切片分配是如何工作的
Dialogue: 0,0:16:42.96,0:16:45.28,*Default,NTP,0000,0000,0000,,是它需要一个装满的容器
Dialogue: 0,0:16:45.28,0:16:46.08,*Default,NTP,0000,0000,0000,,元素
Dialogue: 0,0:16:46.08,0:16:47.76,*Default,NTP,0000,0000,0000,,它并没有把整个容器
Dialogue: 0,0:16:47.76,0:16:50.00,*Default,NTP,0000,0000,0000,,in s 而不是 put 的元素
Dialogue: 0,0:16:50.00,0:16:50.96,*Default,NTP,0000,0000,0000,,那个容器
Dialogue: 0,0:16:50.96,0:16:54.08,*Default,NTP,0000,0000,0000,,现在不一定
Dialogue: 0,0:16:54.08,0:16:57.28,*Default,NTP,0000,0000,0000,,例如，复制这些内容
Dialogue: 0,0:16:57.28,0:17:01.04,*Default,NTP,0000,0000,0000,,里面有清单
Dialogue: 0,0:17:03.76,0:17:07.04,*Default,NTP,0000,0000,0000,,所以里面有一个列表
Dialogue: 0,0:17:07.04,0:17:09.36,*Default,NTP,0000,0000,0000,,那么我要做的就是
Dialogue: 0,0:17:09.36,0:17:10.88,*Default,NTP,0000,0000,0000,,将删除两个
Dialogue: 0,0:17:10.88,0:17:12.56,*Default,NTP,0000,0000,0000,,因为这是从一到二的切片
Dialogue: 0,0:17:12.56,0:17:14.48,*Default,NTP,0000,0000,0000,,你可以在这里看到索引
Dialogue: 0,0:17:14.48,0:17:16.40,*Default,NTP,0000,0000,0000,,我将用数字替换它
Dialogue: 0,0:17:16.40,0:17:18.08,*Default,NTP,0000,0000,0000,,四个这个列表
Dialogue: 0,0:17:18.08,0:17:20.80,*Default,NTP,0000,0000,0000,,和数字 6 那么我们最终会得到什么
Dialogue: 0,0:17:20.80,0:17:21.84,*Default,NTP,0000,0000,0000,,和
Dialogue: 0,0:17:21.84,0:17:25.28,*Default,NTP,0000,0000,0000,,是此列表中的一个
Dialogue: 0,0:17:25.28,0:17:27.28,*Default,NTP,0000,0000,0000,,数字六和数字三
Dialogue: 0,0:17:27.28,0:17:29.76,*Default,NTP,0000,0000,0000,,之前在那里
Dialogue: 0,0:17:29.76,0:17:31.76,*Default,NTP,0000,0000,0000,,聊天的一个问题是为什么你可以
Dialogue: 0,0:17:31.76,0:17:33.20,*Default,NTP,0000,0000,0000,,解释为什么你不能
Dialogue: 0,0:17:33.20,0:17:35.92,*Default,NTP,0000,0000,0000,,再次将整数插入列表中
Dialogue: 0,0:17:35.92,0:17:37.04,*Default,NTP,0000,0000,0000,,一般你可以
Dialogue: 0,0:17:37.04,0:17:39.60,*Default,NTP,0000,0000,0000,,如果您是，请将整数插入列表中
Dialogue: 0,0:17:39.60,0:17:40.08,*Default,NTP,0000,0000,0000,,使用
Dialogue: 0,0:17:40.08,0:17:42.72,*Default,NTP,0000,0000,0000,,除了切片分配之外的其他东西所以
Dialogue: 0,0:17:42.72,0:17:44.00,*Default,NTP,0000,0000,0000,,如果我只是使用
Dialogue: 0,0:17:44.00,0:17:45.60,*Default,NTP,0000,0000,0000,,元素分配然后我可以把
Dialogue: 0,0:17:45.60,0:17:47.60,*Default,NTP,0000,0000,0000,,那里有第五个，让我们再选一个
Dialogue: 0,0:17:47.60,0:17:49.04,*Default,NTP,0000,0000,0000,,数字 8 里面没有
Dialogue: 0,0:17:49.04,0:17:49.92,*Default,NTP,0000,0000,0000,,问题
Dialogue: 0,0:17:49.92,0:17:51.84,*Default,NTP,0000,0000,0000,,它只会改变元素数量
Dialogue: 0,0:17:51.84,0:17:53.12,*Default,NTP,0000,0000,0000,,其中之一
Dialogue: 0,0:17:53.12,0:17:57.28,*Default,NTP,0000,0000,0000,,到八没关系，原因是
Dialogue: 0,0:17:57.28,0:17:59.36,*Default,NTP,0000,0000,0000,,呃我们遇到了一个问题是我们
Dialogue: 0,0:17:59.36,0:18:00.64,*Default,NTP,0000,0000,0000,,使用切片
Dialogue: 0,0:18:00.64,0:18:03.12,*Default,NTP,0000,0000,0000,,这是一件奇怪的事情
Dialogue: 0,0:18:03.12,0:18:05.04,*Default,NTP,0000,0000,0000,,从中获取多个元素
Dialogue: 0,0:18:05.04,0:18:07.36,*Default,NTP,0000,0000,0000,,s 并用元素替换它们
Dialogue: 0,0:18:07.36,0:18:09.20,*Default,NTP,0000,0000,0000,,从八开始哦除了八没有
Dialogue: 0,0:18:09.20,0:18:10.88,*Default,NTP,0000,0000,0000,,这就是我们遇到的任何元素
Dialogue: 0,0:18:10.88,0:18:11.92,*Default,NTP,0000,0000,0000,,问题在这里
Dialogue: 0,0:18:11.92,0:18:14.56,*Default,NTP,0000,0000,0000,,切片分配仅在以下情况下才有效
Dialogue: 0,0:18:14.56,0:18:16.24,*Default,NTP,0000,0000,0000,,右手边是什么
Dialogue: 0,0:18:16.24,0:18:18.24,*Default,NTP,0000,0000,0000,,评估为具有元素的东西
Dialogue: 0,0:18:18.24,0:18:19.68,*Default,NTP,0000,0000,0000,,就像一个列表一样
Dialogue: 0,0:18:19.68,0:18:22.96,*Default,NTP,0000,0000,0000,,所以我可以把 910 放在这里
Dialogue: 0,0:18:22.96,0:18:25.44,*Default,NTP,0000,0000,0000,,或者我可以把这两个都放在
Dialogue: 0,0:18:25.44,0:18:26.16,*Default,NTP,0000,0000,0000,,列表
Dialogue: 0,0:18:26.16,0:18:28.64,*Default,NTP,0000,0000,0000,,然后它所做的就是替换
Dialogue: 0,0:18:28.64,0:18:30.16,*Default,NTP,0000,0000,0000,,之前里面有什么
Dialogue: 0,0:18:30.16,0:18:32.40,*Default,NTP,0000,0000,0000,,在这个切片中从一到三
Dialogue: 0,0:18:32.40,0:18:34.24,*Default,NTP,0000,0000,0000,,这些新元素910
Dialogue: 0,0:18:34.24,0:18:36.72,*Default,NTP,0000,0000,0000,,但它实际上并没有列出一个列表
Dialogue: 0,0:18:36.72,0:18:38.32,*Default,NTP,0000,0000,0000,,其中包含九和十
Dialogue: 0,0:18:38.32,0:18:40.64,*Default,NTP,0000,0000,0000,,元素本身
Dialogue: 0,0:18:40.64,0:18:43.28,*Default,NTP,0000,0000,0000,,史蒂夫问你为什么使用 s 0
Dialogue: 0,0:18:43.28,0:18:44.48,*Default,NTP,0000,0000,0000,,冒号 0 代替 s
Dialogue: 0,0:18:44.48,0:18:47.92,*Default,NTP,0000,0000,0000,,0 冒号 1. 区别是 0 的 s
Dialogue: 0,0:18:47.92,0:18:50.48,*Default,NTP,0000,0000,0000,,冒号 0 不被替换
Dialogue: 0,0:18:50.48,0:18:53.84,*Default,NTP,0000,0000,0000,,在该位置插入的任何元素
Dialogue: 0,0:18:53.84,0:18:55.12,*Default,NTP,0000,0000,0000,,0。
Dialogue: 0,0:18:55.12,0:18:58.24,*Default,NTP,0000,0000,0000,,s 零冒号将被替换
Dialogue: 0,0:18:58.24,0:18:59.76,*Default,NTP,0000,0000,0000,,第 0 个位置是什么
Dialogue: 0,0:18:59.76,0:19:01.60,*Default,NTP,0000,0000,0000,,无论右手边是什么，所以他
Dialogue: 0,0:19:01.60,0:19:02.64,*Default,NTP,0000,0000,0000,,本来可以这么做的
Dialogue: 0,0:19:02.64,0:19:05.36,*Default,NTP,0000,0000,0000,,所以这是一个插入与插入的问题
Dialogue: 0,0:19:05.36,0:19:07.28,*Default,NTP,0000,0000,0000,,替代品
Dialogue: 0,0:19:07.28,0:19:10.80,*Default,NTP,0000,0000,0000,,是的，所以第二个版本失去了第一个版本
Dialogue: 0,0:19:10.80,0:19:13.44,*Default,NTP,0000,0000,0000,,迈克尔的要求低于零
Dialogue: 0,0:19:13.44,0:19:14.00,*Default,NTP,0000,0000,0000,,与...一样
Dialogue: 0,0:19:14.00,0:19:18.08,*Default,NTP,0000,0000,0000,,s 零 冒号 零 是和否
Dialogue: 0,0:19:18.08,0:19:21.92,*Default,NTP,0000,0000,0000,,嗯，如果你说 s 低于零
Dialogue: 0,0:19:21.92,0:19:25.12,*Default,NTP,0000,0000,0000,,等于某事然后你
Dialogue: 0,0:19:25.12,0:19:28.56,*Default,NTP,0000,0000,0000,,没有使用该切片分配
Dialogue: 0,0:19:28.56,0:19:29.36,*Default,NTP,0000,0000,0000,,操作员
Dialogue: 0,0:19:29.36,0:19:31.04,*Default,NTP,0000,0000,0000,,所以这是不同的然后你被允许
Dialogue: 0,0:19:31.04,0:19:32.56,*Default,NTP,0000,0000,0000,,右手有你想要的任何东西
Dialogue: 0,0:19:32.56,0:19:33.76,*Default,NTP,0000,0000,0000,,边
Dialogue: 0,0:19:33.76,0:19:37.12,*Default,NTP,0000,0000,0000,,是的，所以要区分
Dialogue: 0,0:19:37.12,0:19:39.60,*Default,NTP,0000,0000,0000,,具有简单索引的列表分配和
Dialogue: 0,0:19:39.60,0:19:41.52,*Default,NTP,0000,0000,0000,,切片赋值为
Dialogue: 0,0:19:41.52,0:19:44.48,*Default,NTP,0000,0000,0000,,约翰早些时候说过，这是一个事情，并且
Dialogue: 0,0:19:44.48,0:19:46.24,*Default,NTP,0000,0000,0000,,就其本身而言，它与其他的不同
Dialogue: 0,0:19:46.24,0:19:48.48,*Default,NTP,0000,0000,0000,,作业类型
Dialogue: 0,0:19:48.48,0:19:49.92,*Default,NTP,0000,0000,0000,,是的，让我们尝试得到这两个
Dialogue: 0,0:19:49.92,0:19:51.36,*Default,NTP,0000,0000,0000,,事物彼此相邻，因为它们
Dialogue: 0,0:19:51.36,0:19:53.04,*Default,NTP,0000,0000,0000,,有不同的图片
Dialogue: 0,0:19:53.04,0:19:54.56,*Default,NTP,0000,0000,0000,,图片中的差异是
Dialogue: 0,0:19:54.56,0:19:56.80,*Default,NTP,0000,0000,0000,,重要但很难跟踪
Dialogue: 0,0:19:56.80,0:19:58.64,*Default,NTP,0000,0000,0000,,同时
Dialogue: 0,0:19:58.64,0:20:00.56,*Default,NTP,0000,0000,0000,,所以切片分配占据了所有
Dialogue: 0,0:20:00.56,0:20:02.64,*Default,NTP,0000,0000,0000,,t 中的元素并将它们放入 s 中
Dialogue: 0,0:20:02.64,0:20:04.24,*Default,NTP,0000,0000,0000,,所以现在是以前有三个
Dialogue: 0,0:20:04.24,0:20:06.00,*Default,NTP,0000,0000,0000,,元素有六个元素
Dialogue: 0,0:20:06.00,0:20:08.48,*Default,NTP,0000,0000,0000,,y6 好吧，它有三个，我们放了三个
Dialogue: 0,0:20:08.48,0:20:10.88,*Default,NTP,0000,0000,0000,,更多内容
Dialogue: 0,0:20:10.88,0:20:12.96,*Default,NTP,0000,0000,0000,,这不是切片分配，而是
Dialogue: 0,0:20:12.96,0:20:14.56,*Default,NTP,0000,0000,0000,,代替元素赋值
Dialogue: 0,0:20:14.56,0:20:17.60,*Default,NTP,0000,0000,0000,,只是替换了其中的内容
Dialogue: 0,0:20:17.60,0:20:21.28,*Default,NTP,0000,0000,0000,,s 的位置零，并引用
Dialogue: 0,0:20:21.28,0:20:24.32,*Default,NTP,0000,0000,0000,,t，所以我们失去了一个
Dialogue: 0,0:20:24.32,0:20:25.60,*Default,NTP,0000,0000,0000,,请记住，在这一次我们没有失去
Dialogue: 0,0:20:25.60,0:20:27.52,*Default,NTP,0000,0000,0000,,一个，在这里我们失去了一个，因为我们
Dialogue: 0,0:20:27.52,0:20:29.76,*Default,NTP,0000,0000,0000,,将 t 替换为对 t 的引用
Dialogue: 0,0:20:29.76,0:20:31.84,*Default,NTP,0000,0000,0000,,没有四和五四
Dialogue: 0,0:20:31.84,0:20:33.52,*Default,NTP,0000,0000,0000,,六点已经在这里了
Dialogue: 0,0:20:33.52,0:20:37.36,*Default,NTP,0000,0000,0000,,只有 t 而这曾经是三个
Dialogue: 0,0:20:37.36,0:20:39.28,*Default,NTP,0000,0000,0000,,elements long 仍然是三个元素
Dialogue: 0,0:20:39.28,0:20:41.52,*Default,NTP,0000,0000,0000,,长元素赋值永远不会改变
Dialogue: 0,0:20:41.52,0:20:43.12,*Default,NTP,0000,0000,0000,,它只是改变列表的长度
Dialogue: 0,0:20:43.12,0:20:43.92,*Default,NTP,0000,0000,0000,,这里面是什么
Dialogue: 0,0:20:43.92,0:20:47.20,*Default,NTP,0000,0000,0000,,切片分配不同，它会改变
Dialogue: 0,0:20:47.20,0:20:48.24,*Default,NTP,0000,0000,0000,,列表的长度
Dialogue: 0,0:20:48.24,0:20:50.88,*Default,NTP,0000,0000,0000,,它用一些替换现有的切片
Dialogue: 0,0:20:50.88,0:20:53.04,*Default,NTP,0000,0000,0000,,新元素
Dialogue: 0,0:20:53.04,0:20:54.48,*Default,NTP,0000,0000,0000,,奥黛丽问我们什么时候列出清单
Dialogue: 0,0:20:54.48,0:20:56.72,*Default,NTP,0000,0000,0000,,切片做的是我们现在的可迭代
Dialogue: 0,0:20:56.72,0:20:58.40,*Default,NTP,0000,0000,0000,,设置需要切片的列表
Dialogue: 0,0:20:58.40,0:21:00.08,*Default,NTP,0000,0000,0000,,相同的长度更长还是可以
Dialogue: 0,0:21:00.08,0:21:02.08,*Default,NTP,0000,0000,0000,,比现有列表切片短
Dialogue: 0,0:21:02.08,0:21:04.40,*Default,NTP,0000,0000,0000,,它可以是你想要的任何东西所以
Dialogue: 0,0:21:04.40,0:21:05.44,*Default,NTP,0000,0000,0000,,可迭代的
Dialogue: 0,0:21:05.44,0:21:07.44,*Default,NTP,0000,0000,0000,,抱歉，切片可能为零
Dialogue: 0,0:21:07.44,0:21:08.80,*Default,NTP,0000,0000,0000,,你正在插入
Dialogue: 0,0:21:08.80,0:21:10.48,*Default,NTP,0000,0000,0000,,它的长度可以是一二三或
Dialogue: 0,0:21:10.48,0:21:12.16,*Default,NTP,0000,0000,0000,,任何你想要的和你要去的
Dialogue: 0,0:21:12.16,0:21:13.04,*Default,NTP,0000,0000,0000,,去做
Dialogue: 0,0:21:13.04,0:21:15.12,*Default,NTP,0000,0000,0000,,是这样想的所以就
Dialogue: 0,0:21:15.12,0:21:16.88,*Default,NTP,0000,0000,0000,,左边是你说的切片
Dialogue: 0,0:21:16.88,0:21:18.32,*Default,NTP,0000,0000,0000,,抓住那些元素
Dialogue: 0,0:21:18.32,0:21:20.88,*Default,NTP,0000,0000,0000,,把它们扔掉然后拿走任何东西
Dialogue: 0,0:21:20.88,0:21:22.08,*Default,NTP,0000,0000,0000,,在右手边和
Dialogue: 0,0:21:22.08,0:21:24.64,*Default,NTP,0000,0000,0000,,把他们推到这个位置，这样他们就可以
Dialogue: 0,0:21:24.64,0:21:25.44,*Default,NTP,0000,0000,0000,,更长
Dialogue: 0,0:21:25.44,0:21:28.96,*Default,NTP,0000,0000,0000,,更短一点没关系
Dialogue: 0,0:21:28.96,0:21:30.64,*Default,NTP,0000,0000,0000,,确实偶尔会出现一次
Dialogue: 0,0:21:30.64,0:21:32.40,*Default,NTP,0000,0000,0000,,是你会有一些很长的清单
Dialogue: 0,0:21:32.40,0:21:33.76,*Default,NTP,0000,0000,0000,,你意识到哦我不想要一些
Dialogue: 0,0:21:33.76,0:21:34.72,*Default,NTP,0000,0000,0000,,那些元素
Dialogue: 0,0:21:34.72,0:21:36.96,*Default,NTP,0000,0000,0000,,所以你可以把它们切掉
Dialogue: 0,0:21:36.96,0:21:37.76,*Default,NTP,0000,0000,0000,,意思是
Dialogue: 0,0:21:37.76,0:21:39.76,*Default,NTP,0000,0000,0000,,呃找到你想要的切片
Dialogue: 0,0:21:39.76,0:21:42.16,*Default,NTP,0000,0000,0000,,元素二到元素五这么说吧
Dialogue: 0,0:21:42.16,0:21:44.08,*Default,NTP,0000,0000,0000,,这就是三个
Dialogue: 0,0:21:44.08,0:21:46.48,*Default,NTP,0000,0000,0000,,五个和六个我们可以分配
Dialogue: 0,0:21:46.48,0:21:48.24,*Default,NTP,0000,0000,0000,,到空列表的意思
Dialogue: 0,0:21:48.24,0:21:50.72,*Default,NTP,0000,0000,0000,,取出这些元素并替换它们
Dialogue: 0,0:21:50.72,0:21:51.84,*Default,NTP,0000,0000,0000,,什么也没有
Dialogue: 0,0:21:51.84,0:21:54.00,*Default,NTP,0000,0000,0000,,然后他们就走了所以这就是
Dialogue: 0,0:21:54.00,0:21:55.84,*Default,NTP,0000,0000,0000,,这是我最常用的用法
Dialogue: 0,0:21:55.84,0:21:57.60,*Default,NTP,0000,0000,0000,,对于切片赋值运算符是
Dialogue: 0,0:21:57.60,0:22:00.24,*Default,NTP,0000,0000,0000,,只是从列表中删除一些东西
Dialogue: 0,0:22:00.24,0:22:02.08,*Default,NTP,0000,0000,0000,,这实际上并不罕见
Dialogue: 0,0:22:02.08,0:22:04.80,*Default,NTP,0000,0000,0000,,类似的东西
Dialogue: 0,0:22:04.80,0:22:07.68,*Default,NTP,0000,0000,0000,,下一个问题是什么
Dialogue: 0,0:22:07.68,0:22:09.76,*Default,NTP,0000,0000,0000,,元组和列表之间的区别
Dialogue: 0,0:22:09.76,0:22:11.12,*Default,NTP,0000,0000,0000,,对一个人来说意味着什么
Dialogue: 0,0:22:11.12,0:22:13.20,*Default,NTP,0000,0000,0000,,可变并且想要不可变
Dialogue: 0,0:22:13.20,0:22:14.64,*Default,NTP,0000,0000,0000,,并且有一种潜在的
Dialogue: 0,0:22:14.64,0:22:17.76,*Default,NTP,0000,0000,0000,,问题是这一切有什么意义
Dialogue: 0,0:22:17.76,0:22:22.00,*Default,NTP,0000,0000,0000,,未说出口的问题是我为什么关心
Dialogue: 0,0:22:22.72,0:22:26.80,*Default,NTP,0000,0000,0000,, man i don't know how to answer that
Dialogue: 0,0:22:26.80,0:22:30.48,*Default,NTP,0000,0000,0000,,好吧，如果我在 s 上调用元组，它是
Dialogue: 0,0:22:30.48,0:22:31.20,*Default,NTP,0000,0000,0000,,列表
Dialogue: 0,0:22:31.20,0:22:32.40,*Default,NTP,0000,0000,0000,,你知道这是一个列表，因为它有
Dialogue: 0,0:22:32.40,0:22:34.88,*Default,NTP,0000,0000,0000,,方括号里写的是给我一个
Dialogue: 0,0:22:34.88,0:22:36.32,*Default,NTP,0000,0000,0000,,具有相同元素的元组
Dialogue: 0,0:22:36.32,0:22:39.28,*Default,NTP,0000,0000,0000,,现在我们有两个不同的
Dialogue: 0,0:22:39.28,0:22:40.56,*Default,NTP,0000,0000,0000,,物体
Dialogue: 0,0:22:40.56,0:22:42.24,*Default,NTP,0000,0000,0000,,一个是列表，一个是元组，他们得到了
Dialogue: 0,0:22:42.24,0:22:44.48,*Default,NTP,0000,0000,0000,,里面有同样的东西
Dialogue: 0,0:22:44.48,0:22:46.08,*Default,NTP,0000,0000,0000,,但它们略有不同
Dialogue: 0,0:22:46.08,0:22:48.00,*Default,NTP,0000,0000,0000,,行为和正确的思维方式
Dialogue: 0,0:22:48.00,0:22:50.00,*Default,NTP,0000,0000,0000,,关于元组，它就像一个列表，除了
Dialogue: 0,0:22:50.00,0:22:50.64,*Default,NTP,0000,0000,0000,,为了它
Dialogue: 0,0:22:50.64,0:22:52.00,*Default,NTP,0000,0000,0000,,不允许你做一堆
Dialogue: 0,0:22:52.00,0:22:53.68,*Default,NTP,0000,0000,0000,,你原本想要的事情
Dialogue: 0,0:22:53.68,0:22:54.72,*Default,NTP,0000,0000,0000,,做
Dialogue: 0,0:22:54.72,0:22:58.48,*Default,NTP,0000,0000,0000,,不允许对元组进行切片分配
Dialogue: 0,0:22:58.48,0:23:00.00,*Default,NTP,0000,0000,0000,,所以你不必知道它是如何工作的
Dialogue: 0,0:23:00.00,0:23:01.60,*Default,NTP,0000,0000,0000,,因为无论如何你都做不到
Dialogue: 0,0:23:01.60,0:23:05.60,*Default,NTP,0000,0000,0000,,元素赋值不允许追加
Dialogue: 0,0:23:05.60,0:23:08.24,*Default,NTP,0000,0000,0000,,不允许延长不允许你
Dialogue: 0,0:23:08.24,0:23:09.28,*Default,NTP,0000,0000,0000,,无法改变
Dialogue: 0,0:23:09.28,0:23:12.56,*Default,NTP,0000,0000,0000,,内容如长度
Dialogue: 0,0:23:12.56,0:23:16.48,*Default,NTP,0000,0000,0000,,或者元组中有哪些元素
Dialogue: 0,0:23:16.48,0:23:18.56,*Default,NTP,0000,0000,0000,,所以我没什么可以写的
Dialogue: 0,0:23:18.56,0:23:20.24,*Default,NTP,0000,0000,0000,,会采用这个元组
Dialogue: 0,0:23:20.24,0:23:23.60,*Default,NTP,0000,0000,0000,,并将此 3 更改为 9 或更改为
Dialogue: 0,0:23:23.60,0:23:25.36,*Default,NTP,0000,0000,0000,,对此列表或其他内容的引用
Dialogue: 0,0:23:25.36,0:23:26.40,*Default,NTP,0000,0000,0000,,像那样
Dialogue: 0,0:23:26.40,0:23:29.68,*Default,NTP,0000,0000,0000,,它无法改变我可以
Dialogue: 0,0:23:29.68,0:23:31.84,*Default,NTP,0000,0000,0000,,无论如何，我可以做很多事情
Dialogue: 0,0:23:31.84,0:23:32.80,*Default,NTP,0000,0000,0000,,重新分配 t
Dialogue: 0,0:23:32.80,0:23:34.40,*Default,NTP,0000,0000,0000,,到别的事情上，这样我就可以说你
Dialogue: 0,0:23:34.40,0:23:37.60,*Default,NTP,0000,0000,0000,,等于 t 并且 t 等于 9
Dialogue: 0,0:23:37.60,0:23:41.28,*Default,NTP,0000,0000,0000,,因此它不是这个名字
Dialogue: 0,0:23:41.28,0:23:43.84,*Default,NTP,0000,0000,0000,,这是永远无法改变的
Dialogue: 0,0:23:43.84,0:23:46.72,*Default,NTP,0000,0000,0000,,元组本身永远不能改变
Dialogue: 0,0:23:46.72,0:23:48.88,*Default,NTP,0000,0000,0000,,这样做的重要后果是
Dialogue: 0,0:23:48.88,0:23:50.80,*Default,NTP,0000,0000,0000,,如果我说 u 等于 t
Dialogue: 0,0:23:50.80,0:23:52.56,*Default,NTP,0000,0000,0000,,然后我写一些表达式
Dialogue: 0,0:23:52.56,0:23:55.12,*Default,NTP,0000,0000,0000,,涉及 t
Dialogue: 0,0:23:55.12,0:23:59.28,*Default,NTP,0000,0000,0000,,与列表不同，它不会影响您
Dialogue: 0,0:23:59.28,0:24:00.96,*Default,NTP,0000,0000,0000,,右看这里的区别 if
Dialogue: 0,0:24:00.96,0:24:02.16,*Default,NTP,0000,0000,0000,,这些是他们会有的清单
Dialogue: 0,0:24:02.16,0:24:03.52,*Default,NTP,0000,0000,0000,,修改了列表
Dialogue: 0,0:24:03.52,0:24:06.00,*Default,NTP,0000,0000,0000,,完全正确，但因为这是一个元组不能
Dialogue: 0,0:24:06.00,0:24:07.60,*Default,NTP,0000,0000,0000,,被修改
Dialogue: 0,0:24:07.60,0:24:10.24,*Default,NTP,0000,0000,0000,,不管我做什么都是允许的
Dialogue: 0,0:24:10.24,0:24:10.72,*Default,NTP,0000,0000,0000,,哪个
Dialogue: 0,0:24:10.72,0:24:12.08,*Default,NTP,0000,0000,0000,,很多事情是不允许的 你不能
Dialogue: 0,0:24:12.08,0:24:14.08,*Default,NTP,0000,0000,0000,,取决于你不能切割一个标志
Dialogue: 0,0:24:14.08,0:24:15.68,*Default,NTP,0000,0000,0000,,你不能添加一个标志或其他任何东西，但是
Dialogue: 0,0:24:15.68,0:24:17.12,*Default,NTP,0000,0000,0000,,你可以做一些其他你可以做的事情
Dialogue: 0,0:24:17.12,0:24:18.72,*Default,NTP,0000,0000,0000,,切片或任何东西
Dialogue: 0,0:24:18.72,0:24:21.92,*Default,NTP,0000,0000,0000,,不会影响 t 所以如果我把它切片
Dialogue: 0,0:24:21.92,0:24:25.36,*Default,NTP,0000,0000,0000,,从元素 3 到元素 6 即
Dialogue: 0,0:24:25.36,0:24:26.16,*Default,NTP,0000,0000,0000,,允许
Dialogue: 0,0:24:26.16,0:24:28.72,*Default,NTP,0000,0000,0000,,我可以称之为 v 但事实并非如此
Dialogue: 0,0:24:28.72,0:24:30.00,*Default,NTP,0000,0000,0000,,改变了你
Dialogue: 0,0:24:30.00,0:24:33.04,*Default,NTP,0000,0000,0000,,你还是一二三四
Dialogue: 0,0:24:33.04,0:24:34.88,*Default,NTP,0000,0000,0000,,对不起一三一二三五六
Dialogue: 0,0:24:34.88,0:24:36.80,*Default,NTP,0000,0000,0000,,七呃我不知道发生了什么
Dialogue: 0,0:24:36.80,0:24:38.56,*Default,NTP,0000,0000,0000,,一路上有四个但是
Dialogue: 0,0:24:38.56,0:24:43.36,*Default,NTP,0000,0000,0000,,哦，嗯，​​所以
Dialogue: 0,0:24:43.36,0:24:46.32,*Default,NTP,0000,0000,0000,,呃，这就是区别在于你
Dialogue: 0,0:24:46.32,0:24:47.36,*Default,NTP,0000,0000,0000,,知道一个你可以做很多事情的清单
Dialogue: 0,0:24:47.36,0:24:49.04,*Default,NTP,0000,0000,0000,,与你不同的东西可以切片
Dialogue: 0,0:24:49.04,0:24:50.80,*Default,NTP,0000,0000,0000,,你可以获得元素
Dialogue: 0,0:24:50.80,0:24:53.28,*Default,NTP,0000,0000,0000,,但你也可以改变它推翻你
Dialogue: 0,0:24:53.28,0:24:54.80,*Default,NTP,0000,0000,0000,,有些事情你做不到，但你
Dialogue: 0,0:24:54.80,0:24:56.88,*Default,NTP,0000,0000,0000,,可以做其他的你仍然可以切片你
Dialogue: 0,0:24:56.88,0:24:57.76,*Default,NTP,0000,0000,0000,,尚可
Dialogue: 0,0:24:57.76,0:24:59.44,*Default,NTP,0000,0000,0000,,算出它的长度你仍然可以
Dialogue: 0,0:24:59.44,0:25:02.00,*Default,NTP,0000,0000,0000,,建立一个新的，但你无法改变它
Dialogue: 0,0:25:02.00,0:25:02.88,*Default,NTP,0000,0000,0000,,以任何方式
Dialogue: 0,0:25:02.88,0:25:05.36,*Default,NTP,0000,0000,0000,,这就是它不可变的原因，而
Dialogue: 0,0:25:05.36,0:25:06.72,*Default,NTP,0000,0000,0000,,列表被称为
Dialogue: 0,0:25:06.72,0:25:09.44,*Default,NTP,0000,0000,0000,,可变意义突变适用意义
Dialogue: 0,0:25:09.44,0:25:11.76,*Default,NTP,0000,0000,0000,,你可以改变它
Dialogue: 0,0:25:11.76,0:25:14.64,*Default,NTP,0000,0000,0000,,但现在我想我们应该说点什么
Dialogue: 0,0:25:14.64,0:25:15.60,*Default,NTP,0000,0000,0000,,关于为什么
Dialogue: 0,0:25:15.60,0:25:17.92,*Default,NTP,0000,0000,0000,,是的，我想确实有
Dialogue: 0,0:25:17.92,0:25:19.76,*Default,NTP,0000,0000,0000,,有两个原因，其中之一是关于
Dialogue: 0,0:25:19.76,0:25:20.56,*Default,NTP,0000,0000,0000,,效率
Dialogue: 0,0:25:20.56,0:25:22.80,*Default,NTP,0000,0000,0000,,有时程序只会运行得更快
Dialogue: 0,0:25:22.80,0:25:24.48,*Default,NTP,0000,0000,0000,,如果它使用一堆元组
Dialogue: 0,0:25:24.48,0:25:25.76,*Default,NTP,0000,0000,0000,,一堆列表的
Dialogue: 0,0:25:25.76,0:25:27.20,*Default,NTP,0000,0000,0000,,因为他们可以少拿一点
Dialogue: 0,0:25:27.20,0:25:30.32,*Default,NTP,0000,0000,0000,,计算机内存中的空间
Dialogue: 0,0:25:30.32,0:25:33.84,*Default,NTP,0000,0000,0000,,但更常见的原因是
Dialogue: 0,0:25:33.84,0:25:36.88,*Default,NTP,0000,0000,0000,,人们正在设计他们的程序
Dialogue: 0,0:25:36.88,0:25:38.64,*Default,NTP,0000,0000,0000,,他们不必考虑
Dialogue: 0,0:25:38.64,0:25:41.60,*Default,NTP,0000,0000,0000,,当你可以的时候突变回来
Dialogue: 0,0:25:41.60,0:25:42.16,*Default,NTP,0000,0000,0000,,描述
Dialogue: 0,0:25:42.16,0:25:45.04,*Default,NTP,0000,0000,0000,,每个函数的定义域范围和
Dialogue: 0,0:25:45.04,0:25:46.08,*Default,NTP,0000,0000,0000,,行为
Dialogue: 0,0:25:46.08,0:25:48.64,*Default,NTP,0000,0000,0000,,生活变得更轻松，我并不是说是这样
Dialogue: 0,0:25:48.64,0:25:50.16,*Default,NTP,0000,0000,0000,,容易，有很多类似棘手的事情
Dialogue: 0,0:25:50.16,0:25:52.48,*Default,NTP,0000,0000,0000,,递归问题和类似的问题
Dialogue: 0,0:25:52.48,0:25:54.08,*Default,NTP,0000,0000,0000,,但至少你知道如果你打电话
Dialogue: 0,0:25:54.08,0:25:55.76,*Default,NTP,0000,0000,0000,,函数是你唯一真正关心的东西
Dialogue: 0,0:25:55.76,0:25:57.28,*Default,NTP,0000,0000,0000,,需要担心的是什么呢
Dialogue: 0,0:25:57.28,0:25:58.24,*Default,NTP,0000,0000,0000,,返回
Dialogue: 0,0:25:58.24,0:26:01.12,*Default,NTP,0000,0000,0000,,不是它会改变什么，如果你使用
Dialogue: 0,0:26:01.12,0:26:02.24,*Default,NTP,0000,0000,0000,,元组无处不在
Dialogue: 0,0:26:02.24,0:26:04.16,*Default,NTP,0000,0000,0000,,因为它们无法改变
Dialogue: 0,0:26:04.16,0:26:05.68,*Default,NTP,0000,0000,0000,,不必思考它有什么作用
Dialogue: 0,0:26:05.68,0:26:07.04,*Default,NTP,0000,0000,0000,,改变你只需要思考什么
Dialogue: 0,0:26:07.04,0:26:07.92,*Default,NTP,0000,0000,0000,,它返回
Dialogue: 0,0:26:07.92,0:26:10.00,*Default,NTP,0000,0000,0000,,而如果你到处使用列表
Dialogue: 0,0:26:10.00,0:26:11.28,*Default,NTP,0000,0000,0000,,如果你不小心的话
Dialogue: 0,0:26:11.28,0:26:12.72,*Default,NTP,0000,0000,0000,,调用函数的结果
Dialogue: 0,0:26:12.72,0:26:14.72,*Default,NTP,0000,0000,0000,,不仅会改变
Dialogue: 0,0:26:14.72,0:26:15.52,*Default,NTP,0000,0000,0000,,某物
Dialogue: 0,0:26:15.52,0:26:17.28,*Default,NTP,0000,0000,0000,,或者它返回一些东西但也
Dialogue: 0,0:26:17.28,0:26:18.56,*Default,NTP,0000,0000,0000,,它改变了一些东西
Dialogue: 0,0:26:18.56,0:26:20.00,*Default,NTP,0000,0000,0000,,这相当于两倍的事情
Dialogue: 0,0:26:20.00,0:26:21.52,*Default,NTP,0000,0000,0000,,记录你何时写一篇大文章
Dialogue: 0,0:26:21.52,0:26:22.16,*Default,NTP,0000,0000,0000,,程序
Dialogue: 0,0:26:22.16,0:26:23.44,*Default,NTP,0000,0000,0000,,并试图理解所有的
Dialogue: 0,0:26:23.44,0:26:25.44,*Default,NTP,0000,0000,0000,,零件工作所以这就像主要的
Dialogue: 0,0:26:25.44,0:26:27.68,*Default,NTP,0000,0000,0000,,拥有一些不可变版本的原因
Dialogue: 0,0:26:27.68,0:26:28.48,*Default,NTP,0000,0000,0000,,一个序列
Dialogue: 0,0:26:28.48,0:26:30.16,*Default,NTP,0000,0000,0000,,只是喜欢确保你写了
Dialogue: 0,0:26:30.16,0:26:31.68,*Default,NTP,0000,0000,0000,,程序以这样的方式
Dialogue: 0,0:26:31.68,0:26:33.76,*Default,NTP,0000,0000,0000,,没有什么可以改变其他任何事情
Dialogue: 0,0:26:33.76,0:26:35.76,*Default,NTP,0000,0000,0000,,除非通过传入参数和
Dialogue: 0,0:26:35.76,0:26:38.32,*Default,NTP,0000,0000,0000,,返回它们
Dialogue: 0,0:26:38.32,0:26:40.56,*Default,NTP,0000,0000,0000,,这就是所谓的副作用
Dialogue: 0,0:26:40.56,0:26:42.40,*Default,NTP,0000,0000,0000,,当你调用一个函数时，这很可怕
Dialogue: 0,0:26:42.40,0:26:44.24,*Default,NTP,0000,0000,0000,,有一些副作用
Dialogue: 0,0:26:44.24,0:26:46.08,*Default,NTP,0000,0000,0000,,它超越了过去
Dialogue: 0,0:26:46.08,0:26:48.16,*Default,NTP,0000,0000,0000,,通过并修改了返回的内容
Dialogue: 0,0:26:48.16,0:26:49.12,*Default,NTP,0000,0000,0000,,一个列表
Dialogue: 0,0:26:49.12,0:26:51.04,*Default,NTP,0000,0000,0000,,我怎么知道
Dialogue: 0,0:26:51.04,0:26:52.88,*Default,NTP,0000,0000,0000,,我该如何控制它
Dialogue: 0,0:26:52.88,0:26:54.96,*Default,NTP,0000,0000,0000,,所以元组很好或者元组
Dialogue: 0,0:26:54.96,0:26:56.32,*Default,NTP,0000,0000,0000,,你叫它哪一个，约翰，我想叫它
Dialogue: 0,0:26:56.32,0:26:58.40,*Default,NTP,0000,0000,0000,,称其为另一个
Dialogue: 0,0:26:58.40,0:27:00.32,*Default,NTP,0000,0000,0000,,呃我一直把它称为元组
Dialogue: 0,0:27:00.32,0:27:01.92,*Default,NTP,0000,0000,0000,,时间，所以你必须使用元组一段时间
Dialogue: 0,0:27:01.92,0:27:03.04,*Default,NTP,0000,0000,0000,,好吧，我会用它，我们会切换进去
Dialogue: 0,0:27:03.04,0:27:04.00,*Default,NTP,0000,0000,0000,,几分钟
Dialogue: 0,0:27:04.00,0:27:07.12,*Default,NTP,0000,0000,0000,,好吧，所以工具很好
Dialogue: 0,0:27:07.12,0:27:08.16,*Default,NTP,0000,0000,0000,,因为它本质上就像你
Dialogue: 0,0:27:08.16,0:27:09.20,*Default,NTP,0000,0000,0000,,锁定您的数据
Dialogue: 0,0:27:09.20,0:27:13.04,*Default,NTP,0000,0000,0000,,是的，它为您提供数据安全是的
Dialogue: 0,0:27:13.04,0:27:15.84,*Default,NTP,0000,0000,0000,,嗯，聊天中的后续内容是什么
Dialogue: 0,0:27:15.84,0:27:16.48,*Default,NTP,0000,0000,0000,,发生
Dialogue: 0,0:27:16.48,0:27:19.84,*Default,NTP,0000,0000,0000,,如果我的夫妇有一个清单
Dialogue: 0,0:27:19.84,0:27:22.24,*Default,NTP,0000,0000,0000,,从某种意义上说，这座寺庙是不可变的
Dialogue: 0,0:27:22.24,0:27:24.72,*Default,NTP,0000,0000,0000,,它的长度永远是三
Dialogue: 0,0:27:24.72,0:27:27.04,*Default,NTP,0000,0000,0000,,并且它总会有这个特殊的
Dialogue: 0,0:27:27.04,0:27:28.88,*Default,NTP,0000,0000,0000,,列在其中
Dialogue: 0,0:27:28.88,0:27:31.28,*Default,NTP,0000,0000,0000,,所以这方面是
Dialogue: 0,0:27:31.28,0:27:32.32,*Default,NTP,0000,0000,0000,,不变的是
Dialogue: 0,0:27:32.32,0:27:34.16,*Default,NTP,0000,0000,0000,,它总是具有三个元素并且
Dialogue: 0,0:27:34.16,0:27:36.40,*Default,NTP,0000,0000,0000,,他们永远是第一
Dialogue: 0,0:27:36.40,0:27:39.92,*Default,NTP,0000,0000,0000,,这个列表和数字七
Dialogue: 0,0:27:39.92,0:27:43.44,*Default,NTP,0000,0000,0000,,然而这些事实无法改变
Dialogue: 0,0:27:43.44,0:27:46.88,*Default,NTP,0000,0000,0000,,这个列表可能会改变，事实上
Dialogue: 0,0:27:46.88,0:27:48.40,*Default,NTP,0000,0000,0000,,它是元组的一部分
Dialogue: 0,0:27:48.40,0:27:50.64,*Default,NTP,0000,0000,0000,,不会控制允许的内容
Dialogue: 0,0:27:50.64,0:27:52.56,*Default,NTP,0000,0000,0000,,仍然是一个列表，你仍然可以做任何事情
Dialogue: 0,0:27:52.56,0:27:53.60,*Default,NTP,0000,0000,0000,,你想要它
Dialogue: 0,0:27:53.60,0:27:57.12,*Default,NTP,0000,0000,0000,,所以如果我给它一个名字我说t是s1
Dialogue: 0,0:27:57.12,0:27:59.12,*Default,NTP,0000,0000,0000,,然后我开始摆弄它
Dialogue: 0,0:27:59.12,0:28:00.48,*Default,NTP,0000,0000,0000,,我追加
Dialogue: 0,0:28:00.48,0:28:04.00,*Default,NTP,0000,0000,0000,,五 好吧你知道我们一直很好
Dialogue: 0,0:28:04.00,0:28:05.52,*Default,NTP,0000,0000,0000,,好吧，我不是，我正要切片
Dialogue: 0,0:28:05.52,0:28:07.12,*Default,NTP,0000,0000,0000,,作业，但我想我们已经做到了
Dialogue: 0,0:28:07.12,0:28:10.56,*Default,NTP,0000,0000,0000,,今天死了好吧然后呃
Dialogue: 0,0:28:10.56,0:28:13.12,*Default,NTP,0000,0000,0000,,从某种意义上来说，现在的内容
Dialogue: 0,0:28:13.12,0:28:15.36,*Default,NTP,0000,0000,0000,,元组已经改变了元组本身
Dialogue: 0,0:28:15.36,0:28:16.16,*Default,NTP,0000,0000,0000,,没有改变
Dialogue: 0,0:28:16.16,0:28:18.56,*Default,NTP,0000,0000,0000,,它仍然是这个列表中的一个和七个但是
Dialogue: 0,0:28:18.56,0:28:19.92,*Default,NTP,0000,0000,0000,,如果你把它打印出来你会看到
Dialogue: 0,0:28:19.92,0:28:21.76,*Default,NTP,0000,0000,0000,,与你之前所做的不同的事情
Dialogue: 0,0:28:21.76,0:28:24.00,*Default,NTP,0000,0000,0000,,因为你会看到一三四五
Dialogue: 0,0:28:24.00,0:28:25.60,*Default,NTP,0000,0000,0000,,七个而不是一三四
Dialogue: 0,0:28:25.60,0:28:28.72,*Default,NTP,0000,0000,0000,,七所以是一成不变的
Dialogue: 0,0:28:28.72,0:28:31.44,*Default,NTP,0000,0000,0000,,并不意味着关于你的一切都不能
Dialogue: 0,0:28:31.44,0:28:32.72,*Default,NTP,0000,0000,0000,,永远被改变
Dialogue: 0,0:28:32.72,0:28:36.24,*Default,NTP,0000,0000,0000,,这只是意味着这个特定的
Dialogue: 0,0:28:36.24,0:28:38.08,*Default,NTP,0000,0000,0000,,环境图的一部分
Dialogue: 0,0:28:38.08,0:28:41.92,*Default,NTP,0000,0000,0000,,永远不会改变是的好问题所以
Dialogue: 0,0:28:41.92,0:28:45.84,*Default,NTP,0000,0000,0000,,何时保护值免受突变
Dialogue: 0,0:28:45.84,0:28:49.04,*Default,NTP,0000,0000,0000,,python中没有这样的机制
Dialogue: 0,0:28:49.04,0:28:52.16,*Default,NTP,0000,0000,0000,,获取可变值并保护它
Dialogue: 0,0:28:52.16,0:28:54.16,*Default,NTP,0000,0000,0000,,以某种方式从突变中
Dialogue: 0,0:28:54.16,0:28:57.28,*Default,NTP,0000,0000,0000,,如果一个值可以改变那么任何东西
Dialogue: 0,0:28:57.28,0:28:58.00,*Default,NTP,0000,0000,0000,,可以访问
Dialogue: 0,0:28:58.00,0:29:00.40,*Default,NTP,0000,0000,0000,,这个值可以改变它，这只是一个
Dialogue: 0,0:29:00.40,0:29:02.48,*Default,NTP,0000,0000,0000,,关于 python 设计的事实
Dialogue: 0,0:29:02.48,0:29:04.32,*Default,NTP,0000,0000,0000,,其他编程则不然
Dialogue: 0,0:29:04.32,0:29:05.68,*Default,NTP,0000,0000,0000,,语言有编程
Dialogue: 0,0:29:05.68,0:29:06.40,*Default,NTP,0000,0000,0000,,语言
Dialogue: 0,0:29:06.40,0:29:10.88,*Default,NTP,0000,0000,0000,,跟踪每个
Dialogue: 0,0:29:10.88,0:29:12.80,*Default,NTP,0000,0000,0000,,可以引用值的函数是
Dialogue: 0,0:29:12.80,0:29:14.48,*Default,NTP,0000,0000,0000,,它允许改变它还是不允许
Dialogue: 0,0:29:14.48,0:29:16.08,*Default,NTP,0000,0000,0000,,允许更改它
Dialogue: 0,0:29:16.08,0:29:18.40,*Default,NTP,0000,0000,0000,,c plus plus 就是一个很好的例子
Dialogue: 0,0:29:18.40,0:29:20.08,*Default,NTP,0000,0000,0000,,这就像另一个元素
Dialogue: 0,0:29:20.08,0:29:22.00,*Default,NTP,0000,0000,0000,,你可以添加到编程语言中
Dialogue: 0,0:29:22.00,0:29:24.24,*Default,NTP,0000,0000,0000,,给自己更多的控制权
Dialogue: 0,0:29:24.24,0:29:26.24,*Default,NTP,0000,0000,0000,,关于某些东西是否可以突变或
Dialogue: 0,0:29:26.24,0:29:28.16,*Default,NTP,0000,0000,0000,,不是，但这不是 python 的东西
Dialogue: 0,0:29:28.16,0:29:28.72,*Default,NTP,0000,0000,0000,,允许
Dialogue: 0,0:29:28.72,0:29:31.36,*Default,NTP,0000,0000,0000,,相反，它是要说的价值的一部分
Dialogue: 0,0:29:31.36,0:29:32.96,*Default,NTP,0000,0000,0000,,这个值可以是
Dialogue: 0,0:29:32.96,0:29:33.68,*Default,NTP,0000,0000,0000,,改变了
Dialogue: 0,0:29:33.68,0:29:35.52,*Default,NTP,0000,0000,0000,,或者这个值是不能的
Dialogue: 0,0:29:35.52,0:29:37.92,*Default,NTP,0000,0000,0000,,可以改变，所以列表可以改变
Dialogue: 0,0:29:37.92,0:29:41.60,*Default,NTP,0000,0000,0000,,寺庙不能那么怎么样
Dialogue: 0,0:29:41.60,0:29:43.44,*Default,NTP,0000,0000,0000,,写 python 你如何确保
Dialogue: 0,0:29:43.44,0:29:46.08,*Default,NTP,0000,0000,0000,,你不会无意中改变某些东西
Dialogue: 0,0:29:46.08,0:29:48.32,*Default,NTP,0000,0000,0000,,好吧，如果你有一个清单的话
Dialogue: 0,0:29:48.32,0:29:50.32,*Default,NTP,0000,0000,0000,,实际上只有这么多方法
Dialogue: 0,0:29:50.32,0:29:51.28,*Default,NTP,0000,0000,0000,,更改
Dialogue: 0,0:29:51.28,0:29:55.20,*Default,NTP,0000,0000,0000,,您可以使用元素分配
Dialogue: 0,0:29:55.20,0:29:58.48,*Default,NTP,0000,0000,0000,,或切片分配将改变它
Dialogue: 0,0:29:58.48,0:30:01.84,*Default,NTP,0000,0000,0000,,您可以使用其中一种突变方法
Dialogue: 0,0:30:01.84,0:30:04.96,*Default,NTP,0000,0000,0000,,就像追加或扩展会改变的
Dialogue: 0,0:30:04.96,0:30:06.84,*Default,NTP,0000,0000,0000,,它
Dialogue: 0,0:30:06.84,0:30:09.52,*Default,NTP,0000,0000,0000,,嗯，如果你不使用
Dialogue: 0,0:30:09.52,0:30:12.40,*Default,NTP,0000,0000,0000,,其中任何一个你都不会
Dialogue: 0,0:30:12.40,0:30:13.28,*Default,NTP,0000,0000,0000,,更改
Dialogue: 0,0:30:13.28,0:30:17.20,*Default,NTP,0000,0000,0000,,例如，如果你只是切片它
Dialogue: 0,0:30:17.20,0:30:19.76,*Default,NTP,0000,0000,0000,,这并没有改变它为什么不因为
Dialogue: 0,0:30:19.76,0:30:21.20,*Default,NTP,0000,0000,0000,,我们这里没有平等的人
Dialogue: 0,0:30:21.20,0:30:22.80,*Default,NTP,0000,0000,0000,,如果我们没有平等的人，我们就有
Dialogue: 0,0:30:22.80,0:30:25.12,*Default,NTP,0000,0000,0000,,就像 t 等于 this 这不会改变 s
Dialogue: 0,0:30:25.12,0:30:26.96,*Default,NTP,0000,0000,0000,,让我们用一些东西建立一些新列表
Dialogue: 0,0:30:26.96,0:30:28.48,*Default,NTP,0000,0000,0000,,s 的元素
Dialogue: 0,0:30:28.48,0:30:30.08,*Default,NTP,0000,0000,0000,,所以只要你不做元素
Dialogue: 0,0:30:30.08,0:30:31.68,*Default,NTP,0000,0000,0000,,赋值或切片赋值
Dialogue: 0,0:30:31.68,0:30:34.80,*Default,NTP,0000,0000,0000,,或附加或扩展或删除或
Dialogue: 0,0:30:34.80,0:30:36.48,*Default,NTP,0000,0000,0000,,弹出或所有这些其他
Dialogue: 0,0:30:36.48,0:30:39.28,*Default,NTP,0000,0000,0000,,然后执行突变的熔化方法
Dialogue: 0,0:30:39.28,0:30:39.52,*Default,NTP,0000,0000,0000,,s
Dialogue: 0,0:30:39.52,0:30:41.60,*Default,NTP,0000,0000,0000,,不会改变，所以这就是
Dialogue: 0,0:30:41.60,0:30:43.84,*Default,NTP,0000,0000,0000,,你必须验证的机制
Dialogue: 0,0:30:43.84,0:30:45.04,*Default,NTP,0000,0000,0000,,你不会搞砸什么的
Dialogue: 0,0:30:45.04,0:30:46.64,*Default,NTP,0000,0000,0000,,你不想搞砸的
Dialogue: 0,0:30:46.64,0:30:51.04,*Default,NTP,0000,0000,0000,,是你不使用其中任何一个
Dialogue: 0,0:30:51.04,0:30:53.84,*Default,NTP,0000,0000,0000,,现在要格外小心
Dialogue: 0,0:30:53.84,0:30:55.52,*Default,NTP,0000,0000,0000,,人们会做什么的时候
Dialogue: 0,0:30:55.52,0:30:58.72,*Default,NTP,0000,0000,0000,,他们根本就不会使用 s
Dialogue: 0,0:30:58.72,0:30:59.60,*Default,NTP,0000,0000,0000,,因为他们想确保他们
Dialogue: 0,0:30:59.60,0:31:01.04,*Default,NTP,0000,0000,0000,,不要改变 s，这样他们就不会
Dialogue: 0,0:31:01.04,0:31:02.16,*Default,NTP,0000,0000,0000,,使用s
Dialogue: 0,0:31:02.16,0:31:06.40,*Default,NTP,0000,0000,0000,,他们可以复制一份
Dialogue: 0,0:31:06.40,0:31:10.08,*Default,NTP,0000,0000,0000,,这确实是在建立一个新列表
Dialogue: 0,0:31:10.08,0:31:12.72,*Default,NTP,0000,0000,0000,,与 s 的所有元素然后它们
Dialogue: 0,0:31:12.72,0:31:15.04,*Default,NTP,0000,0000,0000,,编写所有关于 t 的代码
Dialogue: 0,0:31:15.04,0:31:18.08,*Default,NTP,0000,0000,0000,,这样做的好处是，如果你
Dialogue: 0,0:31:18.08,0:31:20.16,*Default,NTP,0000,0000,0000,,不小心改变了你没有
Dialogue: 0,0:31:20.16,0:31:22.88,*Default,NTP,0000,0000,0000,,改变了 s 所以就像
Dialogue: 0,0:31:22.88,0:31:25.92,*Default,NTP,0000,0000,0000,,一种呃启发式机制
Dialogue: 0,0:31:25.92,0:31:27.52,*Default,NTP,0000,0000,0000,,尝试去
Dialogue: 0,0:31:27.52,0:31:30.16,*Default,NTP,0000,0000,0000,,防止意外突变的方法是
Dialogue: 0,0:31:30.16,0:31:31.20,*Default,NTP,0000,0000,0000,,你可以
Dialogue: 0,0:31:31.20,0:31:34.40,*Default,NTP,0000,0000,0000,,尽量避免使用这个列表，但是
Dialogue: 0,0:31:34.40,0:31:36.24,*Default,NTP,0000,0000,0000,,而是使用其他列表
Dialogue: 0,0:31:36.24,0:31:39.20,*Default,NTP,0000,0000,0000,,嗯，但这并不是真的没有
Dialogue: 0,0:31:39.20,0:31:41.04,*Default,NTP,0000,0000,0000,,某种保证这是不可能的
Dialogue: 0,0:31:41.04,0:31:42.32,*Default,NTP,0000,0000,0000,,使我们变异
Dialogue: 0,0:31:42.32,0:31:46.88,*Default,NTP,0000,0000,0000,,呃，这只是避免它的一种方法
Dialogue: 0,0:31:46.88,0:31:48.48,*Default,NTP,0000,0000,0000,,下一个问题是如果你有两个
Dialogue: 0,0:31:48.48,0:31:50.00,*Default,NTP,0000,0000,0000,,列出 s 和 t
Dialogue: 0,0:31:50.00,0:31:52.72,*Default,NTP,0000,0000,0000,,然后将 s 附加到 t，然后更改 s
Dialogue: 0,0:31:52.72,0:31:53.60,*Default,NTP,0000,0000,0000,,为此
Dialogue: 0,0:31:53.60,0:31:56.80,*Default,NTP,0000,0000,0000,,t 如果是的话怎么办
Dialogue: 0,0:31:56.80,0:31:59.60,*Default,NTP,0000,0000,0000,,我认为答案是如果 t
Dialogue: 0,0:31:59.60,0:32:00.08,*Default,NTP,0000,0000,0000,,是 4
Dialogue: 0,0:32:00.08,0:32:03.20,*Default,NTP,0000,0000,0000,,5 6 然后你现在将 s 附加到 t t
Dialogue: 0,0:32:03.20,0:32:06.40,*Default,NTP,0000,0000,0000,,是 4 5 6 后跟列表 1 2
Dialogue: 0,0:32:06.40,0:32:10.24,*Default,NTP,0000,0000,0000,,3 但这是一个可以更改的列表
Dialogue: 0,0:32:10.24,0:32:11.84,*Default,NTP,0000,0000,0000,,每当它改变时
Dialogue: 0,0:32:11.84,0:32:13.76,*Default,NTP,0000,0000,0000,,然后所有引用它的方式
Dialogue: 0,0:32:13.76,0:32:15.76,*Default,NTP,0000,0000,0000,,也发生了变化，包括查看
Dialogue: 0,0:32:15.76,0:32:18.64,*Default,NTP,0000,0000,0000,,t 的元素位于索引三处，因此如果您
Dialogue: 0,0:32:18.64,0:32:19.36,*Default,NTP,0000,0000,0000,,打印出t
Dialogue: 0,0:32:19.36,0:32:21.12,*Default,NTP,0000,0000,0000,,此时你会得到四五六
Dialogue: 0,0:32:21.12,0:32:22.80,*Default,NTP,0000,0000,0000,,接下来是列表一二三四
Dialogue: 0,0:32:22.80,0:32:24.48,*Default,NTP,0000,0000,0000,,因为您更改了此列表
Dialogue: 0,0:32:24.48,0:32:26.00,*Default,NTP,0000,0000,0000,,它
Dialogue: 0,0:32:26.00,0:32:28.80,*Default,NTP,0000,0000,0000,,好吧，问题是你有过吗
Dialogue: 0,0:32:28.80,0:32:30.40,*Default,NTP,0000,0000,0000,,一个函数
Dialogue: 0,0:32:30.40,0:32:34.16,*Default,NTP,0000,0000,0000,,x 的 f 需要一些
Dialogue: 0,0:32:34.16,0:32:37.36,*Default,NTP,0000,0000,0000,,可选的第二个参数是
Dialogue: 0,0:32:37.36,0:32:38.40,*Default,NTP,0000,0000,0000,,某物
Dialogue: 0,0:32:38.40,0:32:41.60,*Default,NTP,0000,0000,0000,,可变的和
Dialogue: 0,0:32:41.60,0:32:45.68,*Default,NTP,0000,0000,0000,,这是个好主意吗
Dialogue: 0,0:32:45.68,0:32:47.60,*Default,NTP,0000,0000,0000,,我的看法是答案是否定的，这是
Dialogue: 0,0:32:47.60,0:32:48.80,*Default,NTP,0000,0000,0000,,从来都不是一个好主意
Dialogue: 0,0:32:48.80,0:32:52.40,*Default,NTP,0000,0000,0000,,但我以前见过人们用过它
Dialogue: 0,0:32:52.40,0:32:56.40,*Default,NTP,0000,0000,0000,,例如他们可以
Dialogue: 0,0:32:56.40,0:32:59.76,*Default,NTP,0000,0000,0000,,尝试编写一个返回的函数
Dialogue: 0,0:32:59.76,0:33:02.32,*Default,NTP,0000,0000,0000,,f 曾经存在过的一切的总和
Dialogue: 0,0:33:02.32,0:33:04.32,*Default,NTP,0000,0000,0000,,拜访
Dialogue: 0,0:33:04.32,0:33:08.16,*Default,NTP,0000,0000,0000,,所以我想我们不需要
Dialogue: 0,0:33:08.16,0:33:08.48,*Default,NTP,0000,0000,0000,,打印
Dialogue: 0,0:33:08.48,0:33:11.36,*Default,NTP,0000,0000,0000,,我们要打电话给 2 然后我们就去
Dialogue: 0,0:33:11.36,0:33:11.68,*Default,NTP,0000,0000,0000,,到
Dialogue: 0,0:33:11.68,0:33:14.00,*Default,NTP,0000,0000,0000,,拨打我们的 f 1 然后我们会打电话
Dialogue: 0,0:33:14.00,0:33:14.80,*Default,NTP,0000,0000,0000,,f 上 3
Dialogue: 0,0:33:14.80,0:33:16.56,*Default,NTP,0000,0000,0000,,然后我们将在 5 上调用 f
Dialogue: 0,0:33:16.56,0:33:19.76,*Default,NTP,0000,0000,0000,,我们要在7号打电话给f。
Dialogue: 0,0:33:19.76,0:33:22.16,*Default,NTP,0000,0000,0000,,第一个调用将返回 1。
Dialogue: 0,0:33:22.16,0:33:23.68,*Default,NTP,0000,0000,0000,,第二个电话将返回
Dialogue: 0,0:33:23.68,0:33:26.00,*Default,NTP,0000,0000,0000,,4 第三个调用将会返回
Dialogue: 0,0:33:26.00,0:33:26.80,*Default,NTP,0000,0000,0000,,四加五
Dialogue: 0,0:33:26.80,0:33:28.72,*Default,NTP,0000,0000,0000,,九点了，最后一个电话要转了
Dialogue: 0,0:33:28.72,0:33:30.00,*Default,NTP,0000,0000,0000,,16.
Dialogue: 0,0:33:30.00,0:33:32.24,*Default,NTP,0000,0000,0000,,你知道不要这样做，但我已经看到了
Dialogue: 0,0:33:32.24,0:33:33.68,*Default,NTP,0000,0000,0000,,我猜这样做了
Dialogue: 0,0:33:33.68,0:33:35.84,*Default,NTP,0000,0000,0000,,你可能还知道其他人
Dialogue: 0,0:33:35.84,0:33:37.36,*Default,NTP,0000,0000,0000,,可能会做到
Dialogue: 0,0:33:37.36,0:33:40.40,*Default,NTP,0000,0000,0000,,这是怎么回事
Dialogue: 0,0:33:40.40,0:33:44.48,*Default,NTP,0000,0000,0000,,我们使用默认参数的值
Dialogue: 0,0:33:44.48,0:33:47.92,*Default,NTP,0000,0000,0000,,作为某种持久存储
Dialogue: 0,0:33:47.92,0:33:50.56,*Default,NTP,0000,0000,0000,,这是这个函数的一部分，很友善
Dialogue: 0,0:33:50.56,0:33:53.28,*Default,NTP,0000,0000,0000,,跟踪所有事情
Dialogue: 0,0:33:53.28,0:33:55.84,*Default,NTP,0000,0000,0000,,这曾被称为原因
Dialogue: 0,0:33:55.84,0:33:57.36,*Default,NTP,0000,0000,0000,,这太奇怪了
Dialogue: 0,0:33:57.36,0:34:01.36,*Default,NTP,0000,0000,0000,,你可以打电话给f
Dialogue: 0,0:34:01.36,0:34:04.80,*Default,NTP,0000,0000,0000,,你知道一些新事物然后它
Dialogue: 0,0:34:04.80,0:34:06.00,*Default,NTP,0000,0000,0000,,不会这样做
Dialogue: 0,0:34:06.00,0:34:08.96,*Default,NTP,0000,0000,0000,,你希望它表现得像
Dialogue: 0,0:34:08.96,0:34:09.36,*Default,NTP,0000,0000,0000,,呃
Dialogue: 0,0:34:09.36,0:34:12.08,*Default,NTP,0000,0000,0000,,而不是加一三五七
Dialogue: 0,0:34:12.08,0:34:12.80,*Default,NTP,0000,0000,0000,,和九个
Dialogue: 0,0:34:12.80,0:34:15.68,*Default,NTP,0000,0000,0000,,九加一等于十
Dialogue: 0,0:34:15.68,0:34:17.20,*Default,NTP,0000,0000,0000,,就像不符合
Dialogue: 0,0:34:17.20,0:34:19.52,*Default,NTP,0000,0000,0000,,之前发生的一切
Dialogue: 0,0:34:19.52,0:34:22.88,*Default,NTP,0000,0000,0000,,python 如此令人讨厌的讨厌特性
Dialogue: 0,0:34:22.88,0:34:24.24,*Default,NTP,0000,0000,0000,,我觉得这很荒谬
Dialogue: 0,0:34:24.24,0:34:25.04,*Default,NTP,0000,0000,0000,,这样工作
Dialogue: 0,0:34:25.04,0:34:27.84,*Default,NTP,0000,0000,0000,,是的，所以这就是这个
Dialogue: 0,0:34:27.84,0:34:29.84,*Default,NTP,0000,0000,0000,,通过知道它的存在来避免
Dialogue: 0,0:34:29.84,0:34:31.84,*Default,NTP,0000,0000,0000,,而不是用来利用或利用的东西
Dialogue: 0,0:34:31.84,0:34:33.52,*Default,NTP,0000,0000,0000,,通过知道它的存在来使用
Dialogue: 0,0:34:33.52,0:34:35.12,*Default,NTP,0000,0000,0000,,是默认参数值是
Dialogue: 0,0:34:35.12,0:34:36.96,*Default,NTP,0000,0000,0000,,函数的一部分，这意味着有
Dialogue: 0,0:34:36.96,0:34:38.64,*Default,NTP,0000,0000,0000,,有点像其中之一
Dialogue: 0,0:34:38.64,0:34:41.44,*Default,NTP,0000,0000,0000,,所以如果你想搞乱它你
Dialogue: 0,0:34:41.44,0:34:44.32,*Default,NTP,0000,0000,0000,,可以但不
Dialogue: 0,0:34:44.72,0:34:46.40,*Default,NTP,0000,0000,0000,,呃，有一个简单的问题，我们将讨论
Dialogue: 0,0:34:46.40,0:34:48.16,*Default,NTP,0000,0000,0000,,最后提出的问题是
Dialogue: 0,0:34:48.16,0:34:49.68,*Default,NTP,0000,0000,0000,,定义在函数中的默认值
Dialogue: 0,0:34:49.68,0:34:51.04,*Default,NTP,0000,0000,0000,,全球框架
Dialogue: 0,0:34:51.04,0:34:52.32,*Default,NTP,0000,0000,0000,,我不知道它是否真的定义在
Dialogue: 0,0:34:52.32,0:34:54.08,*Default,NTP,0000,0000,0000,,全球框架，但它实际上是
Dialogue: 0,0:34:54.08,0:34:56.56,*Default,NTP,0000,0000,0000,,这就是它正在做的
Dialogue: 0,0:34:56.56,0:34:59.60,*Default,NTP,0000,0000,0000,,确实，这里的这个表达
Dialogue: 0,0:34:59.60,0:35:02.16,*Default,NTP,0000,0000,0000,,在全球框架中进行评估
Dialogue: 0,0:35:02.16,0:35:03.76,*Default,NTP,0000,0000,0000,,你不应该用 x 做点什么吗
Dialogue: 0,0:35:03.76,0:35:06.00,*Default,NTP,0000,0000,0000,,别的
Dialogue: 0,0:35:06.24,0:35:09.52,*Default,NTP,0000,0000,0000,,因为这是评估的
Dialogue: 0,0:35:09.52,0:35:11.84,*Default,NTP,0000,0000,0000,,当函数被创建时而不是当
Dialogue: 0,0:35:11.84,0:35:12.88,*Default,NTP,0000,0000,0000,,它被称为
Dialogue: 0,0:35:12.88,0:35:14.88,*Default,NTP,0000,0000,0000,,呃，好吧，好像这一切都不起作用
Dialogue: 0,0:35:14.88,0:35:16.24,*Default,NTP,0000,0000,0000,,不再了，但我们可以喜欢
Dialogue: 0,0:35:16.24,0:35:20.56,*Default,NTP,0000,0000,0000,,返回 x 的 y 或类似的东西
Dialogue: 0,0:35:20.56,0:35:23.68,*Default,NTP,0000,0000,0000,,呃我们可以参考一下吗
Dialogue: 0,0:35:23.68,0:35:25.68,*Default,NTP,0000,0000,0000,,全球
Dialogue: 0,0:35:25.68,0:35:28.72,*Default,NTP,0000,0000,0000,,我想答案是肯定的，看看我是不是
Dialogue: 0,0:35:28.72,0:35:29.60,*Default,NTP,0000,0000,0000,,正确的
Dialogue: 0,0:35:29.60,0:35:32.32,*Default,NTP,0000,0000,0000,,是的，所以当你创建函数时
Dialogue: 0,0:35:32.32,0:35:34.32,*Default,NTP,0000,0000,0000,,在你打电话之前我们从未打电话过
Dialogue: 0,0:35:34.32,0:35:35.20,*Default,NTP,0000,0000,0000,,它
Dialogue: 0,0:35:35.20,0:35:37.20,*Default,NTP,0000,0000,0000,,它不仅创建了函数，而且还创建了
Dialogue: 0,0:35:37.20,0:35:39.28,*Default,NTP,0000,0000,0000,,创建默认参数值
Dialogue: 0,0:35:39.28,0:35:41.12,*Default,NTP,0000,0000,0000,,意味着评估这个表达式
Dialogue: 0,0:35:41.12,0:35:42.56,*Default,NTP,0000,0000,0000,,如果这个表达式是两个平方
Dialogue: 0,0:35:42.56,0:35:44.32,*Default,NTP,0000,0000,0000,,形成空列表的括号
Dialogue: 0,0:35:44.32,0:35:46.72,*Default,NTP,0000,0000,0000,,如果这个表达式是某个 lambda 那么
Dialogue: 0,0:35:46.72,0:35:48.24,*Default,NTP,0000,0000,0000,,它创建了一个函数
Dialogue: 0,0:35:48.24,0:35:51.36,*Default,NTP,0000,0000,0000,,是的，是的，我不喜欢它，不要这样做
Dialogue: 0,0:35:51.36,0:35:52.72,*Default,NTP,0000,0000,0000,,所以问题是什么
Dialogue: 0,0:35:52.72,0:35:54.72,*Default,NTP,0000,0000,0000,,类和对象之间的区别
Dialogue: 0,0:35:54.72,0:35:58.32,*Default,NTP,0000,0000,0000,,这就是我的想法
Dialogue: 0,0:35:58.32,0:35:59.28,*Default,NTP,0000,0000,0000,,它思考
Dialogue: 0,0:35:59.28,0:36:02.80,*Default,NTP,0000,0000,0000,,房子的蓝图就是班级
Dialogue: 0,0:36:02.80,0:36:04.80,*Default,NTP,0000,0000,0000,,房子是你建造的
Dialogue: 0,0:36:04.80,0:36:06.56,*Default,NTP,0000,0000,0000,,从蓝图来看
Dialogue: 0,0:36:06.56,0:36:10.08,*Default,NTP,0000,0000,0000,,好的，这样我就可以去上课了
Dialogue: 0,0:36:10.08,0:36:12.24,*Default,NTP,0000,0000,0000,,嗯，这就是这样的定义
Dialogue: 0,0:36:12.24,0:36:13.76,*Default,NTP,0000,0000,0000,,我正在存储的数据和
Dialogue: 0,0:36:13.76,0:36:15.28,*Default,NTP,0000,0000,0000,,它的功能
Dialogue: 0,0:36:15.28,0:36:16.96,*Default,NTP,0000,0000,0000,,然后我可以实例化我可以创建
Dialogue: 0,0:36:16.96,0:36:19.04,*Default,NTP,0000,0000,0000,,我想要多少个这样的对象
Dialogue: 0,0:36:19.04,0:36:21.36,*Default,NTP,0000,0000,0000,,它们本质上是实现
Dialogue: 0,0:36:21.36,0:36:23.92,*Default,NTP,0000,0000,0000,,你所创造的事物的
Dialogue: 0,0:36:23.92,0:36:24.96,*Default,NTP,0000,0000,0000,,类只是
Dialogue: 0,0:36:24.96,0:36:27.12,*Default,NTP,0000,0000,0000,,这有点像定义什么也没有
Dialogue: 0,0:36:27.12,0:36:28.64,*Default,NTP,0000,0000,0000,,存在，然后当你创建一个
Dialogue: 0,0:36:28.64,0:36:29.84,*Default,NTP,0000,0000,0000,,目的
Dialogue: 0,0:36:29.84,0:36:31.92,*Default,NTP,0000,0000,0000,,现在我可以用它做一些事情了
Dialogue: 0,0:36:31.92,0:36:33.28,*Default,NTP,0000,0000,0000,,所以有一个
Dialogue: 0,0:36:33.28,0:36:36.24,*Default,NTP,0000,0000,0000,,类型列表的类，然后我可以定义
Dialogue: 0,0:36:36.24,0:36:38.08,*Default,NTP,0000,0000,0000,,列表我可以定义一个列表两个列表
Dialogue: 0,0:36:38.08,0:36:41.84,*Default,NTP,0000,0000,0000,,50 列出我想要的任何东西 是的
Dialogue: 0,0:36:41.84,0:36:44.96,*Default,NTP,0000,0000,0000,,是的，这个比喻很好，因为
Dialogue: 0,0:36:44.96,0:36:46.40,*Default,NTP,0000,0000,0000,,你可以住在房子里，但你不能
Dialogue: 0,0:36:46.40,0:36:48.64,*Default,NTP,0000,0000,0000,,生活在蓝图中，就像你一样
Dialogue: 0,0:36:48.64,0:36:49.60,*Default,NTP,0000,0000,0000,,刚刚上课
Dialogue: 0,0:36:49.60,0:36:52.48,*Default,NTP,0000,0000,0000,,你真的不能用它做任何事
Dialogue: 0,0:36:52.48,0:36:53.36,*Default,NTP,0000,0000,0000,,直到你
Dialogue: 0,0:36:53.36,0:36:55.04,*Default,NTP,0000,0000,0000,,构造它所需要的东西之一
Dialogue: 0,0:36:55.04,0:36:56.80,*Default,NTP,0000,0000,0000,,描述建造房子
Dialogue: 0,0:36:56.80,0:36:58.24,*Default,NTP,0000,0000,0000,,然后你就可以上线了
Dialogue: 0,0:36:58.24,0:36:59.44,*Default,NTP,0000,0000,0000,,生活在其中，它有点像
Dialogue: 0,0:36:59.44,0:37:01.36,*Default,NTP,0000,0000,0000,,函数定义对你定义一个
Dialogue: 0,0:37:01.36,0:37:01.92,*Default,NTP,0000,0000,0000,,功能
Dialogue: 0,0:37:01.92,0:37:04.00,*Default,NTP,0000,0000,0000,,但什么也没做，它只是一个
Dialogue: 0,0:37:04.00,0:37:05.36,*Default,NTP,0000,0000,0000,,定义它只是挂在
Dialogue: 0,0:37:05.36,0:37:06.88,*Default,NTP,0000,0000,0000,,某处的全局框架
Dialogue: 0,0:37:06.88,0:37:09.04,*Default,NTP,0000,0000,0000,,但当你叫它啊现在我们
Dialogue: 0,0:37:09.04,0:37:11.92,*Default,NTP,0000,0000,0000,,实际上在做某事
Dialogue: 0,0:37:12.24,0:37:14.24,*Default,NTP,0000,0000,0000,,呃你不应该知道这个
Dialogue: 0,0:37:14.24,0:37:15.68,*Default,NTP,0000,0000,0000,,我的意思是你知道就好了
Dialogue: 0,0:37:15.68,0:37:16.00,*Default,NTP,0000,0000,0000,,但
Dialogue: 0,0:37:16.00,0:37:18.40,*Default,NTP,0000,0000,0000,,我们将介绍这个事实
Dialogue: 0,0:37:18.40,0:37:20.32,*Default,NTP,0000,0000,0000,,类和对象之间的关系
Dialogue: 0,0:37:20.32,0:37:21.52,*Default,NTP,0000,0000,0000,,下周所以
Dialogue: 0,0:37:21.52,0:37:23.12,*Default,NTP,0000,0000,0000,,这是给那些有点
Dialogue: 0,0:37:23.12,0:37:24.80,*Default,NTP,0000,0000,0000,,对发生的事情感到模糊
Dialogue: 0,0:37:24.80,0:37:26.88,*Default,NTP,0000,0000,0000,,嗯，那是因为我们还没有进入
Dialogue: 0,0:37:26.88,0:37:28.72,*Default,NTP,0000,0000,0000,,这个类定义了我们自己的类或者
Dialogue: 0,0:37:28.72,0:37:31.28,*Default,NTP,0000,0000,0000,,真的看了里面的东西
Dialogue: 0,0:37:31.28,0:37:33.04,*Default,NTP,0000,0000,0000,,但我们会的所以接下来会发生的是
Dialogue: 0,0:37:33.04,0:37:34.64,*Default,NTP,0000,0000,0000,,我们一直在使用内置的
Dialogue: 0,0:37:34.64,0:37:36.88,*Default,NTP,0000,0000,0000,,类以及诸如列表之类的东西
Dialogue: 0,0:37:36.88,0:37:37.76,*Default,NTP,0000,0000,0000,,日期但是
Dialogue: 0,0:37:37.76,0:37:39.20,*Default,NTP,0000,0000,0000,,我认为我们不会让你感到惊讶
Dialogue: 0,0:37:39.20,0:37:40.80,*Default,NTP,0000,0000,0000,,现在可以开始构建我们自己的类
Dialogue: 0,0:37:40.80,0:37:42.24,*Default,NTP,0000,0000,0000,,以及我们自己的数据表示和我们的
Dialogue: 0,0:37:42.24,0:37:44.48,*Default,NTP,0000,0000,0000,,自己的功能
Dialogue: 0,0:37:44.48,0:37:46.16,*Default,NTP,0000,0000,0000,,我在聊天中看到另外一个问题
Dialogue: 0,0:37:46.16,0:37:48.84,*Default,NTP,0000,0000,0000,,让我们看看是否可以得到它是一个范围a
Dialogue: 0,0:37:48.84,0:37:50.08,*Default,NTP,0000,0000,0000,,夫妻
Dialogue: 0,0:37:50.08,0:37:51.92,*Default,NTP,0000,0000,0000,,它有点像一个元组，但它不是一个
Dialogue: 0,0:37:51.92,0:37:53.85,*Default,NTP,0000,0000,0000,,元组的范围
Dialogue: 0,0:37:53.85,0:37:55.60,*Default,NTP,0000,0000,0000,,[笑声]
Dialogue: 0,0:37:55.60,0:37:59.36,*Default,NTP,0000,0000,0000,,出于同样的原因
Dialogue: 0,0:38:00.40,0:38:02.32,*Default,NTP,0000,0000,0000,,就像你可以进行很长的射程
Dialogue: 0,0:38:02.32,0:38:03.76,*Default,NTP,0000,0000,0000,,从一到
Dialogue: 0,0:38:03.76,0:38:05.84,*Default,NTP,0000,0000,0000,,不管那个巨大的数字是什么，除了你
Dialogue: 0,0:38:05.84,0:38:07.04,*Default,NTP,0000,0000,0000,,有点受不了
Dialogue: 0,0:38:07.04,0:38:09.68,*Default,NTP,0000,0000,0000,,制作一个非常大的元组
Dialogue: 0,0:38:09.68,0:38:10.40,*Default,NTP,0000,0000,0000,,道路
Dialogue: 0,0:38:10.40,0:38:14.24,*Default,NTP,0000,0000,0000,,到这个数字，所以元组有一个
Dialogue: 0,0:38:14.24,0:38:16.40,*Default,NTP,0000,0000,0000,,像所有这些一样的显式表示
Dialogue: 0,0:38:16.40,0:38:17.92,*Default,NTP,0000,0000,0000,,价值观存在于记忆中
Dialogue: 0,0:38:17.92,0:38:18.64,*Default,NTP,0000,0000,0000,,某处
Dialogue: 0,0:38:18.64,0:38:21.84,*Default,NTP,0000,0000,0000,,而这是一个隐式的
Dialogue: 0,0:38:21.84,0:38:23.44,*Default,NTP,0000,0000,0000,,数字范围的表示
Dialogue: 0,0:38:23.44,0:38:24.80,*Default,NTP,0000,0000,0000,,这可能很长
Dialogue: 0,0:38:24.80,0:38:26.24,*Default,NTP,0000,0000,0000,,但你真的只需要记住
Dialogue: 0,0:38:26.24,0:38:28.40,*Default,NTP,0000,0000,0000,,开始和结束是为了说话
Dialogue: 0,0:38:28.40,0:38:29.60,*Default,NTP,0000,0000,0000,,关于整个事情
Dialogue: 0,0:38:29.60,0:38:32.48,*Default,NTP,0000,0000,0000,,所以从这个意义上说，范围和元组是
Dialogue: 0,0:38:32.48,0:38:33.28,*Default,NTP,0000,0000,0000,,不同的
Dialogue: 0,0:38:33.28,0:38:36.56,*Default,NTP,0000,0000,0000,,现在他们有相似的特征
Dialogue: 0,0:38:36.56,0:38:37.52,*Default,NTP,0000,0000,0000,,也就是说他们都是
Dialogue: 0,0:38:37.52,0:38:40.96,*Default,NTP,0000,0000,0000,,不可变的序列就像呃
Dialogue: 0,0:38:40.96,0:38:42.48,*Default,NTP,0000,0000,0000,,元组可以有任何东西它可以
Dialogue: 0,0:38:42.48,0:38:44.32,*Default,NTP,0000,0000,0000,,有列表，它可以有字符串和范围
Dialogue: 0,0:38:44.32,0:38:46.40,*Default,NTP,0000,0000,0000,,里面只能有数字但是
Dialogue: 0,0:38:46.40,0:38:48.32,*Default,NTP,0000,0000,0000,,这对他们俩来说都是真的，你不能
Dialogue: 0,0:38:48.32,0:38:50.24,*Default,NTP,0000,0000,0000,,做你做不到的切片作业
Dialogue: 0,0:38:50.24,0:38:52.08,*Default,NTP,0000,0000,0000,,扩展或附加或类似的东西
