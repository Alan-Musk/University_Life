[Script Info]
Title: Lecture 29. Q&A_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1s3411G7yM?p=69&vd_source=6ffca0aa1006734a4fba52f389036611
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.16,0:00:03.12,*Default,NTP,0000,0000,0000,,61a 讲座 29 问答
Dialogue: 0,0:00:03.12,0:00:05.12,*Default,NTP,0000,0000,0000,,嘿约翰，当我们在等待某人时，它是
Dialogue: 0,0:00:05.12,0:00:06.48,*Default,NTP,0000,0000,0000,,自从我写信以来已经有一段时间了
Dialogue: 0,0:00:06.48,0:00:08.32,*Default,NTP,0000,0000,0000,,呃，一个编译解释器，但是我
Dialogue: 0,0:00:08.32,0:00:10.80,*Default,NTP,0000,0000,0000,,记得我们曾经用过这些嗯
Dialogue: 0,0:00:10.80,0:00:13.44,*Default,NTP,0000,0000,0000,,这是莱克斯和牦牛、弗莱克斯和野牛
Dialogue: 0,0:00:13.44,0:00:14.32,*Default,NTP,0000,0000,0000,,你是那种人
Dialogue: 0,0:00:14.32,0:00:17.04,*Default,NTP,0000,0000,0000,,您可以在其中指定语法和
Dialogue: 0,0:00:17.04,0:00:18.80,*Default,NTP,0000,0000,0000,,那么它会为你构建它
Dialogue: 0,0:00:18.80,0:00:19.36,*Default,NTP,0000,0000,0000,,仍然
Dialogue: 0,0:00:19.36,0:00:22.32,*Default,NTP,0000,0000,0000,,有点流行使用是的所以我们
Dialogue: 0,0:00:22.32,0:00:24.48,*Default,NTP,0000,0000,0000,,今天做了一件非常不寻常的事情
Dialogue: 0,0:00:24.48,0:00:25.92,*Default,NTP,0000,0000,0000,,讲座是为了描述
Dialogue: 0,0:00:25.92,0:00:29.04,*Default,NTP,0000,0000,0000,,你会如何编写一个解析器
Dialogue: 0,0:00:29.04,0:00:34.00,*Default,NTP,0000,0000,0000,,有点从头开始 是的，嗯
Dialogue: 0,0:00:34.00,0:00:37.04,*Default,NTP,0000,0000,0000,,是的，所以这些其他工具
Dialogue: 0,0:00:37.04,0:00:39.68,*Default,NTP,0000,0000,0000,,不是一种程序，而是你
Dialogue: 0,0:00:39.68,0:00:41.52,*Default,NTP,0000,0000,0000,,只是描述语法
Dialogue: 0,0:00:41.52,0:00:44.48,*Default,NTP,0000,0000,0000,,然后有一个生成器
Dialogue: 0,0:00:44.48,0:00:45.52,*Default,NTP,0000,0000,0000,,适合你的解析器
Dialogue: 0,0:00:45.52,0:00:46.80,*Default,NTP,0000,0000,0000,,现在如果你真的看过那个
Dialogue: 0,0:00:46.80,0:00:48.80,*Default,NTP,0000,0000,0000,,解析器它看起来有点像
Dialogue: 0,0:00:48.80,0:00:49.68,*Default,NTP,0000,0000,0000,,编码
Dialogue: 0,0:00:49.68,0:00:52.48,*Default,NTP,0000,0000,0000,,我们今天看了所以嗯所以那就是
Dialogue: 0,0:00:52.48,0:00:54.24,*Default,NTP,0000,0000,0000,,解析器是如何工作的，但是
Dialogue: 0,0:00:54.24,0:00:55.68,*Default,NTP,0000,0000,0000,,人们真的坐在那里写作吗
Dialogue: 0,0:00:55.68,0:00:57.44,*Default,NTP,0000,0000,0000,,解析器不特别适合以下内容
Dialogue: 0,0:00:57.44,0:00:58.00,*Default,NTP,0000,0000,0000,,复杂的
Dialogue: 0,0:00:58.00,0:01:01.20,*Default,NTP,0000,0000,0000,,作为 python 嗯你只是不会这样做
Dialogue: 0,0:01:01.20,0:01:01.68,*Default,NTP,0000,0000,0000,,因为
Dialogue: 0,0:01:01.68,0:01:04.48,*Default,NTP,0000,0000,0000,,出错的机会太多了
Dialogue: 0,0:01:04.48,0:01:05.60,*Default,NTP,0000,0000,0000,,是的，所以我认为有
Dialogue: 0,0:01:05.60,0:01:06.80,*Default,NTP,0000,0000,0000,,就好像还有另一个层次
Dialogue: 0,0:01:06.80,0:01:08.24,*Default,NTP,0000,0000,0000,,抽象就像你知道的那样
Dialogue: 0,0:01:08.24,0:01:09.92,*Default,NTP,0000,0000,0000,,有点酷，就像这样
Dialogue: 0,0:01:09.92,0:01:12.64,*Default,NTP,0000,0000,0000,,代码表明你可以在哪里获得更高的
Dialogue: 0,0:01:12.64,0:01:14.56,*Default,NTP,0000,0000,0000,,您的语言的级别描述
Dialogue: 0,0:01:14.56,0:01:16.08,*Default,NTP,0000,0000,0000,,然后编写解析器
Dialogue: 0,0:01:16.08,0:01:18.72,*Default,NTP,0000,0000,0000,,编译或解释代码
Dialogue: 0,0:01:18.72,0:01:21.84,*Default,NTP,0000,0000,0000,,是的，我的意思是基本上你了解这个领域
Dialogue: 0,0:01:21.84,0:01:23.84,*Default,NTP,0000,0000,0000,,的编程语言吸引了很多人
Dialogue: 0,0:01:23.84,0:01:25.28,*Default,NTP,0000,0000,0000,,真正优秀的程序员，你可以
Dialogue: 0,0:01:25.28,0:01:26.48,*Default,NTP,0000,0000,0000,,想象一下为什么会这样
Dialogue: 0,0:01:26.48,0:01:28.88,*Default,NTP,0000,0000,0000,,有非常好的工具是的
Dialogue: 0,0:01:28.88,0:01:30.80,*Default,NTP,0000,0000,0000,,嘿你能告诉我最后是什么吗
Dialogue: 0,0:01:30.80,0:01:32.88,*Default,NTP,0000,0000,0000,,我使用的工具是 Flex 和 bison 有
Dialogue: 0,0:01:32.88,0:01:33.28,*Default,NTP,0000,0000,0000,,那
Dialogue: 0,0:01:33.28,0:01:34.80,*Default,NTP,0000,0000,0000,,仍然是流行的吗
Dialogue: 0,0:01:34.80,0:01:36.72,*Default,NTP,0000,0000,0000,,从那时起发生的事情
Dialogue: 0,0:01:36.72,0:01:38.72,*Default,NTP,0000,0000,0000,,我不知道这是个好问题
Dialogue: 0,0:01:38.72,0:01:40.00,*Default,NTP,0000,0000,0000,,认为他们还在附近
Dialogue: 0,0:01:40.00,0:01:42.16,*Default,NTP,0000,0000,0000,,但是嗯但是可能会有新的 ii
Dialogue: 0,0:01:42.16,0:01:43.68,*Default,NTP,0000,0000,0000,,不认为
Dialogue: 0,0:01:43.68,0:01:45.92,*Default,NTP,0000,0000,0000,,想法已经改变太多了，我想
Dialogue: 0,0:01:45.92,0:01:47.36,*Default,NTP,0000,0000,0000,,这也是我的理解，但它是
Dialogue: 0,0:01:47.36,0:01:48.64,*Default,NTP,0000,0000,0000,,已经有一段时间了
Dialogue: 0,0:01:48.64,0:01:51.76,*Default,NTP,0000,0000,0000,,好的，所以问题是在计划中阅读的
Dialogue: 0,0:01:51.76,0:01:54.24,*Default,NTP,0000,0000,0000,,有一声爆裂声，但不应该是爆裂声
Dialogue: 0,0:01:54.24,0:01:55.92,*Default,NTP,0000,0000,0000,,而是从末尾删除一些东西
Dialogue: 0,0:01:55.92,0:01:57.12,*Default,NTP,0000,0000,0000,,比一开始
Dialogue: 0,0:01:57.12,0:02:00.56,*Default,NTP,0000,0000,0000,,好吧，也许“流行”这个名字不太好听
Dialogue: 0,0:02:00.56,0:02:02.96,*Default,NTP,0000,0000,0000,,但这个源对象不是
Dialogue: 0,0:02:02.96,0:02:04.80,*Default,NTP,0000,0000,0000,,实际上是一个Python列表
Dialogue: 0,0:02:04.80,0:02:09.84,*Default,NTP,0000,0000,0000,,但相反的是这个嗯
Dialogue: 0,0:02:10.00,0:02:11.84,*Default,NTP,0000,0000,0000,,它在哪里 这是一个叫做a的东西
Dialogue: 0,0:02:11.84,0:02:13.36,*Default,NTP,0000,0000,0000,,缓冲区哦我想它在不同的地方
Dialogue: 0,0:02:13.36,0:02:14.16,*Default,NTP,0000,0000,0000,,文件
Dialogue: 0,0:02:14.16,0:02:18.40,*Default,NTP,0000,0000,0000,,这个缓冲区有一个 pop 的概念
Dialogue: 0,0:02:18.40,0:02:20.48,*Default,NTP,0000,0000,0000,,这并没有从最后删除事情
Dialogue: 0,0:02:20.48,0:02:22.16,*Default,NTP,0000,0000,0000,,它从一开始就将它们删除
Dialogue: 0,0:02:22.16,0:02:24.88,*Default,NTP,0000,0000,0000,,所以也许我们应该叫警察打电话
Dialogue: 0,0:02:24.88,0:02:26.24,*Default,NTP,0000,0000,0000,,这是别的东西，但这就是答案
Dialogue: 0,0:02:26.24,0:02:27.20,*Default,NTP,0000,0000,0000,,对这个问题
Dialogue: 0,0:02:27.20,0:02:29.68,*Default,NTP,0000,0000,0000,,为什么会出现popping的情况
Dialogue: 0,0:02:29.68,0:02:31.20,*Default,NTP,0000,0000,0000,,从开头删除内容
Dialogue: 0,0:02:31.20,0:02:31.76,*Default,NTP,0000,0000,0000,,线
Dialogue: 0,0:02:31.76,0:02:33.28,*Default,NTP,0000,0000,0000,,这是因为你要从中删除的内容
Dialogue: 0,0:02:33.28,0:02:35.28,*Default,NTP,0000,0000,0000,,不是一个列表，而是一个缓冲区
Dialogue: 0,0:02:35.28,0:02:37.28,*Default,NTP,0000,0000,0000,,基本上告诉你关于未来的事情
Dialogue: 0,0:02:37.28,0:02:38.72,*Default,NTP,0000,0000,0000,,当你从中弹出一些东西时
Dialogue: 0,0:02:38.72,0:02:40.32,*Default,NTP,0000,0000,0000,,得到第一件事
Dialogue: 0,0:02:40.32,0:02:42.88,*Default,NTP,0000,0000,0000,,桑德拉认为术语“弹出”和“推送”是
Dialogue: 0,0:02:42.88,0:02:43.84,*Default,NTP,0000,0000,0000,,一般指
Dialogue: 0,0:02:43.84,0:02:46.24,*Default,NTP,0000,0000,0000,,我一直认为堆栈、提示和流行音乐
Dialogue: 0,0:02:46.24,0:02:47.20,*Default,NTP,0000,0000,0000,,流行音乐是
Dialogue: 0,0:02:47.20,0:02:49.12,*Default,NTP,0000,0000,0000,,某事物的最顶端是什么但是
Dialogue: 0,0:02:49.12,0:02:51.36,*Default,NTP,0000,0000,0000,,我认为它超载了，具体取决于
Dialogue: 0,0:02:51.36,0:02:53.76,*Default,NTP,0000,0000,0000,,底层数据结构是什么
Dialogue: 0,0:02:53.76,0:02:55.44,*Default,NTP,0000,0000,0000,,是的，我们绝对可以责怪Python
Dialogue: 0,0:02:55.44,0:02:57.20,*Default,NTP,0000,0000,0000,,这里有一种非常规的
Dialogue: 0,0:02:57.20,0:03:00.24,*Default,NTP,0000,0000,0000,,从最后弹出的概念但是
Dialogue: 0,0:03:00.24,0:03:02.48,*Default,NTP,0000,0000,0000,,没关系，问题是你在哪里
Dialogue: 0,0:03:02.48,0:03:03.28,*Default,NTP,0000,0000,0000,,定义来回
Dialogue: 0,0:03:03.28,0:03:05.04,*Default,NTP,0000,0000,0000,,像你一样，结局不一定是这样
Dialogue: 0,0:03:05.04,0:03:06.72,*Default,NTP,0000,0000,0000,,无论如何，这并不重要，但是是的
Dialogue: 0,0:03:06.72,0:03:08.32,*Default,NTP,0000,0000,0000,,这是从前面看的
Dialogue: 0,0:03:08.32,0:03:10.48,*Default,NTP,0000,0000,0000,,所以我们并没有真正讨论这个问题
Dialogue: 0,0:03:10.48,0:03:11.84,*Default,NTP,0000,0000,0000,,一个讲座，但绝对值得
Dialogue: 0,0:03:11.84,0:03:13.52,*Default,NTP,0000,0000,0000,,看看这个类的缓冲区
Dialogue: 0,0:03:13.52,0:03:15.12,*Default,NTP,0000,0000,0000,,实施并不重要，但
Dialogue: 0,0:03:15.12,0:03:16.48,*Default,NTP,0000,0000,0000,,它的行为确实
Dialogue: 0,0:03:16.48,0:03:19.44,*Default,NTP,0000,0000,0000,,基本上你就得到了这个 um 迭代器
Dialogue: 0,0:03:19.44,0:03:21.52,*Default,NTP,0000,0000,0000,,一堆符号，例如左括号
Dialogue: 0,0:03:21.52,0:03:22.40,*Default,NTP,0000,0000,0000,,和优点
Dialogue: 0,0:03:22.40,0:03:24.56,*Default,NTP,0000,0000,0000,,和数字和右括号和
Dialogue: 0,0:03:24.56,0:03:25.60,*Default,NTP,0000,0000,0000,,像这样的东西
Dialogue: 0,0:03:25.60,0:03:28.80,*Default,NTP,0000,0000,0000,,然后这里的目标是给你
Dialogue: 0,0:03:28.80,0:03:29.76,*Default,NTP,0000,0000,0000,,接下来的事
Dialogue: 0,0:03:29.76,0:03:31.84,*Default,NTP,0000,0000,0000,,并将其删除或只是查看下一个
Dialogue: 0,0:03:31.84,0:03:33.92,*Default,NTP,0000,0000,0000,,东西但还没有删除它
Dialogue: 0,0:03:33.92,0:03:35.36,*Default,NTP,0000,0000,0000,,有一种方法可以打印出来
Dialogue: 0,0:03:35.36,0:03:38.80,*Default,NTP,0000,0000,0000,,用于一些错误消息中
Dialogue: 0,0:03:38.96,0:03:42.08,*Default,NTP,0000,0000,0000,,是的，很好的问题，所以问题是
Dialogue: 0,0:03:42.08,0:03:45.60,*Default,NTP,0000,0000,0000,,在方案中读取
Dialogue: 0,0:03:45.60,0:03:49.20,*Default,NTP,0000,0000,0000,,一般情况下，您会点击 or 进行解析
Dialogue: 0,0:03:49.20,0:03:51.36,*Default,NTP,0000,0000,0000,,当你达到时你就遇到了基本情况
Dialogue: 0,0:03:51.36,0:03:52.80,*Default,NTP,0000,0000,0000,,一个符号或一个数字
Dialogue: 0,0:03:52.80,0:03:54.64,*Default,NTP,0000,0000,0000,,不是组合的东西和
Dialogue: 0,0:03:54.64,0:03:56.48,*Default,NTP,0000,0000,0000,,不是东西的组合，而是就像
Dialogue: 0,0:03:56.48,0:03:58.00,*Default,NTP,0000,0000,0000,,一件事
Dialogue: 0,0:03:58.00,0:03:59.36,*Default,NTP,0000,0000,0000,,当你到达那个基地时会发生什么
Dialogue: 0,0:03:59.36,0:04:00.96,*Default,NTP,0000,0000,0000,,它是如何运作的
Dialogue: 0,0:04:00.96,0:04:03.20,*Default,NTP,0000,0000,0000,,下一个左括号
Dialogue: 0,0:04:03.20,0:04:04.72,*Default,NTP,0000,0000,0000,,让我们看一个我会尝试的例子
Dialogue: 0,0:04:04.72,0:04:06.24,*Default,NTP,0000,0000,0000,,如果您有，请回答问题
Dialogue: 0,0:04:06.24,0:04:06.88,*Default,NTP,0000,0000,0000,,就像是
Dialogue: 0,0:04:06.88,0:04:09.20,*Default,NTP,0000,0000,0000,,加
Dialogue: 0,0:04:10.00,0:04:14.88,*Default,NTP,0000,0000,0000,,1 减 2 3 随便
Dialogue: 0,0:04:14.88,0:04:16.16,*Default,NTP,0000,0000,0000,,你想弄清楚这是什么
Dialogue: 0,0:04:16.16,0:04:18.08,*Default,NTP,0000,0000,0000,,事情就是现在，只是
Dialogue: 0,0:04:18.08,0:04:20.08,*Default,NTP,0000,0000,0000,,我要分开的一堆符号
Dialogue: 0,0:04:20.08,0:04:22.24,*Default,NTP,0000,0000,0000,,它们之间有空格，以便您可以看到它们
Dialogue: 0,0:04:22.24,0:04:23.12,*Default,NTP,0000,0000,0000,,全部
Dialogue: 0,0:04:23.12,0:04:25.84,*Default,NTP,0000,0000,0000,,所以现在我们有一二三四五
Dialogue: 0,0:04:25.84,0:04:26.80,*Default,NTP,0000,0000,0000,,六七八
Dialogue: 0,0:04:26.80,0:04:29.52,*Default,NTP,0000,0000,0000,,原来要担心的九件事
Dialogue: 0,0:04:29.52,0:04:30.32,*Default,NTP,0000,0000,0000,,称呼
Dialogue: 0,0:04:30.32,0:04:33.04,*Default,NTP,0000,0000,0000,,将有效地完成整个事情
Dialogue: 0,0:04:33.04,0:04:33.36,*Default,NTP,0000,0000,0000,,和
Dialogue: 0,0:04:33.36,0:04:36.48,*Default,NTP,0000,0000,0000,,它以左括号开头，所以我们
Dialogue: 0,0:04:36.48,0:04:38.64,*Default,NTP,0000,0000,0000,,进行递归调用
Dialogue: 0,0:04:38.64,0:04:43.28,*Default,NTP,0000,0000,0000,,呃，剩下的
Dialogue: 0,0:04:43.28,0:04:46.32,*Default,NTP,0000,0000,0000,,大约
Dialogue: 0,0:04:46.32,0:04:48.16,*Default,NTP,0000,0000,0000,,原始调用方案读取
Dialogue: 0,0:04:48.16,0:04:51.12,*Default,NTP,0000,0000,0000,,我们已经开始另一次通话
Dialogue: 0,0:04:51.12,0:04:54.84,*Default,NTP,0000,0000,0000,,顺便说一下
Dialogue: 0,0:04:54.84,0:04:57.28,*Default,NTP,0000,0000,0000,,嗯，如果你看看这个的结构
Dialogue: 0,0:04:57.28,0:04:58.88,*Default,NTP,0000,0000,0000,,它实际上并不称为计划
Dialogue: 0,0:04:58.88,0:05:00.08,*Default,NTP,0000,0000,0000,,读它调用
Dialogue: 0,0:05:00.08,0:05:01.84,*Default,NTP,0000,0000,0000,,read tail 基本上只是调用
Dialogue: 0,0:05:01.84,0:05:03.36,*Default,NTP,0000,0000,0000,,方案读取了很多次，直到它
Dialogue: 0,0:05:03.36,0:05:05.84,*Default,NTP,0000,0000,0000,,找到匹配的右括号
Dialogue: 0,0:05:05.84,0:05:08.96,*Default,NTP,0000,0000,0000,,所以这就是故事的内容
Dialogue: 0,0:05:08.96,0:05:10.96,*Default,NTP,0000,0000,0000,,一旦你看到一个左括号
Dialogue: 0,0:05:10.96,0:05:13.52,*Default,NTP,0000,0000,0000,,继续阅读下一篇
Dialogue: 0,0:05:13.52,0:05:15.68,*Default,NTP,0000,0000,0000,,直到找到匹配的结束语
Dialogue: 0,0:05:15.68,0:05:16.96,*Default,NTP,0000,0000,0000,,插入语
Dialogue: 0,0:05:16.96,0:05:18.80,*Default,NTP,0000,0000,0000,,如果当你读到下一件事时，它是
Dialogue: 0,0:05:18.80,0:05:21.04,*Default,NTP,0000,0000,0000,,基本情况是在另一个
Dialogue: 0,0:05:21.04,0:05:22.16,*Default,NTP,0000,0000,0000,,递归调用
Dialogue: 0,0:05:22.16,0:05:24.16,*Default,NTP,0000,0000,0000,,你做了一点，你达到了基本情况
Dialogue: 0,0:05:24.16,0:05:26.00,*Default,NTP,0000,0000,0000,,你回来就像哦，这只是一个优点
Dialogue: 0,0:05:26.00,0:05:29.20,*Default,NTP,0000,0000,0000,,符号但是你要返回到哪里
Dialogue: 0,0:05:29.20,0:05:32.08,*Default,NTP,0000,0000,0000,,您返回到原来的流程
Dialogue: 0,0:05:32.08,0:05:33.12,*Default,NTP,0000,0000,0000,,即将
Dialogue: 0,0:05:33.12,0:05:35.52,*Default,NTP,0000,0000,0000,,阅读所有这些内容，直到找到
Dialogue: 0,0:05:35.52,0:05:37.28,*Default,NTP,0000,0000,0000,,下一个右括号
Dialogue: 0,0:05:37.28,0:05:38.88,*Default,NTP,0000,0000,0000,,所以故事就像这样
Dialogue: 0,0:05:38.88,0:05:41.12,*Default,NTP,0000,0000,0000,,你达到了你返回的基本情况
Dialogue: 0,0:05:41.12,0:05:43.28,*Default,NTP,0000,0000,0000,,但你要返回的地方是
Dialogue: 0,0:05:43.28,0:05:44.64,*Default,NTP,0000,0000,0000,,持续阅读
Dialogue: 0,0:05:44.64,0:05:47.44,*Default,NTP,0000,0000,0000,,你知道的一些长表达
Dialogue: 0,0:05:47.44,0:05:49.12,*Default,NTP,0000,0000,0000,,以左括号开头，因为
Dialogue: 0,0:05:49.12,0:05:50.56,*Default,NTP,0000,0000,0000,,你从一开始就读到了
Dialogue: 0,0:05:50.56,0:05:52.16,*Default,NTP,0000,0000,0000,,你只是想保留
Dialogue: 0,0:05:52.16,0:05:54.16,*Default,NTP,0000,0000,0000,,阅读内容直到找到结束语
Dialogue: 0,0:05:54.16,0:05:56.08,*Default,NTP,0000,0000,0000,,插入语
Dialogue: 0,0:05:56.08,0:05:58.08,*Default,NTP,0000,0000,0000,,呃我们如何查看下一个项目
Dialogue: 0,0:05:58.08,0:06:01.12,*Default,NTP,0000,0000,0000,,迭代器而不删除它
Dialogue: 0,0:06:01.12,0:06:03.36,*Default,NTP,0000,0000,0000,,哦，好问题，答案是你
Dialogue: 0,0:06:03.36,0:06:06.32,*Default,NTP,0000,0000,0000,,不能，这就是为什么我们有这个缓冲区
Dialogue: 0,0:06:06.32,0:06:08.80,*Default,NTP,0000,0000,0000,,我们提供的课程，这样我们就可以
Dialogue: 0,0:06:08.80,0:06:11.28,*Default,NTP,0000,0000,0000,,很快看一下
Dialogue: 0,0:06:11.28,0:06:13.28,*Default,NTP,0000,0000,0000,,它就像你一样将东西变成列表
Dialogue: 0,0:06:13.28,0:06:14.56,*Default,NTP,0000,0000,0000,,去
Dialogue: 0,0:06:14.56,0:06:16.80,*Default,NTP,0000,0000,0000,,所以你会得到一堆迭代器
Dialogue: 0,0:06:16.80,0:06:17.84,*Default,NTP,0000,0000,0000,,在
Dialogue: 0,0:06:17.84,0:06:19.76,*Default,NTP,0000,0000,0000,,但它的作用只是存储
Dialogue: 0,0:06:19.76,0:06:21.68,*Default,NTP,0000,0000,0000,,它所看到的一切
Dialogue: 0,0:06:21.68,0:06:24.64,*Default,NTP,0000,0000,0000,,在这个叫做线条的东西中，当它
Dialogue: 0,0:06:24.64,0:06:27.36,*Default,NTP,0000,0000,0000,,需要看到新的东西
Dialogue: 0,0:06:27.36,0:06:30.40,*Default,NTP,0000,0000,0000,,它将继续前进并从中获得更多东西
Dialogue: 0,0:06:30.40,0:06:32.40,*Default,NTP,0000,0000,0000,,源迭代器
Dialogue: 0,0:06:32.40,0:06:35.84,*Default,NTP,0000,0000,0000,,但是嗯
Dialogue: 0,0:06:36.64,0:06:38.56,*Default,NTP,0000,0000,0000,,但不一定先进所以你好心
Dialogue: 0,0:06:38.56,0:06:40.40,*Default,NTP,0000,0000,0000,,就像跟踪整个列表
Dialogue: 0,0:06:40.40,0:06:41.44,*Default,NTP,0000,0000,0000,,你见过的东西
Dialogue: 0,0:06:41.44,0:06:43.92,*Default,NTP,0000,0000,0000,,你在哪里，这就是故事
Dialogue: 0,0:06:43.92,0:06:45.28,*Default,NTP,0000,0000,0000,,就像如果
Dialogue: 0,0:06:45.28,0:06:47.28,*Default,NTP,0000,0000,0000,,如果你有一个数据结构允许
Dialogue: 0,0:06:47.28,0:06:49.52,*Default,NTP,0000,0000,0000,,你偷看某样东西而不弹出
Dialogue: 0,0:06:49.52,0:06:51.68,*Default,NTP,0000,0000,0000,,关闭然后你就可以做到但标准
Dialogue: 0,0:06:51.68,0:06:52.88,*Default,NTP,0000,0000,0000,,迭代器将无法做到这一点
Dialogue: 0,0:06:52.88,0:06:53.76,*Default,NTP,0000,0000,0000,,你
Dialogue: 0,0:06:53.76,0:06:55.28,*Default,NTP,0000,0000,0000,,你可以阅读整个实现
Dialogue: 0,0:06:55.28,0:06:57.20,*Default,NTP,0000,0000,0000,,如果你想要的话有点长
Dialogue: 0,0:06:57.20,0:06:58.64,*Default,NTP,0000,0000,0000,,它有点长的原因是
Dialogue: 0,0:06:58.64,0:07:00.40,*Default,NTP,0000,0000,0000,,这样就可以打印出来
Dialogue: 0,0:07:00.40,0:07:02.32,*Default,NTP,0000,0000,0000,,整个代码以及您所在的位置
Dialogue: 0,0:07:02.32,0:07:06.08,*Default,NTP,0000,0000,0000,,对错误消息有帮助的代码
Dialogue: 0,0:07:06.56,0:07:08.24,*Default,NTP,0000,0000,0000,,约翰，这与堆栈有什么不同
Dialogue: 0,0:07:08.24,0:07:09.92,*Default,NTP,0000,0000,0000,,或队列
Dialogue: 0,0:07:09.92,0:07:13.20,*Default,NTP,0000,0000,0000,,嗯，在这种情况下我们永远不会
Dialogue: 0,0:07:13.20,0:07:16.48,*Default,NTP,0000,0000,0000,,确实添加了我们正在删除的东西
Dialogue: 0,0:07:16.48,0:07:17.92,*Default,NTP,0000,0000,0000,,从一开始我们就
Dialogue: 0,0:07:17.92,0:07:19.36,*Default,NTP,0000,0000,0000,,在最后添加东西
Dialogue: 0,0:07:19.36,0:07:23.84,*Default,NTP,0000,0000,0000,,所以它很像一个立方体 是的嗯
Dialogue: 0,0:07:23.84,0:07:25.60,*Default,NTP,0000,0000,0000,,除了就像这是一个暗示
Dialogue: 0,0:07:25.60,0:07:27.52,*Default,NTP,0000,0000,0000,,记住您删除的内容
Dialogue: 0,0:07:27.52,0:07:29.68,*Default,NTP,0000,0000,0000,,以防万一您需要打印出来
Dialogue: 0,0:07:29.68,0:07:31.44,*Default,NTP,0000,0000,0000,,好吧，我不认为
Dialogue: 0,0:07:31.44,0:07:32.64,*Default,NTP,0000,0000,0000,,内置Python
Dialogue: 0,0:07:32.64,0:07:35.04,*Default,NTP,0000,0000,0000,,队列我认为这是牌组允许的
Dialogue: 0,0:07:35.04,0:07:37.20,*Default,NTP,0000,0000,0000,,你这样做是的，没有记忆
Dialogue: 0,0:07:37.20,0:07:39.20,*Default,NTP,0000,0000,0000,,没错，好吧，所以就是这样
Dialogue: 0,0:07:39.20,0:07:40.96,*Default,NTP,0000,0000,0000,,它希望你拥有的一点记忆
Dialogue: 0,0:07:40.96,0:07:41.92,*Default,NTP,0000,0000,0000,,那就是
Dialogue: 0,0:07:41.92,0:07:43.28,*Default,NTP,0000,0000,0000,,你这样做的唯一原因是
Dialogue: 0,0:07:43.28,0:07:45.12,*Default,NTP,0000,0000,0000,,只是为了让你喜欢打印出来
Dialogue: 0,0:07:45.12,0:07:48.08,*Default,NTP,0000,0000,0000,,你知道，嗯，是的，我们来过这里，是的
Dialogue: 0,0:07:48.08,0:07:48.64,*Default,NTP,0000,0000,0000,,陷阱
Dialogue: 0,0:07:48.64,0:07:52.16,*Default,NTP,0000,0000,0000,,好的，是的，好问题，所以我们到了
Dialogue: 0,0:07:52.16,0:07:53.84,*Default,NTP,0000,0000,0000,,我们在计算中
Dialogue: 0,0:07:53.84,0:07:56.96,*Default,NTP,0000,0000,0000,,嗯，如果是一对的意思
Dialogue: 0,0:07:56.96,0:07:58.56,*Default,NTP,0000,0000,0000,,我们现在正在评估一些东西
Dialogue: 0,0:07:58.56,0:08:00.80,*Default,NTP,0000,0000,0000,,以左括号开头
Dialogue: 0,0:08:00.80,0:08:03.84,*Default,NTP,0000,0000,0000,,那么这行x秒是什么意思
Dialogue: 0,0:08:03.84,0:08:06.24,*Default,NTP,0000,0000,0000,,很好地映射计算来弄清楚我们
Dialogue: 0,0:08:06.24,0:08:07.12,*Default,NTP,0000,0000,0000,,知道什么是
Dialogue: 0,0:08:07.12,0:08:10.08,*Default,NTP,0000,0000,0000,,x 结果是我们是一对
Dialogue: 0,0:08:10.08,0:08:11.12,*Default,NTP,0000,0000,0000,,在这里想通了
Dialogue: 0,0:08:11.12,0:08:12.88,*Default,NTP,0000,0000,0000,,那么让我们快速看一下什么是
Dialogue: 0,0:08:12.88,0:08:14.32,*Default,NTP,0000,0000,0000,,对是和
Dialogue: 0,0:08:14.32,0:08:18.32,*Default,NTP,0000,0000,0000,,它的map方法做了什么
Dialogue: 0,0:08:18.32,0:08:21.52,*Default,NTP,0000,0000,0000,,滑雪读者
Dialogue: 0,0:08:21.52,0:08:25.36,*Default,NTP,0000,0000,0000,,这是一对，它有一个第一个和一个
Dialogue: 0,0:08:25.36,0:08:26.80,*Default,NTP,0000,0000,0000,,第二
Dialogue: 0,0:08:26.80,0:08:30.24,*Default,NTP,0000,0000,0000,,它是一个链接列表或类似一个方案
Dialogue: 0,0:08:30.24,0:08:33.52,*Default,NTP,0000,0000,0000,,链表，所以第一个可以是
Dialogue: 0,0:08:33.52,0:08:34.08,*Default,NTP,0000,0000,0000,,任何事物
Dialogue: 0,0:08:34.08,0:08:35.92,*Default,NTP,0000,0000,0000,,但第二个应该是另一个
Dialogue: 0,0:08:35.92,0:08:37.12,*Default,NTP,0000,0000,0000,,对的实例
Dialogue: 0,0:08:37.12,0:08:40.24,*Default,NTP,0000,0000,0000,,或 或 零
Dialogue: 0,0:08:40.24,0:08:45.52,*Default,NTP,0000,0000,0000,,代表结束 um
Dialogue: 0,0:08:45.76,0:08:48.56,*Default,NTP,0000,0000,0000,,呃我想我们没有谈论太多
Dialogue: 0,0:08:48.56,0:08:50.00,*Default,NTP,0000,0000,0000,,这种事情但这只是让
Dialogue: 0,0:08:50.00,0:08:52.08,*Default,NTP,0000,0000,0000,,你会得到一个列表的长度或者
Dialogue: 0,0:08:52.08,0:08:55.36,*Default,NTP,0000,0000,0000,,使用方括号 um
Dialogue: 0,0:08:55.36,0:08:57.36,*Default,NTP,0000,0000,0000,,我们有没有谈论过这个 我没有
Dialogue: 0,0:08:57.36,0:08:59.92,*Default,NTP,0000,0000,0000,,我想也许我们忽略了这一点
Dialogue: 0,0:08:59.92,0:09:01.28,*Default,NTP,0000,0000,0000,,这个学期但不是那样
Dialogue: 0,0:09:01.28,0:09:01.92,*Default,NTP,0000,0000,0000,,重要的
Dialogue: 0,0:09:01.92,0:09:03.92,*Default,NTP,0000,0000,0000,,嗯，但重要的是有一个
Dialogue: 0,0:09:03.92,0:09:05.76,*Default,NTP,0000,0000,0000,,常规的旧方法称为地图
Dialogue: 0,0:09:05.76,0:09:07.44,*Default,NTP,0000,0000,0000,,它所做的是它需要一个
Dialogue: 0,0:09:07.44,0:09:09.76,*Default,NTP,0000,0000,0000,,它在每个函数上调用该函数
Dialogue: 0,0:09:09.76,0:09:11.84,*Default,NTP,0000,0000,0000,,这对列表的元素
Dialogue: 0,0:09:11.84,0:09:12.64,*Default,NTP,0000,0000,0000,,代表
Dialogue: 0,0:09:12.64,0:09:15.44,*Default,NTP,0000,0000,0000,,然后返回一个新列表
Dialogue: 0,0:09:15.44,0:09:16.24,*Default,NTP,0000,0000,0000,,真的是一对
Dialogue: 0,0:09:16.24,0:09:18.24,*Default,NTP,0000,0000,0000,,实例，所以它是一个链接列表
Dialogue: 0,0:09:18.24,0:09:20.64,*Default,NTP,0000,0000,0000,,结构与所有结果
Dialogue: 0,0:09:20.64,0:09:21.68,*Default,NTP,0000,0000,0000,,调用这个函数
Dialogue: 0,0:09:21.68,0:09:23.84,*Default,NTP,0000,0000,0000,,所以我们可以很好地阅读这篇文章
Dialogue: 0,0:09:23.84,0:09:25.28,*Default,NTP,0000,0000,0000,,像你一样简单
Dialogue: 0,0:09:25.28,0:09:27.52,*Default,NTP,0000,0000,0000,,如果存在，则对第一个元素调用 fun
Dialogue: 0,0:09:27.52,0:09:28.72,*Default,NTP,0000,0000,0000,,第二个元素
Dialogue: 0,0:09:28.72,0:09:30.94,*Default,NTP,0000,0000,0000,,嗯，那么你
Dialogue: 0,0:09:30.94,0:09:32.64,*Default,NTP,0000,0000,0000,,[音乐]
Dialogue: 0,0:09:32.64,0:09:35.28,*Default,NTP,0000,0000,0000,,在第二个递归调用map
Dialogue: 0,0:09:35.28,0:09:37.84,*Default,NTP,0000,0000,0000,,元素
Dialogue: 0,0:09:37.84,0:09:40.40,*Default,NTP,0000,0000,0000,,然后你建立一个新的列表，里面有这个
Dialogue: 0,0:09:40.40,0:09:43.60,*Default,NTP,0000,0000,0000,,其中新的第一个元素
Dialogue: 0,0:09:46.40,0:09:49.84,*Default,NTP,0000,0000,0000,,这并没有说expo.map calcaval
Dialogue: 0,0:09:49.84,0:09:51.96,*Default,NTP,0000,0000,0000,,相反，它说
Dialogue: 0,0:09:51.96,0:09:53.20,*Default,NTP,0000,0000,0000,,Expert.Second.Map.calcoval
Dialogue: 0,0:09:53.20,0:09:56.32,*Default,NTP,0000,0000,0000,,我认为值得一看的是快递
Dialogue: 0,0:09:56.32,0:09:59.20,*Default,NTP,0000,0000,0000,,一个例子所以这个例子在这里
Dialogue: 0,0:09:59.20,0:10:00.48,*Default,NTP,0000,0000,0000,,看起来有点好笑
Dialogue: 0,0:10:00.48,0:10:03.68,*Default,NTP,0000,0000,0000,,确实添加到结果中
Dialogue: 0,0:10:03.68,0:10:05.04,*Default,NTP,0000,0000,0000,,乘以四
Dialogue: 0,0:10:05.04,0:10:07.68,*Default,NTP,0000,0000,0000,,和六个
Dialogue: 0,0:10:08.24,0:10:13.36,*Default,NTP,0000,0000,0000,,这个东西如果我们把它放进去
Dialogue: 0,0:10:13.36,0:10:16.80,*Default,NTP,0000,0000,0000,,你放弃了 paren john 读者
Dialogue: 0,0:10:16.80,0:10:20.08,*Default,NTP,0000,0000,0000,,哦，天哪，如果我们把它放进去
Dialogue: 0,0:10:20.08,0:10:22.32,*Default,NTP,0000,0000,0000,,读者我们可以看到它是什么样子
Dialogue: 0,0:10:22.32,0:10:24.56,*Default,NTP,0000,0000,0000,,从Python的角度来看，它是一对
Dialogue: 0,0:10:24.56,0:10:26.00,*Default,NTP,0000,0000,0000,,以加号开头
Dialogue: 0,0:10:26.00,0:10:29.12,*Default,NTP,0000,0000,0000,,然后是 2 等
Dialogue: 0,0:10:29.12,0:10:32.32,*Default,NTP,0000,0000,0000,,如果我得到这个对象的点秒
Dialogue: 0,0:10:32.32,0:10:35.60,*Default,NTP,0000,0000,0000,,这一切真的只是
Dialogue: 0,0:10:35.60,0:10:37.76,*Default,NTP,0000,0000,0000,,有两个元素，它有第二个元素
Dialogue: 0,0:10:37.76,0:10:39.92,*Default,NTP,0000,0000,0000,,它有这个子表达次数
Dialogue: 0,0:10:39.92,0:10:41.28,*Default,NTP,0000,0000,0000,,四六
Dialogue: 0,0:10:41.28,0:10:43.28,*Default,NTP,0000,0000,0000,,所以将 calcaval 映射到的点
Dialogue: 0,0:10:43.28,0:10:46.00,*Default,NTP,0000,0000,0000,,这就是我们正在转换的
Dialogue: 0,0:10:46.00,0:10:48.72,*Default,NTP,0000,0000,0000,,2 到 2 我们正在转换时间
Dialogue: 0,0:10:48.72,0:10:49.04,*Default,NTP,0000,0000,0000,,4
Dialogue: 0,0:10:49.04,0:10:53.04,*Default,NTP,0000,0000,0000,,6 成其价值
Dialogue: 0,0:10:55.60,0:10:59.28,*Default,NTP,0000,0000,0000,,然后是时候添加
Dialogue: 0,0:10:59.60,0:11:01.92,*Default,NTP,0000,0000,0000,,这就是 calc 的应用，所以
Dialogue: 0,0:11:01.92,0:11:03.92,*Default,NTP,0000,0000,0000,,重点是这是递归调用
Dialogue: 0,0:11:03.92,0:11:05.60,*Default,NTP,0000,0000,0000,,接受所有子表达式并且
Dialogue: 0,0:11:05.60,0:11:08.32,*Default,NTP,0000,0000,0000,,找到他们的价值观
Dialogue: 0,0:11:08.32,0:11:09.60,*Default,NTP,0000,0000,0000,,我也许可以这么说
Dialogue: 0,0:11:09.60,0:11:12.72,*Default,NTP,0000,0000,0000,,句子，本来会更多
Dialogue: 0,0:11:12.84,0:11:14.08,*Default,NTP,0000,0000,0000,,清除
Dialogue: 0,0:11:14.08,0:11:15.68,*Default,NTP,0000,0000,0000,,总是更清楚它总是最后的
Dialogue: 0,0:11:15.68,0:11:16.96,*Default,NTP,0000,0000,0000,,但你仍然必须到达那里
Dialogue: 0,0:11:16.96,0:11:19.20,*Default,NTP,0000,0000,0000,,约翰
Dialogue: 0,0:11:21.52,0:11:23.92,*Default,NTP,0000,0000,0000,,是的，好问题，所以问题是
Dialogue: 0,0:11:23.92,0:11:25.44,*Default,NTP,0000,0000,0000,,你应该经常使用
Dialogue: 0,0:11:25.44,0:11:30.08,*Default,NTP,0000,0000,0000,,映射到进程以进行递归调用
Dialogue: 0,0:11:30.08,0:11:32.72,*Default,NTP,0000,0000,0000,,如果你的输入是一个列表并且我认为
Dialogue: 0,0:11:32.72,0:11:34.32,*Default,NTP,0000,0000,0000,,情况并非总是如此
Dialogue: 0,0:11:34.32,0:11:36.16,*Default,NTP,0000,0000,0000,,这真的取决于你想做什么
Dialogue: 0,0:11:36.16,0:11:37.92,*Default,NTP,0000,0000,0000,,为了达到这样的目的，你已经写了一些
Dialogue: 0,0:11:37.92,0:11:38.96,*Default,NTP,0000,0000,0000,,功能
Dialogue: 0,0:11:38.96,0:11:42.64,*Default,NTP,0000,0000,0000,,假设 s 是一个实例
Dialogue: 0,0:11:42.64,0:11:46.32,*Default,NTP,0000,0000,0000,,一对就像一个方案列表
Dialogue: 0,0:11:46.32,0:11:48.80,*Default,NTP,0000,0000,0000,,不管你是否真的使用地图
Dialogue: 0,0:11:48.80,0:11:50.00,*Default,NTP,0000,0000,0000,,取决于你是否在做
Dialogue: 0,0:11:50.00,0:11:51.04,*Default,NTP,0000,0000,0000,,递归调用
Dialogue: 0,0:11:51.04,0:11:53.44,*Default,NTP,0000,0000,0000,,在 s 的元素上，在这种情况下映射
Dialogue: 0,0:11:53.44,0:11:54.64,*Default,NTP,0000,0000,0000,,是合适的
Dialogue: 0,0:11:54.64,0:11:56.48,*Default,NTP,0000,0000,0000,,或者如果你正在递归调用
Dialogue: 0,0:11:56.48,0:11:58.72,*Default,NTP,0000,0000,0000,,s 的其余部分在这种情况下 map 不起作用
Dialogue: 0,0:11:58.72,0:11:59.36,*Default,NTP,0000,0000,0000,,给你的
Dialogue: 0,0:11:59.36,0:12:02.00,*Default,NTP,0000,0000,0000,,你只需要明确地调用 f
Dialogue: 0,0:12:02.00,0:12:04.72,*Default,NTP,0000,0000,0000,,秒
Dialogue: 0,0:12:04.72,0:12:08.96,*Default,NTP,0000,0000,0000,,嗯，是的，我认为
Dialogue: 0,0:12:08.96,0:12:12.08,*Default,NTP,0000,0000,0000,,eval 是不寻常的并且它没有链接
Dialogue: 0,0:12:12.08,0:12:13.12,*Default,NTP,0000,0000,0000,,列表处理
Dialogue: 0,0:12:13.12,0:12:14.48,*Default,NTP,0000,0000,0000,,你只是想做某事
Dialogue: 0,0:12:14.48,0:12:16.00,*Default,NTP,0000,0000,0000,,第一个元素，你正在做一个
Dialogue: 0,0:12:16.00,0:12:18.16,*Default,NTP,0000,0000,0000,,递归调用列表的其余部分
Dialogue: 0,0:12:18.16,0:12:20.08,*Default,NTP,0000,0000,0000,,相反，它正在做的是使其
Dialogue: 0,0:12:20.08,0:12:22.00,*Default,NTP,0000,0000,0000,,递归调用每个元素
Dialogue: 0,0:12:22.00,0:12:22.48,*Default,NTP,0000,0000,0000,,列表
Dialogue: 0,0:12:22.48,0:12:24.96,*Default,NTP,0000,0000,0000,,这就是为什么我们接下来使用 Matt
Dialogue: 0,0:12:24.96,0:12:25.60,*Default,NTP,0000,0000,0000,,问题是
Dialogue: 0,0:12:25.60,0:12:28.96,*Default,NTP,0000,0000,0000,,主要装饰器是什么
Dialogue: 0,0:12:28.96,0:12:32.40,*Default,NTP,0000,0000,0000,,是的，所以这个主要装饰器是
Dialogue: 0,0:12:32.40,0:12:37.44,*Default,NTP,0000,0000,0000,,嗯 61a 特有的东西
Dialogue: 0,0:12:37.60,0:12:40.88,*Default,NTP,0000,0000,0000,,它只是说如果你运行该文件
Dialogue: 0,0:12:40.88,0:12:42.32,*Default,NTP,0000,0000,0000,,这是应该的功能
Dialogue: 0,0:12:42.32,0:12:44.64,*Default,NTP,0000,0000,0000,,被称为
Dialogue: 0,0:12:45.36,0:12:48.88,*Default,NTP,0000,0000,0000,,所以如果我运行整个 skel.pi
Dialogue: 0,0:12:48.88,0:12:51.68,*Default,NTP,0000,0000,0000,,文件不会作为方案调用
Dialogue: 0,0:12:51.68,0:12:52.88,*Default,NTP,0000,0000,0000,,列表而不是它会调用
Dialogue: 0,0:12:52.88,0:12:54.40,*Default,NTP,0000,0000,0000,,重新开发打印循环
Dialogue: 0,0:12:54.40,0:12:57.60,*Default,NTP,0000,0000,0000,,嗯，做这里的任何事情
Dialogue: 0,0:12:57.60,0:12:59.84,*Default,NTP,0000,0000,0000,,嗯，这可行的另一种方式是
Dialogue: 0,0:12:59.84,0:13:02.40,*Default,NTP,0000,0000,0000,,省略 read 的定义
Dialogue: 0,0:13:02.40,0:13:04.48,*Default,NTP,0000,0000,0000,,关于打印，就一会儿
Dialogue: 0,0:13:04.48,0:13:06.00,*Default,NTP,0000,0000,0000,,代码主体，然后它会
Dialogue: 0,0:13:06.00,0:13:07.68,*Default,NTP,0000,0000,0000,,运行它这是一种更干净的方法
Dialogue: 0,0:13:07.68,0:13:09.44,*Default,NTP,0000,0000,0000,,将所有内容都包含在一个函数中
Dialogue: 0,0:13:09.44,0:13:11.28,*Default,NTP,0000,0000,0000,,是的，正是如此，我们会得到相同的结果
Dialogue: 0,0:13:11.28,0:13:12.56,*Default,NTP,0000,0000,0000,,如果我们这样做了
Dialogue: 0,0:13:12.56,0:13:16.16,*Default,NTP,0000,0000,0000,,这是唯一的问题
Dialogue: 0,0:13:16.16,0:13:17.92,*Default,NTP,0000,0000,0000,,是如果你从以下位置导入这个文件
Dialogue: 0,0:13:17.92,0:13:19.36,*Default,NTP,0000,0000,0000,,另一个文件然后这将运行
Dialogue: 0,0:13:19.36,0:13:20.72,*Default,NTP,0000,0000,0000,,你并不总是想要
Dialogue: 0,0:13:20.72,0:13:22.80,*Default,NTP,0000,0000,0000,,嗯，有一种丑陋
Dialogue: 0,0:13:22.80,0:13:23.92,*Default,NTP,0000,0000,0000,,约定于
Dialogue: 0,0:13:23.92,0:13:27.12,*Default,NTP,0000,0000,0000,,python 这是最重要的
Dialogue: 0,0:13:27.12,0:13:28.72,*Default,NTP,0000,0000,0000,,有时你会看到商业广告
Dialogue: 0,0:13:28.72,0:13:32.72,*Default,NTP,0000,0000,0000,,python 代码你会看到它们是对的
Dialogue: 0,0:13:34.00,0:13:36.40,*Default,NTP,0000,0000,0000,,那
Dialogue: 0,0:13:39.12,0:13:40.96,*Default,NTP,0000,0000,0000,,我觉得我们会花很多钱
Dialogue: 0,0:13:40.96,0:13:43.20,*Default,NTP,0000,0000,0000,,是时候尝试解释这是什么了
Dialogue: 0,0:13:43.20,0:13:45.76,*Default,NTP,0000,0000,0000,,呃，这会毁了课程所以
Dialogue: 0,0:13:45.76,0:13:47.04,*Default,NTP,0000,0000,0000,,这就是为什么我们引入了主要的
Dialogue: 0,0:13:47.04,0:13:49.36,*Default,NTP,0000,0000,0000,,装饰师我有点夸张了
Dialogue: 0,0:13:49.36,0:13:50.08,*Default,NTP,0000,0000,0000,,约翰
Dialogue: 0,0:13:50.08,0:13:52.96,*Default,NTP,0000,0000,0000,,我也发现语法很丑所以我
Dialogue: 0,0:13:52.96,0:13:54.72,*Default,NTP,0000,0000,0000,,很高兴你写了一个漂亮的呃
Dialogue: 0,0:13:54.72,0:13:57.68,*Default,NTP,0000,0000,0000,,它的干净版本
Dialogue: 0,0:13:58.56,0:14:00.88,*Default,NTP,0000,0000,0000,,顺便说一句，它只是在这个中定义的
Dialogue: 0,0:14:00.88,0:14:02.24,*Default,NTP,0000,0000,0000,,UCB
Dialogue: 0,0:14:02.24,0:14:04.80,*Default,NTP,0000,0000,0000,,很久以前我写的文件
Dialogue: 0,0:14:04.80,0:14:06.56,*Default,NTP,0000,0000,0000,,开始教授这门课程
Dialogue: 0,0:14:06.56,0:14:10.08,*Default,NTP,0000,0000,0000,,嗯，是这样的
Dialogue: 0,0:14:10.08,0:14:12.40,*Default,NTP,0000,0000,0000,,奇怪的名称概念等于主要类型
Dialogue: 0,0:14:12.40,0:14:15.92,*Default,NTP,0000,0000,0000,,埋在那里所以这就是它的全部作用
Dialogue: 0,0:14:15.92,0:14:17.20,*Default,NTP,0000,0000,0000,,下一个问题是
Dialogue: 0,0:14:17.20,0:14:19.92,*Default,NTP,0000,0000,0000,,python 的解析器不需要
Dialogue: 0,0:14:19.92,0:14:20.40,*Default,NTP,0000,0000,0000,,追踪
Dialogue: 0,0:14:20.40,0:14:22.64,*Default,NTP,0000,0000,0000,,缩进而不是仅仅忽略
Dialogue: 0,0:14:22.64,0:14:24.96,*Default,NTP,0000,0000,0000,,空白
Dialogue: 0,0:14:24.96,0:14:27.28,*Default,NTP,0000,0000,0000,,是的，没错，缩进是一部分
Dialogue: 0,0:14:27.28,0:14:28.40,*Default,NTP,0000,0000,0000,,语法的
Dialogue: 0,0:14:28.40,0:14:31.52,*Default,NTP,0000,0000,0000,,python 的意思是解析器需要
Dialogue: 0,0:14:31.52,0:14:32.40,*Default,NTP,0000,0000,0000,,到
Dialogue: 0,0:14:32.40,0:14:35.84,*Default,NTP,0000,0000,0000,,不仅仅是忽略所有的间距和
Dialogue: 0,0:14:35.84,0:14:38.08,*Default,NTP,0000,0000,0000,,就像我们对方案所做的缩进一样
Dialogue: 0,0:14:38.08,0:14:40.24,*Default,NTP,0000,0000,0000,,但它必须跟踪它
Dialogue: 0,0:14:40.24,0:14:42.16,*Default,NTP,0000,0000,0000,,我的意思是这就是为什么大多数语言都有一个
Dialogue: 0,0:14:42.16,0:14:43.52,*Default,NTP,0000,0000,0000,,开始和结束的概念
Dialogue: 0,0:14:43.52,0:14:45.60,*Default,NTP,0000,0000,0000,,右端所以我猜 python 有
Dialogue: 0,0:14:45.60,0:14:46.56,*Default,NTP,0000,0000,0000,,开始的概念
Dialogue: 0,0:14:46.56,0:14:50.00,*Default,NTP,0000,0000,0000,,那是冒号，但结尾是
Dialogue: 0,0:14:50.00,0:14:53.28,*Default,NTP,0000,0000,0000,,隐含在我曾经的缩进中
Dialogue: 0,0:14:53.28,0:14:55.68,*Default,NTP,0000,0000,0000,,从来不喜欢我更喜欢有喜欢
Dialogue: 0,0:14:55.68,0:14:57.76,*Default,NTP,0000,0000,0000,,a 显式的开闭
Dialogue: 0,0:14:57.76,0:15:01.04,*Default,NTP,0000,0000,0000,,开始和大括号 大括号 um
Dialogue: 0,0:15:01.04,0:15:02.40,*Default,NTP,0000,0000,0000,,我认为这让代码变得有点
Dialogue: 0,0:15:02.40,0:15:04.00,*Default,NTP,0000,0000,0000,,更容易阅读，但在这方面是的
Dialogue: 0,0:15:04.00,0:15:05.44,*Default,NTP,0000,0000,0000,,你必须跟踪它
Dialogue: 0,0:15:05.44,0:15:06.80,*Default,NTP,0000,0000,0000,,不然你不知道什么时候身体
Dialogue: 0,0:15:06.80,0:15:09.60,*Default,NTP,0000,0000,0000,,任何事情的结束
Dialogue: 0,0:15:09.60,0:15:11.68,*Default,NTP,0000,0000,0000,,是的，我说谢谢，是的，我也这么认为
Dialogue: 0,0:15:11.68,0:15:12.96,*Default,NTP,0000,0000,0000,,好像有东西可以做更好
Dialogue: 0,0:15:12.96,0:15:14.00,*Default,NTP,0000,0000,0000,,不要跟丢
Dialogue: 0,0:15:14.00,0:15:16.88,*Default,NTP,0000,0000,0000,,开始只是为了说清楚约翰
Dialogue: 0,0:15:16.88,0:15:18.24,*Default,NTP,0000,0000,0000,,你知道这是否有原因吗
Dialogue: 0,0:15:18.24,0:15:19.76,*Default,NTP,0000,0000,0000,,我的意思是这有点不寻常
Dialogue: 0,0:15:19.76,0:15:22.48,*Default,NTP,0000,0000,0000,,python 中的约定
Dialogue: 0,0:15:22.48,0:15:26.16,*Default,NTP,0000,0000,0000,,呃我同意这很不寻常呃我认为有
Dialogue: 0,0:15:26.16,0:15:28.40,*Default,NTP,0000,0000,0000,,我曾经读过一些关于如何
Dialogue: 0,0:15:28.40,0:15:30.00,*Default,NTP,0000,0000,0000,,他们决定这个
Dialogue: 0,0:15:30.00,0:15:32.88,*Default,NTP,0000,0000,0000,,我相信这涉及到
Dialogue: 0,0:15:32.88,0:15:34.08,*Default,NTP,0000,0000,0000,,某人的
Dialogue: 0,0:15:34.08,0:15:36.56,*Default,NTP,0000,0000,0000,,配偶读一段代码时
Dialogue: 0,0:15:36.56,0:15:38.16,*Default,NTP,0000,0000,0000,,不是程序员或类似的人
Dialogue: 0,0:15:38.16,0:15:39.60,*Default,NTP,0000,0000,0000,,他们就像哦，是的，这使得
Dialogue: 0,0:15:39.60,0:15:41.68,*Default,NTP,0000,0000,0000,,对我来说有什么意义，但是呃我
Dialogue: 0,0:15:41.68,0:15:43.68,*Default,NTP,0000,0000,0000,,我不知道这到底有多真实，但是
Dialogue: 0,0:15:43.68,0:15:45.68,*Default,NTP,0000,0000,0000,,是的，让我们实现它吧
Dialogue: 0,0:15:45.68,0:15:48.64,*Default,NTP,0000,0000,0000,,我喜欢这样的故事
Dialogue: 0,0:15:48.80,0:15:51.84,*Default,NTP,0000,0000,0000,,嗯，如果你知道你是否喜欢露骨的话
Dialogue: 0,0:15:51.84,0:15:53.68,*Default,NTP,0000,0000,0000,,标点符号告诉你事情的结尾
Dialogue: 0,0:15:53.68,0:15:55.12,*Default,NTP,0000,0000,0000,,我相信你会喜欢这个计划，因为
Dialogue: 0,0:15:55.12,0:15:56.88,*Default,NTP,0000,0000,0000,,它有很多结束印刷品
Dialogue: 0,0:15:56.88,0:15:58.64,*Default,NTP,0000,0000,0000,,天哪，但这完全是另一个世界
Dialogue: 0,0:15:58.64,0:15:59.12,*Default,NTP,0000,0000,0000,,伤害
Dialogue: 0,0:15:59.12,0:16:03.35,*Default,NTP,0000,0000,0000,,[笑声]
Dialogue: 0,0:16:03.44,0:16:05.76,*Default,NTP,0000,0000,0000,,下一个问题是什么编程
Dialogue: 0,0:16:05.76,0:16:08.00,*Default,NTP,0000,0000,0000,,语言通常用于编写
Dialogue: 0,0:16:08.00,0:16:10.72,*Default,NTP,0000,0000,0000,,口译员这是一个很好的问题
Dialogue: 0,0:16:10.72,0:16:12.16,*Default,NTP,0000,0000,0000,,我觉得
Dialogue: 0,0:16:12.16,0:16:15.60,*Default,NTP,0000,0000,0000,,嗯为了
Dialogue: 0,0:16:15.60,0:16:17.60,*Default,NTP,0000,0000,0000,,取决于你的目标是什么，如果你是
Dialogue: 0,0:16:17.60,0:16:19.12,*Default,NTP,0000,0000,0000,,构建一个你了解的解释器
Dialogue: 0,0:16:19.12,0:16:20.72,*Default,NTP,0000,0000,0000,,成千上万的人将会使用并且
Dialogue: 0,0:16:20.72,0:16:22.48,*Default,NTP,0000,0000,0000,,他们将在上面运行大型程序
Dialogue: 0,0:16:22.48,0:16:25.20,*Default,NTP,0000,0000,0000,,主要关注的通常是速度
Dialogue: 0,0:16:25.20,0:16:27.44,*Default,NTP,0000,0000,0000,,和资源利用
Dialogue: 0,0:16:27.44,0:16:29.52,*Default,NTP,0000,0000,0000,,当时python的解释器
Dialogue: 0,0:16:29.52,0:16:30.80,*Default,NTP,0000,0000,0000,,被写
Dialogue: 0,0:16:30.80,0:16:33.84,*Default,NTP,0000,0000,0000,,c 是编写 a 的明显选择
Dialogue: 0,0:16:33.84,0:16:36.72,*Default,NTP,0000,0000,0000,,运行速度快的程序是什么样的
Dialogue: 0,0:16:36.72,0:16:40.24,*Default,NTP,0000,0000,0000,,令人着迷的是现在最快
Dialogue: 0,0:16:40.24,0:16:43.28,*Default,NTP,0000,0000,0000,,python 的实现不是一个
Dialogue: 0,0:16:43.28,0:16:45.20,*Default,NTP,0000,0000,0000,,我们都使用它，但取而代之的是一个单独的
Dialogue: 0,0:16:45.20,0:16:46.08,*Default,NTP,0000,0000,0000,,一个叫 pi
Dialogue: 0,0:16:46.08,0:16:48.40,*Default,NTP,0000,0000,0000,,pi 这是一个Python解释器编写的
Dialogue: 0,0:16:48.40,0:16:50.72,*Default,NTP,0000,0000,0000,,在Python和
Dialogue: 0,0:16:50.72,0:16:52.72,*Default,NTP,0000,0000,0000,,它比 python 快很多
Dialogue: 0,0:16:52.72,0:16:54.56,*Default,NTP,0000,0000,0000,,用c写的解释器
Dialogue: 0,0:16:54.56,0:16:56.72,*Default,NTP,0000,0000,0000,,它通过一些方法达到了这个速度
Dialogue: 0,0:16:56.72,0:16:58.80,*Default,NTP,0000,0000,0000,,非常聪明的工程基本上
Dialogue: 0,0:16:58.80,0:16:59.44,*Default,NTP,0000,0000,0000,,喜欢
Dialogue: 0,0:16:59.44,0:17:02.24,*Default,NTP,0000,0000,0000,,python 代码不被解释
Dialogue: 0,0:17:02.24,0:17:03.76,*Default,NTP,0000,0000,0000,,运行解释器的Python代码是
Dialogue: 0,0:17:03.76,0:17:05.36,*Default,NTP,0000,0000,0000,,没有解释，而是有点
Dialogue: 0,0:17:05.36,0:17:08.16,*Default,NTP,0000,0000,0000,,通过多种方式编译和优化
Dialogue: 0,0:17:08.16,0:17:10.48,*Default,NTP,0000,0000,0000,,嗯你知道就像我说的编程
Dialogue: 0,0:17:10.48,0:17:12.00,*Default,NTP,0000,0000,0000,,语言人们往往非常聪明
Dialogue: 0,0:17:12.00,0:17:13.12,*Default,NTP,0000,0000,0000,,在编程时
Dialogue: 0,0:17:13.12,0:17:14.65,*Default,NTP,0000,0000,0000,,所以
Dialogue: 0,0:17:14.65,0:17:16.84,*Default,NTP,0000,0000,0000,,[音乐]
Dialogue: 0,0:17:16.84,0:17:19.36,*Default,NTP,0000,0000,0000,,是的，基本上就是这样
Dialogue: 0,0:17:19.36,0:17:20.56,*Default,NTP,0000,0000,0000,,的故事
Dialogue: 0,0:17:20.56,0:17:22.72,*Default,NTP,0000,0000,0000,,你知道什么是正确的编程
Dialogue: 0,0:17:22.72,0:17:23.84,*Default,NTP,0000,0000,0000,,语言以便
Dialogue: 0,0:17:23.84,0:17:26.96,*Default,NTP,0000,0000,0000,,让这个解释器变得更快嗯
Dialogue: 0,0:17:26.96,0:17:29.44,*Default,NTP,0000,0000,0000,,编程中一个有趣的趋势
Dialogue: 0,0:17:29.44,0:17:31.04,*Default,NTP,0000,0000,0000,,语言社区
Dialogue: 0,0:17:31.04,0:17:33.92,*Default,NTP,0000,0000,0000,,是为了任何一般目的
Dialogue: 0,0:17:33.92,0:17:35.12,*Default,NTP,0000,0000,0000,,编程语言
Dialogue: 0,0:17:35.12,0:17:37.20,*Default,NTP,0000,0000,0000,,人们常常会尝试写一个
Dialogue: 0,0:17:37.20,0:17:38.64,*Default,NTP,0000,0000,0000,,该语言的解释器
Dialogue: 0,0:17:38.64,0:17:41.04,*Default,NTP,0000,0000,0000,,作为首批大型计划之一
Dialogue: 0,0:17:41.04,0:17:42.88,*Default,NTP,0000,0000,0000,,用那种语言写的
Dialogue: 0,0:17:42.88,0:17:45.36,*Default,NTP,0000,0000,0000,,为什么这有点像自然
Dialogue: 0,0:17:45.36,0:17:46.32,*Default,NTP,0000,0000,0000,,目标
Dialogue: 0,0:17:46.32,0:17:48.72,*Default,NTP,0000,0000,0000,,还有你认识的人
Dialogue: 0,0:17:48.72,0:17:51.12,*Default,NTP,0000,0000,0000,,编写解释器
Dialogue: 0,0:17:51.12,0:17:52.72,*Default,NTP,0000,0000,0000,,他们不知道他们不写
Dialogue: 0,0:17:52.72,0:17:53.84,*Default,NTP,0000,0000,0000,,还有很多其他的事情，除了
Dialogue: 0,0:17:53.84,0:17:55.52,*Default,NTP,0000,0000,0000,,口译员所以事情就是这样
Dialogue: 0,0:17:55.52,0:17:57.36,*Default,NTP,0000,0000,0000,,所以这意味着口译员有
Dialogue: 0,0:17:57.36,0:17:58.56,*Default,NTP,0000,0000,0000,,被写成许多不同的
Dialogue: 0,0:17:58.56,0:18:00.08,*Default,NTP,0000,0000,0000,,编程语言
Dialogue: 0,0:18:00.08,0:18:03.28,*Default,NTP,0000,0000,0000,,嗯，你知道他们
Dialogue: 0,0:18:03.28,0:18:04.56,*Default,NTP,0000,0000,0000,,不同的编程语言可以
Dialogue: 0,0:18:04.56,0:18:06.56,*Default,NTP,0000,0000,0000,,出奇地适合这个
Dialogue: 0,0:18:06.56,0:18:08.72,*Default,NTP,0000,0000,0000,,嗯，我不确定是否有一个明显的
Dialogue: 0,0:18:08.72,0:18:09.60,*Default,NTP,0000,0000,0000,,最好的
Dialogue: 0,0:18:09.60,0:18:12.24,*Default,NTP,0000,0000,0000,,除非我要承诺一个
Dialogue: 0,0:18:12.24,0:18:15.60,*Default,NTP,0000,0000,0000,,可能会是
Dialogue: 0,0:18:15.60,0:18:17.12,*Default,NTP,0000,0000,0000,,某种进化的东西
Dialogue: 0,0:18:17.12,0:18:20.16,*Default,NTP,0000,0000,0000,,称为球拍的方案版本
Dialogue: 0,0:18:20.16,0:18:22.88,*Default,NTP,0000,0000,0000,,还有这个很棒的社区
Dialogue: 0,0:18:22.88,0:18:25.04,*Default,NTP,0000,0000,0000,,程序员和开发人员
Dialogue: 0,0:18:25.04,0:18:27.52,*Default,NTP,0000,0000,0000,,仍然对此做出贡献
Dialogue: 0,0:18:27.52,0:18:28.96,*Default,NTP,0000,0000,0000,,称为球拍的语言
Dialogue: 0,0:18:28.96,0:18:30.96,*Default,NTP,0000,0000,0000,,他们已经设置好让人们可以
Dialogue: 0,0:18:30.96,0:18:32.88,*Default,NTP,0000,0000,0000,,创建语言的变体
Dialogue: 0,0:18:32.88,0:18:35.20,*Default,NTP,0000,0000,0000,,真的很容易，而且有各种各样的
Dialogue: 0,0:18:35.20,0:18:36.96,*Default,NTP,0000,0000,0000,,的工具，以确保喜欢你的新
Dialogue: 0,0:18:36.96,0:18:38.72,*Default,NTP,0000,0000,0000,,变体实际上可以正常工作并且
Dialogue: 0,0:18:38.72,0:18:39.76,*Default,NTP,0000,0000,0000,,像这样的东西
Dialogue: 0,0:18:39.76,0:18:41.84,*Default,NTP,0000,0000,0000,,嗯，我认为这导致了公平
Dialogue: 0,0:18:41.84,0:18:42.96,*Default,NTP,0000,0000,0000,,生产力量
Dialogue: 0,0:18:42.96,0:18:44.32,*Default,NTP,0000,0000,0000,,他们有该语言的版本
Dialogue: 0,0:18:44.32,0:18:45.84,*Default,NTP,0000,0000,0000,,他们所拥有的对教学有好处的
Dialogue: 0,0:18:45.84,0:18:47.28,*Default,NTP,0000,0000,0000,,语言的好版本
Dialogue: 0,0:18:47.28,0:18:47.60,*Default,NTP,0000,0000,0000,,为了
Dialogue: 0,0:18:47.60,0:18:48.96,*Default,NTP,0000,0000,0000,,你知道喜欢建立网站和
Dialogue: 0,0:18:48.96,0:18:50.80,*Default,NTP,0000,0000,0000,,类似的东西嗯所以
Dialogue: 0,0:18:50.80,0:18:52.48,*Default,NTP,0000,0000,0000,,是的，所以偶尔有
Dialogue: 0,0:18:52.48,0:18:54.48,*Default,NTP,0000,0000,0000,,有些人喜欢杰出人物，我认为c
Dialogue: 0,0:18:54.48,0:18:57.12,*Default,NTP,0000,0000,0000,,是其中之一，因为它速度很快，而且我
Dialogue: 0,0:18:57.12,0:18:57.60,*Default,NTP,0000,0000,0000,,思考
Dialogue: 0,0:18:57.60,0:18:59.76,*Default,NTP,0000,0000,0000,,球拍是一种现代球拍，因为它
Dialogue: 0,0:18:59.76,0:19:01.76,*Default,NTP,0000,0000,0000,,碰巧运作良好
Dialogue: 0,0:19:01.76,0:19:04.40,*Default,NTP,0000,0000,0000,,是的，我很惊讶地听到
Dialogue: 0,0:19:04.40,0:19:05.68,*Default,NTP,0000,0000,0000,,蟒蛇解释器
Dialogue: 0,0:19:05.68,0:19:07.28,*Default,NTP,0000,0000,0000,,虽然我想象比 c 快
Dialogue: 0,0:19:07.28,0:19:09.28,*Default,NTP,0000,0000,0000,,采用同样巧妙的工程
Dialogue: 0,0:19:09.28,0:19:11.20,*Default,NTP,0000,0000,0000,,你可以让 c 更快，因为我
Dialogue: 0,0:19:11.20,0:19:12.80,*Default,NTP,0000,0000,0000,,有人问不是很难吗
Dialogue: 0,0:19:12.80,0:19:13.60,*Default,NTP,0000,0000,0000,,问题是
Dialogue: 0,0:19:13.60,0:19:15.68,*Default,NTP,0000,0000,0000,,即使使用 c 仍然比 python 更快
Dialogue: 0,0:19:15.68,0:19:16.72,*Default,NTP,0000,0000,0000,,撒尿
Dialogue: 0,0:19:16.72,0:19:18.96,*Default,NTP,0000,0000,0000,,升级我无法想象Python是
Dialogue: 0,0:19:18.96,0:19:21.84,*Default,NTP,0000,0000,0000,,会比c更快
Dialogue: 0,0:19:21.84,0:19:24.40,*Default,NTP,0000,0000,0000,,嗯，不，虽然有一个有趣的
Dialogue: 0,0:19:24.40,0:19:25.32,*Default,NTP,0000,0000,0000,,项目名为
Dialogue: 0,0:19:25.32,0:19:30.88,*Default,NTP,0000,0000,0000,,cython 是 python 的子集
Dialogue: 0,0:19:30.88,0:19:32.40,*Default,NTP,0000,0000,0000,,所以你不能做你能做的一切
Dialogue: 0,0:19:32.40,0:19:34.72,*Default,NTP,0000,0000,0000,,python，但你可以完成大部分工作
Dialogue: 0,0:19:34.72,0:19:36.56,*Default,NTP,0000,0000,0000,,所以代码或多或少看起来像
Dialogue: 0,0:19:36.56,0:19:39.68,*Default,NTP,0000,0000,0000,,python代码，但可以编译
Dialogue: 0,0:19:39.68,0:19:43.20,*Default,NTP,0000,0000,0000,,嗯，我认为他们编译的方式是
Dialogue: 0,0:19:43.20,0:19:43.92,*Default,NTP,0000,0000,0000,,他们
Dialogue: 0,0:19:43.92,0:19:46.40,*Default,NTP,0000,0000,0000,,呃，把它翻译成 c 是的，然后
Dialogue: 0,0:19:46.40,0:19:48.24,*Default,NTP,0000,0000,0000,,他们运行 ac 编译器，我相信那是
Dialogue: 0,0:19:48.24,0:19:48.96,*Default,NTP,0000,0000,0000,,为什么叫它
Dialogue: 0,0:19:48.96,0:19:51.76,*Default,NTP,0000,0000,0000,,cython 是的，但这意味着很多
Dialogue: 0,0:19:51.76,0:19:53.12,*Default,NTP,0000,0000,0000,,当人们尝试写作的时候
Dialogue: 0,0:19:53.12,0:19:54.08,*Default,NTP,0000,0000,0000,,快速代码
Dialogue: 0,0:19:54.08,0:19:56.64,*Default,NTP,0000,0000,0000,,就像一个Python生态系统，其中
Dialogue: 0,0:19:56.64,0:19:57.84,*Default,NTP,0000,0000,0000,,他们已经写了大部分
Dialogue: 0,0:19:57.84,0:20:00.08,*Default,NTP,0000,0000,0000,,python 中的代码已经他们只是切换
Dialogue: 0,0:20:00.08,0:20:02.00,*Default,NTP,0000,0000,0000,,对于这种实际上不是 c 的语言
Dialogue: 0,0:20:02.00,0:20:03.84,*Default,NTP,0000,0000,0000,,它看起来更像 python 但它可以
Dialogue: 0,0:20:03.84,0:20:05.20,*Default,NTP,0000,0000,0000,,翻译成c
Dialogue: 0,0:20:05.20,0:20:07.04,*Default,NTP,0000,0000,0000,,呃，这就是他们的经营方式
Dialogue: 0,0:20:07.04,0:20:08.88,*Default,NTP,0000,0000,0000,,需要写出他们的部分
Dialogue: 0,0:20:08.88,0:20:10.08,*Default,NTP,0000,0000,0000,,需要跑得非常快
Dialogue: 0,0:20:10.08,0:20:14.00,*Default,NTP,0000,0000,0000,,我看到我看到后续问题是
Dialogue: 0,0:20:14.00,0:20:15.20,*Default,NTP,0000,0000,0000,,如果你要写一个Python
Dialogue: 0,0:20:15.20,0:20:17.20,*Default,NTP,0000,0000,0000,,python 中的解释器你不也是吗
Dialogue: 0,0:20:17.20,0:20:18.88,*Default,NTP,0000,0000,0000,,需要一个用Python编写的解释器
Dialogue: 0,0:20:18.88,0:20:20.56,*Default,NTP,0000,0000,0000,,别的东西
Dialogue: 0,0:20:20.56,0:20:22.56,*Default,NTP,0000,0000,0000,,是的，这是正确的，所以为了得到
Dialogue: 0,0:20:22.56,0:20:25.04,*Default,NTP,0000,0000,0000,,这个嗯
Dialogue: 0,0:20:25.04,0:20:27.28,*Default,NTP,0000,0000,0000,,这个呃Python解释器是用以下语言编写的
Dialogue: 0,0:20:27.28,0:20:28.32,*Default,NTP,0000,0000,0000,,蟒蛇去工作
Dialogue: 0,0:20:28.32,0:20:30.56,*Default,NTP,0000,0000,0000,,他们必须使用运行解释器
Dialogue: 0,0:20:30.56,0:20:32.32,*Default,NTP,0000,0000,0000,,解释器的 c 版本
Dialogue: 0,0:20:32.32,0:20:33.36,*Default,NTP,0000,0000,0000,,已经存在
Dialogue: 0,0:20:33.36,0:20:35.68,*Default,NTP,0000,0000,0000,,呃，一旦他们做到了，那么他们
Dialogue: 0,0:20:35.68,0:20:37.60,*Default,NTP,0000,0000,0000,,可以运行自己的解释器
Dialogue: 0,0:20:37.60,0:20:40.16,*Default,NTP,0000,0000,0000,,你会得到这些非常奇怪的循环但是
Dialogue: 0,0:20:40.16,0:20:41.92,*Default,NTP,0000,0000,0000,,你的直觉是完全正确的
Dialogue: 0,0:20:41.92,0:20:43.36,*Default,NTP,0000,0000,0000,,你必须拥有一些东西
Dialogue: 0,0:20:43.36,0:20:44.56,*Default,NTP,0000,0000,0000,,已经运行的
Dialogue: 0,0:20:44.56,0:20:46.64,*Default,NTP,0000,0000,0000,,为了建立一些新的权利
Dialogue: 0,0:20:46.64,0:20:48.40,*Default,NTP,0000,0000,0000,,是的，约翰是对的
Dialogue: 0,0:20:48.40,0:20:49.84,*Default,NTP,0000,0000,0000,,谁为一个人做编程语言
Dialogue: 0,0:20:49.84,0:20:53.20,*Default,NTP,0000,0000,0000,,生活非常聪明
Dialogue: 0,0:20:53.20,0:20:55.68,*Default,NTP,0000,0000,0000,,是的，听起来是这样，谢谢你
Dialogue: 0,0:20:55.68,0:20:56.80,*Default,NTP,0000,0000,0000,,如果有机会的话
Dialogue: 0,0:20:56.80,0:20:59.04,*Default,NTP,0000,0000,0000,,参加 PL 课程，我确信有一个
Dialogue: 0,0:20:59.04,0:21:00.40,*Default,NTP,0000,0000,0000,,在这里提供是的约翰
Dialogue: 0,0:21:00.40,0:21:02.72,*Default,NTP,0000,0000,0000,,是的，它的编号是 164，这很好
Dialogue: 0,0:21:02.72,0:21:04.48,*Default,NTP,0000,0000,0000,,当然是的，我的意思是它是
Dialogue: 0,0:21:04.48,0:21:05.92,*Default,NTP,0000,0000,0000,,这意味着我不知道这是否是最多的
Dialogue: 0,0:21:05.92,0:21:07.84,*Default,NTP,0000,0000,0000,,实践课程但我认为思考
Dialogue: 0,0:21:07.84,0:21:10.00,*Default,NTP,0000,0000,0000,,关于不同语言的本质
Dialogue: 0,0:21:10.00,0:21:10.32,*Default,NTP,0000,0000,0000,,和
Dialogue: 0,0:21:10.32,0:21:12.08,*Default,NTP,0000,0000,0000,,真的很酷而且很理解
Dialogue: 0,0:21:12.08,0:21:13.52,*Default,NTP,0000,0000,0000,,这些东西的实际工作原理非常好
Dialogue: 0,0:21:13.52,0:21:14.72,*Default,NTP,0000,0000,0000,,有趣的是来自
Dialogue: 0,0:21:14.72,0:21:17.84,*Default,NTP,0000,0000,0000,,一种纯粹的智力视角
Dialogue: 0,0:21:17.84,0:21:20.56,*Default,NTP,0000,0000,0000,,是的，好的，谢谢摩洛凯岛，米琼恩是
Dialogue: 0,0:21:20.56,0:21:21.44,*Default,NTP,0000,0000,0000,,接下来
Dialogue: 0,0:21:21.44,0:21:25.44,*Default,NTP,0000,0000,0000,,对亚马逊感到抱歉，这一切都很好
Dialogue: 0,0:21:25.44,0:21:27.84,*Default,NTP,0000,0000,0000,,嗯，所以我们谈论了语言
Dialogue: 0,0:21:27.84,0:21:30.00,*Default,NTP,0000,0000,0000,,你可以使用但结构
Dialogue: 0,0:21:30.00,0:21:32.72,*Default,NTP,0000,0000,0000,,对于编写像这样的解释器
Dialogue: 0,0:21:32.72,0:21:34.24,*Default,NTP,0000,0000,0000,,一样还是一样吗
Dialogue: 0,0:21:34.24,0:21:35.92,*Default,NTP,0000,0000,0000,,这个递归结构还是存在
Dialogue: 0,0:21:35.92,0:21:39.04,*Default,NTP,0000,0000,0000,,还有其他方法可以做到这一点
Dialogue: 0,0:21:39.12,0:21:41.28,*Default,NTP,0000,0000,0000,,是的，这个递归问题问得好
Dialogue: 0,0:21:41.28,0:21:42.72,*Default,NTP,0000,0000,0000,,我向你展示的结构
Dialogue: 0,0:21:42.72,0:21:44.96,*Default,NTP,0000,0000,0000,,是最简单的，也可能是最慢的
Dialogue: 0,0:21:44.96,0:21:45.92,*Default,NTP,0000,0000,0000,,通向
Dialogue: 0,0:21:45.92,0:21:48.48,*Default,NTP,0000,0000,0000,,解释代码的大部分内容
Dialogue: 0,0:21:48.48,0:21:50.40,*Default,NTP,0000,0000,0000,,实际上发生在你的电脑上这些
Dialogue: 0,0:21:50.40,0:21:51.20,*Default,NTP,0000,0000,0000,,天
Dialogue: 0,0:21:51.20,0:21:54.40,*Default,NTP,0000,0000,0000,,不只是这样做，而是
Dialogue: 0,0:21:54.40,0:21:56.72,*Default,NTP,0000,0000,0000,,对原来的进行改造
Dialogue: 0,0:21:56.72,0:21:57.52,*Default,NTP,0000,0000,0000,,程序
Dialogue: 0,0:21:57.52,0:21:59.28,*Default,NTP,0000,0000,0000,,一路走来，实际上就是这样
Dialogue: 0,0:21:59.28,0:22:00.64,*Default,NTP,0000,0000,0000,,python的解释器
Dialogue: 0,0:22:00.64,0:22:04.24,*Default,NTP,0000,0000,0000,,作品就是这样
Dialogue: 0,0:22:04.24,0:22:05.92,*Default,NTP,0000,0000,0000,,获取一段可能运行的代码
Dialogue: 0,0:22:05.92,0:22:07.28,*Default,NTP,0000,0000,0000,,多次
Dialogue: 0,0:22:07.28,0:22:10.16,*Default,NTP,0000,0000,0000,,并产生一些类似有效的
Dialogue: 0,0:22:10.16,0:22:11.92,*Default,NTP,0000,0000,0000,,的版本，然后运行那么多
Dialogue: 0,0:22:11.92,0:22:13.52,*Default,NTP,0000,0000,0000,,时代就像我们迈出的一步
Dialogue: 0,0:22:13.52,0:22:14.88,*Default,NTP,0000,0000,0000,,本课程中没有谈到
Dialogue: 0,0:22:14.88,0:22:16.56,*Default,NTP,0000,0000,0000,,因为它不会改变答案
Dialogue: 0,0:22:16.56,0:22:19.68,*Default,NTP,0000,0000,0000,,只是让它运行得更快
Dialogue: 0,0:22:20.56,0:22:22.40,*Default,NTP,0000,0000,0000,,如果你想真正深入
Dialogue: 0,0:22:22.40,0:22:24.64,*Default,NTP,0000,0000,0000,,这
Dialogue: 0,0:22:24.80,0:22:27.12,*Default,NTP,0000,0000,0000,,有这方面的原始教科书
Dialogue: 0,0:22:27.12,0:22:28.32,*Default,NTP,0000,0000,0000,,当然称为结构和
Dialogue: 0,0:22:28.32,0:22:30.56,*Default,NTP,0000,0000,0000,,计算机程序的解释
Dialogue: 0,0:22:30.56,0:22:32.80,*Default,NTP,0000,0000,0000,,有从未有过的第五章
Dialogue: 0,0:22:32.80,0:22:34.08,*Default,NTP,0000,0000,0000,,61a 涵盖
Dialogue: 0,0:22:34.08,0:22:37.92,*Default,NTP,0000,0000,0000,,即使当呃
Dialogue: 0,0:22:38.24,0:22:40.56,*Default,NTP,0000,0000,0000,,是的，即使整个课程都是
Dialogue: 0,0:22:40.56,0:22:41.76,*Default,NTP,0000,0000,0000,,方案
Dialogue: 0,0:22:41.76,0:22:43.52,*Default,NTP,0000,0000,0000,,嗯，所以第四章是关于
Dialogue: 0,0:22:43.52,0:22:45.36,*Default,NTP,0000,0000,0000,,口译员基本上就是这样
Dialogue: 0,0:22:45.36,0:22:46.56,*Default,NTP,0000,0000,0000,,我们现在正在报道
Dialogue: 0,0:22:46.56,0:22:49.44,*Default,NTP,0000,0000,0000,,但第五章是关于你如何
Dialogue: 0,0:22:49.44,0:22:49.92,*Default,NTP,0000,0000,0000,,得到
Dialogue: 0,0:22:49.92,0:22:52.64,*Default,NTP,0000,0000,0000,,实际运行的编程语言
Dialogue: 0,0:22:52.64,0:22:53.36,*Default,NTP,0000,0000,0000,,在一个
Dialogue: 0,0:22:53.36,0:22:56.48,*Default,NTP,0000,0000,0000,,使用有限指令集的芯片
Dialogue: 0,0:22:56.48,0:22:58.00,*Default,NTP,0000,0000,0000,,没有程序之类的东西
Dialogue: 0,0:22:58.00,0:22:59.52,*Default,NTP,0000,0000,0000,,电话之类的东西
Dialogue: 0,0:22:59.52,0:23:01.36,*Default,NTP,0000,0000,0000,,你知道他们做得很好
Dialogue: 0,0:23:01.36,0:23:03.28,*Default,NTP,0000,0000,0000,,列出你将如何得到
Dialogue: 0,0:23:03.28,0:23:05.12,*Default,NTP,0000,0000,0000,,高级语言到低级语言
Dialogue: 0,0:23:05.12,0:23:07.12,*Default,NTP,0000,0000,0000,,语言
Dialogue: 0,0:23:07.12,0:23:09.52,*Default,NTP,0000,0000,0000,,所以你知道人们都很兴奋
Dialogue: 0,0:23:09.52,0:23:11.44,*Default,NTP,0000,0000,0000,,关于构建编程的想法
Dialogue: 0,0:23:11.44,0:23:13.12,*Default,NTP,0000,0000,0000,,语言都应该读一下
Dialogue: 0,0:23:13.12,0:23:16.64,*Default,NTP,0000,0000,0000,,该章你可以阅读整本书
Dialogue: 0,0:23:16.64,0:23:17.76,*Default,NTP,0000,0000,0000,,你也会发现很多
Dialogue: 0,0:23:17.76,0:23:19.52,*Default,NTP,0000,0000,0000,,你所学到的熟悉的事情
Dialogue: 0,0:23:19.52,0:23:23.84,*Default,NTP,0000,0000,0000,,618年
Dialogue: 0,0:23:24.16,0:23:26.16,*Default,NTP,0000,0000,0000,,你什么时候换的，或者我们什么时候换的
Dialogue: 0,0:23:26.16,0:23:28.40,*Default,NTP,0000,0000,0000,,从61a的教学方案切换
Dialogue: 0,0:23:28.40,0:23:30.48,*Default,NTP,0000,0000,0000,,到蟒蛇
Dialogue: 0,0:23:30.48,0:23:35.20,*Default,NTP,0000,0000,0000,,呃，我们在 2011 年就换了。哇，太晚了
Dialogue: 0,0:23:35.20,0:23:39.12,*Default,NTP,0000,0000,0000,,嗯，是的，那是我第一次
Dialogue: 0,0:23:39.12,0:23:40.24,*Default,NTP,0000,0000,0000,,教授课程
Dialogue: 0,0:23:40.24,0:23:42.32,*Default,NTP,0000,0000,0000,,是的，我不仅教它，而且我很友善
Dialogue: 0,0:23:42.32,0:23:43.44,*Default,NTP,0000,0000,0000,,重做了它
Dialogue: 0,0:23:43.44,0:23:46.48,*Default,NTP,0000,0000,0000,,呃，这需要做很多工作
Dialogue: 0,0:23:46.48,0:23:48.72,*Default,NTP,0000,0000,0000,,是的，是的，那来得很晚
Dialogue: 0,0:23:48.72,0:23:50.64,*Default,NTP,0000,0000,0000,,因为我们大多数人都已经改变了
Dialogue: 0,0:23:50.64,0:23:51.76,*Default,NTP,0000,0000,0000,,超过
Dialogue: 0,0:23:51.76,0:23:53.20,*Default,NTP,0000,0000,0000,,很多人转而使用java
Dialogue: 0,0:23:53.20,0:23:54.88,*Default,NTP,0000,0000,0000,,在 python 出现之前有一段时间
Dialogue: 0,0:23:54.88,0:23:56.40,*Default,NTP,0000,0000,0000,,场景但是一旦蟒蛇出现
Dialogue: 0,0:23:56.40,0:23:57.92,*Default,NTP,0000,0000,0000,,场景很明显这是正确的
Dialogue: 0,0:23:57.92,0:23:59.68,*Default,NTP,0000,0000,0000,,开始的地方
Dialogue: 0,0:23:59.68,0:24:02.72,*Default,NTP,0000,0000,0000,,是的，伯克利绝对是一个顽固分子
Dialogue: 0,0:24:02.72,0:24:04.48,*Default,NTP,0000,0000,0000,,你知道有一些我认为有
Dialogue: 0,0:24:04.48,0:24:05.92,*Default,NTP,0000,0000,0000,,仍然是忠实粉丝
Dialogue: 0,0:24:05.92,0:24:09.76,*Default,NTP,0000,0000,0000,,计划，我知道这是合理的
Dialogue: 0,0:24:09.76,0:24:12.64,*Default,NTP,0000,0000,0000,,嗯，但我有点喜欢
Dialogue: 0,0:24:12.64,0:24:14.88,*Default,NTP,0000,0000,0000,,围绕 python 的社区的想法是
Dialogue: 0,0:24:14.88,0:24:16.56,*Default,NTP,0000,0000,0000,,如此之大，如果你想建造一些
Dialogue: 0,0:24:16.56,0:24:18.00,*Default,NTP,0000,0000,0000,,就像你的随机事物
Dialogue: 0,0:24:18.00,0:24:20.00,*Default,NTP,0000,0000,0000,,空闲时间你可以谷歌一下
Dialogue: 0,0:24:20.00,0:24:22.08,*Default,NTP,0000,0000,0000,,它总是有一些指导
Dialogue: 0,0:24:22.08,0:24:25.12,*Default,NTP,0000,0000,0000,,呃，我们确实看到了大幅上升
Dialogue: 0,0:24:25.12,0:24:27.20,*Default,NTP,0000,0000,0000,,学生独立项目的类型和
Dialogue: 0,0:24:27.20,0:24:28.88,*Default,NTP,0000,0000,0000,,黑客马拉松和类似的事情就在
Dialogue: 0,0:24:28.88,0:24:29.76,*Default,NTP,0000,0000,0000,,同时所以
Dialogue: 0,0:24:29.76,0:24:31.04,*Default,NTP,0000,0000,0000,,你永远不知道因果关系
Dialogue: 0,0:24:31.04,0:24:32.24,*Default,NTP,0000,0000,0000,,但看起来他们可能是
Dialogue: 0,0:24:32.24,0:24:33.52,*Default,NTP,0000,0000,0000,,有关的
Dialogue: 0,0:24:33.52,0:24:35.20,*Default,NTP,0000,0000,0000,,乔伊问了一个好问题，哪些因素
Dialogue: 0,0:24:35.20,0:24:36.64,*Default,NTP,0000,0000,0000,,你在选择语言时有考虑吗
Dialogue: 0,0:24:36.64,0:24:38.24,*Default,NTP,0000,0000,0000,,对于编码项目
Dialogue: 0,0:24:38.24,0:24:39.92,*Default,NTP,0000,0000,0000,,好吧，我会告诉你我做了什么，但我
Dialogue: 0,0:24:39.92,0:24:41.20,*Default,NTP,0000,0000,0000,,我的工作规模可能不同
Dialogue: 0,0:24:41.20,0:24:42.32,*Default,NTP,0000,0000,0000,,比约翰更
Dialogue: 0,0:24:42.32,0:24:44.64,*Default,NTP,0000,0000,0000,,是其中的一部分取决于你知道我吗
Dialogue: 0,0:24:44.64,0:24:46.08,*Default,NTP,0000,0000,0000,,只是想一起破解一些东西
Dialogue: 0,0:24:46.08,0:24:47.60,*Default,NTP,0000,0000,0000,,尝试一些东西
Dialogue: 0,0:24:47.60,0:24:49.12,*Default,NTP,0000,0000,0000,,如果我这样做的话，几乎总是
Dialogue: 0,0:24:49.12,0:24:50.96,*Default,NTP,0000,0000,0000,,matlab 或 python 因为它们只是
Dialogue: 0,0:24:50.96,0:24:52.48,*Default,NTP,0000,0000,0000,,那些我感到舒服并且我可以的
Dialogue: 0,0:24:52.48,0:24:54.40,*Default,NTP,0000,0000,0000,,代码真的非常快
Dialogue: 0,0:24:54.40,0:24:55.84,*Default,NTP,0000,0000,0000,,他们有很多内置的
Dialogue: 0,0:24:55.84,0:24:56.96,*Default,NTP,0000,0000,0000,,图书馆所以我不必
Dialogue: 0,0:24:56.96,0:24:59.04,*Default,NTP,0000,0000,0000,,从头开始重新实施一切
Dialogue: 0,0:24:59.04,0:25:00.72,*Default,NTP,0000,0000,0000,,所以如果我只是你知道的路过
Dialogue: 0,0:25:00.72,0:25:02.64,*Default,NTP,0000,0000,0000,,在研究项目中，它总是 python
Dialogue: 0,0:25:02.64,0:25:03.92,*Default,NTP,0000,0000,0000,,或MATLAB
Dialogue: 0,0:25:03.92,0:25:06.56,*Default,NTP,0000,0000,0000,,然后如果我是如果我想我可能是
Dialogue: 0,0:25:06.56,0:25:08.16,*Default,NTP,0000,0000,0000,,要去部署一些东西
Dialogue: 0,0:25:08.16,0:25:10.96,*Default,NTP,0000,0000,0000,,您可能知道在服务器上或基于网络
Dialogue: 0,0:25:10.96,0:25:12.00,*Default,NTP,0000,0000,0000,,你想远离诸如此类的事情
Dialogue: 0,0:25:12.00,0:25:14.00,*Default,NTP,0000,0000,0000,,matlab 因为那些是专有的
Dialogue: 0,0:25:14.00,0:25:15.36,*Default,NTP,0000,0000,0000,,你不能真正运行那些
Dialogue: 0,0:25:15.36,0:25:17.12,*Default,NTP,0000,0000,0000,,软件让你开始思考
Dialogue: 0,0:25:17.12,0:25:18.16,*Default,NTP,0000,0000,0000,,javascript
Dialogue: 0,0:25:18.16,0:25:20.00,*Default,NTP,0000,0000,0000,,也许 python 和 job 的某种组合
Dialogue: 0,0:25:20.00,0:25:21.84,*Default,NTP,0000,0000,0000,,蟒蛇和JavaScript
Dialogue: 0,0:25:21.84,0:25:23.12,*Default,NTP,0000,0000,0000,,然后每隔一段时间我们就会做
Dialogue: 0,0:25:23.12,0:25:25.12,*Default,NTP,0000,0000,0000,,我们真正需要速度的事情
Dialogue: 0,0:25:25.12,0:25:25.92,*Default,NTP,0000,0000,0000,,我们正在做的事情是
Dialogue: 0,0:25:25.92,0:25:28.08,*Default,NTP,0000,0000,0000,,计算超密集
Dialogue: 0,0:25:28.08,0:25:29.52,*Default,NTP,0000,0000,0000,,然后你就硬着头皮
Dialogue: 0,0:25:29.52,0:25:31.76,*Default,NTP,0000,0000,0000,,你在 cum 中实现
Dialogue: 0,0:25:31.76,0:25:33.20,*Default,NTP,0000,0000,0000,,通常我所做的就是
Dialogue: 0,0:25:33.20,0:25:34.80,*Default,NTP,0000,0000,0000,,在Python中实现
Dialogue: 0,0:25:34.80,0:25:36.80,*Default,NTP,0000,0000,0000,,确保它正常工作调试一切
Dialogue: 0,0:25:36.80,0:25:37.84,*Default,NTP,0000,0000,0000,,让一切正常运转
Dialogue: 0,0:25:37.84,0:25:39.60,*Default,NTP,0000,0000,0000,,然后将其翻译成c因为
Dialogue: 0,0:25:39.60,0:25:41.12,*Default,NTP,0000,0000,0000,,从头开始编写c代码
Dialogue: 0,0:25:41.12,0:25:43.20,*Default,NTP,0000,0000,0000,,有点令人痛苦
Dialogue: 0,0:25:43.20,0:25:44.40,*Default,NTP,0000,0000,0000,,因为你必须做所有的记忆
Dialogue: 0,0:25:44.40,0:25:45.44,*Default,NTP,0000,0000,0000,,管理
Dialogue: 0,0:25:45.44,0:25:47.04,*Default,NTP,0000,0000,0000,,我发现调试起来有点困难
Dialogue: 0,0:25:47.04,0:25:49.44,*Default,NTP,0000,0000,0000,,代码嗯，所以我想这是一个
Dialogue: 0,0:25:49.44,0:25:50.72,*Default,NTP,0000,0000,0000,,和 的组合
Dialogue: 0,0:25:50.72,0:25:52.40,*Default,NTP,0000,0000,0000,,还有一件事是规模
Dialogue: 0,0:25:52.40,0:25:53.36,*Default,NTP,0000,0000,0000,,你会这样写，如果你是
Dialogue: 0,0:25:53.36,0:25:55.68,*Default,NTP,0000,0000,0000,,写一些非常非常大的东西
Dialogue: 0,0:25:55.68,0:25:57.60,*Default,NTP,0000,0000,0000,,你远离像 matlabs 这样的程序
Dialogue: 0,0:25:57.60,0:25:59.36,*Default,NTP,0000,0000,0000,,他们不是建的 python 是
Dialogue: 0,0:25:59.36,0:26:01.92,*Default,NTP,0000,0000,0000,,相当适合大规模呃和
Dialogue: 0,0:26:01.92,0:26:03.36,*Default,NTP,0000,0000,0000,,然后是最后一部分
Dialogue: 0,0:26:03.36,0:26:05.28,*Default,NTP,0000,0000,0000,,是每隔一段时间我们就会做一些事情
Dialogue: 0,0:26:05.28,0:26:06.08,*Default,NTP,0000,0000,0000,,我们真正要去的地方
Dialogue: 0,0:26:06.08,0:26:07.36,*Default,NTP,0000,0000,0000,,跨平台
Dialogue: 0,0:26:07.36,0:26:08.88,*Default,NTP,0000,0000,0000,,所以我知道这必须运行
Dialogue: 0,0:26:08.88,0:26:11.12,*Default,NTP,0000,0000,0000,,在 linux mac 上和嗯
Dialogue: 0,0:26:11.12,0:26:13.76,*Default,NTP,0000,0000,0000,,和windows然后你做我讨厌的java
Dialogue: 0,0:26:13.76,0:26:15.20,*Default,NTP,0000,0000,0000,,我不喜欢java
Dialogue: 0,0:26:15.20,0:26:17.28,*Default,NTP,0000,0000,0000,,这很痛苦，但如果你真的真的
Dialogue: 0,0:26:17.28,0:26:18.72,*Default,NTP,0000,0000,0000,,想要跨平台
Dialogue: 0,0:26:18.72,0:26:21.44,*Default,NTP,0000,0000,0000,,我去爪哇
Dialogue: 0,0:26:22.08,0:26:23.76,*Default,NTP,0000,0000,0000,,是的，我想总结它的一种方法是
Dialogue: 0,0:26:23.76,0:26:25.04,*Default,NTP,0000,0000,0000,,你实际上想解决尽可能少的问题
Dialogue: 0,0:26:25.04,0:26:27.92,*Default,NTP,0000,0000,0000,,尽可能的问题
Dialogue: 0,0:26:27.92,0:26:29.76,*Default,NTP,0000,0000,0000,,是的，所以你寻找的语言
Dialogue: 0,0:26:29.76,0:26:31.20,*Default,NTP,0000,0000,0000,,已经解决了
Dialogue: 0,0:26:31.20,0:26:32.80,*Default,NTP,0000,0000,0000,,很多你会遇到的事情
Dialogue: 0,0:26:32.80,0:26:34.80,*Default,NTP,0000,0000,0000,,如果这是跨平台的或者如果是
Dialogue: 0,0:26:34.80,0:26:35.36,*Default,NTP,0000,0000,0000,,有点儿
Dialogue: 0,0:26:35.36,0:26:39.28,*Default,NTP,0000,0000,0000,,部署或其他什么是的
Dialogue: 0,0:26:39.28,0:26:41.44,*Default,NTP,0000,0000,0000,,那真是太好了
Dialogue: 0,0:26:41.44,0:26:42.56,*Default,NTP,0000,0000,0000,,浓缩的
Dialogue: 0,0:26:42.56,0:26:45.92,*Default,NTP,0000,0000,0000,,我的答案的版本
Dialogue: 0,0:26:46.48,0:26:49.68,*Default,NTP,0000,0000,0000,,你主要在 john 中编写什么代码
Dialogue: 0,0:26:49.68,0:26:52.32,*Default,NTP,0000,0000,0000,,嗯，这些天我们写了很多 Python 代码
Dialogue: 0,0:26:52.32,0:26:53.92,*Default,NTP,0000,0000,0000,,是的，因为有
Dialogue: 0,0:26:53.92,0:26:56.96,*Default,NTP,0000,0000,0000,,对机器学习的支持
Dialogue: 0,0:26:56.96,0:26:59.52,*Default,NTP,0000,0000,0000,,呃深度神经网络的东西只是
Dialogue: 0,0:26:59.52,0:27:02.00,*Default,NTP,0000,0000,0000,,那里比其他地方都好
Dialogue: 0,0:27:02.00,0:27:04.96,*Default,NTP,0000,0000,0000,,好吧，德莱尼娅问了一个有趣的问题
Dialogue: 0,0:27:04.96,0:27:06.08,*Default,NTP,0000,0000,0000,,问题
Dialogue: 0,0:27:06.08,0:27:08.08,*Default,NTP,0000,0000,0000,,学习时你的优先事项是什么
Dialogue: 0,0:27:08.08,0:27:10.64,*Default,NTP,0000,0000,0000,,新语言
Dialogue: 0,0:27:10.64,0:27:11.84,*Default,NTP,0000,0000,0000,,你知道这就是你要做的事
Dialogue: 0,0:27:11.84,0:27:14.16,*Default,NTP,0000,0000,0000,,很快就会发现正在学习
Dialogue: 0,0:27:14.16,0:27:15.28,*Default,NTP,0000,0000,0000,,新语言是
Dialogue: 0,0:27:15.28,0:27:17.84,*Default,NTP,0000,0000,0000,,大多数情况下很容易，因为
Dialogue: 0,0:27:17.84,0:27:20.32,*Default,NTP,0000,0000,0000,,一旦你了解了基础知识，你就知道了一切
Dialogue: 0,0:27:20.32,0:27:21.76,*Default,NTP,0000,0000,0000,,我的意思是有几种语言
Dialogue: 0,0:27:21.76,0:27:23.68,*Default,NTP,0000,0000,0000,,ml 和 prolog 等例外
Dialogue: 0,0:27:23.68,0:27:26.80,*Default,NTP,0000,0000,0000,,和 haskell 有点古怪但是
Dialogue: 0,0:27:26.80,0:27:27.84,*Default,NTP,0000,0000,0000,,一旦你知道
Dialogue: 0,0:27:27.84,0:27:30.08,*Default,NTP,0000,0000,0000,,几种语言就像
Dialogue: 0,0:27:30.08,0:27:31.12,*Default,NTP,0000,0000,0000,,几天
Dialogue: 0,0:27:31.12,0:27:32.72,*Default,NTP,0000,0000,0000,,然后你真的可以写进去
Dialogue: 0,0:27:32.72,0:27:34.16,*Default,NTP,0000,0000,0000,,那种语言很快就是一个问题
Dialogue: 0,0:27:34.16,0:27:36.32,*Default,NTP,0000,0000,0000,,代码有多好以及有多容易
Dialogue: 0,0:27:36.32,0:27:36.80,*Default,NTP,0000,0000,0000,,但
Dialogue: 0,0:27:36.80,0:27:38.88,*Default,NTP,0000,0000,0000,,堆栈溢出和只是的组合
Dialogue: 0,0:27:38.88,0:27:40.64,*Default,NTP,0000,0000,0000,,你的基础知识所以我
Dialogue: 0,0:27:40.64,0:27:42.72,*Default,NTP,0000,0000,0000,,我还没有，我认为 python 可能是
Dialogue: 0,0:27:42.72,0:27:44.80,*Default,NTP,0000,0000,0000,,我学到的最后一种新语言
Dialogue: 0,0:27:44.80,0:27:46.80,*Default,NTP,0000,0000,0000,,在最近的记忆中我不知道那里
Dialogue: 0,0:27:46.80,0:27:48.32,*Default,NTP,0000,0000,0000,,我认为的组合
Dialogue: 0,0:27:48.32,0:27:51.68,*Default,NTP,0000,0000,0000,,javascript matlab python c 和 java
Dialogue: 0,0:27:51.68,0:27:53.92,*Default,NTP,0000,0000,0000,,我不知道，我猜嗯，ri
Dialogue: 0,0:27:53.92,0:27:55.12,*Default,NTP,0000,0000,0000,,最近学到的有
Dialogue: 0,0:27:55.12,0:27:57.44,*Default,NTP,0000,0000,0000,,统计规划需要
Dialogue: 0,0:27:57.44,0:27:59.68,*Default,NTP,0000,0000,0000,,坦白地说，就像整个下午
Dialogue: 0,0:27:59.68,0:28:03.84,*Default,NTP,0000,0000,0000,,我的意思是一段时间后它会变得很容易
Dialogue: 0,0:28:04.72,0:28:07.76,*Default,NTP,0000,0000,0000,,是的，我的意思是呃经常读书
Dialogue: 0,0:28:07.76,0:28:09.92,*Default,NTP,0000,0000,0000,,会给你留下非常短暂的
Dialogue: 0,0:28:09.92,0:28:11.60,*Default,NTP,0000,0000,0000,,你需要去建立的知识
Dialogue: 0,0:28:11.60,0:28:12.96,*Default,NTP,0000,0000,0000,,是的，你必须开始
Dialogue: 0,0:28:12.96,0:28:14.96,*Default,NTP,0000,0000,0000,,编码是的，完全正确
Dialogue: 0,0:28:14.96,0:28:16.72,*Default,NTP,0000,0000,0000,,所以呃如果我真的只是想学习
Dialogue: 0,0:28:16.72,0:28:18.32,*Default,NTP,0000,0000,0000,,为了语言而语言然后我
Dialogue: 0,0:28:18.32,0:28:19.84,*Default,NTP,0000,0000,0000,,通常只是重新实现 hog
Dialogue: 0,0:28:19.84,0:28:21.60,*Default,NTP,0000,0000,0000,,项目因为那总是呃
Dialogue: 0,0:28:21.60,0:28:24.00,*Default,NTP,0000,0000,0000,,这总是让我开心，但通常
Dialogue: 0,0:28:24.00,0:28:25.36,*Default,NTP,0000,0000,0000,,当我尝试学习某种语言时
Dialogue: 0,0:28:25.36,0:28:26.48,*Default,NTP,0000,0000,0000,,这是因为我正在尝试做一些事情
Dialogue: 0,0:28:26.48,0:28:27.36,*Default,NTP,0000,0000,0000,,特别的事情
Dialogue: 0,0:28:27.36,0:28:29.12,*Default,NTP,0000,0000,0000,,提前，这实际上很重要，我
Dialogue: 0,0:28:29.12,0:28:30.48,*Default,NTP,0000,0000,0000,,就像学习我需要知道的东西一样
Dialogue: 0,0:28:30.48,0:28:31.76,*Default,NTP,0000,0000,0000,,命令这样做
Dialogue: 0,0:28:31.76,0:28:37.68,*Default,NTP,0000,0000,0000,,是的，它的源等于缓冲区输入
Dialogue: 0,0:28:37.92,0:28:40.24,*Default,NTP,0000,0000,0000,,是的，所以问题是这是什么
Dialogue: 0,0:28:40.24,0:28:41.68,*Default,NTP,0000,0000,0000,,一号线
Dialogue: 0,0:28:41.68,0:28:44.24,*Default,NTP,0000,0000,0000,,它调用这个函数，它使
Dialogue: 0,0:28:44.24,0:28:46.48,*Default,NTP,0000,0000,0000,,缓冲标记化结果
Dialogue: 0,0:28:46.48,0:28:49.44,*Default,NTP,0000,0000,0000,,输入读取器的行
Dialogue: 0,0:28:49.44,0:28:53.28,*Default,NTP,0000,0000,0000,,原因有三个部分
Dialogue: 0,0:28:53.28,0:28:55.04,*Default,NTP,0000,0000,0000,,他们的做法都略有不同
Dialogue: 0,0:28:55.04,0:28:57.84,*Default,NTP,0000,0000,0000,,你需要一起组成的东西
Dialogue: 0,0:28:57.84,0:29:01.04,*Default,NTP,0000,0000,0000,,这将为您提供文本
Dialogue: 0,0:29:01.04,0:29:03.28,*Default,NTP,0000,0000,0000,,这将文本分解为标记
Dialogue: 0,0:29:03.28,0:29:05.36,*Default,NTP,0000,0000,0000,,我们谈论了类似的个人数字
Dialogue: 0,0:29:05.36,0:29:07.52,*Default,NTP,0000,0000,0000,,和括号之类的东西
Dialogue: 0,0:29:07.52,0:29:09.12,*Default,NTP,0000,0000,0000,,缓冲区给你一种行走的方式
Dialogue: 0,0:29:09.12,0:29:10.56,*Default,NTP,0000,0000,0000,,通过他们一一
Dialogue: 0,0:29:10.56,0:29:12.00,*Default,NTP,0000,0000,0000,,并记得你刚刚在哪里
Dialogue: 0,0:29:12.00,0:29:13.28,*Default,NTP,0000,0000,0000,,如果您需要打印出错误
Dialogue: 0,0:29:13.28,0:29:13.92,*Default,NTP,0000,0000,0000,,信息
Dialogue: 0,0:29:13.92,0:29:16.00,*Default,NTP,0000,0000,0000,,这就是三个部分
Dialogue: 0,0:29:16.00,0:29:18.32,*Default,NTP,0000,0000,0000,,关于阅读的部分
Dialogue: 0,0:29:18.32,0:29:20.88,*Default,NTP,0000,0000,0000,,我希望它更简单，但我认为
Dialogue: 0,0:29:20.88,0:29:22.80,*Default,NTP,0000,0000,0000,,不幸的是不是
Dialogue: 0,0:29:22.80,0:29:26.80,*Default,NTP,0000,0000,0000,,是的，如果你看看输入阅读器
Dialogue: 0,0:29:26.80,0:29:29.12,*Default,NTP,0000,0000,0000,,哦
Dialogue: 0,0:29:30.40,0:29:32.08,*Default,NTP,0000,0000,0000,,很简单哦，只是输入
Dialogue: 0,0:29:32.08,0:29:33.76,*Default,NTP,0000,0000,0000,,命令
Dialogue: 0,0:29:33.76,0:29:35.20,*Default,NTP,0000,0000,0000,,哦，很好，因为它全部内置于
Dialogue: 0,0:29:35.20,0:29:36.88,*Default,NTP,0000,0000,0000,,python 是的，所以 python 有这个
Dialogue: 0,0:29:36.88,0:29:39.12,*Default,NTP,0000,0000,0000,,如果我调用这个输入概念
Dialogue: 0,0:29:39.12,0:29:41.60,*Default,NTP,0000,0000,0000,,输入然后如果我输入一些东西
