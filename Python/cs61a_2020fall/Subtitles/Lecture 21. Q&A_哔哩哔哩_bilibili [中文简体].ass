[Script Info]
Title: Lecture 21. Q&A_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1s3411G7yM?p=52&vd_source=6ffca0aa1006734a4fba52f389036611
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.40,0:00:04.08,*Default,NTP,0000,0000,0000,,61a 讲座编号 21 问答
Dialogue: 0,0:00:04.08,0:00:05.60,*Default,NTP,0000,0000,0000,,嘿约翰，当我们等待第一个时
Dialogue: 0,0:00:05.60,0:00:07.04,*Default,NTP,0000,0000,0000,,问题让我问你一些事情
Dialogue: 0,0:00:07.04,0:00:08.64,*Default,NTP,0000,0000,0000,,我认为我一直在教链表
Dialogue: 0,0:00:08.64,0:00:09.20,*Default,NTP,0000,0000,0000,,他们真的是
Dialogue: 0,0:00:09.20,0:00:12.64,*Default,NTP,0000,0000,0000,,很棒的伙计，你在谷歌吗？
Dialogue: 0,0:00:12.64,0:00:14.48,*Default,NTP,0000,0000,0000,,看看人们真的在使用它们还是真的
Dialogue: 0,0:00:14.48,0:00:14.88,*Default,NTP,0000,0000,0000,,只是
Dialogue: 0,0:00:14.88,0:00:16.24,*Default,NTP,0000,0000,0000,,你知道我们只是使用一个排序列表
Dialogue: 0,0:00:16.24,0:00:18.08,*Default,NTP,0000,0000,0000,,更容易的
Dialogue: 0,0:00:18.08,0:00:21.44,*Default,NTP,0000,0000,0000,,我认为还有更多
Dialogue: 0,0:00:21.44,0:00:23.20,*Default,NTP,0000,0000,0000,,使用列表的应用程序
Dialogue: 0,0:00:23.20,0:00:26.16,*Default,NTP,0000,0000,0000,,比链接列表 是的，那是我的
Dialogue: 0,0:00:26.16,0:00:27.44,*Default,NTP,0000,0000,0000,,有感觉，因为它是
Dialogue: 0,0:00:27.44,0:00:29.36,*Default,NTP,0000,0000,0000,,显然有好处，但事实并非如此
Dialogue: 0,0:00:29.36,0:00:30.72,*Default,NTP,0000,0000,0000,,显然它的重要性超过了
Dialogue: 0,0:00:30.72,0:00:32.56,*Default,NTP,0000,0000,0000,,你知道必须这样做的麻烦
Dialogue: 0,0:00:32.56,0:00:34.16,*Default,NTP,0000,0000,0000,,落实一切
Dialogue: 0,0:00:34.16,0:00:36.88,*Default,NTP,0000,0000,0000,,是的，我想嗯，当有很多的时候
Dialogue: 0,0:00:36.88,0:00:38.72,*Default,NTP,0000,0000,0000,,突变的时候就很重要
Dialogue: 0,0:00:38.72,0:00:40.32,*Default,NTP,0000,0000,0000,,因为你可以粘一些东西
Dialogue: 0,0:00:40.32,0:00:41.92,*Default,NTP,0000,0000,0000,,在链表的中间
Dialogue: 0,0:00:41.92,0:00:45.52,*Default,NTP,0000,0000,0000,,是的，嗯，呃
Dialogue: 0,0:00:45.52,0:00:48.24,*Default,NTP,0000,0000,0000,,所以你肯定知道我们是否没有
Dialogue: 0,0:00:48.24,0:00:49.04,*Default,NTP,0000,0000,0000,,他们然后喜欢
Dialogue: 0,0:00:49.04,0:00:50.80,*Default,NTP,0000,0000,0000,,谷歌的东西不会像这样工作
Dialogue: 0,0:00:50.80,0:00:52.16,*Default,NTP,0000,0000,0000,,它应该可以工作，你知道它是
Dialogue: 0,0:00:52.16,0:00:53.52,*Default,NTP,0000,0000,0000,,必要的组成部分但是
Dialogue: 0,0:00:53.52,0:00:55.44,*Default,NTP,0000,0000,0000,,它并不经常出现 是的
Dialogue: 0,0:00:55.44,0:00:57.44,*Default,NTP,0000,0000,0000,,它不会提醒我，如果我是
Dialogue: 0,0:00:57.44,0:00:59.12,*Default,NTP,0000,0000,0000,,错误的Python在什么时候做了这件很酷的事情
Dialogue: 0,0:00:59.12,0:01:01.68,*Default,NTP,0000,0000,0000,,你为列表分配内存
Dialogue: 0,0:01:01.68,0:01:03.84,*Default,NTP,0000,0000,0000,,它实际上给你更多的记忆
Dialogue: 0,0:01:03.84,0:01:05.20,*Default,NTP,0000,0000,0000,,比你需要的那样，因为你是
Dialogue: 0,0:01:05.20,0:01:06.96,*Default,NTP,0000,0000,0000,,扩大它
Dialogue: 0,0:01:06.96,0:01:08.56,*Default,NTP,0000,0000,0000,,它不需要移动东西
Dialogue: 0,0:01:08.56,0:01:10.48,*Default,NTP,0000,0000,0000,,在记忆中我做对了吗
Dialogue: 0,0:01:10.48,0:01:12.00,*Default,NTP,0000,0000,0000,,是的，我认为他们是对的
Dialogue: 0,0:01:12.00,0:01:13.60,*Default,NTP,0000,0000,0000,,到下一个幂二或类似的东西
Dialogue: 0,0:01:13.60,0:01:15.44,*Default,NTP,0000,0000,0000,,那对，它永远是权力
Dialogue: 0,0:01:15.44,0:01:16.96,*Default,NTP,0000,0000,0000,,所以实际上好一点
Dialogue: 0,0:01:16.96,0:01:18.48,*Default,NTP,0000,0000,0000,,而不是不断地移动东西
Dialogue: 0,0:01:18.48,0:01:20.00,*Default,NTP,0000,0000,0000,,当你插入列表时
Dialogue: 0,0:01:20.00,0:01:21.44,*Default,NTP,0000,0000,0000,,但即使你像没有那样插入
Dialogue: 0,0:01:21.44,0:01:22.80,*Default,NTP,0000,0000,0000,,必须分配新的内存，但你这样做
Dialogue: 0,0:01:22.80,0:01:24.24,*Default,NTP,0000,0000,0000,,必须复制所有内容才能制作
Dialogue: 0,0:01:24.24,0:01:25.92,*Default,NTP,0000,0000,0000,,房间所以仍然是链接列表
Dialogue: 0,0:01:25.92,0:01:26.48,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:01:26.48,0:01:28.16,*Default,NTP,0000,0000,0000,,哦，是的，顺便说一句，这是真的
Dialogue: 0,0:01:28.16,0:01:29.84,*Default,NTP,0000,0000,0000,,回到我们编程的那一天
Dialogue: 0,0:01:29.84,0:01:32.56,*Default,NTP,0000,0000,0000,,c 你不得不 你每次都不得不
Dialogue: 0,0:01:32.56,0:01:33.92,*Default,NTP,0000,0000,0000,,想要创建一个数据结构
Dialogue: 0,0:01:33.92,0:01:35.36,*Default,NTP,0000,0000,0000,,必须你必须真正进去
Dialogue: 0,0:01:35.36,0:01:37.04,*Default,NTP,0000,0000,0000,,为其分配内存，然后你
Dialogue: 0,0:01:37.04,0:01:38.88,*Default,NTP,0000,0000,0000,,为其分配内存
Dialogue: 0,0:01:38.88,0:01:42.32,*Default,NTP,0000,0000,0000,,所以内存管理是
Dialogue: 0,0:01:42.32,0:01:44.64,*Default,NTP,0000,0000,0000,,很残酷，是的，我就是这样开始的
Dialogue: 0,0:01:44.64,0:01:46.56,*Default,NTP,0000,0000,0000,,我的第一堂计算机科学课和
Dialogue: 0,0:01:46.56,0:01:49.68,*Default,NTP,0000,0000,0000,,呃，当你做错事时它也没有
Dialogue: 0,0:01:49.68,0:01:50.96,*Default,NTP,0000,0000,0000,,真正告诉你在哪里
Dialogue: 0,0:01:50.96,0:01:54.00,*Default,NTP,0000,0000,0000,,你过去和过去都是确定性的
Dialogue: 0,0:01:54.00,0:01:55.20,*Default,NTP,0000,0000,0000,,因为有时你会跑在
Dialogue: 0,0:01:55.20,0:01:56.80,*Default,NTP,0000,0000,0000,,代码会很好，然后有时
Dialogue: 0,0:01:56.80,0:01:57.84,*Default,NTP,0000,0000,0000,,你提出问题
Dialogue: 0,0:01:57.84,0:01:59.60,*Default,NTP,0000,0000,0000,,我最近不得不实施呃
Dialogue: 0,0:01:59.60,0:02:01.04,*Default,NTP,0000,0000,0000,,算法并说它必须运行
Dialogue: 0,0:02:01.04,0:02:02.40,*Default,NTP,0000,0000,0000,,这四个真的很快
Dialogue: 0,0:02:02.40,0:02:04.40,*Default,NTP,0000,0000,0000,,维数矩阵
Dialogue: 0,0:02:04.40,0:02:06.08,*Default,NTP,0000,0000,0000,,我花了一周的时间才得到
Dialogue: 0,0:02:06.08,0:02:07.44,*Default,NTP,0000,0000,0000,,内存管理权
Dialogue: 0,0:02:07.44,0:02:10.32,*Default,NTP,0000,0000,0000,,只是不要写内存管理是的
Dialogue: 0,0:02:10.32,0:02:10.88,*Default,NTP,0000,0000,0000,,不
Dialogue: 0,0:02:10.88,0:02:12.80,*Default,NTP,0000,0000,0000,,我最初的反应是必须处理
Dialogue: 0,0:02:12.80,0:02:14.56,*Default,NTP,0000,0000,0000,,内存管理就像为什么
Dialogue: 0,0:02:14.56,0:02:16.72,*Default,NTP,0000,0000,0000,,任何参加计算机科学课程的人都是
Dialogue: 0,0:02:16.72,0:02:18.24,*Default,NTP,0000,0000,0000,,太糟糕了
Dialogue: 0,0:02:18.24,0:02:19.92,*Default,NTP,0000,0000,0000,,你知道我想学习计算机
Dialogue: 0,0:02:19.92,0:02:21.60,*Default,NTP,0000,0000,0000,,科学仍然令人沮丧，但在
Dialogue: 0,0:02:21.60,0:02:22.16,*Default,NTP,0000,0000,0000,,不同的
Dialogue: 0,0:02:22.16,0:02:24.56,*Default,NTP,0000,0000,0000,,现在我们听起来像老家伙了，但又回来了
Dialogue: 0,0:02:24.56,0:02:27.04,*Default,NTP,0000,0000,0000,,在我的日子里，我必须分配内存
Dialogue: 0,0:02:27.04,0:02:30.16,*Default,NTP,0000,0000,0000,,完全没问题，伙计们，无论何时
Dialogue: 0,0:02:30.16,0:02:30.56,*Default,NTP,0000,0000,0000,,准备好
Dialogue: 0,0:02:30.56,0:02:34.24,*Default,NTP,0000,0000,0000,,抱歉，顺便问一下，其他人注意到了吗
Dialogue: 0,0:02:34.24,0:02:36.72,*Default,NTP,0000,0000,0000,,列表只是一棵有一个的树
Dialogue: 0,0:02:36.72,0:02:38.16,*Default,NTP,0000,0000,0000,,分支
Dialogue: 0,0:02:38.16,0:02:39.76,*Default,NTP,0000,0000,0000,,我想我们本可以这样做
Dialogue: 0,0:02:39.76,0:02:41.28,*Default,NTP,0000,0000,0000,,可以用树来实现是的
Dialogue: 0,0:02:41.28,0:02:42.48,*Default,NTP,0000,0000,0000,,约翰
Dialogue: 0,0:02:42.48,0:02:44.80,*Default,NTP,0000,0000,0000,,你可以制作一个链接列表
Dialogue: 0,0:02:44.80,0:02:46.80,*Default,NTP,0000,0000,0000,,只允许你拥有的树
Dialogue: 0,0:02:46.80,0:02:50.72,*Default,NTP,0000,0000,0000,,一个分支 是的，好吧，呃，有一个
Dialogue: 0,0:02:50.72,0:02:52.96,*Default,NTP,0000,0000,0000,,作业四的问题是产量
Dialogue: 0,0:02:52.96,0:02:53.60,*Default,NTP,0000,0000,0000,,一切
Dialogue: 0,0:02:53.60,0:02:58.64,*Default,NTP,0000,0000,0000,,一些列表的排列
Dialogue: 0,0:03:02.80,0:03:04.72,*Default,NTP,0000,0000,0000,,例如如果你打电话
Dialogue: 0,0:03:04.72,0:03:07.04,*Default,NTP,0000,0000,0000,,的排列
Dialogue: 0,0:03:07.04,0:03:09.84,*Default,NTP,0000,0000,0000,,呃一二三那么你就得到了
Dialogue: 0,0:03:09.84,0:03:10.56,*Default,NTP,0000,0000,0000,,回一个
Dialogue: 0,0:03:10.56,0:03:12.88,*Default,NTP,0000,0000,0000,,但如果你列出了所有
Dialogue: 0,0:03:12.88,0:03:15.20,*Default,NTP,0000,0000,0000,,然后你会得到的内容
Dialogue: 0,0:03:15.20,0:03:18.88,*Default,NTP,0000,0000,0000,,一二三和一三二
Dialogue: 0,0:03:18.88,0:03:21.20,*Default,NTP,0000,0000,0000,,呃好吧，这些就是那些
Dialogue: 0,0:03:21.20,0:03:22.24,*Default,NTP,0000,0000,0000,,从一个开始，然后有
Dialogue: 0,0:03:22.24,0:03:24.24,*Default,NTP,0000,0000,0000,,以二开始，如二一
Dialogue: 0,0:03:24.24,0:03:25.36,*Default,NTP,0000,0000,0000,,三
Dialogue: 0,0:03:25.36,0:03:28.72,*Default,NTP,0000,0000,0000,,让我在我的周围移动
Dialogue: 0,0:03:28.72,0:03:33.84,*Default,NTP,0000,0000,0000,,放大一点呃二三一
Dialogue: 0,0:03:33.84,0:03:35.68,*Default,NTP,0000,0000,0000,,好的，这些是开始的
Dialogue: 0,0:03:35.68,0:03:36.96,*Default,NTP,0000,0000,0000,,有两个哦，实际上有一些
Dialogue: 0,0:03:36.96,0:03:38.16,*Default,NTP,0000,0000,0000,,从三个开始
Dialogue: 0,0:03:38.16,0:03:42.48,*Default,NTP,0000,0000,0000,,你得到了三一二并且
Dialogue: 0,0:03:42.64,0:03:45.76,*Default,NTP,0000,0000,0000,,三二一
Dialogue: 0,0:03:45.76,0:03:47.04,*Default,NTP,0000,0000,0000,,我想这就是我没有做四个的原因
Dialogue: 0,0:03:47.04,0:03:48.77,*Default,NTP,0000,0000,0000,,我知道的元素
Dialogue: 0,0:03:48.77,0:03:51.52,*Default,NTP,0000,0000,0000,,[笑声]
Dialogue: 0,0:03:51.52,0:03:52.88,*Default,NTP,0000,0000,0000,,所以我知道很多人都这样做了
Dialogue: 0,0:03:52.88,0:03:54.16,*Default,NTP,0000,0000,0000,,已经有问题了，但我们还是谈谈吧
Dialogue: 0,0:03:54.16,0:03:57.84,*Default,NTP,0000,0000,0000,,我想嗯，很快就通过了
Dialogue: 0,0:03:58.40,0:04:01.20,*Default,NTP,0000,0000,0000,,有几种不同的方式
Dialogue: 0,0:04:01.20,0:04:02.40,*Default,NTP,0000,0000,0000,,可以做到这一点，但我认为没有
Dialogue: 0,0:04:02.40,0:04:04.24,*Default,NTP,0000,0000,0000,,一个比另一个更好
Dialogue: 0,0:04:04.24,0:04:07.76,*Default,NTP,0000,0000,0000,,嗯，但其中之一是你
Dialogue: 0,0:04:07.76,0:04:09.60,*Default,NTP,0000,0000,0000,,选择您想要第一个出现的元素
Dialogue: 0,0:04:09.60,0:04:10.88,*Default,NTP,0000,0000,0000,,你的排列
Dialogue: 0,0:04:10.88,0:04:12.80,*Default,NTP,0000,0000,0000,,这样你就可以先拥有一个
Dialogue: 0,0:04:12.80,0:04:14.08,*Default,NTP,0000,0000,0000,,或两个先
Dialogue: 0,0:04:14.08,0:04:17.04,*Default,NTP,0000,0000,0000,,先三个，然后剩下的
Dialogue: 0,0:04:17.04,0:04:18.24,*Default,NTP,0000,0000,0000,,元素的
Dialogue: 0,0:04:18.24,0:04:21.36,*Default,NTP,0000,0000,0000,,填写你的排列但是你
Dialogue: 0,0:04:21.36,0:04:22.80,*Default,NTP,0000,0000,0000,,不知道他们的顺序是什么
Dialogue: 0,0:04:22.80,0:04:24.48,*Default,NTP,0000,0000,0000,,可能会出现两个或三个
Dialogue: 0,0:04:24.48,0:04:26.32,*Default,NTP,0000,0000,0000,,三两实际上事实证明
Dialogue: 0,0:04:26.32,0:04:27.68,*Default,NTP,0000,0000,0000,,成为两个不同的
Dialogue: 0,0:04:27.68,0:04:31.44,*Default,NTP,0000,0000,0000,,数字二三的排列
Dialogue: 0,0:04:31.44,0:04:33.12,*Default,NTP,0000,0000,0000,,同样，一旦你承诺
Dialogue: 0,0:04:33.12,0:04:34.72,*Default,NTP,0000,0000,0000,,两个是你的第一个
Dialogue: 0,0:04:34.72,0:04:36.80,*Default,NTP,0000,0000,0000,,你有两个不同的选择
Dialogue: 0,0:04:36.80,0:04:38.24,*Default,NTP,0000,0000,0000,,对于其他一切，这些是
Dialogue: 0,0:04:38.24,0:04:40.40,*Default,NTP,0000,0000,0000,,两种不同的排列
Dialogue: 0,0:04:40.40,0:04:43.44,*Default,NTP,0000,0000,0000,,一三或者如果你先说三
Dialogue: 0,0:04:43.44,0:04:44.80,*Default,NTP,0000,0000,0000,,那么这是两个不同的
Dialogue: 0,0:04:44.80,0:04:46.16,*Default,NTP,0000,0000,0000,,排列
Dialogue: 0,0:04:46.16,0:04:49.04,*Default,NTP,0000,0000,0000,,一两个这样你就可以看到即将出现的
Dialogue: 0,0:04:49.04,0:04:50.24,*Default,NTP,0000,0000,0000,,与一二的所有排列
Dialogue: 0,0:04:50.24,0:04:51.44,*Default,NTP,0000,0000,0000,,三涉及提出
Dialogue: 0,0:04:51.44,0:04:53.12,*Default,NTP,0000,0000,0000,,二三的排列
Dialogue: 0,0:04:53.12,0:04:54.56,*Default,NTP,0000,0000,0000,,以及一三的排列和
Dialogue: 0,0:04:54.56,0:04:56.24,*Default,NTP,0000,0000,0000,,一二的排列所以有
Dialogue: 0,0:04:56.24,0:04:58.32,*Default,NTP,0000,0000,0000,,这里将是一个递归结构
Dialogue: 0,0:04:58.32,0:04:59.68,*Default,NTP,0000,0000,0000,,现在我们有一个递归
Dialogue: 0,0:04:59.68,0:05:02.08,*Default,NTP,0000,0000,0000,,故事然后我们将其放入代码中
Dialogue: 0,0:05:02.08,0:05:04.00,*Default,NTP,0000,0000,0000,,嗯，如果你想要所有不同的
Dialogue: 0,0:05:04.00,0:05:05.68,*Default,NTP,0000,0000,0000,,那么你必须考虑排列
Dialogue: 0,0:05:05.68,0:05:08.32,*Default,NTP,0000,0000,0000,,你所看到的所有不同的元素
Dialogue: 0,0:05:08.32,0:05:09.20,*Default,NTP,0000,0000,0000,,可以从
Dialogue: 0,0:05:09.20,0:05:12.00,*Default,NTP,0000,0000,0000,,所以起始元素可以说是 si
Dialogue: 0,0:05:12.00,0:05:13.92,*Default,NTP,0000,0000,0000,,现在我们需要其余的元素
Dialogue: 0,0:05:13.92,0:05:16.32,*Default,NTP,0000,0000,0000,,这些是除以下之外的所有元素
Dialogue: 0,0:05:16.32,0:05:18.48,*Default,NTP,0000,0000,0000,,我们选择的一个，所以如果我们选择两个
Dialogue: 0,0:05:18.48,0:05:19.20,*Default,NTP,0000,0000,0000,,我们需要得到
Dialogue: 0,0:05:19.20,0:05:21.44,*Default,NTP,0000,0000,0000,,一和三有很多种方法
Dialogue: 0,0:05:21.44,0:05:23.12,*Default,NTP,0000,0000,0000,,去做这个
Dialogue: 0,0:05:23.12,0:05:26.64,*Default,NTP,0000,0000,0000,,一种方法是说我想要 sj
Dialogue: 0,0:05:26.64,0:05:30.56,*Default,NTP,0000,0000,0000,,对于每个 j
Dialogue: 0,0:05:30.56,0:05:33.68,*Default,NTP,0000,0000,0000,,在这里，如果呃
Dialogue: 0,0:05:33.68,0:05:36.72,*Default,NTP,0000,0000,0000,,j 不是我吗
Dialogue: 0,0:05:36.88,0:05:39.20,*Default,NTP,0000,0000,0000,,这是一种方法，另一种方法
Dialogue: 0,0:05:39.20,0:05:41.12,*Default,NTP,0000,0000,0000,,用切片来做可能是我想去
Dialogue: 0,0:05:41.12,0:05:43.04,*Default,NTP,0000,0000,0000,,由我决定，但不包括它
Dialogue: 0,0:05:43.04,0:05:45.36,*Default,NTP,0000,0000,0000,,我也想要我之后的一切，所以我
Dialogue: 0,0:05:45.36,0:05:46.88,*Default,NTP,0000,0000,0000,,加 1 上
Dialogue: 0,0:05:46.88,0:05:48.96,*Default,NTP,0000,0000,0000,,无论哪种方式都可以，但基本上
Dialogue: 0,0:05:48.96,0:05:50.24,*Default,NTP,0000,0000,0000,,不管你怎么做
Dialogue: 0,0:05:50.24,0:05:53.60,*Default,NTP,0000,0000,0000,,剩下的就是
Dialogue: 0,0:05:53.60,0:05:57.60,*Default,NTP,0000,0000,0000,,呃，如果我们这里有 2 个
Dialogue: 0,0:05:57.60,0:06:00.40,*Default,NTP,0000,0000,0000,,这将是 1 3 的列表。所以
Dialogue: 0,0:06:00.40,0:06:02.16,*Default,NTP,0000,0000,0000,,我们需要排列的所有其他内容
Dialogue: 0,0:06:02.16,0:06:03.52,*Default,NTP,0000,0000,0000,,然后如果我们想生成这些
Dialogue: 0,0:06:03.52,0:06:06.56,*Default,NTP,0000,0000,0000,,两个排列然后我们必须
Dialogue: 0,0:06:06.56,0:06:09.76,*Default,NTP,0000,0000,0000,,排列其余的，所以尝试一个
Dialogue: 0,0:06:09.76,0:06:13.68,*Default,NTP,0000,0000,0000,,三并尝试三一
Dialogue: 0,0:06:19.76,0:06:21.28,*Default,NTP,0000,0000,0000,,所以如果我们得到的排列
Dialogue: 0,0:06:21.28,0:06:23.28,*Default,NTP,0000,0000,0000,,现在我们的列表的其余部分
Dialogue: 0,0:06:23.28,0:06:24.96,*Default,NTP,0000,0000,0000,,其余排列首先会受到约束
Dialogue: 0,0:06:24.96,0:06:26.48,*Default,NTP,0000,0000,0000,,到一三然后它就会被绑定
Dialogue: 0,0:06:26.48,0:06:27.52,*Default,NTP,0000,0000,0000,,到三一
Dialogue: 0,0:06:27.52,0:06:28.88,*Default,NTP,0000,0000,0000,,但这不是我们应该做的
Dialogue: 0,0:06:28.88,0:06:31.84,*Default,NTP,0000,0000,0000,,产生所以如果我们产生剩余排列
Dialogue: 0,0:06:31.84,0:06:34.16,*Default,NTP,0000,0000,0000,,我们会得到太短的东西
Dialogue: 0,0:06:34.16,0:06:36.32,*Default,NTP,0000,0000,0000,,我们会得到类似的东西
Dialogue: 0,0:06:36.32,0:06:40.00,*Default,NTP,0000,0000,0000,,1 3 或 3 1. 但这确实是我们想要的
Dialogue: 0,0:06:40.00,0:06:40.48,*Default,NTP,0000,0000,0000,,屈服
Dialogue: 0,0:06:40.48,0:06:43.92,*Default,NTP,0000,0000,0000,,是 2 1 3 或
Dialogue: 0,0:06:43.92,0:06:46.32,*Default,NTP,0000,0000,0000,,2 3 1 所以我们必须决定如何做
Dialogue: 0,0:06:46.32,0:06:48.32,*Default,NTP,0000,0000,0000,,我认为最简单的方法是使用
Dialogue: 0,0:06:48.32,0:06:49.36,*Default,NTP,0000,0000,0000,,列表添加
Dialogue: 0,0:06:49.36,0:06:51.92,*Default,NTP,0000,0000,0000,,你把它放到起始值的地方
Dialogue: 0,0:06:51.92,0:06:55.12,*Default,NTP,0000,0000,0000,,在列表的开头
Dialogue: 0,0:06:55.68,0:06:58.72,*Default,NTP,0000,0000,0000,,顺便请注意，当问题出现时
Dialogue: 0,0:06:58.72,0:07:00.80,*Default,NTP,0000,0000,0000,,声明被定义
Dialogue: 0,0:07:00.80,0:07:02.48,*Default,NTP,0000,0000,0000,,有递归定义 i
Dialogue: 0,0:07:02.48,0:07:03.92,*Default,NTP,0000,0000,0000,,没听错
Dialogue: 0,0:07:03.92,0:07:05.84,*Default,NTP,0000,0000,0000,,把其中一个脱下来，然后找到另一个
Dialogue: 0,0:07:05.84,0:07:07.28,*Default,NTP,0000,0000,0000,,其他的排列和
Dialogue: 0,0:07:07.28,0:07:09.36,*Default,NTP,0000,0000,0000,,这是递归的技巧之一
Dialogue: 0,0:07:09.36,0:07:11.76,*Default,NTP,0000,0000,0000,,当你思考这个问题时
Dialogue: 0,0:07:11.76,0:07:12.80,*Default,NTP,0000,0000,0000,,总有
Dialogue: 0,0:07:12.80,0:07:14.96,*Default,NTP,0000,0000,0000,,就像稍微简化一样
Dialogue: 0,0:07:14.96,0:07:17.92,*Default,NTP,0000,0000,0000,,问题而且也在定义中
Dialogue: 0,0:07:17.92,0:07:19.76,*Default,NTP,0000,0000,0000,,右取一个然后将其添加到所有
Dialogue: 0,0:07:19.76,0:07:21.60,*Default,NTP,0000,0000,0000,,其余的其他排列
Dialogue: 0,0:07:21.60,0:07:22.24,*Default,NTP,0000,0000,0000,,元素
Dialogue: 0,0:07:22.24,0:07:25.76,*Default,NTP,0000,0000,0000,,好吧，它就在那里，然后当你这样做时
Dialogue: 0,0:07:25.76,0:07:26.96,*Default,NTP,0000,0000,0000,,所有这些工作你必须考虑
Dialogue: 0,0:07:26.96,0:07:29.04,*Default,NTP,0000,0000,0000,,基本情况所以这是一个很好的基本情况
Dialogue: 0,0:07:29.04,0:07:31.44,*Default,NTP,0000,0000,0000,,你可以用列表长度 1 来做到这一点
Dialogue: 0,0:07:31.44,0:07:33.76,*Default,NTP,0000,0000,0000,,或列表长度 0。我认为列表长度 0
Dialogue: 0,0:07:33.76,0:07:35.04,*Default,NTP,0000,0000,0000,,可能是
Dialogue: 0,0:07:35.04,0:07:37.68,*Default,NTP,0000,0000,0000,,最基本的基本情况，所以如果你
Dialogue: 0,0:07:37.68,0:07:38.40,*Default,NTP,0000,0000,0000,,说
Dialogue: 0,0:07:38.40,0:07:42.88,*Default,NTP,0000,0000,0000,,如果 len s 等于 0 那么
Dialogue: 0,0:07:42.88,0:07:45.60,*Default,NTP,0000,0000,0000,,哦，所有的排列是什么
Dialogue: 0,0:07:45.60,0:07:46.56,*Default,NTP,0000,0000,0000,,我们正在让步
Dialogue: 0,0:07:46.56,0:07:48.16,*Default,NTP,0000,0000,0000,,实际上只有一种排列
Dialogue: 0,0:07:48.16,0:07:50.80,*Default,NTP,0000,0000,0000,,一个空列表，只是呃
Dialogue: 0,0:07:50.80,0:07:56.00,*Default,NTP,0000,0000,0000,,你知道空列表让我们看看是什么
Dialogue: 0,0:07:56.84,0:07:59.84,*Default,NTP,0000,0000,0000,,发生
Dialogue: 0,0:08:01.60,0:08:04.00,*Default,NTP,0000,0000,0000,,哦，似乎它有效了任何问题
Dialogue: 0,0:08:04.00,0:08:05.44,*Default,NTP,0000,0000,0000,,对这个
Dialogue: 0,0:08:05.44,0:08:07.84,*Default,NTP,0000,0000,0000,,很好的问题，为什么会这样
Dialogue: 0,0:08:07.84,0:08:09.28,*Default,NTP,0000,0000,0000,,就是在这四个内
Dialogue: 0,0:08:09.28,0:08:11.28,*Default,NTP,0000,0000,0000,,我们选择第一个元素的地方
Dialogue: 0,0:08:11.28,0:08:12.80,*Default,NTP,0000,0000,0000,,我们正在挑选的还有另外四个
Dialogue: 0,0:08:12.80,0:08:14.48,*Default,NTP,0000,0000,0000,,其余部分的排列
Dialogue: 0,0:08:14.48,0:08:15.36,*Default,NTP,0000,0000,0000,,元素
Dialogue: 0,0:08:15.36,0:08:18.72,*Default,NTP,0000,0000,0000,,我认为嵌套循环只是
Dialogue: 0,0:08:18.72,0:08:20.80,*Default,NTP,0000,0000,0000,,这个问题固有的，所以不存在
Dialogue: 0,0:08:20.80,0:08:23.28,*Default,NTP,0000,0000,0000,,确实是一种解决方法，我是说你
Dialogue: 0,0:08:23.28,0:08:24.40,*Default,NTP,0000,0000,0000,,可以使用
Dialogue: 0,0:08:24.40,0:08:26.80,*Default,NTP,0000,0000,0000,,而是列出理解并尝试去做
Dialogue: 0,0:08:26.80,0:08:29.52,*Default,NTP,0000,0000,0000,,这一切都在一行中
Dialogue: 0,0:08:29.52,0:08:32.96,*Default,NTP,0000,0000,0000,,呃如果你真的想但是
Dialogue: 0,0:08:32.96,0:08:34.88,*Default,NTP,0000,0000,0000,,这并不是说你已经摆脱了
Dialogue: 0,0:08:34.88,0:08:36.96,*Default,NTP,0000,0000,0000,,for 循环你只是有点
Dialogue: 0,0:08:36.96,0:08:40.24,*Default,NTP,0000,0000,0000,,改变了它的语法，所以呃
Dialogue: 0,0:08:40.24,0:08:42.08,*Default,NTP,0000,0000,0000,,它仍然在那里，只是有点
Dialogue: 0,0:08:42.08,0:08:44.08,*Default,NTP,0000,0000,0000,,隐藏一点
Dialogue: 0,0:08:44.08,0:08:45.60,*Default,NTP,0000,0000,0000,,是的，那么这两个循环是什么
Dialogue: 0,0:08:45.60,0:08:47.52,*Default,NTP,0000,0000,0000,,这样就有一个循环
Dialogue: 0,0:08:47.52,0:08:49.20,*Default,NTP,0000,0000,0000,,我们同意我们必须剥离
Dialogue: 0,0:08:49.20,0:08:51.04,*Default,NTP,0000,0000,0000,,列表中的第一个元素
Dialogue: 0,0:08:51.04,0:08:53.52,*Default,NTP,0000,0000,0000,,然后第二个循环必须排列
Dialogue: 0,0:08:53.52,0:08:54.40,*Default,NTP,0000,0000,0000,,一切都是
Dialogue: 0,0:08:54.40,0:08:55.84,*Default,NTP,0000,0000,0000,,左边所以我认为约翰是对的
Dialogue: 0,0:08:55.84,0:08:58.16,*Default,NTP,0000,0000,0000,,是这个固有的
Dialogue: 0,0:08:58.16,0:09:00.72,*Default,NTP,0000,0000,0000,,问题定义 是的，我们就是这样
Dialogue: 0,0:09:00.72,0:09:02.32,*Default,NTP,0000,0000,0000,,达到所有这六个目标
Dialogue: 0,0:09:02.32,0:09:05.68,*Default,NTP,0000,0000,0000,,我们正在循环组
Dialogue: 0,0:09:05.68,0:09:07.92,*Default,NTP,0000,0000,0000,,然后在每个组中我们循环
Dialogue: 0,0:09:07.92,0:09:10.32,*Default,NTP,0000,0000,0000,,中的两种不同排列
Dialogue: 0,0:09:10.32,0:09:12.64,*Default,NTP,0000,0000,0000,,群组
Dialogue: 0,0:09:13.84,0:09:15.28,*Default,NTP,0000,0000,0000,,是的，这么好的问题还有另一个吗
Dialogue: 0,0:09:15.28,0:09:16.96,*Default,NTP,0000,0000,0000,,方法来做到这一点，你
Dialogue: 0,0:09:16.96,0:09:18.48,*Default,NTP,0000,0000,0000,,有相同的元素但你分组
Dialogue: 0,0:09:18.48,0:09:20.00,*Default,NTP,0000,0000,0000,,他们以不同的方式
Dialogue: 0,0:09:20.00,0:09:21.84,*Default,NTP,0000,0000,0000,,你在哪里获取第一个元素
Dialogue: 0,0:09:21.84,0:09:23.12,*Default,NTP,0000,0000,0000,,并插入它
Dialogue: 0,0:09:23.12,0:09:26.80,*Default,NTP,0000,0000,0000,,所以你的故事是从这里开始的
Dialogue: 0,0:09:26.80,0:09:30.08,*Default,NTP,0000,0000,0000,,呃第一个元素的分割和
Dialogue: 0,0:09:30.08,0:09:32.88,*Default,NTP,0000,0000,0000,,你的外循环的其他一切都是
Dialogue: 0,0:09:32.88,0:09:33.84,*Default,NTP,0000,0000,0000,,你排列
Dialogue: 0,0:09:33.84,0:09:35.76,*Default,NTP,0000,0000,0000,,其他一切，所以要么
Dialogue: 0,0:09:35.76,0:09:37.52,*Default,NTP,0000,0000,0000,,为 2 3 或
Dialogue: 0,0:09:37.52,0:09:41.28,*Default,NTP,0000,0000,0000,,3 2.内循环放哪里
Dialogue: 0,0:09:41.28,0:09:42.56,*Default,NTP,0000,0000,0000,,1
Dialogue: 0,0:09:42.56,0:09:45.28,*Default,NTP,0000,0000,0000,,我可以把 1 放在开头 i
Dialogue: 0,0:09:45.28,0:09:47.20,*Default,NTP,0000,0000,0000,,可以把 1
Dialogue: 0,0:09:47.20,0:09:50.24,*Default,NTP,0000,0000,0000,,在中间我可以把 1 放在
Dialogue: 0,0:09:50.24,0:09:52.56,*Default,NTP,0000,0000,0000,,结尾
Dialogue: 0,0:09:53.84,0:09:56.32,*Default,NTP,0000,0000,0000,,但请注意 2 和 3 的顺序是
Dialogue: 0,0:09:56.32,0:09:59.28,*Default,NTP,0000,0000,0000,,所有这些情况都相同
Dialogue: 0,0:09:59.28,0:10:01.20,*Default,NTP,0000,0000,0000,,然后我可以考虑另一个
Dialogue: 0,0:10:01.20,0:10:03.44,*Default,NTP,0000,0000,0000,,3 在前的排列
Dialogue: 0,0:10:03.44,0:10:04.32,*Default,NTP,0000,0000,0000,,二
Dialogue: 0,0:10:04.32,0:10:06.08,*Default,NTP,0000,0000,0000,,我可以决定把一个放在
Dialogue: 0,0:10:06.08,0:10:07.44,*Default,NTP,0000,0000,0000,,开始
Dialogue: 0,0:10:07.44,0:10:10.80,*Default,NTP,0000,0000,0000,,或者中间的一个
Dialogue: 0,0:10:10.80,0:10:14.24,*Default,NTP,0000,0000,0000,,或者最后一个，这是一个
Dialogue: 0,0:10:14.24,0:10:16.08,*Default,NTP,0000,0000,0000,,解决这个问题的完美方法
Dialogue: 0,0:10:16.08,0:10:16.88,*Default,NTP,0000,0000,0000,,还有
Dialogue: 0,0:10:16.88,0:10:18.96,*Default,NTP,0000,0000,0000,,所以如果我们想要这样的答案
Dialogue: 0,0:10:18.96,0:10:20.96,*Default,NTP,0000,0000,0000,,顺序略有不同
Dialogue: 0,0:10:20.96,0:10:24.40,*Default,NTP,0000,0000,0000,,我们如何处理好基本情况
Dialogue: 0,0:10:24.40,0:10:25.92,*Default,NTP,0000,0000,0000,,看起来不错，就是这样
Dialogue: 0,0:10:25.92,0:10:29.52,*Default,NTP,0000,0000,0000,,但我们在这里说的是
Dialogue: 0,0:10:29.52,0:10:33.12,*Default,NTP,0000,0000,0000,,分割是第一个元素
Dialogue: 0,0:10:33.12,0:10:36.40,*Default,NTP,0000,0000,0000,,和其余的元素
Dialogue: 0,0:10:37.20,0:10:40.28,*Default,NTP,0000,0000,0000,,我们正在考虑休息
Dialogue: 0,0:10:40.28,0:10:43.28,*Default,NTP,0000,0000,0000,,排列
Dialogue: 0,0:10:43.36,0:10:46.40,*Default,NTP,0000,0000,0000,,作为外循环，所以剩余排列
Dialogue: 0,0:10:46.40,0:10:47.52,*Default,NTP,0000,0000,0000,,可能类似于 2
Dialogue: 0,0:10:47.52,0:10:50.80,*Default,NTP,0000,0000,0000,,3 这可能是这样的
Dialogue: 0,0:10:50.80,0:10:55.84,*Default,NTP,0000,0000,0000,,1 这是 2 3
Dialogue: 0,0:10:56.24,0:10:58.88,*Default,NTP,0000,0000,0000,,只是用例子注释一下就可以了
Dialogue: 0,0:10:58.88,0:11:00.16,*Default,NTP,0000,0000,0000,,现在你做什么
Dialogue: 0,0:11:00.16,0:11:01.84,*Default,NTP,0000,0000,0000,,你必须考虑所有
Dialogue: 0,0:11:01.84,0:11:03.60,*Default,NTP,0000,0000,0000,,不同的地方你可以
Dialogue: 0,0:11:03.60,0:11:07.60,*Default,NTP,0000,0000,0000,,把呃放在第一位
Dialogue: 0,0:11:07.60,0:11:10.56,*Default,NTP,0000,0000,0000,,所以这里我们还有另一个 i 在
Dialogue: 0,0:11:10.56,0:11:11.12,*Default,NTP,0000,0000,0000,,范围
Dialogue: 0,0:11:11.12,0:11:13.12,*Default,NTP,0000,0000,0000,,len s 你可以把它放在第零个
Dialogue: 0,0:11:13.12,0:11:15.36,*Default,NTP,0000,0000,0000,,位置或第一个位置或
Dialogue: 0,0:11:15.36,0:11:16.40,*Default,NTP,0000,0000,0000,,第二位置
Dialogue: 0,0:11:16.40,0:11:19.28,*Default,NTP,0000,0000,0000,,所以代码没有太大改变
Dialogue: 0,0:11:19.28,0:11:22.00,*Default,NTP,0000,0000,0000,,我想我们已经处理过了
Dialogue: 0,0:11:22.00,0:11:24.80,*Default,NTP,0000,0000,0000,,但我们必须考虑要产出什么
Dialogue: 0,0:11:24.80,0:11:27.04,*Default,NTP,0000,0000,0000,,问题之一是我是否只是
Dialogue: 0,0:11:27.04,0:11:29.24,*Default,NTP,0000,0000,0000,,插入所以如果我写例如
Dialogue: 0,0:11:29.24,0:11:32.24,*Default,NTP,0000,0000,0000,,休息插入
Dialogue: 0,0:11:33.04,0:11:36.48,*Default,NTP,0000,0000,0000,,首先处于位置 i 然后有东西发生
Dialogue: 0,0:11:36.48,0:11:37.20,*Default,NTP,0000,0000,0000,,错误的
Dialogue: 0,0:11:37.20,0:11:40.00,*Default,NTP,0000,0000,0000,,那么我们来谈谈插入是如何工作的
Dialogue: 0,0:11:40.00,0:11:42.80,*Default,NTP,0000,0000,0000,,假设休息是二三
Dialogue: 0,0:11:42.80,0:11:46.40,*Default,NTP,0000,0000,0000,,第一个是一个，我
Dialogue: 0,0:11:46.40,0:11:49.52,*Default,NTP,0000,0000,0000,,第一个零是对的
Dialogue: 0,0:11:49.52,0:11:52.88,*Default,NTP,0000,0000,0000,,那么如果我写rest.insert
Dialogue: 0,0:11:52.88,0:11:56.40,*Default,NTP,0000,0000,0000,,第一个r
Dialogue: 0,0:11:56.40,0:11:59.36,*Default,NTP,0000,0000,0000,,哦我做了什么
Dialogue: 0,0:11:59.76,0:12:02.24,*Default,NTP,0000,0000,0000,,哦，我想我的顺序是错误的
Dialogue: 0,0:12:02.24,0:12:04.48,*Default,NTP,0000,0000,0000,,让我们再试一次
Dialogue: 0,0:12:04.48,0:12:08.80,*Default,NTP,0000,0000,0000,,休息哦是的首先我等于零
Dialogue: 0,0:12:08.80,0:12:10.56,*Default,NTP,0000,0000,0000,,你应该插入到
Dialogue: 0,0:12:10.56,0:12:13.04,*Default,NTP,0000,0000,0000,,特定位置特定值
Dialogue: 0,0:12:13.04,0:12:16.80,*Default,NTP,0000,0000,0000,,好的，这就是我们想要的，抱歉
Dialogue: 0,0:12:16.80,0:12:18.32,*Default,NTP,0000,0000,0000,,这太棒了，这是我们可以做到的
Dialogue: 0,0:12:18.32,0:12:20.48,*Default,NTP,0000,0000,0000,,产量所以我们产量
Dialogue: 0,0:12:20.48,0:12:24.40,*Default,NTP,0000,0000,0000,,然后我们将 i 更改为 1
Dialogue: 0,0:12:24.40,0:12:26.16,*Default,NTP,0000,0000,0000,,这就是经历的事情
Dialogue: 0,0:12:26.16,0:12:28.08,*Default,NTP,0000,0000,0000,,再次声明即可
Dialogue: 0,0:12:28.08,0:12:31.76,*Default,NTP,0000,0000,0000,,然后如果我们再次评估这个会怎样
Dialogue: 0,0:12:31.76,0:12:35.44,*Default,NTP,0000,0000,0000,,麻烦我们有一个问题问题是
Dialogue: 0,0:12:35.44,0:12:37.92,*Default,NTP,0000,0000,0000,,该插入是一个突变操作并且
Dialogue: 0,0:12:37.92,0:12:40.64,*Default,NTP,0000,0000,0000,,所以插入累积在
Dialogue: 0,0:12:40.64,0:12:41.12,*Default,NTP,0000,0000,0000,,这
Dialogue: 0,0:12:41.12,0:12:43.60,*Default,NTP,0000,0000,0000,,休息，所以时间越来越长
Dialogue: 0,0:12:43.60,0:12:45.12,*Default,NTP,0000,0000,0000,,这不再是我们想要的
Dialogue: 0,0:12:45.12,0:12:47.52,*Default,NTP,0000,0000,0000,,想要 2 1 3 但现在我们有一些东西
Dialogue: 0,0:12:47.52,0:12:48.80,*Default,NTP,0000,0000,0000,,别的
Dialogue: 0,0:12:48.80,0:12:53.84,*Default,NTP,0000,0000,0000,,所以仅仅写这个是行不通的
Dialogue: 0,0:12:53.84,0:12:56.96,*Default,NTP,0000,0000,0000,,你可以写结果是
Dialogue: 0,0:12:56.96,0:13:00.64,*Default,NTP,0000,0000,0000,,一个包含以下所有元素的新列表
Dialogue: 0,0:13:00.64,0:13:01.92,*Default,NTP,0000,0000,0000,,在其中休息
Dialogue: 0,0:13:01.92,0:13:03.84,*Default,NTP,0000,0000,0000,,然后你可以插入
Dialogue: 0,0:13:03.84,0:13:06.24,*Default,NTP,0000,0000,0000,,结果并产生该结果
Dialogue: 0,0:13:06.24,0:13:08.80,*Default,NTP,0000,0000,0000,,你就会摆脱这个问题
Dialogue: 0,0:13:08.80,0:13:10.64,*Default,NTP,0000,0000,0000,,插入同一个列表两次
Dialogue: 0,0:13:10.64,0:13:12.80,*Default,NTP,0000,0000,0000,,因为你每次都会列出一个新的清单
Dialogue: 0,0:13:12.80,0:13:15.12,*Default,NTP,0000,0000,0000,,总是有点开始的时间
Dialogue: 0,0:13:15.12,0:13:17.68,*Default,NTP,0000,0000,0000,,在 2 3 然后你插入
Dialogue: 0,0:13:17.68,0:13:18.48,*Default,NTP,0000,0000,0000,,不同的地方
Dialogue: 0,0:13:18.48,0:13:20.96,*Default,NTP,0000,0000,0000,,所以我怀疑这会起作用哦
Dialogue: 0,0:13:20.96,0:13:22.88,*Default,NTP,0000,0000,0000,,显然不是
Dialogue: 0,0:13:22.88,0:13:26.24,*Default,NTP,0000,0000,0000,,呃做错了什么
Dialogue: 0,0:13:26.24,0:13:28.96,*Default,NTP,0000,0000,0000,,很清楚哦，抱歉，这是
Dialogue: 0,0:13:28.96,0:13:30.72,*Default,NTP,0000,0000,0000,,应该是其余排列
Dialogue: 0,0:13:30.72,0:13:35.84,*Default,NTP,0000,0000,0000,,是的 是的
Dialogue: 0,0:13:36.72,0:13:40.00,*Default,NTP,0000,0000,0000,,好吧，现在可以了呃
Dialogue: 0,0:13:40.00,0:13:41.36,*Default,NTP,0000,0000,0000,,对此感到抱歉，是的，所以你必须这样做
Dialogue: 0,0:13:41.36,0:13:43.52,*Default,NTP,0000,0000,0000,,考虑其余的所有排列
Dialogue: 0,0:13:43.52,0:13:45.84,*Default,NTP,0000,0000,0000,,并插入所有这些然后我们
Dialogue: 0,0:13:45.84,0:13:48.24,*Default,NTP,0000,0000,0000,,我们有不同的分组呃
Dialogue: 0,0:13:48.24,0:13:50.72,*Default,NTP,0000,0000,0000,,所有两个在前的地方
Dialogue: 0,0:13:50.72,0:13:52.08,*Default,NTP,0000,0000,0000,,三，然后全部播放，其中三
Dialogue: 0,0:13:52.08,0:13:53.44,*Default,NTP,0000,0000,0000,,出现在两个之前
Dialogue: 0,0:13:53.44,0:13:54.80,*Default,NTP,0000,0000,0000,,所以这是两个不同的休息
Dialogue: 0,0:13:54.80,0:13:56.72,*Default,NTP,0000,0000,0000,,排列然后我们考虑
Dialogue: 0,0:13:56.72,0:13:58.64,*Default,NTP,0000,0000,0000,,布丁的所有不同地方
Dialogue: 0,0:13:58.64,0:14:02.24,*Default,NTP,0000,0000,0000,,呃首先
Dialogue: 0,0:14:02.24,0:14:05.12,*Default,NTP,0000,0000,0000,,所以当你修改该列表时
Dialogue: 0,0:14:05.12,0:14:07.76,*Default,NTP,0000,0000,0000,,递归调用你要非常小心
Dialogue: 0,0:14:07.76,0:14:09.20,*Default,NTP,0000,0000,0000,,是的，所以这样的原因
Dialogue: 0,0:14:09.20,0:14:11.36,*Default,NTP,0000,0000,0000,,有效的是我们剥离并创建了一个
Dialogue: 0,0:14:11.36,0:14:13.04,*Default,NTP,0000,0000,0000,,新列表并注意该列表
Dialogue: 0,0:14:13.04,0:14:14.56,*Default,NTP,0000,0000,0000,,那里的操作员
Dialogue: 0,0:14:14.56,0:14:17.20,*Default,NTP,0000,0000,0000,,呃，距光标所在位置两行
Dialogue: 0,0:14:17.20,0:14:18.00,*Default,NTP,0000,0000,0000,,它不是
Dialogue: 0,0:14:18.00,0:14:20.32,*Default,NTP,0000,0000,0000,,结果等于排列
Dialogue: 0,0:14:20.32,0:14:22.32,*Default,NTP,0000,0000,0000,,是同一个对象，所以我们创建一个
Dialogue: 0,0:14:22.32,0:14:23.84,*Default,NTP,0000,0000,0000,,新名单
Dialogue: 0,0:14:23.84,0:14:26.24,*Default,NTP,0000,0000,0000,,我们改变它，然后当我们返回时
Dialogue: 0,0:14:26.24,0:14:26.96,*Default,NTP,0000,0000,0000,,嘴唇它
Dialogue: 0,0:14:26.96,0:14:28.84,*Default,NTP,0000,0000,0000,,字面上创造了一个新的距离时间
Dialogue: 0,0:14:28.84,0:14:31.44,*Default,NTP,0000,0000,0000,,是的
Dialogue: 0,0:14:31.44,0:14:33.44,*Default,NTP,0000,0000,0000,,是的，另一种合理的方式是
Dialogue: 0,0:14:33.44,0:14:34.56,*Default,NTP,0000,0000,0000,,试图避免
Dialogue: 0,0:14:34.56,0:14:37.76,*Default,NTP,0000,0000,0000,,突变操作，例如完全插入
Dialogue: 0,0:14:37.76,0:14:40.88,*Default,NTP,0000,0000,0000,,在这里你会得到休息
Dialogue: 0,0:14:40.88,0:14:42.48,*Default,NTP,0000,0000,0000,,排列
Dialogue: 0,0:14:42.48,0:14:45.76,*Default,NTP,0000,0000,0000,,直到位置 i 然后放入
Dialogue: 0,0:14:45.76,0:14:48.96,*Default,NTP,0000,0000,0000,,首先然后得到剩下的
Dialogue: 0,0:14:48.96,0:14:50.72,*Default,NTP,0000,0000,0000,,排列
Dialogue: 0,0:14:50.72,0:14:54.56,*Default,NTP,0000,0000,0000,,呃，这可能也有用
Dialogue: 0,0:14:54.56,0:14:57.04,*Default,NTP,0000,0000,0000,,显然
Dialogue: 0,0:14:57.60,0:14:59.28,*Default,NTP,0000,0000,0000,,好的，呃，有人问两个简单的问题
Dialogue: 0,0:14:59.28,0:15:00.96,*Default,NTP,0000,0000,0000,,询问这行得通吗
Dialogue: 0,0:15:00.96,0:15:04.00,*Default,NTP,0000,0000,0000,,对于字符串好吧嗯
Dialogue: 0,0:15:04.00,0:15:05.84,*Default,NTP,0000,0000,0000,,我想这可以与字符串一起使用吗
Dialogue: 0,0:15:05.84,0:15:08.08,*Default,NTP,0000,0000,0000,,可能会
Dialogue: 0,0:15:08.08,0:15:11.04,*Default,NTP,0000,0000,0000,,呃，我不记得你是否可以给我打电话
Dialogue: 0,0:15:11.04,0:15:12.08,*Default,NTP,0000,0000,0000,,如果我们想要
Dialogue: 0,0:15:12.08,0:15:15.28,*Default,NTP,0000,0000,0000,,abc 的排列我们不会去
Dialogue: 0,0:15:15.28,0:15:17.36,*Default,NTP,0000,0000,0000,,让字符串恢复正确
Dialogue: 0,0:15:17.36,0:15:20.72,*Default,NTP,0000,0000,0000,,总是产生列表，但我们会得到
Dialogue: 0,0:15:20.72,0:15:23.92,*Default,NTP,0000,0000,0000,,全部名单
Dialogue: 0,0:15:23.92,0:15:27.20,*Default,NTP,0000,0000,0000,,abc 的排列列表
Dialogue: 0,0:15:27.20,0:15:30.00,*Default,NTP,0000,0000,0000,,这有效的原因是
Dialogue: 0,0:15:30.00,0:15:31.44,*Default,NTP,0000,0000,0000,,我们实际上做了什么
Dialogue: 0,0:15:31.44,0:15:33.84,*Default,NTP,0000,0000,0000,,好吧，我们已经检查了它的长度，那就是
Dialogue: 0,0:15:33.84,0:15:34.96,*Default,NTP,0000,0000,0000,,你可以做的事
Dialogue: 0,0:15:34.96,0:15:38.08,*Default,NTP,0000,0000,0000,,用一根绳子和
Dialogue: 0,0:15:38.08,0:15:41.12,*Default,NTP,0000,0000,0000,,我们已经得到了它的元素或片段
Dialogue: 0,0:15:41.12,0:15:41.44,*Default,NTP,0000,0000,0000,,它
Dialogue: 0,0:15:41.44,0:15:42.80,*Default,NTP,0000,0000,0000,,这就是你可以用
Dialogue: 0,0:15:42.80,0:15:44.80,*Default,NTP,0000,0000,0000,,串所以
Dialogue: 0,0:15:44.80,0:15:47.28,*Default,NTP,0000,0000,0000,,呃，是的，我想 um s 可能是一个字符串
Dialogue: 0,0:15:47.28,0:15:48.80,*Default,NTP,0000,0000,0000,,它可以是任何序列
Dialogue: 0,0:15:48.80,0:15:50.24,*Default,NTP,0000,0000,0000,,任何你能接受的长度
Dialogue: 0,0:15:50.24,0:15:51.12,*Default,NTP,0000,0000,0000,,的并得到
Dialogue: 0,0:15:51.12,0:15:53.68,*Default,NTP,0000,0000,0000,,木制品的元素或获得木制品的切片
Dialogue: 0,0:15:53.68,0:15:54.32,*Default,NTP,0000,0000,0000,,这里
Dialogue: 0,0:15:54.32,0:15:56.00,*Default,NTP,0000,0000,0000,,但它不会给你回弦它会
Dialogue: 0,0:15:56.00,0:15:57.36,*Default,NTP,0000,0000,0000,,给你返回清单
Dialogue: 0,0:15:57.36,0:15:59.60,*Default,NTP,0000,0000,0000,,但我们可以将其更改为
Dialogue: 0,0:15:59.60,0:16:01.52,*Default,NTP,0000,0000,0000,,产生空列表并执行所有操作
Dialogue: 0,0:16:01.52,0:16:03.04,*Default,NTP,0000,0000,0000,,字符串连接而不是列表
Dialogue: 0,0:16:03.04,0:16:04.48,*Default,NTP,0000,0000,0000,,本来可以工作的串联
Dialogue: 0,0:16:04.48,0:16:07.60,*Default,NTP,0000,0000,0000,,哦，这里的变化很快，
Dialogue: 0,0:16:07.60,0:16:09.60,*Default,NTP,0000,0000,0000,,然后下面还有约翰
Dialogue: 0,0:16:09.60,0:16:14.16,*Default,NTP,0000,0000,0000,,呃首先得摆脱它
Dialogue: 0,0:16:14.16,0:16:17.20,*Default,NTP,0000,0000,0000,,是的，现在也许我们正在做生意
Dialogue: 0,0:16:17.20,0:16:21.36,*Default,NTP,0000,0000,0000,,是的，所以我认为大部分事情
Dialogue: 0,0:16:21.36,0:16:22.96,*Default,NTP,0000,0000,0000,,对字符串进行操作并且这项工作
Dialogue: 0,0:16:22.96,0:16:24.56,*Default,NTP,0000,0000,0000,,但有一些操作，我认为
Dialogue: 0,0:16:24.56,0:16:26.32,*Default,NTP,0000,0000,0000,,奥黛丽确认您无法插入
Dialogue: 0,0:16:26.32,0:16:28.24,*Default,NTP,0000,0000,0000,,字符串中有一些东西
Dialogue: 0,0:16:28.24,0:16:29.68,*Default,NTP,0000,0000,0000,,运营商不工作你只是有
Dialogue: 0,0:16:29.68,0:16:31.52,*Default,NTP,0000,0000,0000,,将所有东西推到一起
Dialogue: 0,0:16:31.52,0:16:32.56,*Default,NTP,0000,0000,0000,,略有不同的方式
Dialogue: 0,0:16:32.56,0:16:33.92,*Default,NTP,0000,0000,0000,,是的，这就是你不能的字符串
Dialogue: 0,0:16:33.92,0:16:35.84,*Default,NTP,0000,0000,0000,,改变一个字符串，它们是不可变的
Dialogue: 0,0:16:35.84,0:16:39.20,*Default,NTP,0000,0000,0000,,对象所以你必须这样做
Dialogue: 0,0:16:39.20,0:16:42.00,*Default,NTP,0000,0000,0000,,所以如果你还好那么问题是
Dialogue: 0,0:16:42.00,0:16:43.92,*Default,NTP,0000,0000,0000,,你能创建一个
Dialogue: 0,0:16:43.92,0:16:47.28,*Default,NTP,0000,0000,0000,,循环 um 链表
Dialogue: 0,0:16:47.28,0:16:49.36,*Default,NTP,0000,0000,0000,,如果是这样，那是个好主意还是
Dialogue: 0,0:16:49.36,0:16:52.32,*Default,NTP,0000,0000,0000,,不是嗯
Dialogue: 0,0:16:52.32,0:16:55.76,*Default,NTP,0000,0000,0000,,所以这是来自呃的链接
Dialogue: 0,0:16:55.76,0:16:59.60,*Default,NTP,0000,0000,0000,,讲座，如果我们创建链接一个链接
Dialogue: 0,0:16:59.60,0:17:04.56,*Default,NTP,0000,0000,0000,,两个链接三个嗯
Dialogue: 0,0:17:04.56,0:17:06.40,*Default,NTP,0000,0000,0000,,这是我可以看的东西 我可以
Dialogue: 0,0:17:06.40,0:17:07.68,*Default,NTP,0000,0000,0000,,打印那个打印
Dialogue: 0,0:17:07.68,0:17:10.88,*Default,NTP,0000,0000,0000,,生活是美好的，但如果我改变它
Dialogue: 0,0:17:10.88,0:17:13.04,*Default,NTP,0000,0000,0000,,s 点剩余等于 s
Dialogue: 0,0:17:13.04,0:17:16.40,*Default,NTP,0000,0000,0000,,那么 s 点休息就是 s
Dialogue: 0,0:17:16.40,0:17:18.24,*Default,NTP,0000,0000,0000,,明星第一仍然是数字
Dialogue: 0,0:17:18.24,0:17:20.56,*Default,NTP,0000,0000,0000,,一我们忘记了数字二
Dialogue: 0,0:17:20.56,0:17:21.60,*Default,NTP,0000,0000,0000,,和三个
Dialogue: 0,0:17:21.60,0:17:25.04,*Default,NTP,0000,0000,0000,,嗯，因为现在的点首先是
Dialogue: 0,0:17:25.04,0:17:26.96,*Default,NTP,0000,0000,0000,,仍然是一个，和其他人一样，我休息在
Dialogue: 0,0:17:26.96,0:17:29.84,*Default,NTP,0000,0000,0000,,第一个仍然是一个
Dialogue: 0,0:17:30.80,0:17:34.64,*Default,NTP,0000,0000,0000,,我无法打印它，为什么
Dialogue: 0,0:17:34.64,0:17:38.64,*Default,NTP,0000,0000,0000,,嗯，有一个打印方法呃
Dialogue: 0,0:17:38.64,0:17:41.28,*Default,NTP,0000,0000,0000,,我们想出的基本上是
Dialogue: 0,0:17:41.28,0:17:42.08,*Default,NTP,0000,0000,0000,,喜欢
Dialogue: 0,0:17:42.08,0:17:47.04,*Default,NTP,0000,0000,0000,,你知道呃从尖括号开始
Dialogue: 0,0:17:47.04,0:17:51.44,*Default,NTP,0000,0000,0000,,然后得到第一件事
Dialogue: 0,0:17:51.44,0:17:54.80,*Default,NTP,0000,0000,0000,,然后得到剩下的
Dialogue: 0,0:17:54.80,0:17:57.84,*Default,NTP,0000,0000,0000,,继续这样做直到你休息
Dialogue: 0,0:17:57.84,0:18:00.00,*Default,NTP,0000,0000,0000,,那是空的，但其余部分是
Dialogue: 0,0:18:00.00,0:18:01.68,*Default,NTP,0000,0000,0000,,永远不会空，因为它总是只是
Dialogue: 0,0:18:01.68,0:18:04.72,*Default,NTP,0000,0000,0000,,再次 s 所以这将永远运行
Dialogue: 0,0:18:04.72,0:18:06.96,*Default,NTP,0000,0000,0000,,我们创建了一个无限长的链接
Dialogue: 0,0:18:06.96,0:18:07.76,*Default,NTP,0000,0000,0000,,列表
Dialogue: 0,0:18:07.76,0:18:09.76,*Default,NTP,0000,0000,0000,,在某些情况下您可能想要
Dialogue: 0,0:18:09.76,0:18:10.88,*Default,NTP,0000,0000,0000,,正是如此
Dialogue: 0,0:18:10.88,0:18:12.48,*Default,NTP,0000,0000,0000,,你可能想代表一些
Dialogue: 0,0:18:12.48,0:18:14.48,*Default,NTP,0000,0000,0000,,就像你知道的那样重复小数
Dialogue: 0,0:18:14.48,0:18:16.08,*Default,NTP,0000,0000,0000,,当你除以七时发生
Dialogue: 0,0:18:16.08,0:18:17.92,*Default,NTP,0000,0000,0000,,好吧，实际上这应该永远持续下去
Dialogue: 0,0:18:17.92,0:18:19.04,*Default,NTP,0000,0000,0000,,我们可以代表
Dialogue: 0,0:18:19.04,0:18:21.20,*Default,NTP,0000,0000,0000,,作为一个循环链表然后我们
Dialogue: 0,0:18:21.20,0:18:23.04,*Default,NTP,0000,0000,0000,,可以问你知道第 50 位数字是多少
Dialogue: 0,0:18:23.04,0:18:24.64,*Default,NTP,0000,0000,0000,,一除以七
Dialogue: 0,0:18:24.64,0:18:26.56,*Default,NTP,0000,0000,0000,,我们可以叫休息五十次
Dialogue: 0,0:18:26.56,0:18:28.48,*Default,NTP,0000,0000,0000,,并找到它，所以有这样的情况
Dialogue: 0,0:18:28.48,0:18:30.16,*Default,NTP,0000,0000,0000,,你可能想要这样做
Dialogue: 0,0:18:30.16,0:18:31.84,*Default,NTP,0000,0000,0000,,这是链表的一个特性
Dialogue: 0,0:18:31.84,0:18:33.68,*Default,NTP,0000,0000,0000,,对于列表来说并不真正存在
Dialogue: 0,0:18:33.68,0:18:35.68,*Default,NTP,0000,0000,0000,,列表必须有长度，但是这些
Dialogue: 0,0:18:35.68,0:18:36.88,*Default,NTP,0000,0000,0000,,事情并不一定要有一个
Dialogue: 0,0:18:36.88,0:18:38.40,*Default,NTP,0000,0000,0000,,如果你制作它们的话长度
Dialogue: 0,0:18:38.40,0:18:41.20,*Default,NTP,0000,0000,0000,,虽然我猜是周期性的 99
Dialogue: 0,0:18:41.20,0:18:42.88,*Default,NTP,0000,0000,0000,,你希望它们真正结束的时间
Dialogue: 0,0:18:42.88,0:18:44.72,*Default,NTP,0000,0000,0000,,你想要某样东西的情况很少见
Dialogue: 0,0:18:44.72,0:18:45.20,*Default,NTP,0000,0000,0000,,到
Dialogue: 0,0:18:45.20,0:18:48.16,*Default,NTP,0000,0000,0000,,永远持续下去所以这有一个名字
Dialogue: 0,0:18:48.16,0:18:49.76,*Default,NTP,0000,0000,0000,,这个时代也有你的问题
Dialogue: 0,0:18:49.76,0:18:52.32,*Default,NTP,0000,0000,0000,,这些被称为循环列表
Dialogue: 0,0:18:52.32,0:18:53.04,*Default,NTP,0000,0000,0000,,一
Dialogue: 0,0:18:53.04,0:18:55.52,*Default,NTP,0000,0000,0000,,好处之一就是像你一样
Dialogue: 0,0:18:55.52,0:18:57.76,*Default,NTP,0000,0000,0000,,遍历列表
Dialogue: 0,0:18:57.76,0:18:59.12,*Default,NTP,0000,0000,0000,,你知道有一些好东西
Dialogue: 0,0:18:59.12,0:19:00.64,*Default,NTP,0000,0000,0000,,当你到达最后一个元素时，你可以
Dialogue: 0,0:19:00.64,0:19:02.40,*Default,NTP,0000,0000,0000,,回到第一个元素所以这个
Dialogue: 0,0:19:02.40,0:19:03.92,*Default,NTP,0000,0000,0000,,认为没有真正的
Dialogue: 0,0:19:03.92,0:19:06.32,*Default,NTP,0000,0000,0000,,到列表末尾，但这会引起问题
Dialogue: 0,0:19:06.32,0:19:07.76,*Default,NTP,0000,0000,0000,,但我们本来可以解决这个问题
Dialogue: 0,0:19:07.76,0:19:09.12,*Default,NTP,0000,0000,0000,,具有不同的打印功能
Dialogue: 0,0:19:09.12,0:19:11.04,*Default,NTP,0000,0000,0000,,我们本可以有一些想法
Dialogue: 0,0:19:11.04,0:19:13.44,*Default,NTP,0000,0000,0000,,环绕和一种方法来做到这一点
Dialogue: 0,0:19:13.44,0:19:16.00,*Default,NTP,0000,0000,0000,,就是所谓的哨兵，你把
Dialogue: 0,0:19:16.00,0:19:17.84,*Default,NTP,0000,0000,0000,,一个特别的
Dialogue: 0,0:19:17.84,0:19:20.24,*Default,NTP,0000,0000,0000,,位于列表前面的节点
Dialogue: 0,0:19:20.24,0:19:21.20,*Default,NTP,0000,0000,0000,,表示
Dialogue: 0,0:19:21.20,0:19:22.88,*Default,NTP,0000,0000,0000,,它不是一个数据字段，而是一个
Dialogue: 0,0:19:22.88,0:19:24.24,*Default,NTP,0000,0000,0000,,哨兵所以你把一些东西放进去
Dialogue: 0,0:19:24.24,0:19:25.28,*Default,NTP,0000,0000,0000,,数据字段
Dialogue: 0,0:19:25.28,0:19:28.80,*Default,NTP,0000,0000,0000,,指定这不是数据
Dialogue: 0,0:19:28.80,0:19:30.00,*Default,NTP,0000,0000,0000,,它在一开始就向你展示了
Dialogue: 0,0:19:30.00,0:19:31.68,*Default,NTP,0000,0000,0000,,列表中的然后当你开始时
Dialogue: 0,0:19:31.68,0:19:33.20,*Default,NTP,0000,0000,0000,,经历并回到
Dialogue: 0,0:19:33.20,0:19:34.64,*Default,NTP,0000,0000,0000,,你知道你的哨兵
Dialogue: 0,0:19:34.64,0:19:36.48,*Default,NTP,0000,0000,0000,,包裹起来，然后打印
Dialogue: 0,0:19:36.48,0:19:37.92,*Default,NTP,0000,0000,0000,,声明可以说好吧，保留
Dialogue: 0,0:19:37.92,0:19:38.88,*Default,NTP,0000,0000,0000,,印刷
Dialogue: 0,0:19:38.88,0:19:42.00,*Default,NTP,0000,0000,0000,,直到我循环回来然后sp有一些
Dialogue: 0,0:19:42.00,0:19:43.28,*Default,NTP,0000,0000,0000,,说的符号
Dialogue: 0,0:19:43.28,0:19:45.52,*Default,NTP,0000,0000,0000,,这会像点点点一样继续下去
Dialogue: 0,0:19:45.52,0:19:46.32,*Default,NTP,0000,0000,0000,,是的
Dialogue: 0,0:19:46.32,0:19:48.72,*Default,NTP,0000,0000,0000,,所以他们本质上并不坏，但你
Dialogue: 0,0:19:48.72,0:19:51.28,*Default,NTP,0000,0000,0000,,必须采取预防措施
Dialogue: 0,0:19:51.28,0:19:52.96,*Default,NTP,0000,0000,0000,,循环链表实际上是一个
Dialogue: 0,0:19:52.96,0:19:55.76,*Default,NTP,0000,0000,0000,,通用数据类型
Dialogue: 0,0:19:56.16,0:19:57.76,*Default,NTP,0000,0000,0000,,这是一个很好的观点，如果我们有
Dialogue: 0,0:19:57.76,0:20:00.40,*Default,NTP,0000,0000,0000,,只是搅拌的一个稍微聪明的版本
Dialogue: 0,0:20:00.40,0:20:02.56,*Default,NTP,0000,0000,0000,,然后我们就可以打印出来了
Dialogue: 0,0:20:02.56,0:20:06.16,*Default,NTP,0000,0000,0000,,就像输入数据一样
Dialogue: 0,0:20:06.16,0:20:07.76,*Default,NTP,0000,0000,0000,,当然是个好问题所以问题是
Dialogue: 0,0:20:07.76,0:20:10.48,*Default,NTP,0000,0000,0000,,关于讨论5
Dialogue: 0,0:20:10.48,0:20:12.96,*Default,NTP,0000,0000,0000,,问题编号 1.3 被称为
Dialogue: 0,0:20:12.96,0:20:15.12,*Default,NTP,0000,0000,0000,,方树
Dialogue: 0,0:20:15.12,0:20:17.28,*Default,NTP,0000,0000,0000,,当你编写这个的实现时
Dialogue: 0,0:20:17.28,0:20:19.28,*Default,NTP,0000,0000,0000,,那么还不清楚 python 实际上是如何
Dialogue: 0,0:20:19.28,0:20:20.00,*Default,NTP,0000,0000,0000,,执行那个
Dialogue: 0,0:20:20.00,0:20:22.64,*Default,NTP,0000,0000,0000,,这是使用树数据的代码
Dialogue: 0,0:20:22.64,0:20:24.56,*Default,NTP,0000,0000,0000,,抽象，但因为在本次讲座中我们
Dialogue: 0,0:20:24.56,0:20:25.84,*Default,NTP,0000,0000,0000,,谈到了
Dialogue: 0,0:20:25.84,0:20:27.44,*Default,NTP,0000,0000,0000,,树类也许我们会使用那个
Dialogue: 0,0:20:27.44,0:20:29.04,*Default,NTP,0000,0000,0000,,相反，它会有几乎相同的
Dialogue: 0,0:20:29.04,0:20:31.52,*Default,NTP,0000,0000,0000,,如此编码
Dialogue: 0,0:20:32.84,0:20:35.84,*Default,NTP,0000,0000,0000,,呃
Dialogue: 0,0:20:38.40,0:20:40.72,*Default,NTP,0000,0000,0000,,现在我们有了我们的树类，它会是什么
Dialogue: 0,0:20:40.72,0:20:43.84,*Default,NTP,0000,0000,0000,,意思是把一棵树摆成正方形
Dialogue: 0,0:20:44.24,0:20:48.48,*Default,NTP,0000,0000,0000,,嗯，我认为
Dialogue: 0,0:20:48.48,0:20:52.08,*Default,NTP,0000,0000,0000,,你想要将标签变成正方形
Dialogue: 0,0:20:52.08,0:20:55.76,*Default,NTP,0000,0000,0000,,树的所以一种写法
Dialogue: 0,0:20:55.76,0:20:58.80,*Default,NTP,0000,0000,0000,,是 t
Dialogue: 0,0:20:58.80,0:21:02.32,*Default,NTP,0000,0000,0000,,点标签平方或 t 点标签项目
Dialogue: 0,0:21:02.32,0:21:03.52,*Default,NTP,0000,0000,0000,,t 点标签
Dialogue: 0,0:21:03.52,0:21:06.88,*Default,NTP,0000,0000,0000,,无论哪种方式都可以，但目标是
Dialogue: 0,0:21:06.88,0:21:08.24,*Default,NTP,0000,0000,0000,,方树不是
Dialogue: 0,0:21:08.24,0:21:10.08,*Default,NTP,0000,0000,0000,,返回标签的平方为
Dialogue: 0,0:21:10.08,0:21:11.92,*Default,NTP,0000,0000,0000,,返回一整棵树
Dialogue: 0,0:21:11.92,0:21:14.00,*Default,NTP,0000,0000,0000,,所以我们需要返回一整棵树
Dialogue: 0,0:21:14.00,0:21:16.24,*Default,NTP,0000,0000,0000,,这个东西就是标签
Dialogue: 0,0:21:16.24,0:21:18.32,*Default,NTP,0000,0000,0000,,以及什么是分支以及
Dialogue: 0,0:21:18.32,0:21:19.76,*Default,NTP,0000,0000,0000,,分支是结果
Dialogue: 0,0:21:19.76,0:21:23.28,*Default,NTP,0000,0000,0000,,在每个分支上调用一棵方树
Dialogue: 0,0:21:23.28,0:21:26.40,*Default,NTP,0000,0000,0000,,那么我是怎么做到这么远的
Dialogue: 0,0:21:26.40,0:21:29.20,*Default,NTP,0000,0000,0000,,好吧，我知道我想平方所有
Dialogue: 0,0:21:29.20,0:21:30.88,*Default,NTP,0000,0000,0000,,其他标签
Dialogue: 0,0:21:30.88,0:21:34.48,*Default,NTP,0000,0000,0000,,每个标签都显示为根
Dialogue: 0,0:21:34.48,0:21:37.60,*Default,NTP,0000,0000,0000,,树中的某个节点所以
Dialogue: 0,0:21:37.60,0:21:40.56,*Default,NTP,0000,0000,0000,,如果我说过把树顶摆成正方形
Dialogue: 0,0:21:40.56,0:21:41.36,*Default,NTP,0000,0000,0000,,然后我
Dialogue: 0,0:21:41.36,0:21:43.60,*Default,NTP,0000,0000,0000,,在其他地方应用该操作
Dialogue: 0,0:21:43.60,0:21:44.64,*Default,NTP,0000,0000,0000,,那个树
Dialogue: 0,0:21:44.64,0:21:46.64,*Default,NTP,0000,0000,0000,,然后我将最终对每个进行平方
Dialogue: 0,0:21:46.64,0:21:48.80,*Default,NTP,0000,0000,0000,,树中的标签
Dialogue: 0,0:21:48.80,0:21:52.24,*Default,NTP,0000,0000,0000,,所以我可以写平方树 b
Dialogue: 0,0:21:52.24,0:21:59.84,*Default,NTP,0000,0000,0000,,for b in t 点分支
Dialogue: 0,0:22:01.68,0:22:07.12,*Default,NTP,0000,0000,0000,,然后如果我有一棵特定的树
Dialogue: 0,0:22:07.12,0:22:13.84,*Default,NTP,0000,0000,0000,,这是一个简短的
Dialogue: 0,0:22:16.08,0:22:18.00,*Default,NTP,0000,0000,0000,,哦，我不应该使用它，因为你不能
Dialogue: 0,0:22:18.00,0:22:21.36,*Default,NTP,0000,0000,0000,,告诉你是否已经平方了，你能吗
Dialogue: 0,0:22:21.36,0:22:25.12,*Default,NTP,0000,0000,0000,,我将其平方
Dialogue: 0,0:22:25.20,0:22:27.04,*Default,NTP,0000,0000,0000,,然后我把我所拥有的一切都平方了
Dialogue: 0,0:22:27.04,0:22:29.36,*Default,NTP,0000,0000,0000,,4 的平方得到 16 我对 2 的平方
Dialogue: 0,0:22:29.36,0:22:32.16,*Default,NTP,0000,0000,0000,,为了得到 4，我将 3 平方得到 9。
Dialogue: 0,0:22:32.16,0:22:35.84,*Default,NTP,0000,0000,0000,,让我们做一棵中等大小的树
Dialogue: 0,0:22:35.84,0:22:37.44,*Default,NTP,0000,0000,0000,,我们将讨论它实际上是如何
Dialogue: 0,0:22:37.44,0:22:40.16,*Default,NTP,0000,0000,0000,,被执行所以如果我们有 4 个
Dialogue: 0,0:22:40.16,0:22:43.36,*Default,NTP,0000,0000,0000,,三二我们有一个呃
Dialogue: 0,0:22:43.36,0:22:47.20,*Default,NTP,0000,0000,0000,,这棵树的分支就像呃五个
Dialogue: 0,0:22:47.20,0:22:50.48,*Default,NTP,0000,0000,0000,,然后我们有一棵树三
Dialogue: 0,0:22:50.48,0:22:52.32,*Default,NTP,0000,0000,0000,,所以这和我们的几乎一样
Dialogue: 0,0:22:52.32,0:22:54.24,*Default,NTP,0000,0000,0000,,以前有过，除了它还有一个额外的
Dialogue: 0,0:22:54.24,0:22:57.20,*Default,NTP,0000,0000,0000,,小叶子在这里
Dialogue: 0,0:23:01.76,0:23:03.76,*Default,NTP,0000,0000,0000,,当我们将这棵树平方时，即使是五个
Dialogue: 0,0:23:03.76,0:23:05.36,*Default,NTP,0000,0000,0000,,得到
Dialogue: 0,0:23:05.36,0:23:08.16,*Default,NTP,0000,0000,0000,,平方是最简单的思考方式
Dialogue: 0,0:23:08.16,0:23:09.60,*Default,NTP,0000,0000,0000,,它是通过抽象
Dialogue: 0,0:23:09.60,0:23:12.64,*Default,NTP,0000,0000,0000,,并说好吧，所以平方的结果
Dialogue: 0,0:23:12.64,0:23:13.28,*Default,NTP,0000,0000,0000,,树
Dialogue: 0,0:23:13.28,0:23:16.16,*Default,NTP,0000,0000,0000,,在这棵中等大小的树上，我得到了一个新的
Dialogue: 0,0:23:16.16,0:23:16.64,*Default,NTP,0000,0000,0000,,树
Dialogue: 0,0:23:16.64,0:23:19.20,*Default,NTP,0000,0000,0000,,或者我已经平方根并且我已经
Dialogue: 0,0:23:19.20,0:23:21.52,*Default,NTP,0000,0000,0000,,将方树应用于所有分支
Dialogue: 0,0:23:21.52,0:23:23.12,*Default,NTP,0000,0000,0000,,所以当你
Dialogue: 0,0:23:23.12,0:23:24.80,*Default,NTP,0000,0000,0000,,方树这个
Dialogue: 0,0:23:24.80,0:23:26.64,*Default,NTP,0000,0000,0000,,这就是当你
Dialogue: 0,0:23:26.64,0:23:28.88,*Default,NTP,0000,0000,0000,,方形树
Dialogue: 0,0:23:28.88,0:23:30.24,*Default,NTP,0000,0000,0000,,你只是不去想
Dialogue: 0,0:23:30.24,0:23:31.92,*Default,NTP,0000,0000,0000,,过程
Dialogue: 0,0:23:31.92,0:23:35.20,*Default,NTP,0000,0000,0000,,但事实是
Dialogue: 0,0:23:35.20,0:23:37.12,*Default,NTP,0000,0000,0000,,呃 python 正在经历并且
Dialogue: 0,0:23:37.12,0:23:39.04,*Default,NTP,0000,0000,0000,,遍历整棵树并求平方
Dialogue: 0,0:23:39.04,0:23:40.32,*Default,NTP,0000,0000,0000,,事情一点一滴
Dialogue: 0,0:23:40.32,0:23:43.04,*Default,NTP,0000,0000,0000,,所以也许值得打印出来
Dialogue: 0,0:23:43.04,0:23:51.84,*Default,NTP,0000,0000,0000,,接下来要做什么
Dialogue: 0,0:23:53.92,0:23:56.56,*Default,NTP,0000,0000,0000,,随着它的发展，我们可以看到会发生什么
Dialogue: 0,0:23:56.56,0:23:58.00,*Default,NTP,0000,0000,0000,,这是我们的中型树
Dialogue: 0,0:23:58.00,0:23:59.44,*Default,NTP,0000,0000,0000,,这就是当你平方时会发生什么
Dialogue: 0,0:23:59.44,0:24:01.60,*Default,NTP,0000,0000,0000,,中等树哦，那不是
Dialogue: 0,0:24:01.60,0:24:04.40,*Default,NTP,0000,0000,0000,,正是我想要的让我们打印
Dialogue: 0,0:24:04.40,0:24:06.80,*Default,NTP,0000,0000,0000,,包装纸
Dialogue: 0,0:24:08.48,0:24:12.40,*Default,NTP,0000,0000,0000,,是首先尝试平方
Dialogue: 0,0:24:12.40,0:24:14.88,*Default,NTP,0000,0000,0000,,但我们递归调用
Dialogue: 0,0:24:14.88,0:24:16.80,*Default,NTP,0000,0000,0000,,进行递归的第一个分支
Dialogue: 0,0:24:16.80,0:24:17.20,*Default,NTP,0000,0000,0000,,称呼
Dialogue: 0,0:24:17.20,0:24:20.08,*Default,NTP,0000,0000,0000,,在第一个分支上就是那个
Dialogue: 0,0:24:20.08,0:24:20.48,*Default,NTP,0000,0000,0000,,称呼
Dialogue: 0,0:24:20.48,0:24:23.92,*Default,NTP,0000,0000,0000,,这样我们就得到了 325。
Dialogue: 0,0:24:23.92,0:24:25.92,*Default,NTP,0000,0000,0000,,这就是我们三个人的电话
Dialogue: 0,0:24:25.92,0:24:26.96,*Default,NTP,0000,0000,0000,,九
Dialogue: 0,0:24:26.96,0:24:29.12,*Default,NTP,0000,0000,0000,,这就是我们三个人的电话
Dialogue: 0,0:24:29.12,0:24:32.08,*Default,NTP,0000,0000,0000,,四点二十五分但请注意
Dialogue: 0,0:24:32.08,0:24:34.16,*Default,NTP,0000,0000,0000,,这只是使用了其中的一部分
Dialogue: 0,0:24:34.16,0:24:36.08,*Default,NTP,0000,0000,0000,,已经计算过了
Dialogue: 0,0:24:36.08,0:24:37.52,*Default,NTP,0000,0000,0000,,然后一旦你计算完这一部分
Dialogue: 0,0:24:37.52,0:24:38.72,*Default,NTP,0000,0000,0000,,这件作品已经可以了
Dialogue: 0,0:24:38.72,0:24:40.88,*Default,NTP,0000,0000,0000,,构建整个事物
Dialogue: 0,0:24:40.88,0:24:44.64,*Default,NTP,0000,0000,0000,,下一个问题是关于2019年春季的
Dialogue: 0,0:24:44.64,0:24:45.60,*Default,NTP,0000,0000,0000,,期中二
Dialogue: 0,0:24:45.60,0:24:50.08,*Default,NTP,0000,0000,0000,,问题一 python会显示什么
Dialogue: 0,0:24:50.24,0:24:54.40,*Default,NTP,0000,0000,0000,,好吧，所以 items 是一个空列表
Dialogue: 0,0:24:54.40,0:24:58.56,*Default,NTP,0000,0000,0000,,n 是 2 um
Dialogue: 0,0:24:58.56,0:25:01.76,*Default,NTP,0000,0000,0000,,Air Pods 是一个有自己特色的产品
Dialogue: 0,0:25:01.76,0:25:04.56,*Default,NTP,0000,0000,0000,,两个我认为我们确实需要
Dialogue: 0,0:25:04.56,0:25:06.96,*Default,NTP,0000,0000,0000,,稍微注释一下
Dialogue: 0,0:25:06.96,0:25:09.52,*Default,NTP,0000,0000,0000,,为了展示正在发生的事情，我只是要
Dialogue: 0,0:25:09.52,0:25:11.04,*Default,NTP,0000,0000,0000,,尝试徒手画画，可能是
Dialogue: 0,0:25:11.04,0:25:12.40,*Default,NTP,0000,0000,0000,,看起来会很糟糕但是
Dialogue: 0,0:25:12.40,0:25:16.48,*Default,NTP,0000,0000,0000,,谁在乎所以我们有东西
Dialogue: 0,0:25:16.48,0:25:19.36,*Default,NTP,0000,0000,0000,,我们有n，我们有airpods类
Dialogue: 0,0:25:19.36,0:25:21.44,*Default,NTP,0000,0000,0000,,和airpods类
Dialogue: 0,0:25:21.44,0:25:23.84,*Default,NTP,0000,0000,0000,,有
Dialogue: 0,0:25:25.44,0:25:29.44,*Default,NTP,0000,0000,0000,,花费还可以
Dialogue: 0,0:25:30.88,0:25:34.96,*Default,NTP,0000,0000,0000,,零就可以了
Dialogue: 0,0:25:34.96,0:25:37.04,*Default,NTP,0000,0000,0000,,然后它有三个不同的
Dialogue: 0,0:25:37.04,0:25:38.80,*Default,NTP,0000,0000,0000,,方法 f 方法
Dialogue: 0,0:25:38.80,0:25:41.52,*Default,NTP,0000,0000,0000,,init 方法和包装方法以及
Dialogue: 0,0:25:41.52,0:25:42.00,*Default,NTP,0000,0000,0000,,然后两个
Dialogue: 0,0:25:42.00,0:25:44.24,*Default,NTP,0000,0000,0000,,airpods就像airpods没有任何
Dialogue: 0,0:25:44.24,0:25:45.76,*Default,NTP,0000,0000,0000,,类属性
Dialogue: 0,0:25:45.76,0:25:48.40,*Default,NTP,0000,0000,0000,,然后我们就有了一些函数，嗯
Dialogue: 0,0:25:48.40,0:25:50.88,*Default,NTP,0000,0000,0000,,所以我们可以看看会发生什么
Dialogue: 0,0:25:50.88,0:25:52.64,*Default,NTP,0000,0000,0000,,所以让我们看看如果我们这样做会发生什么
Dialogue: 0,0:25:52.64,0:25:55.12,*Default,NTP,0000,0000,0000,,只是追踪这个呃
Dialogue: 0,0:25:55.12,0:25:58.80,*Default,NTP,0000,0000,0000,,两个airpods 点费用 这是一个类别
Dialogue: 0,0:25:58.80,0:26:01.04,*Default,NTP,0000,0000,0000,,我们正在查找一个类属性
Dialogue: 0,0:26:01.04,0:26:02.64,*Default,NTP,0000,0000,0000,,查找类属性的方法是
Dialogue: 0,0:26:02.64,0:26:04.16,*Default,NTP,0000,0000,0000,,你在课堂上看它没有
Dialogue: 0,0:26:04.16,0:26:06.32,*Default,NTP,0000,0000,0000,,类属性称为成本所以你看看
Dialogue: 0,0:26:06.32,0:26:07.76,*Default,NTP,0000,0000,0000,,在其基类中
Dialogue: 0,0:26:07.76,0:26:11.84,*Default,NTP,0000,0000,0000,,所以这会给你数字 200。
Dialogue: 0,0:26:13.84,0:26:16.24,*Default,NTP,0000,0000,0000,,创建实例时会发生什么
Dialogue: 0,0:26:16.24,0:26:17.12,*Default,NTP,0000,0000,0000,,的一个
Dialogue: 0,0:26:17.12,0:26:19.60,*Default,NTP,0000,0000,0000,,在这种情况下，你可以创建一个
Dialogue: 0,0:26:19.60,0:26:21.92,*Default,NTP,0000,0000,0000,,新的空气舱，你打电话给它
Dialogue: 0,0:26:21.92,0:26:26.24,*Default,NTP,0000,0000,0000,,所以我们必须这样做呃
Dialogue: 0,0:26:28.16,0:26:30.16,*Default,NTP,0000,0000,0000,,我认为喜欢保留很方便
Dialogue: 0,0:26:30.16,0:26:31.36,*Default,NTP,0000,0000,0000,,追踪所有的
Dialogue: 0,0:26:31.36,0:26:33.28,*Default,NTP,0000,0000,0000,,实例属性在一个框中，所以让我们
Dialogue: 0,0:26:33.28,0:26:34.80,*Default,NTP,0000,0000,0000,,说那是我们的
Dialogue: 0,0:26:34.80,0:26:37.84,*Default,NTP,0000,0000,0000,,呃丢失了空气舱，让我们追踪一下
Dialogue: 0,0:26:37.84,0:26:38.72,*Default,NTP,0000,0000,0000,,发生
Dialogue: 0,0:26:38.72,0:26:40.88,*Default,NTP,0000,0000,0000,,所以我要打断一下
Dialogue: 0,0:26:40.88,0:26:42.48,*Default,NTP,0000,0000,0000,,第二是因为raya问了一个问题
Dialogue: 0,0:26:42.48,0:26:43.28,*Default,NTP,0000,0000,0000,,评论
Dialogue: 0,0:26:43.28,0:26:45.28,*Default,NTP,0000,0000,0000,,嗯，她说我以为这是一个
Dialogue: 0,0:26:45.28,0:26:47.12,*Default,NTP,0000,0000,0000,,一百因为叫折扣
Dialogue: 0,0:26:47.12,0:26:49.04,*Default,NTP,0000,0000,0000,,前
Dialogue: 0,0:26:49.04,0:26:51.20,*Default,NTP,0000,0000,0000,,呃哦，这是真的，我没有付任何钱
Dialogue: 0,0:26:51.20,0:26:52.48,*Default,NTP,0000,0000,0000,,注意所以
Dialogue: 0,0:26:52.48,0:26:55.20,*Default,NTP,0000,0000,0000,,我想我们失去了折扣
Dialogue: 0,0:26:55.20,0:26:56.72,*Default,NTP,0000,0000,0000,,浏览了这部分，但实际上
Dialogue: 0,0:26:56.72,0:26:58.24,*Default,NTP,0000,0000,0000,,很重要所以折扣
Dialogue: 0,0:26:58.24,0:27:00.48,*Default,NTP,0000,0000,0000,,接受你通过的任何课程
Dialogue: 0,0:27:00.48,0:27:02.80,*Default,NTP,0000,0000,0000,,并将其成本除以二
Dialogue: 0,0:27:02.80,0:27:04.96,*Default,NTP,0000,0000,0000,,那么呃我同意你的观点
Dialogue: 0,0:27:04.96,0:27:06.16,*Default,NTP,0000,0000,0000,,将会是 100。
Dialogue: 0,0:27:06.16,0:27:09.04,*Default,NTP,0000,0000,0000,,是的，所以那里发生的事情是我们
Dialogue: 0,0:27:09.04,0:27:10.40,*Default,NTP,0000,0000,0000,,改变了这个成本
Dialogue: 0,0:27:10.40,0:27:12.40,*Default,NTP,0000,0000,0000,,哦，显然你无法改变事情
Dialogue: 0,0:27:12.40,0:27:13.84,*Default,NTP,0000,0000,0000,,在
Dialogue: 0,0:27:13.84,0:27:16.40,*Default,NTP,0000,0000,0000,,也许你可以
Dialogue: 0,0:27:18.16,0:27:22.72,*Default,NTP,0000,0000,0000,,所以这是一百呃
Dialogue: 0,0:27:22.72,0:27:25.84,*Default,NTP,0000,0000,0000,,好吧，这就是发生的一切
Dialogue: 0,0:27:25.84,0:27:27.68,*Default,NTP,0000,0000,0000,,是的，所以我们创建了一个airpods
Dialogue: 0,0:27:27.68,0:27:30.88,*Default,NTP,0000,0000,0000,,Airpods 有什么作用，它改变了
Dialogue: 0,0:27:30.88,0:27:32.64,*Default,NTP,0000,0000,0000,,类属性k
Dialogue: 0,0:27:32.64,0:27:37.60,*Default,NTP,0000,0000,0000,,增加呃所以现在这是一个
Dialogue: 0,0:27:37.60,0:27:40.96,*Default,NTP,0000,0000,0000,,它调用一些函数，它是
Dialogue: 0,0:27:40.96,0:27:42.08,*Default,NTP,0000,0000,0000,,类所以那是
Dialogue: 0,0:27:42.08,0:27:45.20,*Default,NTP,0000,0000,0000,,f on self 以及它有什么作用
Dialogue: 0,0:27:45.20,0:27:48.48,*Default,NTP,0000,0000,0000,,打印出 self 所以这个 self 就是
Dialogue: 0,0:27:48.48,0:27:50.80,*Default,NTP,0000,0000,0000,,打印出来是新的
Dialogue: 0,0:27:50.80,0:27:54.48,*Default,NTP,0000,0000,0000,,Airpods 类的实例
Dialogue: 0,0:27:54.48,0:27:56.00,*Default,NTP,0000,0000,0000,,当你打印出一些东西时
Dialogue: 0,0:27:56.00,0:27:57.84,*Default,NTP,0000,0000,0000,,去寻找搅拌方法
Dialogue: 0,0:27:57.84,0:27:59.44,*Default,NTP,0000,0000,0000,,如果不存在，它将调用
Dialogue: 0,0:27:59.44,0:28:01.68,*Default,NTP,0000,0000,0000,,改为reper方法
Dialogue: 0,0:28:01.68,0:28:05.44,*Default,NTP,0000,0000,0000,,所以打印出来会显示
Dialogue: 0,0:28:05.44,0:28:07.84,*Default,NTP,0000,0000,0000,,无论返回什么，所以我们必须阅读
Dialogue: 0,0:28:07.84,0:28:08.72,*Default,NTP,0000,0000,0000,,这
Dialogue: 0,0:28:08.72,0:28:11.84,*Default,NTP,0000,0000,0000,,这表示 Airpods k 小于 2
Dialogue: 0,0:28:11.84,0:28:15.52,*Default,NTP,0000,0000,0000,,这是真实而孤独的
Dialogue: 0,0:28:15.52,0:28:18.72,*Default,NTP,0000,0000,0000,,这是一个真正的值，因为呃
Dialogue: 0,0:28:18.72,0:28:20.40,*Default,NTP,0000,0000,0000,,你知道非空的字符串是
Dialogue: 0,0:28:20.40,0:28:22.00,*Default,NTP,0000,0000,0000,,真的
Dialogue: 0,0:28:22.00,0:28:24.48,*Default,NTP,0000,0000,0000,,所以嗯这实际上是要评估
Dialogue: 0,0:28:24.48,0:28:26.88,*Default,NTP,0000,0000,0000,,到孤独
Dialogue: 0,0:28:26.88,0:28:28.96,*Default,NTP,0000,0000,0000,,当你身体好的时候，这绝对不是
Dialogue: 0,0:28:28.96,0:28:30.00,*Default,NTP,0000,0000,0000,,我写的考试
Dialogue: 0,0:28:30.00,0:28:33.44,*Default,NTP,0000,0000,0000,,呃然后当你或那对
Dialogue: 0,0:28:33.44,0:28:34.88,*Default,NTP,0000,0000,0000,,那么你必须知道这个规则
Dialogue: 0,0:28:34.88,0:28:36.00,*Default,NTP,0000,0000,0000,,当你时会发生什么
Dialogue: 0,0:28:36.00,0:28:38.00,*Default,NTP,0000,0000,0000,,呃评估一个 or 表达式，它是
Dialogue: 0,0:28:38.00,0:28:40.16,*Default,NTP,0000,0000,0000,,true 的第一个真实值
Dialogue: 0,0:28:40.16,0:28:43.28,*Default,NTP,0000,0000,0000,,最终的价值非常平均
Dialogue: 0,0:28:43.28,0:28:45.60,*Default,NTP,0000,0000,0000,,那么基本上如何解压这个
Dialogue: 0,0:28:45.60,0:28:46.56,*Default,NTP,0000,0000,0000,,就是说
Dialogue: 0,0:28:46.56,0:28:49.36,*Default,NTP,0000,0000,0000,,如果错误为正。k 小于 2
Dialogue: 0,0:28:49.36,0:28:50.64,*Default,NTP,0000,0000,0000,,孤独归来
Dialogue: 0,0:28:50.64,0:28:54.72,*Default,NTP,0000,0000,0000,,否则返回对正在做什么
Dialogue: 0,0:28:54.72,0:28:58.00,*Default,NTP,0000,0000,0000,,所以嗯调用这个方法会给出
Dialogue: 0,0:28:58.00,0:29:01.68,*Default,NTP,0000,0000,0000,,你背上那串寂寞什么印
Dialogue: 0,0:29:01.68,0:29:03.84,*Default,NTP,0000,0000,0000,,它的作用是显示该内容
Dialogue: 0,0:29:03.84,0:29:04.72,*Default,NTP,0000,0000,0000,,细绳
Dialogue: 0,0:29:04.72,0:29:08.48,*Default,NTP,0000,0000,0000,,所以它不显示引号
Dialogue: 0,0:29:08.48,0:29:10.08,*Default,NTP,0000,0000,0000,,然后又发生了一件事
Dialogue: 0,0:29:10.08,0:29:12.08,*Default,NTP,0000,0000,0000,,哪个项目恰好是
Dialogue: 0,0:29:12.08,0:29:13.28,*Default,NTP,0000,0000,0000,,全球的
Dialogue: 0,0:29:13.28,0:29:16.32,*Default,NTP,0000,0000,0000,,扩展为仅包含
Dialogue: 0,0:29:16.32,0:29:16.72,*Default,NTP,0000,0000,0000,,自己
Dialogue: 0,0:29:16.72,0:29:18.56,*Default,NTP,0000,0000,0000,,扩展的作用是它需要所有的
Dialogue: 0,0:29:18.56,0:29:20.32,*Default,NTP,0000,0000,0000,,该列表的元素并将其添加到
Dialogue: 0,0:29:20.32,0:29:20.96,*Default,NTP,0000,0000,0000,,项目
Dialogue: 0,0:29:20.96,0:29:23.12,*Default,NTP,0000,0000,0000,,这个列表只有一个元素，所以
Dialogue: 0,0:29:23.12,0:29:25.28,*Default,NTP,0000,0000,0000,,现在的项目
Dialogue: 0,0:29:25.28,0:29:27.12,*Default,NTP,0000,0000,0000,,我们懒得画，但是
Dialogue: 0,0:29:27.12,0:29:29.52,*Default,NTP,0000,0000,0000,,如果我们试图的话应该有
Dialogue: 0,0:29:29.52,0:29:31.60,*Default,NTP,0000,0000,0000,,实际上正确地做到了这一点，所以我猜不
Dialogue: 0,0:29:31.60,0:29:34.00,*Default,NTP,0000,0000,0000,,我们需要
Dialogue: 0,0:29:34.32,0:29:38.24,*Default,NTP,0000,0000,0000,,呃哦我可以画正方形
Dialogue: 0,0:29:38.24,0:29:41.20,*Default,NTP,0000,0000,0000,,items 现在里面有东西了，并且
Dialogue: 0,0:29:41.20,0:29:43.28,*Default,NTP,0000,0000,0000,,它里面有的东西
Dialogue: 0,0:29:43.28,0:29:46.48,*Default,NTP,0000,0000,0000,,这是
Dialogue: 0,0:29:46.72,0:29:50.64,*Default,NTP,0000,0000,0000,,布置得很漂亮 好吧
Dialogue: 0,0:29:50.96,0:29:53.68,*Default,NTP,0000,0000,0000,,呃，当你把它变成两个时会发生什么
Dialogue: 0,0:29:53.68,0:29:55.28,*Default,NTP,0000,0000,0000,,当你制作两个airpods时效果很好
Dialogue: 0,0:29:55.28,0:29:56.40,*Default,NTP,0000,0000,0000,,你不喜欢的airpods
Dialogue: 0,0:29:56.40,0:30:01.04,*Default,NTP,0000,0000,0000,,你调用两个airpods的init方法
Dialogue: 0,0:30:01.12,0:30:05.12,*Default,NTP,0000,0000,0000,,嗯，所以我们要创建一个新的
Dialogue: 0,0:30:05.68,0:30:09.12,*Default,NTP,0000,0000,0000,,呃该死
Dialogue: 0,0:30:09.12,0:30:12.88,*Default,NTP,0000,0000,0000,,我想要一个盒子，我们要创建一个新的
Dialogue: 0,0:30:12.88,0:30:13.92,*Default,NTP,0000,0000,0000,,实例
Dialogue: 0,0:30:13.92,0:30:16.64,*Default,NTP,0000,0000,0000,,这次是两个 Airpods 实例
Dialogue: 0,0:30:16.64,0:30:18.08,*Default,NTP,0000,0000,0000,,我们要
Dialogue: 0,0:30:18.08,0:30:20.40,*Default,NTP,0000,0000,0000,,执行这一切，这表明它得到了
Dialogue: 0,0:30:20.40,0:30:23.84,*Default,NTP,0000,0000,0000,,名为 k 的实例属性
Dialogue: 0,0:30:24.80,0:30:28.16,*Default,NTP,0000,0000,0000,,然后我们调用airpods.init
Dialogue: 0,0:30:28.16,0:30:31.44,*Default,NTP,0000,0000,0000,,在此我们将做两次
Dialogue: 0,0:30:31.44,0:30:34.96,*Default,NTP,0000,0000,0000,,所以我们第一次
Dialogue: 0,0:30:34.96,0:30:36.48,*Default,NTP,0000,0000,0000,,称这个为我们传递的两个
Dialogue: 0,0:30:36.48,0:30:38.72,*Default,NTP,0000,0000,0000,,Airpods 实例作为 self
Dialogue: 0,0:30:38.72,0:30:41.84,*Default,NTP,0000,0000,0000,,Air Pods 点 k 加等于 1 好吧
Dialogue: 0,0:30:41.84,0:30:42.24,*Default,NTP,0000,0000,0000,,我们已经
Dialogue: 0,0:30:42.24,0:30:45.36,*Default,NTP,0000,0000,0000,,又改变了这个
Dialogue: 0,0:30:46.32,0:30:49.76,*Default,NTP,0000,0000,0000,,到两个嗯
Dialogue: 0,0:30:49.76,0:30:52.08,*Default,NTP,0000,0000,0000,,我们称这个函数为打印
Dialogue: 0,0:30:52.08,0:30:52.96,*Default,NTP,0000,0000,0000,,它出哪个
Dialogue: 0,0:30:52.96,0:30:56.00,*Default,NTP,0000,0000,0000,,再次调用此包装器方法 k 为否
Dialogue: 0,0:30:56.00,0:30:57.84,*Default,NTP,0000,0000,0000,,长于两
Dialogue: 0,0:30:57.84,0:31:00.72,*Default,NTP,0000,0000,0000,,所以呃我认为这会
Dialogue: 0,0:31:00.72,0:31:03.44,*Default,NTP,0000,0000,0000,,这次显示对
Dialogue: 0,0:31:03.44,0:31:07.36,*Default,NTP,0000,0000,0000,,好的，然后我们扩展
Dialogue: 0,0:31:07.36,0:31:12.00,*Default,NTP,0000,0000,0000,,嗯，再次列出物品清单
Dialogue: 0,0:31:12.00,0:31:15.12,*Default,NTP,0000,0000,0000,,所以现在项目中有两个元素
Dialogue: 0,0:31:15.12,0:31:16.88,*Default,NTP,0000,0000,0000,,列表
Dialogue: 0,0:31:16.88,0:31:18.96,*Default,NTP,0000,0000,0000,,但实际上我们称之为airpods
Dialogue: 0,0:31:18.96,0:31:20.88,*Default,NTP,0000,0000,0000,,两次所以我们必须玩完整个游戏
Dialogue: 0,0:31:20.88,0:31:21.84,*Default,NTP,0000,0000,0000,,再次
Dialogue: 0,0:31:21.84,0:31:25.68,*Default,NTP,0000,0000,0000,,呃，我们在哪里增加了airpods.k
Dialogue: 0,0:31:25.68,0:31:28.96,*Default,NTP,0000,0000,0000,,现在是三个
Dialogue: 0,0:31:29.68,0:31:33.04,*Default,NTP,0000,0000,0000,,如果缩放可以让我编辑它
Dialogue: 0,0:31:33.04,0:31:37.44,*Default,NTP,0000,0000,0000,,再次打印出对
Dialogue: 0,0:31:37.44,0:31:41.20,*Default,NTP,0000,0000,0000,,我们将其添加到
Dialogue: 0,0:31:41.20,0:31:46.24,*Default,NTP,0000,0000,0000,,项目所以这就是我们现在的位置
Dialogue: 0,0:31:46.24,0:31:48.48,*Default,NTP,0000,0000,0000,,好吧，这些东西的名字是
Dialogue: 0,0:31:48.48,0:31:50.64,*Default,NTP,0000,0000,0000,,全局框架中的方式
Dialogue: 0,0:31:50.64,0:31:53.68,*Default,NTP,0000,0000,0000,,有一种叫做迷失呃
Dialogue: 0,0:31:53.68,0:31:58.32,*Default,NTP,0000,0000,0000,,这是第一个
Dialogue: 0,0:31:58.32,0:32:01.76,*Default,NTP,0000,0000,0000,,有一个人叫我
Dialogue: 0,0:32:01.76,0:32:05.84,*Default,NTP,0000,0000,0000,,真的弄乱了就会丢掉
Dialogue: 0,0:32:05.84,0:32:08.96,*Default,NTP,0000,0000,0000,,就是这个，现在我们是
Dialogue: 0,0:32:08.96,0:32:10.00,*Default,NTP,0000,0000,0000,,显然会
Dialogue: 0,0:32:10.00,0:32:13.28,*Default,NTP,0000,0000,0000,,看看这些会发生什么
Dialogue: 0,0:32:13.36,0:32:16.16,*Default,NTP,0000,0000,0000,,所以搅拌迷失了当你打电话时会发生什么
Dialogue: 0,0:32:16.16,0:32:17.60,*Default,NTP,0000,0000,0000,,搅拌丢失
Dialogue: 0,0:32:17.60,0:32:20.48,*Default,NTP,0000,0000,0000,,好吧，你检查那里的搅拌方法
Dialogue: 0,0:32:20.48,0:32:21.52,*Default,NTP,0000,0000,0000,,不是一个
Dialogue: 0,0:32:21.52,0:32:23.92,*Default,NTP,0000,0000,0000,,所以我们将使用包装方法
Dialogue: 0,0:32:23.92,0:32:25.36,*Default,NTP,0000,0000,0000,,我们必须重新评估这一切
Dialogue: 0,0:32:25.36,0:32:26.24,*Default,NTP,0000,0000,0000,,表达
Dialogue: 0,0:32:26.24,0:32:28.72,*Default,NTP,0000,0000,0000,,现在 errorpos.k 不小于 2 所以
Dialogue: 0,0:32:28.72,0:32:29.84,*Default,NTP,0000,0000,0000,,我们得到字符串
Dialogue: 0,0:32:29.84,0:32:33.44,*Default,NTP,0000,0000,0000,,让我们看看我们还得到了什么
Dialogue: 0,0:32:33.44,0:32:34.40,*Default,NTP,0000,0000,0000,,项目.k
Dialogue: 0,0:32:34.40,0:32:36.80,*Default,NTP,0000,0000,0000,,对于物品和物品，我们有三件事
Dialogue: 0,0:32:36.80,0:32:38.56,*Default,NTP,0000,0000,0000,,在项目中，所以我们最终会得到一个
Dialogue: 0,0:32:38.56,0:32:40.08,*Default,NTP,0000,0000,0000,,列出三件事
Dialogue: 0,0:32:40.08,0:32:42.08,*Default,NTP,0000,0000,0000,,我们必须弄清楚点 k 是什么
Dialogue: 0,0:32:42.08,0:32:44.56,*Default,NTP,0000,0000,0000,,对于他们每个人
Dialogue: 0,0:32:44.56,0:32:47.84,*Default,NTP,0000,0000,0000,,对于这个元素
Dialogue: 0,0:32:47.84,0:32:51.84,*Default,NTP,0000,0000,0000,,嗯，它没有名为 k 的实例属性
Dialogue: 0,0:32:51.84,0:32:53.60,*Default,NTP,0000,0000,0000,,所以我们查看它的类，我们发现
Dialogue: 0,0:32:53.60,0:32:56.40,*Default,NTP,0000,0000,0000,,k 为 3。
Dialogue: 0,0:32:56.40,0:32:58.00,*Default,NTP,0000,0000,0000,,对于这个元素，它确实有一个
Dialogue: 0,0:32:58.00,0:32:59.52,*Default,NTP,0000,0000,0000,,实例属性k
Dialogue: 0,0:32:59.52,0:33:02.16,*Default,NTP,0000,0000,0000,,所以这是 2，这个元素实际上是
Dialogue: 0,0:33:02.16,0:33:05.84,*Default,NTP,0000,0000,0000,,相同的东西，所以它有相同的 k
Dialogue: 0,0:33:05.84,0:33:10.24,*Default,NTP,0000,0000,0000,,你输了的冲刺将会输掉
Dialogue: 0,0:33:10.24,0:33:13.28,*Default,NTP,0000,0000,0000,,接受失去并将失去
Dialogue: 0,0:33:13.28,0:33:16.88,*Default,NTP,0000,0000,0000,,呃让它们保持相同的顺序
Dialogue: 0,0:33:16.88,0:33:20.08,*Default,NTP,0000,0000,0000,,并返回调用 print 的结果
Dialogue: 0,0:33:20.08,0:33:20.56,*Default,NTP,0000,0000,0000,,你
Dialogue: 0,0:33:20.56,0:33:24.00,*Default,NTP,0000,0000,0000,,在每一个上，所以我们必须打印出来
Dialogue: 0,0:33:24.00,0:33:25.28,*Default,NTP,0000,0000,0000,,我们已经讨论过发生的事情
Dialogue: 0,0:33:25.28,0:33:28.00,*Default,NTP,0000,0000,0000,,当你打印时我相信它会显示
Dialogue: 0,0:33:28.00,0:33:31.12,*Default,NTP,0000,0000,0000,,一对，所以这将是一对
Dialogue: 0,0:33:31.12,0:33:33.52,*Default,NTP,0000,0000,0000,,来自打印第一个
Dialogue: 0,0:33:33.52,0:33:35.04,*Default,NTP,0000,0000,0000,,这将是来自的那对
Dialogue: 0,0:33:35.04,0:33:37.12,*Default,NTP,0000,0000,0000,,打印第二个，然后我们有
Dialogue: 0,0:33:37.12,0:33:39.12,*Default,NTP,0000,0000,0000,,返回任何结果
Dialogue: 0,0:33:39.12,0:33:42.24,*Default,NTP,0000,0000,0000,,打印返回，打印返回无
Dialogue: 0,0:33:42.24,0:33:43.52,*Default,NTP,0000,0000,0000,,两次
Dialogue: 0,0:33:43.52,0:33:46.88,*Default,NTP,0000,0000,0000,,所以呃我们得到了一个没有和没有的列表
Dialogue: 0,0:33:46.88,0:33:49.44,*Default,NTP,0000,0000,0000,,写下这个的人
Dialogue: 0,0:33:49.44,0:33:51.12,*Default,NTP,0000,0000,0000,,向他们提出问题并打他们一巴掌
Dialogue: 0,0:33:51.12,0:33:52.40,*Default,NTP,0000,0000,0000,,一点点约翰
Dialogue: 0,0:33:52.40,0:33:56.56,*Default,NTP,0000,0000,0000,,好吧好吧，所以这是春天
Dialogue: 0,0:33:56.56,0:34:00.08,*Default,NTP,0000,0000,0000,,2015年期中二呃
Dialogue: 0,0:34:00.08,0:34:04.40,*Default,NTP,0000,0000,0000,,问题四b
Dialogue: 0,0:34:04.40,0:34:06.64,*Default,NTP,0000,0000,0000,,需要一个字符串和一个字典
Dialogue: 0,0:34:06.64,0:34:09.04,*Default,NTP,0000,0000,0000,,包含单词作为值及其
Dialogue: 0,0:34:09.04,0:34:09.68,*Default,NTP,0000,0000,0000,,秘密
Dialogue: 0,0:34:09.68,0:34:13.36,*Default,NTP,0000,0000,0000,,代码作为键它返回所有的列表
Dialogue: 0,0:34:13.36,0:34:14.56,*Default,NTP,0000,0000,0000,,可能的方式
Dialogue: 0,0:34:14.56,0:34:16.80,*Default,NTP,0000,0000,0000,,s 可以通过将其分成
Dialogue: 0,0:34:16.80,0:34:18.08,*Default,NTP,0000,0000,0000,,密码
Dialogue: 0,0:34:18.08,0:34:20.32,*Default,NTP,0000,0000,0000,,并分隔相应的单词
Dialogue: 0,0:34:20.32,0:34:22.08,*Default,NTP,0000,0000,0000,,按空格
Dialogue: 0,0:34:22.08,0:34:24.16,*Default,NTP,0000,0000,0000,,所以如果你有像艾伦这样的人
Dialogue: 0,0:34:24.16,0:34:25.28,*Default,NTP,0000,0000,0000,,图灵
Dialogue: 0,0:34:25.28,0:34:27.44,*Default,NTP,0000,0000,0000,,那么有很多不同的方法
Dialogue: 0,0:34:27.44,0:34:29.04,*Default,NTP,0000,0000,0000,,可以解码
Dialogue: 0,0:34:29.04,0:34:32.32,*Default,NTP,0000,0000,0000,,因为艾伦可能很恐怖
Dialogue: 0,0:34:32.32,0:34:35.52,*Default,NTP,0000,0000,0000,,图灵可能是鬼魂或
Dialogue: 0,0:34:35.52,0:34:38.72,*Default,NTP,0000,0000,0000,,阿尔可以喝
Dialogue: 0,0:34:38.72,0:34:42.08,*Default,NTP,0000,0000,0000,,可能是你的戒指
Dialogue: 0,0:34:42.08,0:34:44.00,*Default,NTP,0000,0000,0000,,可能是阿华田所以这就是你得到的
Dialogue: 0,0:34:44.00,0:34:45.60,*Default,NTP,0000,0000,0000,,这两个，显然还有另一个
Dialogue: 0,0:34:45.60,0:34:47.68,*Default,NTP,0000,0000,0000,,一个令人毛骨悚然的可怕骷髅
Dialogue: 0,0:34:47.68,0:34:50.80,*Default,NTP,0000,0000,0000,,也许这次考试是在万圣节，好吧
Dialogue: 0,0:34:50.80,0:34:53.12,*Default,NTP,0000,0000,0000,,一
Dialogue: 0,0:34:54.48,0:34:58.24,*Default,NTP,0000,0000,0000,,这里面有一个 for 语句
Dialogue: 0,0:34:58.24,0:35:01.68,*Default,NTP,0000,0000,0000,,问题之一是为什么
Dialogue: 0,0:35:01.68,0:35:03.04,*Default,NTP,0000,0000,0000,,如果你有一个递归会发生什么
Dialogue: 0,0:35:03.04,0:35:03.44,*Default,NTP,0000,0000,0000,,称呼
Dialogue: 0,0:35:03.44,0:35:07.20,*Default,NTP,0000,0000,0000,,在 for 语句中 um 和
Dialogue: 0,0:35:07.20,0:35:08.96,*Default,NTP,0000,0000,0000,,你知道只要你对待你的
Dialogue: 0,0:35:08.96,0:35:10.48,*Default,NTP,0000,0000,0000,,作为函数式的递归调用
Dialogue: 0,0:35:10.48,0:35:12.32,*Default,NTP,0000,0000,0000,,抽象那么也许事实并非如此
Dialogue: 0,0:35:12.32,0:35:13.92,*Default,NTP,0000,0000,0000,,糟糕的是它恰好在 for 中
Dialogue: 0,0:35:13.92,0:35:14.80,*Default,NTP,0000,0000,0000,,陈述
Dialogue: 0,0:35:14.80,0:35:17.28,*Default,NTP,0000,0000,0000,,只要你知道哦我有办法
Dialogue: 0,0:35:17.28,0:35:18.00,*Default,NTP,0000,0000,0000,,采取
Dialogue: 0,0:35:18.00,0:35:21.04,*Default,NTP,0000,0000,0000,,其余的弦乐和装饰
Dialogue: 0,0:35:21.04,0:35:24.32,*Default,NTP,0000,0000,0000,,解密那个嗯
Dialogue: 0,0:35:24.32,0:35:26.64,*Default,NTP,0000,0000,0000,,然后我想我们要做的就是走
Dialogue: 0,0:35:26.64,0:35:29.92,*Default,NTP,0000,0000,0000,,遍历字符串的所有前缀
Dialogue: 0,0:35:29.92,0:35:32.80,*Default,NTP,0000,0000,0000,,匹配代码中的某些内容，然后
Dialogue: 0,0:35:32.80,0:35:33.36,*Default,NTP,0000,0000,0000,,出色地
Dialogue: 0,0:35:33.36,0:35:35.44,*Default,NTP,0000,0000,0000,,字符串的其余部分是
Dialogue: 0,0:35:35.44,0:35:37.20,*Default,NTP,0000,0000,0000,,在我们匹配的部分之后，如果我们
Dialogue: 0,0:35:37.20,0:35:38.08,*Default,NTP,0000,0000,0000,,匹配艾伦
Dialogue: 0,0:35:38.08,0:35:39.76,*Default,NTP,0000,0000,0000,,然后我们剩下的就是巡演和
Dialogue: 0,0:35:39.76,0:35:41.44,*Default,NTP,0000,0000,0000,,我们必须解密它
Dialogue: 0,0:35:41.44,0:35:44.64,*Default,NTP,0000,0000,0000,,所以艾伦会告诉我们有饮料
Dialogue: 0,0:35:44.64,0:35:48.48,*Default,NTP,0000,0000,0000,,但是对巡演的递归调用将会呃
Dialogue: 0,0:35:48.48,0:35:51.36,*Default,NTP,0000,0000,0000,,哦，对不起啊艾伦给我们带来了恐怖，但是
Dialogue: 0,0:35:51.36,0:35:53.20,*Default,NTP,0000,0000,0000,,对touring的递归调用会给我们
Dialogue: 0,0:35:53.20,0:35:55.60,*Default,NTP,0000,0000,0000,,要么是鬼魂，要么是可怕的骷髅，
Dialogue: 0,0:35:55.60,0:35:56.88,*Default,NTP,0000,0000,0000,,我们只需要弄清楚它是哪个
Dialogue: 0,0:35:56.88,0:35:57.92,*Default,NTP,0000,0000,0000,,是
Dialogue: 0,0:35:57.92,0:36:01.52,*Default,NTP,0000,0000,0000,,让递归发挥作用
Dialogue: 0,0:36:02.48,0:36:07.60,*Default,NTP,0000,0000,0000,,好吧，让我们看一下代码
Dialogue: 0,0:36:07.68,0:36:13.84,*Default,NTP,0000,0000,0000,,空字符串无法解密
Dialogue: 0,0:36:13.84,0:36:16.24,*Default,NTP,0000,0000,0000,,ms 最终将成为我们的样子
Dialogue: 0,0:36:16.24,0:36:19.92,*Default,NTP,0000,0000,0000,,返回，这些是消息
Dialogue: 0,0:36:20.48,0:36:23.68,*Default,NTP,0000,0000,0000,,呃如果是这样的话
Dialogue: 0,0:36:23.68,0:36:26.88,*Default,NTP,0000,0000,0000,,我认为所有
Dialogue: 0,0:36:26.88,0:36:31.92,*Default,NTP,0000,0000,0000,,s 在我的代码字典中
Dialogue: 0,0:36:35.44,0:36:38.16,*Default,NTP,0000,0000,0000,,再次注释
Dialogue: 0,0:36:39.04,0:36:41.84,*Default,NTP,0000,0000,0000,,如果 s 和 d
Dialogue: 0,0:36:43.36,0:36:45.76,*Default,NTP,0000,0000,0000,,然后
Dialogue: 0,0:36:46.64,0:36:50.00,*Default,NTP,0000,0000,0000,,我们应该做什么 我们应该
Dialogue: 0,0:36:50.00,0:36:55.84,*Default,NTP,0000,0000,0000,,解密是的
Dialogue: 0,0:36:56.80,0:36:59.92,*Default,NTP,0000,0000,0000,,好吧，现在我们要把 s 分成
Dialogue: 0,0:36:59.92,0:37:01.28,*Default,NTP,0000,0000,0000,,两部分
Dialogue: 0,0:37:01.28,0:37:04.80,*Default,NTP,0000,0000,0000,,会有一部分
Dialogue: 0,0:37:05.20,0:37:07.84,*Default,NTP,0000,0000,0000,,我们尝试解密开头然后
Dialogue: 0,0:37:07.84,0:37:08.56,*Default,NTP,0000,0000,0000,,有像
Dialogue: 0,0:37:08.56,0:37:10.40,*Default,NTP,0000,0000,0000,,其余的我们要处理
Dialogue: 0,0:37:10.40,0:37:12.16,*Default,NTP,0000,0000,0000,,通过递归调用
Dialogue: 0,0:37:12.16,0:37:13.92,*Default,NTP,0000,0000,0000,,我们可以看到 k 被用作
Dialogue: 0,0:37:13.92,0:37:16.32,*Default,NTP,0000,0000,0000,,s 的索引，所以我们需要某种方法
Dialogue: 0,0:37:16.32,0:37:17.84,*Default,NTP,0000,0000,0000,,说
Dialogue: 0,0:37:17.84,0:37:22.32,*Default,NTP,0000,0000,0000,,嗯 4k 是一堆数字
Dialogue: 0,0:37:22.32,0:37:23.84,*Default,NTP,0000,0000,0000,,我认为至少必须有一个
Dialogue: 0,0:37:23.84,0:37:26.16,*Default,NTP,0000,0000,0000,,信
Dialogue: 0,0:37:26.32,0:37:29.36,*Default,NTP,0000,0000,0000,,我认为
Dialogue: 0,0:37:29.36,0:37:31.20,*Default,NTP,0000,0000,0000,,必须至少有一个字母
Dialogue: 0,0:37:31.20,0:37:33.12,*Default,NTP,0000,0000,0000,,第一个并且必须至少有
Dialogue: 0,0:37:33.12,0:37:37.12,*Default,NTP,0000,0000,0000,,后缀中的一个字母
Dialogue: 0,0:37:37.12,0:37:39.04,*Default,NTP,0000,0000,0000,,我还不确定，但这是合理的
Dialogue: 0,0:37:39.04,0:37:41.92,*Default,NTP,0000,0000,0000,,假设所以我们稍后会检查它
Dialogue: 0,0:37:41.92,0:37:44.64,*Default,NTP,0000,0000,0000,,所以也许是这样的
Dialogue: 0,0:37:44.64,0:37:46.40,*Default,NTP,0000,0000,0000,,这分解了第一个和后缀
Dialogue: 0,0:37:46.40,0:37:48.48,*Default,NTP,0000,0000,0000,,所以他们每人至少有一个字母
Dialogue: 0,0:37:48.48,0:37:52.08,*Default,NTP,0000,0000,0000,,现在我们要做什么
Dialogue: 0,0:37:52.08,0:37:54.08,*Default,NTP,0000,0000,0000,,如果是第一种情况
Dialogue: 0,0:37:54.08,0:37:55.76,*Default,NTP,0000,0000,0000,,实际上我们知道如何做
Dialogue: 0,0:37:55.76,0:37:58.24,*Default,NTP,0000,0000,0000,,解密
Dialogue: 0,0:37:59.60,0:38:02.80,*Default,NTP,0000,0000,0000,,如果在 d 中第一个
Dialogue: 0,0:38:03.28,0:38:05.84,*Default,NTP,0000,0000,0000,,然后我想我们想做的是去
Dialogue: 0,0:38:05.84,0:38:06.96,*Default,NTP,0000,0000,0000,,通过并解密
Dialogue: 0,0:38:06.96,0:38:10.00,*Default,NTP,0000,0000,0000,,剩下的这个东西叫什么
Dialogue: 0,0:38:10.00,0:38:11.76,*Default,NTP,0000,0000,0000,,解密我希望
Dialogue: 0,0:38:11.76,0:38:13.84,*Default,NTP,0000,0000,0000,,我不会好起来的，我是，我不是
Dialogue: 0,0:38:13.84,0:38:15.68,*Default,NTP,0000,0000,0000,,会滚动，因为那时我的注释
Dialogue: 0,0:38:15.68,0:38:16.96,*Default,NTP,0000,0000,0000,,将移动
Dialogue: 0,0:38:16.96,0:38:19.76,*Default,NTP,0000,0000,0000,,呃，所以这将迭代
Dialogue: 0,0:38:19.76,0:38:21.12,*Default,NTP,0000,0000,0000,,一堆不同的选择
Dialogue: 0,0:38:21.12,0:38:26.00,*Default,NTP,0000,0000,0000,,就像可怕的鬼魂或者其他什么
Dialogue: 0,0:38:26.00,0:38:28.88,*Default,NTP,0000,0000,0000,,现在我们要建立一个完整的
Dialogue: 0,0:38:28.88,0:38:32.24,*Default,NTP,0000,0000,0000,,整个事情的解密
Dialogue: 0,0:38:32.24,0:38:33.68,*Default,NTP,0000,0000,0000,,这与
Dialogue: 0,0:38:33.68,0:38:36.40,*Default,NTP,0000,0000,0000,,这里的排列我们正在做的是
Dialogue: 0,0:38:36.40,0:38:38.40,*Default,NTP,0000,0000,0000,,建立一个更长的清单
Dialogue: 0,0:38:38.40,0:38:41.68,*Default,NTP,0000,0000,0000,,首先是 d
Dialogue: 0,0:38:41.68,0:38:45.36,*Default,NTP,0000,0000,0000,,在其中以及无论什么
Dialogue: 0,0:38:45.36,0:38:48.88,*Default,NTP,0000,0000,0000,,剩下的那行我写的是
Dialogue: 0,0:38:48.88,0:38:50.16,*Default,NTP,0000,0000,0000,,实际上错了
Dialogue: 0,0:38:50.16,0:38:52.24,*Default,NTP,0000,0000,0000,,我应该构建一个字符串而不是一个
Dialogue: 0,0:38:52.24,0:38:54.00,*Default,NTP,0000,0000,0000,,列出并附加
Dialogue: 0,0:38:54.00,0:38:55.84,*Default,NTP,0000,0000,0000,,所以我不应该把 d 放在 a 的前面
Dialogue: 0,0:38:55.84,0:38:58.00,*Default,NTP,0000,0000,0000,,相反，我应该把它保留下来
Dialogue: 0,0:38:58.00,0:39:00.32,*Default,NTP,0000,0000,0000,,我应该在其中添加一个空格
Dialogue: 0,0:39:00.32,0:39:01.36,*Default,NTP,0000,0000,0000,,之间
Dialogue: 0,0:39:01.36,0:39:05.60,*Default,NTP,0000,0000,0000,,首先是d，其余的
Dialogue: 0,0:39:05.84,0:39:07.68,*Default,NTP,0000,0000,0000,,所以要弄清楚这个范围是否是
Dialogue: 0,0:39:07.68,0:39:09.04,*Default,NTP,0000,0000,0000,,是的，我想我们必须考虑一下
Dialogue: 0,0:39:09.04,0:39:11.60,*Default,NTP,0000,0000,0000,,特殊情况会发生什么
Dialogue: 0,0:39:11.60,0:39:15.84,*Default,NTP,0000,0000,0000,,如果呃
Dialogue: 0,0:39:17.28,0:39:20.08,*Default,NTP,0000,0000,0000,,是的，我认为这是正确的，如果我们有的话
Dialogue: 0,0:39:20.08,0:39:20.40,*Default,NTP,0000,0000,0000,,有
Dialogue: 0,0:39:20.40,0:39:22.24,*Default,NTP,0000,0000,0000,,空后缀，我们做了一个递归
Dialogue: 0,0:39:22.24,0:39:23.84,*Default,NTP,0000,0000,0000,,调用一个空后缀然后我们就会有
Dialogue: 0,0:39:23.84,0:39:25.36,*Default,NTP,0000,0000,0000,,没有什么可以迭代的，因为
Dialogue: 0,0:39:25.36,0:39:26.56,*Default,NTP,0000,0000,0000,,定义方式
Dialogue: 0,0:39:26.56,0:39:28.16,*Default,NTP,0000,0000,0000,,所以我们需要让后缀包含
Dialogue: 0,0:39:28.16,0:39:30.40,*Default,NTP,0000,0000,0000,,某事并击中这个特定的
Dialogue: 0,0:39:30.40,0:39:31.44,*Default,NTP,0000,0000,0000,,基本情况
Dialogue: 0,0:39:31.44,0:39:32.80,*Default,NTP,0000,0000,0000,,这不是真的，有点像
Dialogue: 0,0:39:32.80,0:39:35.04,*Default,NTP,0000,0000,0000,,基本情况，如果是 s 就是全部的情况
Dialogue: 0,0:39:35.04,0:39:35.76,*Default,NTP,0000,0000,0000,,d 中的方式
Dialogue: 0,0:39:35.76,0:39:37.28,*Default,NTP,0000,0000,0000,,然后我们实际上可以看到
Dialogue: 0,0:39:37.28,0:39:39.68,*Default,NTP,0000,0000,0000,,解密那个
Dialogue: 0,0:39:39.68,0:39:41.28,*Default,NTP,0000,0000,0000,,我们通过了另一个问题
Dialogue: 0,0:39:41.28,0:39:42.72,*Default,NTP,0000,0000,0000,,您对此有任何疑问
Dialogue: 0,0:39:42.72,0:39:44.32,*Default,NTP,0000,0000,0000,,问题
Dialogue: 0,0:39:44.32,0:39:45.68,*Default,NTP,0000,0000,0000,,有人问可能有这样的问题
Dialogue: 0,0:39:45.68,0:39:48.00,*Default,NTP,0000,0000,0000,,这是下一次期中考试
Dialogue: 0,0:39:48.00,0:39:50.56,*Default,NTP,0000,0000,0000,,当然我不认为它会得到任何
Dialogue: 0,0:39:50.56,0:39:52.72,*Default,NTP,0000,0000,0000,,比这更恐怖但是
Dialogue: 0,0:39:52.72,0:39:54.00,*Default,NTP,0000,0000,0000,,这就是我们希望你做的事情
Dialogue: 0,0:39:54.00,0:39:56.16,*Default,NTP,0000,0000,0000,,能够做
Dialogue: 0,0:39:56.16,0:39:58.08,*Default,NTP,0000,0000,0000,,是的，这是一个更理智的问题，我会
Dialogue: 0,0:39:58.08,0:39:59.84,*Default,NTP,0000,0000,0000,,说
Dialogue: 0,0:39:59.84,0:40:02.00,*Default,NTP,0000,0000,0000,,有人问 dia 首先做什么
Dialogue: 0,0:40:02.00,0:40:03.92,*Default,NTP,0000,0000,0000,,再次
Dialogue: 0,0:40:03.92,0:40:06.40,*Default,NTP,0000,0000,0000,,这得到了解密所以这样
Dialogue: 0,0:40:06.40,0:40:07.76,*Default,NTP,0000,0000,0000,,从 艾伦 到
Dialogue: 0,0:40:07.76,0:40:11.84,*Default,NTP,0000,0000,0000,,令人毛骨悚然或无论是什么
Dialogue: 0,0:40:11.84,0:40:14.32,*Default,NTP,0000,0000,0000,,所以是的，如果你注意到没有
Dialogue: 0,0:40:14.32,0:40:16.24,*Default,NTP,0000,0000,0000,,结果中有艾伦斯或图灵
Dialogue: 0,0:40:16.24,0:40:18.24,*Default,NTP,0000,0000,0000,,只有饮料、阿华丁和幽灵
Dialogue: 0,0:40:18.24,0:40:20.40,*Default,NTP,0000,0000,0000,,和鬼魂
Dialogue: 0,0:40:20.40,0:40:22.16,*Default,NTP,0000,0000,0000,,所以当我们建造这些时
Dialogue: 0,0:40:22.16,0:40:23.92,*Default,NTP,0000,0000,0000,,他们必须建造的东西
Dialogue: 0,0:40:23.92,0:40:25.84,*Default,NTP,0000,0000,0000,,在中查找字符串的结果
Dialogue: 0,0:40:25.84,0:40:27.52,*Default,NTP,0000,0000,0000,,字典也是字典
Dialogue: 0,0:40:27.52,0:40:28.96,*Default,NTP,0000,0000,0000,,查一下以防不清楚
Dialogue: 0,0:40:28.96,0:40:30.96,*Default,NTP,0000,0000,0000,,哦，是的，这就是整个事情
Dialogue: 0,0:40:30.96,0:40:33.28,*Default,NTP,0000,0000,0000,,非常开始
Dialogue: 0,0:40:33.28,0:40:36.56,*Default,NTP,0000,0000,0000,,d 是这个代码，它具有所有
Dialogue: 0,0:40:36.56,0:40:40.40,*Default,NTP,0000,0000,0000,,所有的解密都好吧，哦，谭是
Dialogue: 0,0:40:40.40,0:40:42.88,*Default,NTP,0000,0000,0000,,问为什么只减去 s 的长度
Dialogue: 0,0:40:42.88,0:40:43.76,*Default,NTP,0000,0000,0000,,一
Dialogue: 0,0:40:43.76,0:40:45.68,*Default,NTP,0000,0000,0000,,原因是在你的下面
Dialogue: 0,0:40:45.68,0:40:47.20,*Default,NTP,0000,0000,0000,,必须你必须把清单分开
Dialogue: 0,0:40:47.20,0:40:49.20,*Default,NTP,0000,0000,0000,,至少分成两部分
Dialogue: 0,0:40:49.20,0:40:51.36,*Default,NTP,0000,0000,0000,,第一个和后缀，如果没有两个
Dialogue: 0,0:40:51.36,0:40:52.96,*Default,NTP,0000,0000,0000,,零件没有什么可损坏的
Dialogue: 0,0:40:52.96,0:40:55.04,*Default,NTP,0000,0000,0000,,所以你不需要做更多的工作
Dialogue: 0,0:40:55.04,0:40:56.48,*Default,NTP,0000,0000,0000,,是的，所以我们正在努力确保
