[Script Info]
Title: Lecture 22. Q&A_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1s3411G7yM?p=55&vd_source=6ffca0aa1006734a4fba52f389036611
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.16,0:00:03.84,*Default,NTP,0000,0000,0000,,61a 讲座编号 22 问答
Dialogue: 0,0:00:03.84,0:00:05.68,*Default,NTP,0000,0000,0000,,问题是关于创建
Dialogue: 0,0:00:05.68,0:00:08.00,*Default,NTP,0000,0000,0000,,函数内部的属性
Dialogue: 0,0:00:08.00,0:00:11.44,*Default,NTP,0000,0000,0000,,我在一个例子中做了什么
Dialogue: 0,0:00:11.44,0:00:15.04,*Default,NTP,0000,0000,0000,,从这个讲座中可以看出
Dialogue: 0,0:00:15.04,0:00:18.40,*Default,NTP,0000,0000,0000,,如果你有一个函数
Dialogue: 0,0:00:18.40,0:00:22.64,*Default,NTP,0000,0000,0000,,该函数本身可以有属性
Dialogue: 0,0:00:22.64,0:00:24.08,*Default,NTP,0000,0000,0000,,现在它没有
Dialogue: 0,0:00:24.08,0:00:26.64,*Default,NTP,0000,0000,0000,,如果我在 10 上拨打 f 的属性
Dialogue: 0,0:00:26.64,0:00:28.72,*Default,NTP,0000,0000,0000,,我什么也没得到，因为它没有
Dialogue: 0,0:00:28.72,0:00:30.40,*Default,NTP,0000,0000,0000,,属性 y
Dialogue: 0,0:00:30.40,0:00:33.44,*Default,NTP,0000,0000,0000,,但我可以给它一个
Dialogue: 0,0:00:34.00,0:00:38.32,*Default,NTP,0000,0000,0000,,现在当我拨打 10 时，我得到 15。
Dialogue: 0,0:00:38.32,0:00:41.84,*Default,NTP,0000,0000,0000,,你知道函数可以有数据
Dialogue: 0,0:00:41.84,0:00:43.52,*Default,NTP,0000,0000,0000,,与他们相关的是真实的
Dialogue: 0,0:00:43.52,0:00:44.64,*Default,NTP,0000,0000,0000,,为了
Dialogue: 0,0:00:44.64,0:00:46.64,*Default,NTP,0000,0000,0000,,自从我们谈论更高以来已经很长时间了
Dialogue: 0,0:00:46.64,0:00:48.40,*Default,NTP,0000,0000,0000,,对函数进行排序
Dialogue: 0,0:00:48.40,0:00:53.68,*Default,NTP,0000,0000,0000,,在第四讲中我认为
Dialogue: 0,0:00:53.68,0:00:57.36,*Default,NTP,0000,0000,0000,,这里我们还有另一个例子
Dialogue: 0,0:00:57.36,0:01:00.48,*Default,NTP,0000,0000,0000,,函数及其关联数据
Dialogue: 0,0:01:00.48,0:01:05.12,*Default,NTP,0000,0000,0000,,我嗯基本上这里发生的是
Dialogue: 0,0:01:05.12,0:01:06.24,*Default,NTP,0000,0000,0000,,那个功能
Dialogue: 0,0:01:06.24,0:01:08.72,*Default,NTP,0000,0000,0000,,是值 他们是对象 对象可以
Dialogue: 0,0:01:08.72,0:01:09.60,*Default,NTP,0000,0000,0000,,有属性
Dialogue: 0,0:01:09.60,0:01:11.28,*Default,NTP,0000,0000,0000,,事实证明，在 python 中，任何用户
Dialogue: 0,0:01:11.28,0:01:13.68,*Default,NTP,0000,0000,0000,,定义的函数可以有任意
Dialogue: 0,0:01:13.68,0:01:14.80,*Default,NTP,0000,0000,0000,,属性
Dialogue: 0,0:01:14.80,0:01:16.24,*Default,NTP,0000,0000,0000,,所以这是一种方法
Dialogue: 0,0:01:16.24,0:01:18.80,*Default,NTP,0000,0000,0000,,将数据与函数关联起来
Dialogue: 0,0:01:18.80,0:01:20.40,*Default,NTP,0000,0000,0000,,通过将其存储为属性
Dialogue: 0,0:01:20.40,0:01:22.72,*Default,NTP,0000,0000,0000,,功能和这里的好处是
Dialogue: 0,0:01:22.72,0:01:24.56,*Default,NTP,0000,0000,0000,,它是可变的
Dialogue: 0,0:01:24.56,0:01:28.32,*Default,NTP,0000,0000,0000,,所以你可以稍后更改它
Dialogue: 0,0:01:28.32,0:01:30.32,*Default,NTP,0000,0000,0000,,无法控制谁可以改变
Dialogue: 0,0:01:30.32,0:01:32.64,*Default,NTP,0000,0000,0000,,让它变得有点
Dialogue: 0,0:01:32.64,0:01:35.28,*Default,NTP,0000,0000,0000,,在某些情况下太灵活，但这是
Dialogue: 0,0:01:35.28,0:01:37.60,*Default,NTP,0000,0000,0000,,例如使用的替代方案
Dialogue: 0,0:01:37.60,0:01:39.52,*Default,NTP,0000,0000,0000,,非本地分配或更高阶
Dialogue: 0,0:01:39.52,0:01:41.52,*Default,NTP,0000,0000,0000,,功能是你可以只存储
Dialogue: 0,0:01:41.52,0:01:42.40,*Default,NTP,0000,0000,0000,,数据
Dialogue: 0,0:01:42.40,0:01:44.16,*Default,NTP,0000,0000,0000,,就在那里作为属性
Dialogue: 0,0:01:44.16,0:01:46.00,*Default,NTP,0000,0000,0000,,功能
Dialogue: 0,0:01:46.00,0:01:48.88,*Default,NTP,0000,0000,0000,,是的，很好的问题，问题是
Dialogue: 0,0:01:48.88,0:01:49.36,*Default,NTP,0000,0000,0000,,关于
Dialogue: 0,0:01:49.36,0:01:52.64,*Default,NTP,0000,0000,0000,,空间复杂度以及是否
Dialogue: 0,0:01:52.64,0:01:55.68,*Default,NTP,0000,0000,0000,,递归占用大量空间
Dialogue: 0,0:01:55.68,0:01:57.52,*Default,NTP,0000,0000,0000,,因为每次你进行递归
Dialogue: 0,0:01:57.52,0:01:59.60,*Default,NTP,0000,0000,0000,,调用您正在分配的
Dialogue: 0,0:01:59.60,0:02:02.56,*Default,NTP,0000,0000,0000,,更多的空间来容纳框架
Dialogue: 0,0:02:02.56,0:02:04.24,*Default,NTP,0000,0000,0000,,代表第一帧的类型
Dialogue: 0,0:02:04.24,0:02:06.80,*Default,NTP,0000,0000,0000,,该递归调用的环境
Dialogue: 0,0:02:06.80,0:02:09.04,*Default,NTP,0000,0000,0000,,所以如果你进行 50 次递归调用
Dialogue: 0,0:02:09.04,0:02:11.36,*Default,NTP,0000,0000,0000,,那么你将创建 50 个帧
Dialogue: 0,0:02:11.36,0:02:15.20,*Default,NTP,0000,0000,0000,,嗯，是的，完全正确
Dialogue: 0,0:02:15.20,0:02:18.48,*Default,NTP,0000,0000,0000,,这个问题有一个答案
Dialogue: 0,0:02:18.48,0:02:20.16,*Default,NTP,0000,0000,0000,,在其他编程语言中，但不是
Dialogue: 0,0:02:20.16,0:02:21.44,*Default,NTP,0000,0000,0000,,在Python中
Dialogue: 0,0:02:21.44,0:02:23.52,*Default,NTP,0000,0000,0000,,嗯，那就是有一个
Dialogue: 0,0:02:23.52,0:02:24.88,*Default,NTP,0000,0000,0000,,特殊情况证明你
Dialogue: 0,0:02:24.88,0:02:26.72,*Default,NTP,0000,0000,0000,,不需要创建一个新的框架
Dialogue: 0,0:02:26.72,0:02:28.88,*Default,NTP,0000,0000,0000,,可以重复使用旧的吗
Dialogue: 0,0:02:28.88,0:02:30.72,*Default,NTP,0000,0000,0000,,呃，这叫尾递归，我们来谈谈
Dialogue: 0,0:02:30.72,0:02:32.72,*Default,NTP,0000,0000,0000,,关于这一点，这是一个可选主题
Dialogue: 0,0:02:32.72,0:02:33.44,*Default,NTP,0000,0000,0000,,几个星期
Dialogue: 0,0:02:33.44,0:02:35.68,*Default,NTP,0000,0000,0000,,但这就像一个特殊的
Dialogue: 0,0:02:35.68,0:02:36.80,*Default,NTP,0000,0000,0000,,深奥点
Dialogue: 0,0:02:36.80,0:02:39.92,*Default,NTP,0000,0000,0000,,我想重点是是的
Dialogue: 0,0:02:39.92,0:02:41.44,*Default,NTP,0000,0000,0000,,当你进行一堆函数调用时
Dialogue: 0,0:02:41.44,0:02:43.60,*Default,NTP,0000,0000,0000,,然后你引入了一堆框架
Dialogue: 0,0:02:43.60,0:02:46.32,*Default,NTP,0000,0000,0000,,这会产生一些空间开销，所以
Dialogue: 0,0:02:46.32,0:02:48.00,*Default,NTP,0000,0000,0000,,如果你能避免它那也不错
Dialogue: 0,0:02:48.00,0:02:48.96,*Default,NTP,0000,0000,0000,,根本没有想法
Dialogue: 0,0:02:48.96,0:02:53.52,*Default,NTP,0000,0000,0000,,所以通常当你写一个 um
Dialogue: 0,0:02:53.52,0:02:54.80,*Default,NTP,0000,0000,0000,,当你只有一些迭代时
Dialogue: 0,0:02:54.80,0:02:56.24,*Default,NTP,0000,0000,0000,,你想要的过程经历全部
Dialogue: 0,0:02:56.24,0:02:57.84,*Default,NTP,0000,0000,0000,,某物中的元素
Dialogue: 0,0:02:57.84,0:02:59.44,*Default,NTP,0000,0000,0000,,然后在 python 和大多数其他中
Dialogue: 0,0:02:59.44,0:03:01.60,*Default,NTP,0000,0000,0000,,编程语言是最好的方法
Dialogue: 0,0:03:01.60,0:03:03.44,*Default,NTP,0000,0000,0000,,它只是一个 while 或 for 循环
Dialogue: 0,0:03:03.44,0:03:05.60,*Default,NTP,0000,0000,0000,,并且不要递归地编写它
Dialogue: 0,0:03:05.60,0:03:07.52,*Default,NTP,0000,0000,0000,,递归并不是真的可以
Dialogue: 0,0:03:07.52,0:03:09.04,*Default,NTP,0000,0000,0000,,用于此目的，但它到底是什么
Dialogue: 0,0:03:09.04,0:03:09.84,*Default,NTP,0000,0000,0000,,为了
Dialogue: 0,0:03:09.84,0:03:13.20,*Default,NTP,0000,0000,0000,,用于树递归和处理
Dialogue: 0,0:03:13.20,0:03:15.36,*Default,NTP,0000,0000,0000,,树或其他分层数据
Dialogue: 0,0:03:15.36,0:03:16.40,*Default,NTP,0000,0000,0000,,结构
Dialogue: 0,0:03:16.40,0:03:18.96,*Default,NTP,0000,0000,0000,,这就是它非常有帮助的地方，如果
Dialogue: 0,0:03:18.96,0:03:20.88,*Default,NTP,0000,0000,0000,,你想想那些案例
Dialogue: 0,0:03:20.88,0:03:24.08,*Default,NTP,0000,0000,0000,,实际上空间利用往往不是
Dialogue: 0,0:03:24.08,0:03:24.48,*Default,NTP,0000,0000,0000,,那
Dialogue: 0,0:03:24.48,0:03:29.36,*Default,NTP,0000,0000,0000,,在典型的树递归中，所以很大
Dialogue: 0,0:03:29.36,0:03:31.04,*Default,NTP,0000,0000,0000,,你将会有大量的
Dialogue: 0,0:03:31.04,0:03:34.08,*Default,NTP,0000,0000,0000,,如果你不记得的话计算
Dialogue: 0,0:03:34.08,0:03:35.52,*Default,NTP,0000,0000,0000,,因为你喜欢构建这个
Dialogue: 0,0:03:35.52,0:03:37.68,*Default,NTP,0000,0000,0000,,许多不同的整棵树
Dialogue: 0,0:03:37.68,0:03:39.12,*Default,NTP,0000,0000,0000,,递归调用
Dialogue: 0,0:03:39.12,0:03:42.32,*Default,NTP,0000,0000,0000,,但你需要的空间只是
Dialogue: 0,0:03:42.32,0:03:44.16,*Default,NTP,0000,0000,0000,,通过该路径的最长路径的长度
Dialogue: 0,0:03:44.16,0:03:45.76,*Default,NTP,0000,0000,0000,,树，你可以有更多的节点
Dialogue: 0,0:03:45.76,0:03:46.64,*Default,NTP,0000,0000,0000,,在树上
Dialogue: 0,0:03:46.64,0:03:48.56,*Default,NTP,0000,0000,0000,,比你能拥有的高度
Dialogue: 0,0:03:48.56,0:03:50.16,*Default,NTP,0000,0000,0000,,树等等
Dialogue: 0,0:03:50.16,0:03:52.64,*Default,NTP,0000,0000,0000,,因此，该空间通常不是
Dialogue: 0,0:03:52.64,0:03:53.28,*Default,NTP,0000,0000,0000,,那种
Dialogue: 0,0:03:53.28,0:03:55.68,*Default,NTP,0000,0000,0000,,树的重要限制因素
Dialogue: 0,0:03:55.68,0:03:57.28,*Default,NTP,0000,0000,0000,,递归问题
Dialogue: 0,0:03:57.28,0:04:00.32,*Default,NTP,0000,0000,0000,,通常是时候拨打所有这些电话了
Dialogue: 0,0:04:00.32,0:04:02.40,*Default,NTP,0000,0000,0000,,嗯，而不是它的空间量
Dialogue: 0,0:04:02.40,0:04:04.56,*Default,NTP,0000,0000,0000,,捕获所有活跃的
Dialogue: 0,0:04:04.56,0:04:05.60,*Default,NTP,0000,0000,0000,,任何特定时刻
Dialogue: 0,0:04:05.60,0:04:08.64,*Default,NTP,0000,0000,0000,,通常你知道取决于问题
Dialogue: 0,0:04:08.64,0:04:12.48,*Default,NTP,0000,0000,0000,,是的，20 年前太空是真实存在的
Dialogue: 0,0:04:12.48,0:04:13.84,*Default,NTP,0000,0000,0000,,忧虑
Dialogue: 0,0:04:13.84,0:04:15.28,*Default,NTP,0000,0000,0000,,这些天有点少了
Dialogue: 0,0:04:15.28,0:04:17.36,*Default,NTP,0000,0000,0000,,担心内存很便宜
Dialogue: 0,0:04:17.36,0:04:19.12,*Default,NTP,0000,0000,0000,,每个人都有 TB 的内存，所以
Dialogue: 0,0:04:19.12,0:04:21.20,*Default,NTP,0000,0000,0000,,我们对内存的担心少了一些
Dialogue: 0,0:04:21.20,0:04:22.56,*Default,NTP,0000,0000,0000,,但你说得对，米琼恩是
Dialogue: 0,0:04:22.56,0:04:23.20,*Default,NTP,0000,0000,0000,,那里
Dialogue: 0,0:04:23.20,0:04:25.12,*Default,NTP,0000,0000,0000,,我们有某些递归函数吗
Dialogue: 0,0:04:25.12,0:04:27.04,*Default,NTP,0000,0000,0000,,所有的文字都写着你永远不会真正
Dialogue: 0,0:04:27.04,0:04:28.16,*Default,NTP,0000,0000,0000,,递归地做
Dialogue: 0,0:04:28.16,0:04:29.68,*Default,NTP,0000,0000,0000,,没有理由不这样做
Dialogue: 0,0:04:29.68,0:04:31.28,*Default,NTP,0000,0000,0000,,迭代地，它只是更多
Dialogue: 0,0:04:31.28,0:04:32.32,*Default,NTP,0000,0000,0000,,锻炼
Dialogue: 0,0:04:32.32,0:04:35.68,*Default,NTP,0000,0000,0000,,学习递归，如果你认为
Dialogue: 0,0:04:35.68,0:04:37.20,*Default,NTP,0000,0000,0000,,关于树递归问题，例如
Dialogue: 0,0:04:37.20,0:04:38.24,*Default,NTP,0000,0000,0000,,计数分区
Dialogue: 0,0:04:38.24,0:04:41.60,*Default,NTP,0000,0000,0000,,你在哪里进行分支
Dialogue: 0,0:04:41.60,0:04:42.16,*Default,NTP,0000,0000,0000,,来电
Dialogue: 0,0:04:42.16,0:04:44.16,*Default,NTP,0000,0000,0000,,有一种方法可以做到这一点，无需
Dialogue: 0,0:04:44.16,0:04:46.24,*Default,NTP,0000,0000,0000,,递归但它确实使用相同的
Dialogue: 0,0:04:46.24,0:04:47.68,*Default,NTP,0000,0000,0000,,如果你没有这样做的话，需要多少空间
Dialogue: 0,0:04:47.68,0:04:49.20,*Default,NTP,0000,0000,0000,,递归你基本上只需要
Dialogue: 0,0:04:49.20,0:04:51.20,*Default,NTP,0000,0000,0000,,明确跟踪 a 中的所有帧
Dialogue: 0,0:04:51.20,0:04:53.04,*Default,NTP,0000,0000,0000,,列出而不是让解释器
Dialogue: 0,0:04:53.04,0:04:55.04,*Default,NTP,0000,0000,0000,,为你做这件事，所以这不像是在逃避
Dialogue: 0,0:04:55.04,0:04:56.56,*Default,NTP,0000,0000,0000,,递归往往对你有很大帮助
Dialogue: 0,0:04:56.56,0:04:59.84,*Default,NTP,0000,0000,0000,,时常出现一些问题
Dialogue: 0,0:04:59.84,0:05:01.84,*Default,NTP,0000,0000,0000,,嗯，所以如果你看讲座
Dialogue: 0,0:05:01.84,0:05:03.28,*Default,NTP,0000,0000,0000,,河内塔
Dialogue: 0,0:05:03.28,0:05:05.92,*Default,NTP,0000,0000,0000,,他们的解决方案就这么多
Dialogue: 0,0:05:05.92,0:05:07.52,*Default,NTP,0000,0000,0000,,像他们必须的那样更容易递归
Dialogue: 0,0:05:07.52,0:05:09.04,*Default,NTP,0000,0000,0000,,思考通过迭代解决方案可以
Dialogue: 0,0:05:09.04,0:05:10.08,*Default,NTP,0000,0000,0000,,真的很粗糙
Dialogue: 0,0:05:10.08,0:05:12.16,*Default,NTP,0000,0000,0000,,所以每隔一段时间你就会知道
Dialogue: 0,0:05:12.16,0:05:14.08,*Default,NTP,0000,0000,0000,,有一个非常干净和优雅
Dialogue: 0,0:05:14.08,0:05:15.60,*Default,NTP,0000,0000,0000,,递归解法
Dialogue: 0,0:05:15.60,0:05:19.20,*Default,NTP,0000,0000,0000,,这些是我特别喜欢的
Dialogue: 0,0:05:19.76,0:05:21.52,*Default,NTP,0000,0000,0000,,我想最后一个要讨论的案例
Dialogue: 0,0:05:21.52,0:05:23.28,*Default,NTP,0000,0000,0000,,就是当你用 a 做某事时
Dialogue: 0,0:05:23.28,0:05:25.44,*Default,NTP,0000,0000,0000,,树是一个常见的情况
Dialogue: 0,0:05:25.44,0:05:28.80,*Default,NTP,0000,0000,0000,,呃递归，在这种情况下就像
Dialogue: 0,0:05:28.80,0:05:29.84,*Default,NTP,0000,0000,0000,,树已经在那里了
Dialogue: 0,0:05:29.84,0:05:31.52,*Default,NTP,0000,0000,0000,,你已经喜欢用这么多了
Dialogue: 0,0:05:31.52,0:05:34.40,*Default,NTP,0000,0000,0000,,内存，因此每个都有一个额外的帧
Dialogue: 0,0:05:34.40,0:05:35.36,*Default,NTP,0000,0000,0000,,树中的节点
Dialogue: 0,0:05:35.36,0:05:37.12,*Default,NTP,0000,0000,0000,,你知道它更多，但它不像
Dialogue: 0,0:05:37.12,0:05:39.36,*Default,NTP,0000,0000,0000,,更多嗯，所以它往往不是
Dialogue: 0,0:05:39.36,0:05:43.20,*Default,NTP,0000,0000,0000,,一个大问题，需要一个很长的答案
Dialogue: 0,0:05:43.20,0:05:44.80,*Default,NTP,0000,0000,0000,,简单的问题但是呃
Dialogue: 0,0:05:44.80,0:05:46.17,*Default,NTP,0000,0000,0000,,但我想事情没那么简单
Dialogue: 0,0:05:46.17,0:05:49.36,*Default,NTP,0000,0000,0000,,[笑声]
Dialogue: 0,0:05:49.36,0:05:51.20,*Default,NTP,0000,0000,0000,,不，这是一个很好的问题，米琼恩，这是
Dialogue: 0,0:05:51.20,0:05:52.96,*Default,NTP,0000,0000,0000,,绝对是正确的问题
Dialogue: 0,0:05:52.96,0:05:55.76,*Default,NTP,0000,0000,0000,,所以如果如果
Dialogue: 0,0:05:55.76,0:05:56.56,*Default,NTP,0000,0000,0000,,问题是
Dialogue: 0,0:05:56.56,0:05:58.40,*Default,NTP,0000,0000,0000,,我们不应该使用递归吗
Dialogue: 0,0:05:58.40,0:06:00.16,*Default,NTP,0000,0000,0000,,我们可以使用 while 循环
Dialogue: 0,0:06:00.16,0:06:03.04,*Default,NTP,0000,0000,0000,,基本上这是一个很好的建议
Dialogue: 0,0:06:03.04,0:06:05.20,*Default,NTP,0000,0000,0000,,是的
Dialogue: 0,0:06:05.36,0:06:08.08,*Default,NTP,0000,0000,0000,,好的，所以问题是关于考试的
Dialogue: 0,0:06:08.08,0:06:08.64,*Default,NTP,0000,0000,0000,,准备
Dialogue: 0,0:06:08.64,0:06:13.60,*Default,NTP,0000,0000,0000,,呃工作表第六部分
Dialogue: 0,0:06:13.60,0:06:15.52,*Default,NTP,0000,0000,0000,,其中涵盖了对象绘制和
Dialogue: 0,0:06:15.52,0:06:16.80,*Default,NTP,0000,0000,0000,,编程
Dialogue: 0,0:06:16.80,0:06:20.64,*Default,NTP,0000,0000,0000,,并有以下问题
Dialogue: 0,0:06:20.64,0:06:22.96,*Default,NTP,0000,0000,0000,,填写每个空格和代码
Dialogue: 0,0:06:22.96,0:06:25.04,*Default,NTP,0000,0000,0000,,这样表达式和输出
Dialogue: 0,0:06:25.04,0:06:27.04,*Default,NTP,0000,0000,0000,,下表是一致的
Dialogue: 0,0:06:27.04,0:06:30.56,*Default,NTP,0000,0000,0000,,好的，它给了你一堆例子
Dialogue: 0,0:06:30.56,0:06:35.84,*Default,NTP,0000,0000,0000,,还有呃
Dialogue: 0,0:06:36.72,0:06:38.32,*Default,NTP,0000,0000,0000,,我假设之前的影响
Dialogue: 0,0:06:38.32,0:06:40.32,*Default,NTP,0000,0000,0000,,子部分持续到未来的子部分 i
Dialogue: 0,0:06:40.32,0:06:41.68,*Default,NTP,0000,0000,0000,,认为就像我们走的那样
Dialogue: 0,0:06:41.68,0:06:43.68,*Default,NTP,0000,0000,0000,,下面的变化将会
Dialogue: 0,0:06:43.68,0:06:45.84,*Default,NTP,0000,0000,0000,,积累
Dialogue: 0,0:06:45.84,0:06:48.96,*Default,NTP,0000,0000,0000,,所以我们有一个派对类，其中有
Dialogue: 0,0:06:48.96,0:06:52.88,*Default,NTP,0000,0000,0000,,访客的链接列表
Dialogue: 0,0:06:52.88,0:06:56.80,*Default,NTP,0000,0000,0000,,作为其类属性
Dialogue: 0,0:06:56.80,0:06:58.56,*Default,NTP,0000,0000,0000,,需要几分钟才能解决
Dialogue: 0,0:06:58.56,0:07:01.20,*Default,NTP,0000,0000,0000,,一些参加的想法
Dialogue: 0,0:07:01.20,0:07:04.32,*Default,NTP,0000,0000,0000,,然后我们举办化装舞会
Dialogue: 0,0:07:04.32,0:07:07.12,*Default,NTP,0000,0000,0000,,这是派对的子类
Dialogue: 0,0:07:07.12,0:07:08.80,*Default,NTP,0000,0000,0000,,它自己在里面
Dialogue: 0,0:07:08.80,0:07:12.56,*Default,NTP,0000,0000,0000,,它会对派对产生一些影响
Dialogue: 0,0:07:12.56,0:07:15.28,*Default,NTP,0000,0000,0000,,称为 guest 的类属性，它是
Dialogue: 0,0:07:15.28,0:07:16.64,*Default,NTP,0000,0000,0000,,自己去做某事
Dialogue: 0,0:07:16.64,0:07:18.72,*Default,NTP,0000,0000,0000,,实例属性
Dialogue: 0,0:07:18.72,0:07:22.80,*Default,NTP,0000,0000,0000,,嗯，它有自己的参加概念
Dialogue: 0,0:07:22.80,0:07:24.88,*Default,NTP,0000,0000,0000,,它有自己的说唱歌手方法
Dialogue: 0,0:07:24.88,0:07:26.32,*Default,NTP,0000,0000,0000,,我想会很漂亮
Dialogue: 0,0:07:26.32,0:07:27.44,*Default,NTP,0000,0000,0000,,这里很有趣
Dialogue: 0,0:07:27.44,0:07:31.84,*Default,NTP,0000,0000,0000,,大约
Dialogue: 0,0:07:34.00,0:07:36.32,*Default,NTP,0000,0000,0000,,让我们看看发生了什么事
Dialogue: 0,0:07:36.32,0:07:38.08,*Default,NTP,0000,0000,0000,,当您创建链接列表时
Dialogue: 0,0:07:38.08,0:07:40.16,*Default,NTP,0000,0000,0000,,你用两个参数创建它
Dialogue: 0,0:07:40.16,0:07:42.96,*Default,NTP,0000,0000,0000,,第一个元素和列表的其余部分
Dialogue: 0,0:07:42.96,0:07:45.28,*Default,NTP,0000,0000,0000,,如果您将此链接留空并且
Dialogue: 0,0:07:45.28,0:07:46.88,*Default,NTP,0000,0000,0000,,刚刚传递了一个参数，你就得到了
Dialogue: 0,0:07:46.88,0:07:47.44,*Default,NTP,0000,0000,0000,,一样
Dialogue: 0,0:07:47.44,0:07:49.76,*Default,NTP,0000,0000,0000,,因为空链接是默认的
Dialogue: 0,0:07:49.76,0:07:52.08,*Default,NTP,0000,0000,0000,,列表其余部分的值
Dialogue: 0,0:07:52.08,0:07:55.12,*Default,NTP,0000,0000,0000,,并且链接有一个包装方法
Dialogue: 0,0:07:55.12,0:07:58.72,*Default,NTP,0000,0000,0000,,生成一个表达式
Dialogue: 0,0:07:58.72,0:08:00.72,*Default,NTP,0000,0000,0000,,创建一个等效的链表
Dialogue: 0,0:08:00.72,0:08:03.44,*Default,NTP,0000,0000,0000,,好吧，这就是我们在这里看到的
Dialogue: 0,0:08:03.44,0:08:05.36,*Default,NTP,0000,0000,0000,,这里
Dialogue: 0,0:08:05.36,0:08:07.60,*Default,NTP,0000,0000,0000,,我们在这里看到的是，当你创建
Dialogue: 0,0:08:07.60,0:08:09.20,*Default,NTP,0000,0000,0000,,一个派对
Dialogue: 0,0:08:09.20,0:08:12.72,*Default,NTP,0000,0000,0000,,以一为其
Dialogue: 0,0:08:12.72,0:08:15.12,*Default,NTP,0000,0000,0000,,时间
Dialogue: 0,0:08:16.96,0:08:20.48,*Default,NTP,0000,0000,0000,,然后你查找最终找到的客人
Dialogue: 0,0:08:20.48,0:08:24.08,*Default,NTP,0000,0000,0000,,带有一个链接列表
Dialogue: 0,0:08:24.08,0:08:27.44,*Default,NTP,0000,0000,0000,,2 我们并没有真正的故事
Dialogue: 0,0:08:27.44,0:08:31.76,*Default,NTP,0000,0000,0000,,为什么除了这里
Dialogue: 0,0:08:31.76,0:08:34.88,*Default,NTP,0000,0000,0000,,我们有一条分配线，我们可以
Dialogue: 0,0:08:34.88,0:08:36.08,*Default,NTP,0000,0000,0000,,用来改变
Dialogue: 0,0:08:36.08,0:08:41.20,*Default,NTP,0000,0000,0000,,partygut 是的，要成为别的东西
Dialogue: 0,0:08:41.20,0:08:43.44,*Default,NTP,0000,0000,0000,,嗯或者我们可以改变实例
Dialogue: 0,0:08:43.44,0:08:45.44,*Default,NTP,0000,0000,0000,,猜测的属性是其他东西
Dialogue: 0,0:08:45.44,0:08:47.36,*Default,NTP,0000,0000,0000,,这个问题的棘手之处在于
Dialogue: 0,0:08:47.36,0:08:49.04,*Default,NTP,0000,0000,0000,,我们实际上并不知道是哪一个
Dialogue: 0,0:08:49.04,0:08:50.96,*Default,NTP,0000,0000,0000,,似乎你还无法从中看出
Dialogue: 0,0:08:50.96,0:08:51.76,*Default,NTP,0000,0000,0000,,表达
Dialogue: 0,0:08:51.76,0:08:53.68,*Default,NTP,0000,0000,0000,,猜测是否是实例属性
Dialogue: 0,0:08:53.68,0:08:54.96,*Default,NTP,0000,0000,0000,,或类属性
Dialogue: 0,0:08:54.96,0:08:56.64,*Default,NTP,0000,0000,0000,,但由于 class 属性存在
Dialogue: 0,0:08:56.64,0:08:59.84,*Default,NTP,0000,0000,0000,,希望就是这样
Dialogue: 0,0:08:59.84,0:09:03.60,*Default,NTP,0000,0000,0000,,好吧，当我们
Dialogue: 0,0:09:03.60,0:09:06.96,*Default,NTP,0000,0000,0000,,致电 party3，然后点参加
Dialogue: 0,0:09:06.96,0:09:10.16,*Default,NTP,0000,0000,0000,,现在我们有了一个有趣的模式
Dialogue: 0,0:09:10.16,0:09:11.28,*Default,NTP,0000,0000,0000,,正在兴起
Dialogue: 0,0:09:11.28,0:09:14.24,*Default,NTP,0000,0000,0000,,这就是呃，这比
Dialogue: 0,0:09:14.24,0:09:15.04,*Default,NTP,0000,0000,0000,,那
Dialogue: 0,0:09:15.04,0:09:18.32,*Default,NTP,0000,0000,0000,,这比那还多一个
Dialogue: 0,0:09:18.32,0:09:20.40,*Default,NTP,0000,0000,0000,,嗯，然后有点疯狂
Dialogue: 0,0:09:20.40,0:09:24.16,*Default,NTP,0000,0000,0000,,发生在这里，这不是链接
Dialogue: 0,0:09:24.16,0:09:26.56,*Default,NTP,0000,0000,0000,,列表，但它是一个链接的
Dialogue: 0,0:09:26.56,0:09:29.36,*Default,NTP,0000,0000,0000,,列表，但它没有三个元素
Dialogue: 0,0:09:29.36,0:09:31.44,*Default,NTP,0000,0000,0000,,相反，它有两个元素
Dialogue: 0,0:09:31.44,0:09:33.36,*Default,NTP,0000,0000,0000,,第一个是四
Dialogue: 0,0:09:33.36,0:09:35.52,*Default,NTP,0000,0000,0000,,另一个是它自己的列表，所以如果
Dialogue: 0,0:09:35.52,0:09:37.20,*Default,NTP,0000,0000,0000,,我们正在写这个
Dialogue: 0,0:09:37.20,0:09:40.32,*Default,NTP,0000,0000,0000,,在 python 列表中，这看起来像
Dialogue: 0,0:09:40.32,0:09:43.20,*Default,NTP,0000,0000,0000,,四，二作为第二个元素
Dialogue: 0,0:09:43.20,0:09:44.24,*Default,NTP,0000,0000,0000,,这就是这个链接的内容
Dialogue: 0,0:09:44.24,0:09:46.40,*Default,NTP,0000,0000,0000,,四连杆二连杆结构是
Dialogue: 0,0:09:46.40,0:09:48.96,*Default,NTP,0000,0000,0000,,相当于
Dialogue: 0,0:09:48.96,0:09:51.12,*Default,NTP,0000,0000,0000,,嗯，我们是怎么到这里的，我想我们不知道
Dialogue: 0,0:09:51.12,0:09:52.72,*Default,NTP,0000,0000,0000,,还不知道，但我们可以看看
Dialogue: 0,0:09:52.72,0:09:54.24,*Default,NTP,0000,0000,0000,,参加确实
Dialogue: 0,0:09:54.24,0:09:59.20,*Default,NTP,0000,0000,0000,,所以参加呃
Dialogue: 0,0:10:01.04,0:10:04.48,*Default,NTP,0000,0000,0000,,做某事然后
Dialogue: 0,0:10:04.48,0:10:07.52,*Default,NTP,0000,0000,0000,,它返回
Dialogue: 0,0:10:08.04,0:10:12.08,*Default,NTP,0000,0000,0000,,self.guest 是 party.guest 好的
Dialogue: 0,0:10:12.08,0:10:15.28,*Default,NTP,0000,0000,0000,,所以这一定是真的
Dialogue: 0,0:10:15.28,0:10:17.68,*Default,NTP,0000,0000,0000,,因为否则我们不会我们只是
Dialogue: 0,0:10:17.68,0:10:19.12,*Default,NTP,0000,0000,0000,,变得虚假，但事实并非如此
Dialogue: 0,0:10:19.12,0:10:20.24,*Default,NTP,0000,0000,0000,,我们得到了我们得到了一个链接
Dialogue: 0,0:10:20.24,0:10:21.04,*Default,NTP,0000,0000,0000,,列表
Dialogue: 0,0:10:21.04,0:10:23.92,*Default,NTP,0000,0000,0000,,所以它是回归派对。客人所以
Dialogue: 0,0:10:23.92,0:10:24.40,*Default,NTP,0000,0000,0000,,这
Dialogue: 0,0:10:24.40,0:10:26.32,*Default,NTP,0000,0000,0000,,是一个有趣的提示 self.guest 是
Dialogue: 0,0:10:26.32,0:10:28.16,*Default,NTP,0000,0000,0000,,party.guest 表示确实有
Dialogue: 0,0:10:28.16,0:10:28.64,*Default,NTP,0000,0000,0000,,不
Dialogue: 0,0:10:28.64,0:10:32.16,*Default,NTP,0000,0000,0000,,一方实例的实例属性
Dialogue: 0,0:10:32.16,0:10:34.64,*Default,NTP,0000,0000,0000,,相反，它必须是一个类属性
Dialogue: 0,0:10:34.64,0:10:36.48,*Default,NTP,0000,0000,0000,,这两件事是同一件事
Dialogue: 0,0:10:36.48,0:10:38.16,*Default,NTP,0000,0000,0000,,所以一定是我们在操纵
Dialogue: 0,0:10:38.16,0:10:39.68,*Default,NTP,0000,0000,0000,,类属性在这里
Dialogue: 0,0:10:39.68,0:10:43.56,*Default,NTP,0000,0000,0000,,呃我们可以看看这是怎么发生的
Dialogue: 0,0:10:43.56,0:10:47.52,*Default,NTP,0000,0000,0000,,我们嗯
Dialogue: 0,0:10:47.52,0:10:49.52,*Default,NTP,0000,0000,0000,,添加一些东西到链接列表中并且
Dialogue: 0,0:10:49.52,0:10:51.68,*Default,NTP,0000,0000,0000,,然后我们喜欢把它嵌套起来
Dialogue: 0,0:10:51.68,0:10:53.04,*Default,NTP,0000,0000,0000,,我想我们将要采用的结构
Dialogue: 0,0:10:53.04,0:10:55.12,*Default,NTP,0000,0000,0000,,必须明白
Dialogue: 0,0:10:55.12,0:10:57.28,*Default,NTP,0000,0000,0000,,这些元素似乎是
Dialogue: 0,0:10:57.28,0:10:58.16,*Default,NTP,0000,0000,0000,,添加到这里
Dialogue: 0,0:10:58.16,0:10:59.76,*Default,NTP,0000,0000,0000,,嵌套结构是
Dialogue: 0,0:10:59.76,0:11:02.40,*Default,NTP,0000,0000,0000,,在这里创建
Dialogue: 0,0:11:02.40,0:11:05.68,*Default,NTP,0000,0000,0000,,也许这比我更困惑
Dialogue: 0,0:11:05.68,0:11:06.72,*Default,NTP,0000,0000,0000,,会期望
Dialogue: 0,0:11:06.72,0:11:08.80,*Default,NTP,0000,0000,0000,,嗯但是呃我想我们正在做一些
Dialogue: 0,0:11:08.80,0:11:11.20,*Default,NTP,0000,0000,0000,,进展如此
Dialogue: 0,0:11:11.20,0:11:15.84,*Default,NTP,0000,0000,0000,,呃，让我们看看是否可以
Dialogue: 0,0:11:16.88,0:11:19.52,*Default,NTP,0000,0000,0000,,填写一些然后我就停下来
Dialogue: 0,0:11:19.52,0:11:20.24,*Default,NTP,0000,0000,0000,,并询问
Dialogue: 0,0:11:20.24,0:11:23.28,*Default,NTP,0000,0000,0000,,提出问题，所以看起来这已经
Dialogue: 0,0:11:23.28,0:11:24.08,*Default,NTP,0000,0000,0000,,成为
Dialogue: 0,0:11:24.08,0:11:28.00,*Default,NTP,0000,0000,0000,,那个派对点
Dialogue: 0,0:11:28.00,0:11:30.32,*Default,NTP,0000,0000,0000,,客人正在换，怎么样
Dialogue: 0,0:11:30.32,0:11:31.28,*Default,NTP,0000,0000,0000,,被改变
Dialogue: 0,0:11:31.28,0:11:34.72,*Default,NTP,0000,0000,0000,,据我所知，我们正在采取
Dialogue: 0,0:11:34.72,0:11:37.12,*Default,NTP,0000,0000,0000,,时间
Dialogue: 0,0:11:39.28,0:11:43.04,*Default,NTP,0000,0000,0000,,加一并将其放入
Dialogue: 0,0:11:43.04,0:11:46.16,*Default,NTP,0000,0000,0000,,作为这个链表中的新元素如何
Dialogue: 0,0:11:46.16,0:11:46.72,*Default,NTP,0000,0000,0000,,你接受吗
Dialogue: 0,0:11:46.72,0:11:48.72,*Default,NTP,0000,0000,0000,,一个现有的链表并放一些东西
Dialogue: 0,0:11:48.72,0:11:49.84,*Default,NTP,0000,0000,0000,,前面有新的
Dialogue: 0,0:11:49.84,0:11:52.08,*Default,NTP,0000,0000,0000,,好吧，你用新元素调用链接
Dialogue: 0,0:11:52.08,0:11:52.88,*Default,NTP,0000,0000,0000,,在前面
Dialogue: 0,0:11:52.88,0:11:55.44,*Default,NTP,0000,0000,0000,,然后将列表的其余部分保留在
Dialogue: 0,0:11:55.44,0:11:56.48,*Default,NTP,0000,0000,0000,,那里
Dialogue: 0,0:11:56.48,0:11:58.40,*Default,NTP,0000,0000,0000,,所以原始列表变成了其余的
Dialogue: 0,0:11:58.40,0:12:00.60,*Default,NTP,0000,0000,0000,,您将其写为的列表
Dialogue: 0,0:12:00.60,0:12:03.60,*Default,NTP,0000,0000,0000,,派对嘉宾
Dialogue: 0,0:12:07.36,0:12:10.16,*Default,NTP,0000,0000,0000,,所以这就像一个链接列表
Dialogue: 0,0:12:10.16,0:12:11.28,*Default,NTP,0000,0000,0000,,数字
Dialogue: 0,0:12:11.28,0:12:14.16,*Default,NTP,0000,0000,0000,,每次你打电话给派对然后你就会得到
Dialogue: 0,0:12:14.16,0:12:14.80,*Default,NTP,0000,0000,0000,,像一个
Dialogue: 0,0:12:14.80,0:12:17.12,*Default,NTP,0000,0000,0000,,现在另一个元素为什么是这样
Dialogue: 0,0:12:17.12,0:12:19.12,*Default,NTP,0000,0000,0000,,客人和时间在某种程度上是相关的
Dialogue: 0,0:12:19.12,0:12:19.84,*Default,NTP,0000,0000,0000,,不知道
Dialogue: 0,0:12:19.84,0:12:22.80,*Default,NTP,0000,0000,0000,,但我没有写这个问题所以嗯
Dialogue: 0,0:12:22.80,0:12:24.96,*Default,NTP,0000,0000,0000,,我们到了
Dialogue: 0,0:12:24.96,0:12:26.80,*Default,NTP,0000,0000,0000,,现在我们必须考虑这个嵌套
Dialogue: 0,0:12:26.80,0:12:28.72,*Default,NTP,0000,0000,0000,,结构怎么可能
Dialogue: 0,0:12:28.72,0:12:32.48,*Default,NTP,0000,0000,0000,,那个嗯
Dialogue: 0,0:12:34.24,0:12:37.04,*Default,NTP,0000,0000,0000,,呼叫第一方和第三方后
Dialogue: 0,0:12:37.04,0:12:38.48,*Default,NTP,0000,0000,0000,,我们有
Dialogue: 0,0:12:38.48,0:12:42.48,*Default,NTP,0000,0000,0000,,呃猜想就像一个很好的链表一样
Dialogue: 0,0:12:42.48,0:12:47.28,*Default,NTP,0000,0000,0000,,看起来像链接四链接二
Dialogue: 0,0:12:48.00,0:12:50.72,*Default,NTP,0000,0000,0000,,不知怎的，我们在这里得到了一个额外的链接
Dialogue: 0,0:12:50.72,0:12:52.00,*Default,NTP,0000,0000,0000,,我们需要一个任务
Dialogue: 0,0:12:52.00,0:12:54.32,*Default,NTP,0000,0000,0000,,声明为了做到这一点，我认为
Dialogue: 0,0:12:54.32,0:12:55.84,*Default,NTP,0000,0000,0000,,订购从这里出发
Dialogue: 0,0:12:55.84,0:12:57.84,*Default,NTP,0000,0000,0000,,到这里让我们看看我是否可以将这些排列起来
Dialogue: 0,0:12:57.84,0:13:00.16,*Default,NTP,0000,0000,0000,,好一点
Dialogue: 0,0:13:00.16,0:13:02.96,*Default,NTP,0000,0000,0000,,我们必须改变其余的部分
Dialogue: 0,0:13:02.96,0:13:04.40,*Default,NTP,0000,0000,0000,,链表
Dialogue: 0,0:13:04.40,0:13:06.24,*Default,NTP,0000,0000,0000,,为了成为一个链接列表
Dialogue: 0,0:13:06.24,0:13:09.04,*Default,NTP,0000,0000,0000,,包含之前存在的任何内容
Dialogue: 0,0:13:09.04,0:13:11.84,*Default,NTP,0000,0000,0000,,也许这是一件有效的事情
Dialogue: 0,0:13:11.84,0:13:14.00,*Default,NTP,0000,0000,0000,,我们将做一个 python 列表版本
Dialogue: 0,0:13:14.00,0:13:16.16,*Default,NTP,0000,0000,0000,,等会儿我们来谈谈它是什么
Dialogue: 0,0:13:16.16,0:13:18.84,*Default,NTP,0000,0000,0000,,看起来像这样
Dialogue: 0,0:13:18.84,0:13:21.60,*Default,NTP,0000,0000,0000,,party.guest.rest 等于
Dialogue: 0,0:13:21.60,0:13:24.80,*Default,NTP,0000,0000,0000,,的链接
Dialogue: 0,0:13:26.64,0:13:31.20,*Default,NTP,0000,0000,0000,,哦，我打错了方点
Dialogue: 0,0:13:32.84,0:13:35.84,*Default,NTP,0000,0000,0000,,客人
Dialogue: 0,0:13:36.64,0:13:38.40,*Default,NTP,0000,0000,0000,,这个特定的赋值语句
Dialogue: 0,0:13:38.40,0:13:40.40,*Default,NTP,0000,0000,0000,,会带我们离开这里
Dialogue: 0,0:13:40.40,0:13:44.08,*Default,NTP,0000,0000,0000,,到这里因为我们所做的就是
Dialogue: 0,0:13:44.08,0:13:47.36,*Default,NTP,0000,0000,0000,,将这个位置的内容替换为
Dialogue: 0,0:13:47.36,0:13:49.52,*Default,NTP,0000,0000,0000,,包含其中内容的链接列表
Dialogue: 0,0:13:49.52,0:13:52.00,*Default,NTP,0000,0000,0000,,位置
Dialogue: 0,0:13:53.68,0:13:57.20,*Default,NTP,0000,0000,0000,,那么如果你评估这个你会发现
Dialogue: 0,0:13:57.20,0:13:58.88,*Default,NTP,0000,0000,0000,,那个自我猜测已经分手了我想是这样
Dialogue: 0,0:13:58.88,0:14:00.16,*Default,NTP,0000,0000,0000,,这是真的
Dialogue: 0,0:14:00.16,0:14:03.28,*Default,NTP,0000,0000,0000,,and and uh 表达式将始终返回
Dialogue: 0,0:14:03.28,0:14:05.36,*Default,NTP,0000,0000,0000,,如果第一件事是第二件事
Dialogue: 0,0:14:05.36,0:14:07.40,*Default,NTP,0000,0000,0000,,是的，所以第二件事是
Dialogue: 0,0:14:07.40,0:14:10.24,*Default,NTP,0000,0000,0000,,party.guests 这意味着我们要回来了
Dialogue: 0,0:14:10.24,0:14:10.96,*Default,NTP,0000,0000,0000,,这整个
Dialogue: 0,0:14:10.96,0:14:12.88,*Default,NTP,0000,0000,0000,,链表，这就是我们所看到的
Dialogue: 0,0:14:12.88,0:14:17.84,*Default,NTP,0000,0000,0000,,这就是现在 party.guests 的价值
Dialogue: 0,0:14:20.56,0:14:23.52,*Default,NTP,0000,0000,0000,,聊天中还没有内容
Dialogue: 0,0:14:23.52,0:14:25.20,*Default,NTP,0000,0000,0000,,提出一些你可以插话的问题
Dialogue: 0,0:14:25.20,0:14:26.32,*Default,NTP,0000,0000,0000,,否则我会继续
Dialogue: 0,0:14:26.32,0:14:28.84,*Default,NTP,0000,0000,0000,,这是一个问题，约翰为什么不是
Dialogue: 0,0:14:28.84,0:14:30.08,*Default,NTP,0000,0000,0000,,派对.格斯.红
Dialogue: 0,0:14:30.08,0:14:32.64,*Default,NTP,0000,0000,0000,,链接括号中的内容哦
Dialogue: 0,0:14:32.64,0:14:33.52,*Default,NTP,0000,0000,0000,,是的，我可能不应该
Dialogue: 0,0:14:33.52,0:14:35.84,*Default,NTP,0000,0000,0000,,我认为如果你去的话那是对的
Dialogue: 0,0:14:35.84,0:14:37.68,*Default,NTP,0000,0000,0000,,是的
Dialogue: 0,0:14:37.68,0:14:40.08,*Default,NTP,0000,0000,0000,,我认为这是对的，否则
Dialogue: 0,0:14:40.08,0:14:42.72,*Default,NTP,0000,0000,0000,,我认为第七方不会成功
Dialogue: 0,0:14:42.72,0:14:44.48,*Default,NTP,0000,0000,0000,,是的，否则我们就会有四个
Dialogue: 0,0:14:44.48,0:14:46.40,*Default,NTP,0000,0000,0000,,在这里，我们不想要四
Dialogue: 0,0:14:46.40,0:14:48.00,*Default,NTP,0000,0000,0000,,在这里我们只想要剩下的
Dialogue: 0,0:14:48.00,0:14:51.04,*Default,NTP,0000,0000,0000,,好的，谢谢，没错
Dialogue: 0,0:14:52.08,0:14:54.88,*Default,NTP,0000,0000,0000,,谢谢雷蒙德
Dialogue: 0,0:14:56.84,0:15:00.40,*Default,NTP,0000,0000,0000,,好的嗯
Dialogue: 0,0:15:01.28,0:15:03.04,*Default,NTP,0000,0000,0000,,这个化装舞会是怎么回事
Dialogue: 0,0:15:03.04,0:15:04.48,*Default,NTP,0000,0000,0000,,好吧，让我们看一下
Dialogue: 0,0:15:04.48,0:15:07.12,*Default,NTP,0000,0000,0000,,所以当你称服装为
Dialogue: 0,0:15:07.12,0:15:09.04,*Default,NTP,0000,0000,0000,,传递蝴蝶结和领带
Dialogue: 0,0:15:09.04,0:15:11.12,*Default,NTP,0000,0000,0000,,我想这会更新派对
Dialogue: 0,0:15:11.12,0:15:12.48,*Default,NTP,0000,0000,0000,,以某种方式休息
Dialogue: 0,0:15:12.48,0:15:14.56,*Default,NTP,0000,0000,0000,,它将更新这个实例
Dialogue: 0,0:15:14.56,0:15:17.04,*Default,NTP,0000,0000,0000,,属性
Dialogue: 0,0:15:17.76,0:15:19.92,*Default,NTP,0000,0000,0000,,然后我们要去参加哪个
Dialogue: 0,0:15:19.92,0:15:22.96,*Default,NTP,0000,0000,0000,,称之为这个
Dialogue: 0,0:15:23.12,0:15:26.64,*Default,NTP,0000,0000,0000,,它不一定会打电话给聚会
Dialogue: 0,0:15:26.64,0:15:30.00,*Default,NTP,0000,0000,0000,,完全发挥其作用
Dialogue: 0,0:15:30.00,0:15:33.28,*Default,NTP,0000,0000,0000,,它是否打印包装字符串
Dialogue: 0,0:15:33.28,0:15:36.64,*Default,NTP,0000,0000,0000,,自点即
Dialogue: 0,0:15:37.67,0:15:38.84,*Default,NTP,0000,0000,0000,,[音乐]
Dialogue: 0,0:15:38.84,0:15:41.84,*Default,NTP,0000,0000,0000,,和
Dialogue: 0,0:15:44.32,0:15:48.72,*Default,NTP,0000,0000,0000,,结果是
Dialogue: 0,0:15:48.99,0:15:52.05,*Default,NTP,0000,0000,0000,,[音乐]
Dialogue: 0,0:15:52.84,0:15:55.84,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:16:00.48,0:16:04.00,*Default,NTP,0000,0000,0000,,链接服装这两个都必须有
Dialogue: 0,0:16:04.00,0:16:04.88,*Default,NTP,0000,0000,0000,,出现了
Dialogue: 0,0:16:04.88,0:16:08.32,*Default,NTP,0000,0000,0000,,作为此打印调用的结果，因为
Dialogue: 0,0:16:08.32,0:16:10.16,*Default,NTP,0000,0000,0000,,10 不返回任何内容
Dialogue: 0,0:16:10.16,0:16:12.88,*Default,NTP,0000,0000,0000,,所以这一切都不是由于 10 的返回造成的
Dialogue: 0,0:16:12.88,0:16:13.60,*Default,NTP,0000,0000,0000,,价值
Dialogue: 0,0:16:13.60,0:16:16.80,*Default,NTP,0000,0000,0000,,这一切都必须来自印刷品
Dialogue: 0,0:16:16.80,0:16:19.92,*Default,NTP,0000,0000,0000,,所以当你打电话给reper时
Dialogue: 0,0:16:19.92,0:16:23.04,*Default,NTP,0000,0000,0000,,自拍时
Dialogue: 0,0:16:23.04,0:16:25.84,*Default,NTP,0000,0000,0000,,您正在调用说唱歌手方法
Dialogue: 0,0:16:25.84,0:16:26.72,*Default,NTP,0000,0000,0000,,班上
Dialogue: 0,0:16:26.72,0:16:29.68,*Default,NTP,0000,0000,0000,,呃
Dialogue: 0,0:16:31.52,0:16:36.32,*Default,NTP,0000,0000,0000,,自拍所以嗯
Dialogue: 0,0:16:36.32,0:16:38.56,*Default,NTP,0000,0000,0000,,这不会立即调用
Dialogue: 0,0:16:38.56,0:16:39.60,*Default,NTP,0000,0000,0000,,重复法
Dialogue: 0,0:16:39.60,0:16:43.36,*Default,NTP,0000,0000,0000,,对于这个值本身
Dialogue: 0,0:16:43.36,0:16:45.84,*Default,NTP,0000,0000,0000,,因为相反它只会
Dialogue: 0,0:16:45.84,0:16:46.40,*Default,NTP,0000,0000,0000,,调用
Dialogue: 0,0:16:46.40,0:16:49.76,*Default,NTP,0000,0000,0000,,哦来吧调用
Dialogue: 0,0:16:49.76,0:16:52.24,*Default,NTP,0000,0000,0000,,无论这个链接是什么，包装方法
Dialogue: 0,0:16:52.24,0:16:53.44,*Default,NTP,0000,0000,0000,,我们创造的
Dialogue: 0,0:16:53.44,0:16:56.64,*Default,NTP,0000,0000,0000,,现在如果这个链接碰巧包含
Dialogue: 0,0:16:56.64,0:16:59.76,*Default,NTP,0000,0000,0000,,呃化装舞会实例
Dialogue: 0,0:16:59.76,0:17:01.92,*Default,NTP,0000,0000,0000,,然后我们会接到电话给这位代表
Dialogue: 0,0:17:01.92,0:17:03.36,*Default,NTP,0000,0000,0000,,这是一个复杂的问题
Dialogue: 0,0:17:03.36,0:17:06.56,*Default,NTP,0000,0000,0000,,大约
Dialogue: 0,0:17:06.56,0:17:09.92,*Default,NTP,0000,0000,0000,,我们需要构造这个值
Dialogue: 0,0:17:09.92,0:17:10.64,*Default,NTP,0000,0000,0000,,那
Dialogue: 0,0:17:10.64,0:17:13.84,*Default,NTP,0000,0000,0000,,我们打印得很好
Dialogue: 0,0:17:13.84,0:17:19.36,*Default,NTP,0000,0000,0000,,就在这儿
Dialogue: 0,0:17:19.36,0:17:21.20,*Default,NTP,0000,0000,0000,,我会做一个假设 然后我们会
Dialogue: 0,0:17:21.20,0:17:23.04,*Default,NTP,0000,0000,0000,,追踪它，看看我们是否得到它
Dialogue: 0,0:17:23.04,0:17:24.88,*Default,NTP,0000,0000,0000,,对与不对
Dialogue: 0,0:17:24.88,0:17:29.84,*Default,NTP,0000,0000,0000,,我认为诀窍是在这里打印得很好
Dialogue: 0,0:17:29.84,0:17:34.56,*Default,NTP,0000,0000,0000,,回来
Dialogue: 0,0:17:38.48,0:17:42.00,*Default,NTP,0000,0000,0000,,服装在这里
Dialogue: 0,0:17:42.32,0:17:46.32,*Default,NTP,0000,0000,0000,,以及哦
Dialogue: 0,0:17:46.32,0:17:50.56,*Default,NTP,0000,0000,0000,,在这里创建一个只有一个的链表
Dialogue: 0,0:17:50.56,0:17:53.68,*Default,NTP,0000,0000,0000,,元素，该元素是
Dialogue: 0,0:17:53.68,0:17:56.16,*Default,NTP,0000,0000,0000,,自己
Dialogue: 0,0:17:56.96,0:18:00.24,*Default,NTP,0000,0000,0000,,让我们看看我们做了什么
Dialogue: 0,0:18:00.24,0:18:02.08,*Default,NTP,0000,0000,0000,,我会暂时忽略这一行
Dialogue: 0,0:18:02.08,0:18:04.72,*Default,NTP,0000,0000,0000,,只用我们所拥有的
Dialogue: 0,0:18:04.72,0:18:08.00,*Default,NTP,0000,0000,0000,,如果我们创建一个
Dialogue: 0,0:18:08.00,0:18:09.68,*Default,NTP,0000,0000,0000,,戏服
Dialogue: 0,0:18:09.68,0:18:12.80,*Default,NTP,0000,0000,0000,,到目前为止我们忽略了五和六
Dialogue: 0,0:18:12.80,0:18:14.32,*Default,NTP,0000,0000,0000,,五和六
Dialogue: 0,0:18:14.32,0:18:16.16,*Default,NTP,0000,0000,0000,,我们正在创建一个实例属性
Dialogue: 0,0:18:16.16,0:18:17.52,*Default,NTP,0000,0000,0000,,这是一个链表
Dialogue: 0,0:18:17.52,0:18:20.72,*Default,NTP,0000,0000,0000,,仅包含此服装实例
Dialogue: 0,0:18:20.72,0:18:24.32,*Default,NTP,0000,0000,0000,,现在当我们调用一个倾向时
Dialogue: 0,0:18:24.32,0:18:26.80,*Default,NTP,0000,0000,0000,,我们调用这个打印的方法
Dialogue: 0,0:18:26.80,0:18:28.00,*Default,NTP,0000,0000,0000,,调用的结果
Dialogue: 0,0:18:28.00,0:18:31.36,*Default,NTP,0000,0000,0000,,selfie 上的包装器，它是一个链表
Dialogue: 0,0:18:31.36,0:18:33.52,*Default,NTP,0000,0000,0000,,包含服装
Dialogue: 0,0:18:33.52,0:18:36.56,*Default,NTP,0000,0000,0000,,当您创建链接列表时
Dialogue: 0,0:18:36.56,0:18:38.48,*Default,NTP,0000,0000,0000,,呃，当你创建包装字符串时
Dialogue: 0,0:18:38.48,0:18:39.92,*Default,NTP,0000,0000,0000,,对于链表
Dialogue: 0,0:18:39.92,0:18:44.24,*Default,NTP,0000,0000,0000,,它所做的是它得到
Dialogue: 0,0:18:44.24,0:18:47.20,*Default,NTP,0000,0000,0000,,um 代表每个的字符串
Dialogue: 0,0:18:47.20,0:18:48.08,*Default,NTP,0000,0000,0000,,元素
Dialogue: 0,0:18:48.08,0:18:52.40,*Default,NTP,0000,0000,0000,,并将它们放入更大的表达式中
Dialogue: 0,0:18:52.80,0:18:57.84,*Default,NTP,0000,0000,0000,,让我们看一下
Dialogue: 0,0:18:59.68,0:19:02.56,*Default,NTP,0000,0000,0000,,我们的各种列表都是如此
Dialogue: 0,0:19:02.56,0:19:04.56,*Default,NTP,0000,0000,0000,,碰巧明确地写了它
Dialogue: 0,0:19:04.56,0:19:06.56,*Default,NTP,0000,0000,0000,,当你想要一个包装字符串时，这是一个
Dialogue: 0,0:19:06.56,0:19:08.48,*Default,NTP,0000,0000,0000,,例子
Dialogue: 0,0:19:08.48,0:19:10.56,*Default,NTP,0000,0000,0000,,你这样做的方式就是你
Dialogue: 0,0:19:10.56,0:19:12.08,*Default,NTP,0000,0000,0000,,递归地获取代表字符串
Dialogue: 0,0:19:12.08,0:19:13.28,*Default,NTP,0000,0000,0000,,其余的部分
Dialogue: 0,0:19:13.28,0:19:14.96,*Default,NTP,0000,0000,0000,,但你也得到了包装字符串
Dialogue: 0,0:19:14.96,0:19:16.80,*Default,NTP,0000,0000,0000,,第一个然后你把那些
Dialogue: 0,0:19:16.80,0:19:18.32,*Default,NTP,0000,0000,0000,,组合成一个表达式
Dialogue: 0,0:19:18.32,0:19:20.72,*Default,NTP,0000,0000,0000,,就像第一个的链接
Dialogue: 0,0:19:20.72,0:19:21.60,*Default,NTP,0000,0000,0000,,好像
Dialogue: 0,0:19:21.60,0:19:25.12,*Default,NTP,0000,0000,0000,,不管其余的看起来像这样
Dialogue: 0,0:19:25.12,0:19:26.88,*Default,NTP,0000,0000,0000,,获取此链接的包装字符串
Dialogue: 0,0:19:26.88,0:19:28.96,*Default,NTP,0000,0000,0000,,列出你需要弄清楚如何写的清单
Dialogue: 0,0:19:28.96,0:19:30.00,*Default,NTP,0000,0000,0000,,降到第一
Dialogue: 0,0:19:30.00,0:19:31.12,*Default,NTP,0000,0000,0000,,你需要弄清楚如何写
Dialogue: 0,0:19:31.12,0:19:32.64,*Default,NTP,0000,0000,0000,,沿着列表的其余部分，然后你
Dialogue: 0,0:19:32.64,0:19:36.48,*Default,NTP,0000,0000,0000,,将它们组合成一个表达式
Dialogue: 0,0:19:37.52,0:19:40.56,*Default,NTP,0000,0000,0000,,这就是这里发生的事情
Dialogue: 0,0:19:40.56,0:19:43.52,*Default,NTP,0000,0000,0000,,在这里，我们试图将其绘制为
Dialogue: 0,0:19:43.52,0:19:44.48,*Default,NTP,0000,0000,0000,,细绳
Dialogue: 0,0:19:44.48,0:19:46.72,*Default,NTP,0000,0000,0000,,这意味着我们必须打电话给reper
Dialogue: 0,0:19:46.72,0:19:47.68,*Default,NTP,0000,0000,0000,,自己
Dialogue: 0,0:19:47.68,0:19:49.28,*Default,NTP,0000,0000,0000,,当我们调用 self 的包装器时
Dialogue: 0,0:19:49.28,0:19:51.04,*Default,NTP,0000,0000,0000,,调用这个包装器方法来打印
Dialogue: 0,0:19:51.04,0:19:52.24,*Default,NTP,0000,0000,0000,,很好
Dialogue: 0,0:19:52.24,0:19:55.36,*Default,NTP,0000,0000,0000,,返回字符串服装
Dialogue: 0,0:19:55.36,0:19:55.84,*Default,NTP,0000,0000,0000,,细绳
Dialogue: 0,0:19:55.84,0:19:58.08,*Default,NTP,0000,0000,0000,,代表这件服装
Dialogue: 0,0:19:58.08,0:19:59.12,*Default,NTP,0000,0000,0000,,实例
Dialogue: 0,0:19:59.12,0:20:02.16,*Default,NTP,0000,0000,0000,,然后是包装方法
Dialogue: 0,0:20:02.16,0:20:02.64,*Default,NTP,0000,0000,0000,,关联
Dialogue: 0,0:20:02.64,0:20:06.00,*Default,NTP,0000,0000,0000,,放置单词链接的类
Dialogue: 0,0:20:06.00,0:20:08.64,*Default,NTP,0000,0000,0000,,以及我周围的括号
Dialogue: 0,0:20:08.64,0:20:09.28,*Default,NTP,0000,0000,0000,,回
Dialogue: 0,0:20:09.28,0:20:12.32,*Default,NTP,0000,0000,0000,,就在这里，这还不是结束
Dialogue: 0,0:20:12.32,0:20:13.76,*Default,NTP,0000,0000,0000,,问题的
Dialogue: 0,0:20:13.76,0:20:16.08,*Default,NTP,0000,0000,0000,,显然有一个有一部分
Dialogue: 0,0:20:16.08,0:20:18.24,*Default,NTP,0000,0000,0000,,还有另外一部分
Dialogue: 0,0:20:18.24,0:20:20.16,*Default,NTP,0000,0000,0000,,这是一个很好的我不得不说这是一个
Dialogue: 0,0:20:20.16,0:20:21.52,*Default,NTP,0000,0000,0000,,杀手级问题
Dialogue: 0,0:20:21.52,0:20:25.60,*Default,NTP,0000,0000,0000,,是的，如果考试准备很困难的话
Dialogue: 0,0:20:25.60,0:20:27.44,*Default,NTP,0000,0000,0000,,也许考试会显得更合理
Dialogue: 0,0:20:27.44,0:20:30.64,*Default,NTP,0000,0000,0000,,或者也许不会，我们会看到所以嗯这是
Dialogue: 0,0:20:30.64,0:20:32.84,*Default,NTP,0000,0000,0000,,改变哪一方.10
Dialogue: 0,0:20:32.84,0:20:35.84,*Default,NTP,0000,0000,0000,,做
Dialogue: 0,0:20:36.08,0:20:40.72,*Default,NTP,0000,0000,0000,,我认为以某种任意的方式
Dialogue: 0,0:20:40.72,0:20:44.00,*Default,NTP,0000,0000,0000,,获得这种行为的最简单方法
Dialogue: 0,0:20:44.00,0:20:46.88,*Default,NTP,0000,0000,0000,,就是有点忽略
Dialogue: 0,0:20:46.88,0:20:47.44,*Default,NTP,0000,0000,0000,,一切
Dialogue: 0,0:20:47.44,0:20:50.64,*Default,NTP,0000,0000,0000,,并说哦，从现在开始参加聚会。
Dialogue: 0,0:20:50.64,0:20:55.12,*Default,NTP,0000,0000,0000,,刚刚返回呃
Dialogue: 0,0:20:55.12,0:20:56.33,*Default,NTP,0000,0000,0000,,本文
Dialogue: 0,0:20:56.33,0:20:59.36,*Default,NTP,0000,0000,0000,,[笑声]
Dialogue: 0,0:20:59.36,0:21:02.40,*Default,NTP,0000,0000,0000,,这真的很奇怪，这是一种方法
Dialogue: 0,0:21:02.40,0:21:04.88,*Default,NTP,0000,0000,0000,,破解它来做我们想做的事
Dialogue: 0,0:21:04.88,0:21:07.76,*Default,NTP,0000,0000,0000,,你会完全在那里
Dialogue: 0,0:21:07.76,0:21:09.12,*Default,NTP,0000,0000,0000,,可能是另一种方式
Dialogue: 0,0:21:09.12,0:21:13.12,*Default,NTP,0000,0000,0000,,这涉及到 party.guest.rest
Dialogue: 0,0:21:13.12,0:21:16.08,*Default,NTP,0000,0000,0000,,哦，没有办法，没有办法
Dialogue: 0,0:21:16.08,0:21:17.84,*Default,NTP,0000,0000,0000,,你正在转换
Dialogue: 0,0:21:17.84,0:21:21.28,*Default,NTP,0000,0000,0000,,目前的聚会是什么 是的 不
Dialogue: 0,0:21:21.28,0:21:22.88,*Default,NTP,0000,0000,0000,,这一定是正确的做法
Dialogue: 0,0:21:22.88,0:21:24.00,*Default,NTP,0000,0000,0000,,约翰
Dialogue: 0,0:21:24.00,0:21:27.60,*Default,NTP,0000,0000,0000,,好吧，不，有这个机会喜欢
Dialogue: 0,0:21:27.60,0:21:30.16,*Default,NTP,0000,0000,0000,,将 party.guest.rest 重置为我们想要的值
Dialogue: 0,0:21:30.16,0:21:31.20,*Default,NTP,0000,0000,0000,,想要这样
Dialogue: 0,0:21:31.20,0:21:35.68,*Default,NTP,0000,0000,0000,,啊，是这个，但我们可以重写它
Dialogue: 0,0:21:35.68,0:21:39.12,*Default,NTP,0000,0000,0000,,有呃八和四和一个
Dialogue: 0,0:21:39.12,0:21:40.88,*Default,NTP,0000,0000,0000,,里面有五个
Dialogue: 0,0:21:40.88,0:21:44.00,*Default,NTP,0000,0000,0000,,是的，好吧，然后我们可以喜欢
Dialogue: 0,0:21:44.00,0:21:47.12,*Default,NTP,0000,0000,0000,,打印出来但无论如何我认为
Dialogue: 0,0:21:47.12,0:21:48.40,*Default,NTP,0000,0000,0000,,这解决了问题
Dialogue: 0,0:21:48.40,0:21:50.96,*Default,NTP,0000,0000,0000,,第七方只是做它该做的事
Dialogue: 0,0:21:50.96,0:21:52.08,*Default,NTP,0000,0000,0000,,谁在乎
Dialogue: 0,0:21:52.08,0:21:54.40,*Default,NTP,0000,0000,0000,,呃因为现在每当你调用
Dialogue: 0,0:21:54.40,0:21:58.24,*Default,NTP,0000,0000,0000,,你往往会得到这个
Dialogue: 0,0:21:58.24,0:22:00.08,*Default,NTP,0000,0000,0000,,可能不是答案
Dialogue: 0,0:22:00.08,0:22:02.56,*Default,NTP,0000,0000,0000,,有意但
Dialogue: 0,0:22:02.56,0:22:06.80,*Default,NTP,0000,0000,0000,,好的，真是一次很棒的练习
Dialogue: 0,0:22:06.80,0:22:11.20,*Default,NTP,0000,0000,0000,,我想说的是呃
Dialogue: 0,0:22:11.20,0:22:13.52,*Default,NTP,0000,0000,0000,,试图弄清楚一些是如何嵌套的
Dialogue: 0,0:22:13.52,0:22:15.76,*Default,NTP,0000,0000,0000,,结构
Dialogue: 0,0:22:15.76,0:22:20.16,*Default,NTP,0000,0000,0000,,将表示为链接列表
Dialogue: 0,0:22:20.16,0:22:22.72,*Default,NTP,0000,0000,0000,,如果你有这个东西，链接是什么
Dialogue: 0,0:22:22.72,0:22:24.00,*Default,NTP,0000,0000,0000,,列出等价的所以
Dialogue: 0,0:22:24.00,0:22:26.96,*Default,NTP,0000,0000,0000,,你知道我们就这么称呼这是什么吧
Dialogue: 0,0:22:26.96,0:22:28.88,*Default,NTP,0000,0000,0000,,嗯，这是一个以以下开头的链接列表
Dialogue: 0,0:22:28.88,0:22:30.24,*Default,NTP,0000,0000,0000,,一
Dialogue: 0,0:22:30.24,0:22:35.04,*Default,NTP,0000,0000,0000,,下一个元素实际上是另一个元素
Dialogue: 0,0:22:38.84,0:22:41.84,*Default,NTP,0000,0000,0000,,列表
Dialogue: 0,0:22:44.08,0:22:47.52,*Default,NTP,0000,0000,0000,,最后一个元素是什么
Dialogue: 0,0:22:47.52,0:22:50.24,*Default,NTP,0000,0000,0000,,只是一个数字
Dialogue: 0,0:22:51.04,0:22:54.56,*Default,NTP,0000,0000,0000,,哦，这从来都不是一个好兆头
Dialogue: 0,0:22:54.56,0:22:56.72,*Default,NTP,0000,0000,0000,,所以 s 看起来像 t 看起来像一些
Dialogue: 0,0:22:56.72,0:22:57.76,*Default,NTP,0000,0000,0000,,怪物
Dialogue: 0,0:22:57.76,0:23:00.80,*Default,NTP,0000,0000,0000,,但有一个搅拌方法
Dialogue: 0,0:23:00.80,0:23:02.72,*Default,NTP,0000,0000,0000,,做某事的链表
Dialogue: 0,0:23:02.72,0:23:04.00,*Default,NTP,0000,0000,0000,,合理的
Dialogue: 0,0:23:04.00,0:23:06.96,*Default,NTP,0000,0000,0000,,基本上这是设计好的让我们看看
Dialogue: 0,0:23:06.96,0:23:08.00,*Default,NTP,0000,0000,0000,,在那
Dialogue: 0,0:23:08.00,0:23:10.40,*Default,NTP,0000,0000,0000,,这个楼梯方法，当你
Dialogue: 0,0:23:10.40,0:23:11.92,*Default,NTP,0000,0000,0000,,打印一些东西哦看
Dialogue: 0,0:23:11.92,0:23:15.12,*Default,NTP,0000,0000,0000,,这个例子看起来很熟悉嗯
Dialogue: 0,0:23:15.12,0:23:17.60,*Default,NTP,0000,0000,0000,,这个方法的设计是为了
Dialogue: 0,0:23:17.60,0:23:19.36,*Default,NTP,0000,0000,0000,,行为方式基本相同
Dialogue: 0,0:23:19.36,0:23:22.40,*Default,NTP,0000,0000,0000,,作为内置列表包装器
Dialogue: 0,0:23:22.40,0:23:23.84,*Default,NTP,0000,0000,0000,,这样你就可以看看
Dialogue: 0,0:23:23.84,0:23:25.44,*Default,NTP,0000,0000,0000,,两人之间的书信往来
Dialogue: 0,0:23:25.44,0:23:27.04,*Default,NTP,0000,0000,0000,,现在情况仍然如此，为了
Dialogue: 0,0:23:27.04,0:23:28.80,*Default,NTP,0000,0000,0000,,访问这里的东西
Dialogue: 0,0:23:28.80,0:23:30.64,*Default,NTP,0000,0000,0000,,你知道访问这里的东西
Dialogue: 0,0:23:30.64,0:23:33.04,*Default,NTP,0000,0000,0000,,就像得到 2 看起来像那样
Dialogue: 0,0:23:33.04,0:23:34.72,*Default,NTP,0000,0000,0000,,但把 2 放在这里意味着你有
Dialogue: 0,0:23:34.72,0:23:36.08,*Default,NTP,0000,0000,0000,,将其视为链表
Dialogue: 0,0:23:36.08,0:23:37.44,*Default,NTP,0000,0000,0000,,你必须得到剩下的然后你
Dialogue: 0,0:23:37.44,0:23:38.72,*Default,NTP,0000,0000,0000,,必须得到第一个然后那个
Dialogue: 0,0:23:38.72,0:23:40.32,*Default,NTP,0000,0000,0000,,结果是一个链表，所以你
Dialogue: 0,0:23:40.32,0:23:42.32,*Default,NTP,0000,0000,0000,,必须从中得到一个数字
Dialogue: 0,0:23:42.32,0:23:44.00,*Default,NTP,0000,0000,0000,,所以操作还是不同的
Dialogue: 0,0:23:44.00,0:23:45.44,*Default,NTP,0000,0000,0000,,因为这是一种不同类型的数据
Dialogue: 0,0:23:45.44,0:23:46.72,*Default,NTP,0000,0000,0000,,结构
Dialogue: 0,0:23:46.72,0:23:48.64,*Default,NTP,0000,0000,0000,,但它可以代表同一种
Dialogue: 0,0:23:48.64,0:23:50.40,*Default,NTP,0000,0000,0000,,你可以嵌套的东西
