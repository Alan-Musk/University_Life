[Script Info]
; Script generated by Bilibili Evolved Danmaku Converter
; https://github.com/the1812/Bilibili-Evolved/
Title: Lecture 9. Q&A - Lecture 9. Q&A
ScriptType: v4.00+
PlayResX: 1152
PlayResY: 720
Timer: 10.0000
WrapStyle: 0
ScaledBorderAndShadow: no

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: TopLeft,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,7,32,32,32,0
Style: TopCenter,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,8,32,32,32,0
Style: TopRight,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,9,32,32,32,0
Style: BottomLeft,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,1,32,32,32,0
Style: BottomCenter,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,2,32,32,32,0
Style: BottomRight,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,3,32,32,32,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:01.12,0:00:03.44,BottomCenter,,0,0,0,,welcome to the lecture nine q a
Dialogue: 0,0:00:03.44,0:00:05.60,BottomCenter,,0,0,0,,here we go the question was about what's
Dialogue: 0,0:00:05.60,0:00:08.08,BottomCenter,,0,0,0,,going on with inverse cascade and would
Dialogue: 0,0:00:08.08,0:00:10.00,BottomCenter,,0,0,0,,looking at it in python tutor help us
Dialogue: 0,0:00:10.00,0:00:12.00,BottomCenter,,0,0,0,,understand it i'm guessing not
Dialogue: 0,0:00:12.00,0:00:15.04,BottomCenter,,0,0,0,,i mean you could try and uh but
Dialogue: 0,0:00:15.04,0:00:16.72,BottomCenter,,0,0,0,,most recursion problems are best
Dialogue: 0,0:00:16.72,0:00:18.48,BottomCenter,,0,0,0,,understood by just understanding what
Dialogue: 0,0:00:18.48,0:00:19.52,BottomCenter,,0,0,0,,the pieces do
Dialogue: 0,0:00:19.52,0:00:21.60,BottomCenter,,0,0,0,,and how they fit together rather than
Dialogue: 0,0:00:21.60,0:00:22.72,BottomCenter,,0,0,0,,trying to trace through it
Dialogue: 0,0:00:22.72,0:00:24.40,BottomCenter,,0,0,0,,because as soon as you make the argument
Dialogue: 0,0:00:24.40,0:00:26.32,BottomCenter,,0,0,0,,just a little bit bigger then tracing
Dialogue: 0,0:00:26.32,0:00:27.84,BottomCenter,,0,0,0,,through it becomes
Dialogue: 0,0:00:27.84,0:00:31.44,BottomCenter,,0,0,0,,yet more complicated and so
Dialogue: 0,0:00:31.44,0:00:33.68,BottomCenter,,0,0,0,,the goal here this was like a exercise
Dialogue: 0,0:00:33.68,0:00:35.44,BottomCenter,,0,0,0,,within one of the videos
Dialogue: 0,0:00:35.44,0:00:38.88,BottomCenter,,0,0,0,,was to create this pattern
Dialogue: 0,0:00:38.88,0:00:42.08,BottomCenter,,0,0,0,,um it should be the case when your goal
Dialogue: 0,0:00:42.08,0:00:44.08,BottomCenter,,0,0,0,,is to print a bunch of stuff
Dialogue: 0,0:00:44.08,0:00:46.48,BottomCenter,,0,0,0,,that the code corresponds to printing
Dialogue: 0,0:00:46.48,0:00:48.08,BottomCenter,,0,0,0,,parts of it
Dialogue: 0,0:00:48.08,0:00:51.12,BottomCenter,,0,0,0,,so this call to grow when n
Dialogue: 0,0:00:51.12,0:00:54.24,BottomCenter,,0,0,0,,is one two three four corresponds to all
Dialogue: 0,0:00:54.24,0:00:55.76,BottomCenter,,0,0,0,,of that
Dialogue: 0,0:00:55.76,0:00:59.36,BottomCenter,,0,0,0,,and this call to string
Dialogue: 0,0:00:59.36,0:01:01.20,BottomCenter,,0,0,0,,corresponds to printing all of that and
Dialogue: 0,0:01:01.20,0:01:02.88,BottomCenter,,0,0,0,,what do we leave out oh well we need a
Dialogue: 0,0:01:02.88,0:01:04.31,BottomCenter,,0,0,0,,print watcher before oh and we have a
Dialogue: 0,0:01:04.31,0:01:06.15,BottomCenter,,0,0,0,,line to do it
Dialogue: 0,0:01:06.15,0:01:10.07,BottomCenter,,0,0,0,,so um that kind of explains this
Dialogue: 0,0:01:10.07,0:01:10.95,BottomCenter,,0,0,0,,implementation
Dialogue: 0,0:01:10.95,0:01:12.71,BottomCenter,,0,0,0,,except for that we don't know what grow
Dialogue: 0,0:01:12.71,0:01:14.07,BottomCenter,,0,0,0,,and shrink do and they're
Dialogue: 0,0:01:14.07,0:01:17.59,BottomCenter,,0,0,0,,defined in this kind of complicated way
Dialogue: 0,0:01:17.59,0:01:19.43,BottomCenter,,0,0,0,,but this complicated way isn't actually
Dialogue: 0,0:01:19.43,0:01:21.92,BottomCenter,,0,0,0,,that complicated if we try to unpack it
Dialogue: 0,0:01:21.92,0:01:25.36,BottomCenter,,0,0,0,,so it says grow
Dialogue: 0,0:01:25.36,0:01:27.92,BottomCenter,,0,0,0,,involves taking in a number which at the
Dialogue: 0,0:01:27.92,0:01:29.59,BottomCenter,,0,0,0,,beginning would be one two three four i
Dialogue: 0,0:01:29.59,0:01:30.79,BottomCenter,,0,0,0,,think it's helpful to think about
Dialogue: 0,0:01:30.79,0:01:32.16,BottomCenter,,0,0,0,,examples
Dialogue: 0,0:01:32.16,0:01:34.72,BottomCenter,,0,0,0,,and then calls one function and then
Dialogue: 0,0:01:34.72,0:01:35.20,BottomCenter,,0,0,0,,calls
Dialogue: 0,0:01:35.20,0:01:38.16,BottomCenter,,0,0,0,,another function f then g checks to see
Dialogue: 0,0:01:38.16,0:01:38.80,BottomCenter,,0,0,0,,if n
Dialogue: 0,0:01:38.80,0:01:41.28,BottomCenter,,0,0,0,,is not zero and if so it calls f and
Dialogue: 0,0:01:41.28,0:01:41.84,BottomCenter,,0,0,0,,then g
Dialogue: 0,0:01:41.84,0:01:43.92,BottomCenter,,0,0,0,,and then we see what the f and the g are
Dialogue: 0,0:01:43.92,0:01:44.87,BottomCenter,,0,0,0,,well they're grow
Dialogue: 0,0:01:44.87,0:01:47.84,BottomCenter,,0,0,0,,and their print and the n that we pass
Dialogue: 0,0:01:47.84,0:01:49.76,BottomCenter,,0,0,0,,in is not one two three four but instead
Dialogue: 0,0:01:49.76,0:01:50.16,BottomCenter,,0,0,0,,one
Dialogue: 0,0:01:50.16,0:01:54.48,BottomCenter,,0,0,0,,two three so uh if i had like rewritten
Dialogue: 0,0:01:54.48,0:01:56.80,BottomCenter,,0,0,0,,grow
Dialogue: 0,0:01:57.20,0:01:58.87,BottomCenter,,0,0,0,,without this higher order function
Dialogue: 0,0:01:58.87,0:02:01.43,BottomCenter,,0,0,0,,business it would have just looked like
Dialogue: 0,0:02:01.43,0:02:05.43,BottomCenter,,0,0,0,,grow and divided by 10 print
Dialogue: 0,0:02:05.43,0:02:08.08,BottomCenter,,0,0,0,,and divided by 10. that's what do f and
Dialogue: 0,0:02:08.08,0:02:09.43,BottomCenter,,0,0,0,,then do
Dialogue: 0,0:02:09.43,0:02:12.80,BottomCenter,,0,0,0,,means except that these are both uh
Dialogue: 0,0:02:12.80,0:02:15.75,BottomCenter,,0,0,0,,checking that if it's the case that n
Dialogue: 0,0:02:15.75,0:02:18.08,BottomCenter,,0,0,0,,divided by 10
Dialogue: 0,0:02:18.08,0:02:20.96,BottomCenter,,0,0,0,,and this in python just means if this is
Dialogue: 0,0:02:20.96,0:02:22.56,BottomCenter,,0,0,0,,not equal to zero that would be a good
Dialogue: 0,0:02:22.56,0:02:24.08,BottomCenter,,0,0,0,,one to write either one
Dialogue: 0,0:02:24.08,0:02:26.72,BottomCenter,,0,0,0,,in fact a quirk of python is that the
Dialogue: 0,0:02:26.72,0:02:28.47,BottomCenter,,0,0,0,,sort of standard style guide says you
Dialogue: 0,0:02:28.47,0:02:29.68,BottomCenter,,0,0,0,,should leave this part out
Dialogue: 0,0:02:29.68,0:02:31.75,BottomCenter,,0,0,0,,i think it's fine to leave it in as well
Dialogue: 0,0:02:31.75,0:02:33.75,BottomCenter,,0,0,0,,uh because it makes it more explicit but
Dialogue: 0,0:02:33.75,0:02:36.40,BottomCenter,,0,0,0,,in any case this is the grow function
Dialogue: 0,0:02:36.40,0:02:37.44,BottomCenter,,0,0,0,,that you construct
Dialogue: 0,0:02:37.44,0:02:40.72,BottomCenter,,0,0,0,,by taking in a number n then
Dialogue: 0,0:02:40.72,0:02:43.84,BottomCenter,,0,0,0,,calling f and g which checks to see
Dialogue: 0,0:02:43.84,0:02:48.40,BottomCenter,,0,0,0,,if n divided by 10 is not 0 and if so
Dialogue: 0,0:02:48.40,0:02:50.80,BottomCenter,,0,0,0,,calls f which is grow and then g which
Dialogue: 0,0:02:50.80,0:02:51.59,BottomCenter,,0,0,0,,is print
Dialogue: 0,0:02:51.59,0:02:54.63,BottomCenter,,0,0,0,,in order to do the work
Dialogue: 0,0:02:55.19,0:02:57.91,BottomCenter,,0,0,0,,so in this alternate definition still
Dialogue: 0,0:02:57.91,0:02:59.91,BottomCenter,,0,0,0,,works
Dialogue: 0,0:02:59.91,0:03:01.84,BottomCenter,,0,0,0,,so i guess that's how i would suggest
Dialogue: 0,0:03:01.84,0:03:03.68,BottomCenter,,0,0,0,,understanding this example
Dialogue: 0,0:03:03.68,0:03:05.59,BottomCenter,,0,0,0,,is that you're using the power of higher
Dialogue: 0,0:03:05.59,0:03:07.75,BottomCenter,,0,0,0,,order functions in order to write grow
Dialogue: 0,0:03:07.75,0:03:08.71,BottomCenter,,0,0,0,,and shrink
Dialogue: 0,0:03:08.71,0:03:11.84,BottomCenter,,0,0,0,,in a way that
Dialogue: 0,0:03:11.84,0:03:15.68,BottomCenter,,0,0,0,,is a little bit more succinct by
Dialogue: 0,0:03:15.68,0:03:17.75,BottomCenter,,0,0,0,,having a function that does the thing
Dialogue: 0,0:03:17.75,0:03:19.03,BottomCenter,,0,0,0,,that they have in common which is
Dialogue: 0,0:03:19.03,0:03:21.03,BottomCenter,,0,0,0,,basically like check for a base case
Dialogue: 0,0:03:21.03,0:03:22.72,BottomCenter,,0,0,0,,call one function on and then call some
Dialogue: 0,0:03:22.72,0:03:24.63,BottomCenter,,0,0,0,,other function on end but grow
Dialogue: 0,0:03:24.63,0:03:26.47,BottomCenter,,0,0,0,,involves calling grow first and then
Dialogue: 0,0:03:26.47,0:03:30.31,BottomCenter,,0,0,0,,printing whereas what would phrase look
Dialogue: 0,0:03:30.84,0:03:32.87,BottomCenter,,0,0,0,,like
Dialogue: 0,0:03:32.87,0:03:34.16,BottomCenter,,0,0,0,,well if we look at the definition it
Dialogue: 0,0:03:34.16,0:03:37.52,BottomCenter,,0,0,0,,says first print dimension
Dialogue: 0,0:03:40.00,0:03:41.91,BottomCenter,,0,0,0,,that works and then we can get rid of
Dialogue: 0,0:03:41.91,0:03:43.59,BottomCenter,,0,0,0,,all this stuff it's not doing anything
Dialogue: 0,0:03:43.59,0:03:44.84,BottomCenter,,0,0,0,,anymore because these are being
Dialogue: 0,0:03:44.84,0:03:47.84,BottomCenter,,0,0,0,,redefined
Dialogue: 0,0:03:48.16,0:03:50.87,BottomCenter,,0,0,0,,so let me add a couple things to this uh
Dialogue: 0,0:03:50.87,0:03:51.44,BottomCenter,,0,0,0,,so
Dialogue: 0,0:03:51.44,0:03:54.63,BottomCenter,,0,0,0,,i want to re-emphasize that
Dialogue: 0,0:03:54.63,0:03:57.59,BottomCenter,,0,0,0,,um often when you code and i i still do
Dialogue: 0,0:03:57.59,0:03:58.80,BottomCenter,,0,0,0,,this to this day
Dialogue: 0,0:03:58.80,0:04:00.47,BottomCenter,,0,0,0,,i start with sort of maybe a little
Dialogue: 0,0:04:00.47,0:04:02.40,BottomCenter,,0,0,0,,clunky a little long
Dialogue: 0,0:04:02.40,0:04:04.87,BottomCenter,,0,0,0,,but very explicit concrete
Dialogue: 0,0:04:04.87,0:04:06.08,BottomCenter,,0,0,0,,implementation
Dialogue: 0,0:04:06.08,0:04:07.43,BottomCenter,,0,0,0,,i make sure it works i make sure i
Dialogue: 0,0:04:07.43,0:04:09.43,BottomCenter,,0,0,0,,understand it so for example if i was
Dialogue: 0,0:04:09.43,0:04:11.12,BottomCenter,,0,0,0,,doing this i would start with the ladder
Dialogue: 0,0:04:11.12,0:04:12.56,BottomCenter,,0,0,0,,of these functions where i explicitly
Dialogue: 0,0:04:12.56,0:04:14.15,BottomCenter,,0,0,0,,define the functions it's a little bit
Dialogue: 0,0:04:14.15,0:04:15.03,BottomCenter,,0,0,0,,clearer
Dialogue: 0,0:04:15.03,0:04:16.31,BottomCenter,,0,0,0,,it's a little clunky you can see you
Dialogue: 0,0:04:16.31,0:04:17.75,BottomCenter,,0,0,0,,need a lot more code and then once
Dialogue: 0,0:04:17.75,0:04:19.04,BottomCenter,,0,0,0,,you've got that
Dialogue: 0,0:04:19.04,0:04:20.72,BottomCenter,,0,0,0,,then i can start tightening it up and
Dialogue: 0,0:04:20.72,0:04:22.16,BottomCenter,,0,0,0,,writing efficient code and doing the
Dialogue: 0,0:04:22.16,0:04:23.83,BottomCenter,,0,0,0,,lambda expressions and the reverse works
Dialogue: 0,0:04:23.83,0:04:24.95,BottomCenter,,0,0,0,,when you're trying to understand
Dialogue: 0,0:04:24.95,0:04:26.00,BottomCenter,,0,0,0,,something
Dialogue: 0,0:04:26.00,0:04:28.24,BottomCenter,,0,0,0,,you know that a lambda function is just
Dialogue: 0,0:04:28.24,0:04:29.68,BottomCenter,,0,0,0,,a shortcut for
Dialogue: 0,0:04:29.68,0:04:31.83,BottomCenter,,0,0,0,,a defined function so rewrite it as the
Dialogue: 0,0:04:31.83,0:04:33.27,BottomCenter,,0,0,0,,defined function it's often clear
Dialogue: 0,0:04:33.27,0:04:34.63,BottomCenter,,0,0,0,,because now you're dealing with these
Dialogue: 0,0:04:34.63,0:04:36.24,BottomCenter,,0,0,0,,sort of dual complexities you've got the
Dialogue: 0,0:04:36.24,0:04:37.60,BottomCenter,,0,0,0,,lambda expressions the anonymous
Dialogue: 0,0:04:37.60,0:04:38.31,BottomCenter,,0,0,0,,functions
Dialogue: 0,0:04:38.31,0:04:39.68,BottomCenter,,0,0,0,,and you've got this new concept of
Dialogue: 0,0:04:39.68,0:04:42.07,BottomCenter,,0,0,0,,recursion so removing
Dialogue: 0,0:04:42.07,0:04:44.63,BottomCenter,,0,0,0,,um complexity by just very just
Dialogue: 0,0:04:44.63,0:04:46.07,BottomCenter,,0,0,0,,unpacking that lambda is a good way to
Dialogue: 0,0:04:46.07,0:04:46.72,BottomCenter,,0,0,0,,do it
Dialogue: 0,0:04:46.72,0:04:48.16,BottomCenter,,0,0,0,,i'm also going to re-emphasize that i
Dialogue: 0,0:04:48.16,0:04:50.39,BottomCenter,,0,0,0,,don't think for a lot of the recursion
Dialogue: 0,0:04:50.39,0:04:52.00,BottomCenter,,0,0,0,,examples the environment diagrams are
Dialogue: 0,0:04:52.00,0:04:53.68,BottomCenter,,0,0,0,,the best way to do it i think the better
Dialogue: 0,0:04:53.68,0:04:55.60,BottomCenter,,0,0,0,,way to do it as john was saying is
Dialogue: 0,0:04:55.60,0:04:57.51,BottomCenter,,0,0,0,,to look at the code think about the tree
Dialogue: 0,0:04:57.51,0:04:59.51,BottomCenter,,0,0,0,,diagram of the recursive calls you can
Dialogue: 0,0:04:59.51,0:05:01.12,BottomCenter,,0,0,0,,sketch these things out
Dialogue: 0,0:05:01.12,0:05:04.00,BottomCenter,,0,0,0,,i call this i call this i call this i
Dialogue: 0,0:05:04.00,0:05:05.12,BottomCenter,,0,0,0,,think that's a little bit
Dialogue: 0,0:05:05.12,0:05:07.27,BottomCenter,,0,0,0,,more compact than trying to track these
Dialogue: 0,0:05:07.27,0:05:08.95,BottomCenter,,0,0,0,,huge environment diagrams of all the
Dialogue: 0,0:05:08.95,0:05:11.83,BottomCenter,,0,0,0,,variables
Dialogue: 0,0:05:12.07,0:05:13.83,BottomCenter,,0,0,0,,and there was one question in the check
Dialogue: 0,0:05:13.83,0:05:16.16,BottomCenter,,0,0,0,,a chat about how come this is just if n
Dialogue: 0,0:05:16.16,0:05:17.68,BottomCenter,,0,0,0,,whereas this has a not
Dialogue: 0,0:05:17.68,0:05:21.27,BottomCenter,,0,0,0,,zero and you could remove this zero is a
Dialogue: 0,0:05:21.27,0:05:21.92,BottomCenter,,0,0,0,,false
Dialogue: 0,0:05:21.92,0:05:24.16,BottomCenter,,0,0,0,,value in python meaning that if you say
Dialogue: 0,0:05:24.16,0:05:26.00,BottomCenter,,0,0,0,,if and then a number if that number is
Dialogue: 0,0:05:26.00,0:05:26.48,BottomCenter,,0,0,0,,zero
Dialogue: 0,0:05:26.48,0:05:28.48,BottomCenter,,0,0,0,,then it will not execute the suite of
Dialogue: 0,0:05:28.48,0:05:29.60,BottomCenter,,0,0,0,,the if statement
Dialogue: 0,0:05:29.60,0:05:31.75,BottomCenter,,0,0,0,,if it's anything other than zero so this
Dialogue: 0,0:05:31.75,0:05:33.12,BottomCenter,,0,0,0,,would do the same
Dialogue: 0,0:05:33.12,0:05:35.60,BottomCenter,,0,0,0,,in python you can actually just put in
Dialogue: 0,0:05:35.60,0:05:37.04,BottomCenter,,0,0,0,,it doesn't have to be an equality or
Dialogue: 0,0:05:37.04,0:05:38.07,BottomCenter,,0,0,0,,inequality check
Dialogue: 0,0:05:38.07,0:05:40.95,BottomCenter,,0,0,0,,you can just put in a value and so
Dialogue: 0,0:05:40.95,0:05:42.48,BottomCenter,,0,0,0,,they're now asking so there's no
Dialogue: 0,0:05:42.48,0:05:45.83,BottomCenter,,0,0,0,,base case um great question
Dialogue: 0,0:05:45.83,0:05:47.68,BottomCenter,,0,0,0,,so where would the base case be you
Dialogue: 0,0:05:47.68,0:05:49.19,BottomCenter,,0,0,0,,think about that yeah
Dialogue: 0,0:05:49.19,0:05:53.27,BottomCenter,,0,0,0,,yeah so there's sort of a base case here
Dialogue: 0,0:05:53.27,0:05:56.39,BottomCenter,,0,0,0,,it's just not explicit
Dialogue: 0,0:05:58.00,0:06:02.31,BottomCenter,,0,0,0,,yeah so you kind of say nothing to do
Dialogue: 0,0:06:02.31,0:06:04.72,BottomCenter,,0,0,0,,i think that's the base case is that you
Dialogue: 0,0:06:04.72,0:06:06.00,BottomCenter,,0,0,0,,just kind of return
Dialogue: 0,0:06:06.00,0:06:08.39,BottomCenter,,0,0,0,,it would be a fine way to write it but
Dialogue: 0,0:06:08.39,0:06:09.83,BottomCenter,,0,0,0,,if you wanted to kind of break it out
Dialogue: 0,0:06:09.83,0:06:10.48,BottomCenter,,0,0,0,,into
Dialogue: 0,0:06:10.48,0:06:13.68,BottomCenter,,0,0,0,,a base case and recursive case
Dialogue: 0,0:06:13.68,0:06:15.68,BottomCenter,,0,0,0,,the only action happens in the recursive
Dialogue: 0,0:06:15.68,0:06:17.27,BottomCenter,,0,0,0,,case and the base case
Dialogue: 0,0:06:17.27,0:06:20.39,BottomCenter,,0,0,0,,you don't do anything yeah so the base
Dialogue: 0,0:06:20.39,0:06:21.60,BottomCenter,,0,0,0,,case just says
Dialogue: 0,0:06:21.60,0:06:23.60,BottomCenter,,0,0,0,,stop so if you have a conditional in
Dialogue: 0,0:06:23.60,0:06:25.83,BottomCenter,,0,0,0,,there or the results of the conditional
Dialogue: 0,0:06:25.83,0:06:27.12,BottomCenter,,0,0,0,,i think
Dialogue: 0,0:06:27.12,0:06:29.27,BottomCenter,,0,0,0,,we've broken it somehow i think you got
Dialogue: 0,0:06:29.27,0:06:32.63,BottomCenter,,0,0,0,,it backwards it should be if not
Dialogue: 0,0:06:32.83,0:06:35.51,BottomCenter,,0,0,0,,yeah yeah there it is
Dialogue: 0,0:06:35.51,0:06:38.56,BottomCenter,,0,0,0,,so if there's no conditional
Dialogue: 0,0:06:38.56,0:06:40.31,BottomCenter,,0,0,0,,you're probably going to have trouble
Dialogue: 0,0:06:40.31,0:06:41.27,BottomCenter,,0,0,0,,right so that means it's going to keep
Dialogue: 0,0:06:41.27,0:06:42.80,BottomCenter,,0,0,0,,recursing recursing recursion you got to
Dialogue: 0,0:06:42.80,0:06:44.07,BottomCenter,,0,0,0,,have something that says
Dialogue: 0,0:06:44.07,0:06:46.48,BottomCenter,,0,0,0,,only do this under certain conditions
Dialogue: 0,0:06:46.48,0:06:48.16,BottomCenter,,0,0,0,,and if that certain condition is not
Dialogue: 0,0:06:48.16,0:06:50.63,BottomCenter,,0,0,0,,met well then there's nothing to do so
Dialogue: 0,0:06:50.63,0:06:52.31,BottomCenter,,0,0,0,,you're done now in this case in some of
Dialogue: 0,0:06:52.31,0:06:54.63,BottomCenter,,0,0,0,,the other base cases like fibonacci
Dialogue: 0,0:06:54.63,0:06:56.24,BottomCenter,,0,0,0,,we had to do something we had to return
Dialogue: 0,0:06:56.24,0:06:57.75,BottomCenter,,0,0,0,,zero or one
Dialogue: 0,0:06:57.75,0:07:00.16,BottomCenter,,0,0,0,,but here there's just nothing to do
Dialogue: 0,0:07:00.16,0:07:02.00,BottomCenter,,0,0,0,,we're done we just stopped working yeah
Dialogue: 0,0:07:02.00,0:07:03.12,BottomCenter,,0,0,0,,so there is an
Dialogue: 0,0:07:03.12,0:07:05.68,BottomCenter,,0,0,0,,implicit base case um and i think this
Dialogue: 0,0:07:05.68,0:07:07.27,BottomCenter,,0,0,0,,came up in the lecture too is
Dialogue: 0,0:07:07.27,0:07:08.63,BottomCenter,,0,0,0,,i probably would have written it like
Dialogue: 0,0:07:08.63,0:07:11.19,BottomCenter,,0,0,0,,this with the explicit base case
Dialogue: 0,0:07:11.19,0:07:13.19,BottomCenter,,0,0,0,,just so i can see it it was per april's
Dialogue: 0,0:07:13.19,0:07:14.87,BottomCenter,,0,0,0,,question is i just want to see
Dialogue: 0,0:07:14.87,0:07:17.19,BottomCenter,,0,0,0,,that it's there so i don't have to infer
Dialogue: 0,0:07:17.19,0:07:18.87,BottomCenter,,0,0,0,,it yeah
Dialogue: 0,0:07:18.87,0:07:20.63,BottomCenter,,0,0,0,,yeah i mean the point of this example is
Dialogue: 0,0:07:20.63,0:07:22.31,BottomCenter,,0,0,0,,not to say this is the right way to
Dialogue: 0,0:07:22.31,0:07:24.16,BottomCenter,,0,0,0,,define this function
Dialogue: 0,0:07:24.16,0:07:25.83,BottomCenter,,0,0,0,,because i think it would be much better
Dialogue: 0,0:07:25.83,0:07:27.36,BottomCenter,,0,0,0,,written like this
Dialogue: 0,0:07:27.36,0:07:28.87,BottomCenter,,0,0,0,,but the point of this example was to
Dialogue: 0,0:07:28.87,0:07:31.27,BottomCenter,,0,0,0,,show that it is certainly possible
Dialogue: 0,0:07:31.27,0:07:34.31,BottomCenter,,0,0,0,,to have sort of implicit base cases
Dialogue: 0,0:07:34.31,0:07:35.83,BottomCenter,,0,0,0,,where you only define what to do
Dialogue: 0,0:07:35.83,0:07:38.39,BottomCenter,,0,0,0,,in the recursive case where you could
Dialogue: 0,0:07:38.39,0:07:40.07,BottomCenter,,0,0,0,,use higher order functions
Dialogue: 0,0:07:40.07,0:07:42.63,BottomCenter,,0,0,0,,where the base cases like inside this
Dialogue: 0,0:07:42.63,0:07:45.27,BottomCenter,,0,0,0,,higher order function and it's not here
Dialogue: 0,0:07:45.27,0:07:46.72,BottomCenter,,0,0,0,,all of the things that we've learned so
Dialogue: 0,0:07:46.72,0:07:48.56,BottomCenter,,0,0,0,,far in the class can
Dialogue: 0,0:07:48.56,0:07:51.27,BottomCenter,,0,0,0,,be mixed in with recursion doesn't mean
Dialogue: 0,0:07:51.27,0:07:52.48,BottomCenter,,0,0,0,,it's a good idea
Dialogue: 0,0:07:52.48,0:07:54.00,BottomCenter,,0,0,0,,but it's worth knowing that that's
Dialogue: 0,0:07:54.00,0:07:56.24,BottomCenter,,0,0,0,,possible
Dialogue: 0,0:07:56.24,0:07:58.07,BottomCenter,,0,0,0,,sure good question so the question was
Dialogue: 0,0:07:58.07,0:08:00.07,BottomCenter,,0,0,0,,about count partitions which was an
Dialogue: 0,0:08:00.07,0:08:01.04,BottomCenter,,0,0,0,,example
Dialogue: 0,0:08:01.04,0:08:02.87,BottomCenter,,0,0,0,,from lecture and what's with the with
Dialogue: 0,0:08:02.87,0:08:04.31,BottomCenter,,0,0,0,,them and without them
Dialogue: 0,0:08:04.31,0:08:07.68,BottomCenter,,0,0,0,,and these recursive calls with every
Dialogue: 0,0:08:07.68,0:08:09.83,BottomCenter,,0,0,0,,pre-recursion problem like this one
Dialogue: 0,0:08:09.83,0:08:11.60,BottomCenter,,0,0,0,,where you're taking a
Dialogue: 0,0:08:11.60,0:08:14.72,BottomCenter,,0,0,0,,problem and you're
Dialogue: 0,0:08:14.72,0:08:17.36,BottomCenter,,0,0,0,,solving it with kind of smaller
Dialogue: 0,0:08:17.36,0:08:19.92,BottomCenter,,0,0,0,,instances of the same problem
Dialogue: 0,0:08:19.92,0:08:22.00,BottomCenter,,0,0,0,,i do think it's very important that you
Dialogue: 0,0:08:22.00,0:08:22.95,BottomCenter,,0,0,0,,understand
Dialogue: 0,0:08:22.95,0:08:24.87,BottomCenter,,0,0,0,,what you're trying to get done before
Dialogue: 0,0:08:24.87,0:08:26.16,BottomCenter,,0,0,0,,you start reading the code
Dialogue: 0,0:08:26.16,0:08:27.51,BottomCenter,,0,0,0,,like reading the code just isn't very
Dialogue: 0,0:08:27.51,0:08:29.27,BottomCenter,,0,0,0,,helpful unless you know
Dialogue: 0,0:08:29.27,0:08:31.27,BottomCenter,,0,0,0,,what you're trying to simulate and what
Dialogue: 0,0:08:31.27,0:08:33.12,BottomCenter,,0,0,0,,we're trying to simulate here
Dialogue: 0,0:08:33.12,0:08:35.67,BottomCenter,,0,0,0,,is uh if you're going to write the
Dialogue: 0,0:08:35.67,0:08:36.96,BottomCenter,,0,0,0,,number n
Dialogue: 0,0:08:36.96,0:08:40.15,BottomCenter,,0,0,0,,as a expression of adding up a bunch of
Dialogue: 0,0:08:40.15,0:08:41.84,BottomCenter,,0,0,0,,different numbers that are all m or
Dialogue: 0,0:08:41.84,0:08:43.60,BottomCenter,,0,0,0,,smaller
Dialogue: 0,0:08:43.60,0:08:47.12,BottomCenter,,0,0,0,,then it turns out there's
Dialogue: 0,0:08:47.12,0:08:49.36,BottomCenter,,0,0,0,,a way to split that whole group of
Dialogue: 0,0:08:49.36,0:08:50.48,BottomCenter,,0,0,0,,things that you're counting
Dialogue: 0,0:08:50.48,0:08:53.67,BottomCenter,,0,0,0,,into two smaller groups okay so
Dialogue: 0,0:08:53.67,0:08:56.48,BottomCenter,,0,0,0,,in in this case the two smaller groups
Dialogue: 0,0:08:56.48,0:08:59.20,BottomCenter,,0,0,0,,well let's just fill in the values
Dialogue: 0,0:08:59.20,0:09:03.20,BottomCenter,,0,0,0,,there um if we started with six
Dialogue: 0,0:09:03.20,0:09:08.32,BottomCenter,,0,0,0,,four they would now be two four
Dialogue: 0,0:09:08.32,0:09:12.87,BottomCenter,,0,0,0,,they would be 6 3.
Dialogue: 0,0:09:16.00,0:09:18.72,BottomCenter,,0,0,0,,now adding up to the number 2 using
Dialogue: 0,0:09:18.72,0:09:19.91,BottomCenter,,0,0,0,,positive numbers
Dialogue: 0,0:09:19.91,0:09:22.96,BottomCenter,,0,0,0,,up to size 4 well
Dialogue: 0,0:09:22.96,0:09:25.12,BottomCenter,,0,0,0,,you can't really have a 4 in there or
Dialogue: 0,0:09:25.12,0:09:26.15,BottomCenter,,0,0,0,,you're going to have a sum
Dialogue: 0,0:09:26.15,0:09:29.67,BottomCenter,,0,0,0,,that's bigger than 2. so this is
Dialogue: 0,0:09:29.67,0:09:31.36,BottomCenter,,0,0,0,,actually equivalent to just if we had
Dialogue: 0,0:09:31.36,0:09:31.91,BottomCenter,,0,0,0,,written 2
Dialogue: 0,0:09:31.91,0:09:34.24,BottomCenter,,0,0,0,,2 assuming we get our base cases right
Dialogue: 0,0:09:34.24,0:09:36.00,BottomCenter,,0,0,0,,so basically we're saying
Dialogue: 0,0:09:36.00,0:09:39.51,BottomCenter,,0,0,0,,if you want to write a sum of size up to
Dialogue: 0,0:09:39.51,0:09:42.79,BottomCenter,,0,0,0,,six what you should really do is figure
Dialogue: 0,0:09:42.79,0:09:43.51,BottomCenter,,0,0,0,,out how you
Dialogue: 0,0:09:43.51,0:09:48.08,BottomCenter,,0,0,0,,sum up to two and why is that relevant
Dialogue: 0,0:09:48.08,0:09:52.48,BottomCenter,,0,0,0,,well one way to get six is to use a four
Dialogue: 0,0:09:52.48,0:09:54.72,BottomCenter,,0,0,0,,and then have some other expression that
Dialogue: 0,0:09:54.72,0:09:56.15,BottomCenter,,0,0,0,,adds up to two
Dialogue: 0,0:09:56.15,0:09:57.67,BottomCenter,,0,0,0,,and in fact there's like two different
Dialogue: 0,0:09:57.67,0:09:59.03,BottomCenter,,0,0,0,,ways to do it you could write it that
Dialogue: 0,0:09:59.03,0:09:59.51,BottomCenter,,0,0,0,,way
Dialogue: 0,0:09:59.51,0:10:02.84,BottomCenter,,0,0,0,,or you could write it that way but this
Dialogue: 0,0:10:02.84,0:10:04.55,BottomCenter,,0,0,0,,part
Dialogue: 0,0:10:04.55,0:10:08.79,BottomCenter,,0,0,0,,is represented by this recursive call
Dialogue: 0,0:10:08.79,0:10:12.32,BottomCenter,,0,0,0,,where with m describes that what you're
Dialogue: 0,0:10:12.32,0:10:13.36,BottomCenter,,0,0,0,,really
Dialogue: 0,0:10:13.36,0:10:16.39,BottomCenter,,0,0,0,,counting is expressions that start with
Dialogue: 0,0:10:16.39,0:10:18.63,BottomCenter,,0,0,0,,the number m which in this case is four
Dialogue: 0,0:10:18.63,0:10:20.72,BottomCenter,,0,0,0,,if we're looking at this example
Dialogue: 0,0:10:20.72,0:10:23.03,BottomCenter,,0,0,0,,so definitely think about an example
Dialogue: 0,0:10:23.03,0:10:24.32,BottomCenter,,0,0,0,,when you're trying to analyze what one
Dialogue: 0,0:10:24.32,0:10:25.51,BottomCenter,,0,0,0,,of these does
Dialogue: 0,0:10:25.51,0:10:27.12,BottomCenter,,0,0,0,,and make sure that you know what you're
Dialogue: 0,0:10:27.12,0:10:28.55,BottomCenter,,0,0,0,,counting if you're counting or what
Dialogue: 0,0:10:28.55,0:10:30.32,BottomCenter,,0,0,0,,you're trying to find the maximum of if
Dialogue: 0,0:10:30.32,0:10:31.60,BottomCenter,,0,0,0,,you're trying to find the biggest thing
Dialogue: 0,0:10:31.60,0:10:32.79,BottomCenter,,0,0,0,,or whatever
Dialogue: 0,0:10:32.79,0:10:35.20,BottomCenter,,0,0,0,,and uh in this case we're counting up
Dialogue: 0,0:10:35.20,0:10:37.03,BottomCenter,,0,0,0,,expressions that look like this
Dialogue: 0,0:10:37.03,0:10:41.20,BottomCenter,,0,0,0,,and we're using ones that uh have a four
Dialogue: 0,0:10:41.20,0:10:43.44,BottomCenter,,0,0,0,,i think in the lecture description i
Dialogue: 0,0:10:43.44,0:10:45.12,BottomCenter,,0,0,0,,said that these need to be in
Dialogue: 0,0:10:45.12,0:10:46.72,BottomCenter,,0,0,0,,increasing order so let's just put the
Dialogue: 0,0:10:46.72,0:10:48.79,BottomCenter,,0,0,0,,fours at the end so it doesn't
Dialogue: 0,0:10:48.79,0:10:50.87,BottomCenter,,0,0,0,,make it even more complicated okay and
Dialogue: 0,0:10:50.87,0:10:52.87,BottomCenter,,0,0,0,,then what about without it
Dialogue: 0,0:10:52.87,0:10:55.36,BottomCenter,,0,0,0,,so this says count up all the ways of
Dialogue: 0,0:10:55.36,0:10:56.48,BottomCenter,,0,0,0,,summing to six
Dialogue: 0,0:10:56.48,0:10:59.60,BottomCenter,,0,0,0,,with parts up to size three well that's
Dialogue: 0,0:10:59.60,0:11:01.75,BottomCenter,,0,0,0,,because we're not adding a four
Dialogue: 0,0:11:01.75,0:11:04.32,BottomCenter,,0,0,0,,and so we have to get all the way to six
Dialogue: 0,0:11:04.32,0:11:05.67,BottomCenter,,0,0,0,,but we'll do it with
Dialogue: 0,0:11:05.67,0:11:07.84,BottomCenter,,0,0,0,,parts up to size three and we're not
Dialogue: 0,0:11:07.84,0:11:09.91,BottomCenter,,0,0,0,,adding four at the end right
Dialogue: 0,0:11:09.91,0:11:12.63,BottomCenter,,0,0,0,,um and uh so there might be one like
Dialogue: 0,0:11:12.63,0:11:13.03,BottomCenter,,0,0,0,,that
Dialogue: 0,0:11:13.03,0:11:16.96,BottomCenter,,0,0,0,,and one like that etc all of these down
Dialogue: 0,0:11:16.96,0:11:17.84,BottomCenter,,0,0,0,,here
Dialogue: 0,0:11:17.84,0:11:20.32,BottomCenter,,0,0,0,,are going to be counted by this
Dialogue: 0,0:11:20.32,0:11:22.00,BottomCenter,,0,0,0,,recursive call
Dialogue: 0,0:11:22.00,0:11:23.84,BottomCenter,,0,0,0,,if you count up all of these and you
Dialogue: 0,0:11:23.84,0:11:25.03,BottomCenter,,0,0,0,,count up all of those
Dialogue: 0,0:11:25.03,0:11:26.72,BottomCenter,,0,0,0,,and you add them together then they get
Dialogue: 0,0:11:26.72,0:11:28.39,BottomCenter,,0,0,0,,the count of all the ways of getting to
Dialogue: 0,0:11:28.39,0:11:28.79,BottomCenter,,0,0,0,,six
Dialogue: 0,0:11:28.79,0:11:31.12,BottomCenter,,0,0,0,,using parts up to size four where you
Dialogue: 0,0:11:31.12,0:11:32.87,BottomCenter,,0,0,0,,either used a part up to size four
Dialogue: 0,0:11:32.87,0:11:36.39,BottomCenter,,0,0,0,,or you did so let me add
Dialogue: 0,0:11:36.39,0:11:38.63,BottomCenter,,0,0,0,,two things here if i may so one is one
Dialogue: 0,0:11:38.63,0:11:41.20,BottomCenter,,0,0,0,,of the hallmarks of recursion
Dialogue: 0,0:11:41.20,0:11:42.87,BottomCenter,,0,0,0,,is that you you sort of break the
Dialogue: 0,0:11:42.87,0:11:45.27,BottomCenter,,0,0,0,,problem down into sub problems and those
Dialogue: 0,0:11:45.27,0:11:47.20,BottomCenter,,0,0,0,,sub problems tend to be simpler
Dialogue: 0,0:11:47.20,0:11:49.60,BottomCenter,,0,0,0,,yeah so in this case for example we are
Dialogue: 0,0:11:49.60,0:11:51.03,BottomCenter,,0,0,0,,looking for
Dialogue: 0,0:11:51.03,0:11:53.36,BottomCenter,,0,0,0,,all partitions of six with the maximum
Dialogue: 0,0:11:53.36,0:11:54.08,BottomCenter,,0,0,0,,number is
Dialogue: 0,0:11:54.08,0:11:56.55,BottomCenter,,0,0,0,,four and there's this really beautiful
Dialogue: 0,0:11:56.55,0:11:57.51,BottomCenter,,0,0,0,,graphic
Dialogue: 0,0:11:57.51,0:11:59.91,BottomCenter,,0,0,0,,in the lecture that john showed where he
Dialogue: 0,0:11:59.91,0:12:02.55,BottomCenter,,0,0,0,,showed you all the possible answers
Dialogue: 0,0:12:02.55,0:12:04.63,BottomCenter,,0,0,0,,yeah and what you saw is that there's a
Dialogue: 0,0:12:04.63,0:12:06.24,BottomCenter,,0,0,0,,set of those
Dialogue: 0,0:12:06.24,0:12:09.36,BottomCenter,,0,0,0,,answers that have a 4 in it yeah
Dialogue: 0,0:12:09.36,0:12:11.91,BottomCenter,,0,0,0,,so that's the with four recursive call
Dialogue: 0,0:12:11.91,0:12:12.55,BottomCenter,,0,0,0,,so
Dialogue: 0,0:12:12.55,0:12:15.20,BottomCenter,,0,0,0,,tell me how to get to six if i'm telling
Dialogue: 0,0:12:15.20,0:12:16.39,BottomCenter,,0,0,0,,you one of the numbers
Dialogue: 0,0:12:16.39,0:12:18.32,BottomCenter,,0,0,0,,if the maximum number is four yeah this
Dialogue: 0,0:12:18.32,0:12:20.72,BottomCenter,,0,0,0,,is it and then look at everything below
Dialogue: 0,0:12:20.72,0:12:21.12,BottomCenter,,0,0,0,,that
Dialogue: 0,0:12:21.12,0:12:23.44,BottomCenter,,0,0,0,,there's no four in it yeah so if you if
Dialogue: 0,0:12:23.44,0:12:25.51,BottomCenter,,0,0,0,,you look at the first two lines here
Dialogue: 0,0:12:25.51,0:12:27.75,BottomCenter,,0,0,0,,two plus four is six one plus one plus
Dialogue: 0,0:12:27.75,0:12:30.63,BottomCenter,,0,0,0,,four six those are the only two ways
Dialogue: 0,0:12:30.63,0:12:32.63,BottomCenter,,0,0,0,,that you can get to six where one of the
Dialogue: 0,0:12:32.63,0:12:33.67,BottomCenter,,0,0,0,,numbers is
Dialogue: 0,0:12:33.67,0:12:36.24,BottomCenter,,0,0,0,,four right you can see that of course
Dialogue: 0,0:12:36.24,0:12:38.15,BottomCenter,,0,0,0,,now everything below that
Dialogue: 0,0:12:38.15,0:12:40.24,BottomCenter,,0,0,0,,it's as if we had asked to solve a
Dialogue: 0,0:12:40.24,0:12:41.75,BottomCenter,,0,0,0,,completely different problem
Dialogue: 0,0:12:41.75,0:12:43.36,BottomCenter,,0,0,0,,well not a completely different problem
Dialogue: 0,0:12:43.36,0:12:44.87,BottomCenter,,0,0,0,,a different a smaller problem which is
Dialogue: 0,0:12:44.87,0:12:46.15,BottomCenter,,0,0,0,,how do i get to
Dialogue: 0,0:12:46.15,0:12:50.15,BottomCenter,,0,0,0,,6 where the maximum value is 3
Dialogue: 0,0:12:50.15,0:12:52.15,BottomCenter,,0,0,0,,and let's agree that since three is less
Dialogue: 0,0:12:52.15,0:12:55.20,BottomCenter,,0,0,0,,than four that is part of the solution
Dialogue: 0,0:12:55.20,0:12:57.60,BottomCenter,,0,0,0,,to the first problem so all we've done
Dialogue: 0,0:12:57.60,0:12:59.12,BottomCenter,,0,0,0,,with the with four and the without four
Dialogue: 0,0:12:59.12,0:13:00.39,BottomCenter,,0,0,0,,is we've split
Dialogue: 0,0:13:00.39,0:13:03.91,BottomCenter,,0,0,0,,the solution space here into two sets
Dialogue: 0,0:13:03.91,0:13:05.51,BottomCenter,,0,0,0,,one that include four one that don't
Dialogue: 0,0:13:05.51,0:13:07.84,BottomCenter,,0,0,0,,include four and then we do it again
Dialogue: 0,0:13:07.84,0:13:09.51,BottomCenter,,0,0,0,,so then below there's the solutions that
Dialogue: 0,0:13:09.51,0:13:11.91,BottomCenter,,0,0,0,,include three and don't include three
Dialogue: 0,0:13:11.91,0:13:13.12,BottomCenter,,0,0,0,,and then there's the ones that include
Dialogue: 0,0:13:13.12,0:13:14.87,BottomCenter,,0,0,0,,two and don't include two and notice
Dialogue: 0,0:13:14.87,0:13:16.96,BottomCenter,,0,0,0,,that we keep simplifying the problem
Dialogue: 0,0:13:16.96,0:13:20.24,BottomCenter,,0,0,0,,yeah so that's the elegance of recursion
Dialogue: 0,0:13:20.24,0:13:22.72,BottomCenter,,0,0,0,,is that you sort of you sort of peel off
Dialogue: 0,0:13:22.72,0:13:23.91,BottomCenter,,0,0,0,,a little bit of the problem that's easy
Dialogue: 0,0:13:23.91,0:13:25.03,BottomCenter,,0,0,0,,to solve
Dialogue: 0,0:13:25.03,0:13:26.15,BottomCenter,,0,0,0,,you know it's almost like almost like
Dialogue: 0,0:13:26.15,0:13:27.84,BottomCenter,,0,0,0,,the base case and then everything else
Dialogue: 0,0:13:27.84,0:13:28.63,BottomCenter,,0,0,0,,you just do
Dialogue: 0,0:13:28.63,0:13:30.32,BottomCenter,,0,0,0,,well recursively you just sort of jump
Dialogue: 0,0:13:30.32,0:13:32.39,BottomCenter,,0,0,0,,off the cliff say that you're going to
Dialogue: 0,0:13:32.39,0:13:33.44,BottomCenter,,0,0,0,,do it
Dialogue: 0,0:13:33.44,0:13:35.75,BottomCenter,,0,0,0,,and it happens so that's what those two
Dialogue: 0,0:13:35.75,0:13:38.63,BottomCenter,,0,0,0,,things are right there
Dialogue: 0,0:13:38.79,0:13:40.48,BottomCenter,,0,0,0,,if this takes a while to sync it like
Dialogue: 0,0:13:40.48,0:13:42.15,BottomCenter,,0,0,0,,that is very normal
Dialogue: 0,0:13:42.15,0:13:44.32,BottomCenter,,0,0,0,,um you know you might get up to this
Dialogue: 0,0:13:44.32,0:13:46.00,BottomCenter,,0,0,0,,point in the course and think like isn't
Dialogue: 0,0:13:46.00,0:13:47.36,BottomCenter,,0,0,0,,computer science really about just
Dialogue: 0,0:13:47.36,0:13:48.72,BottomCenter,,0,0,0,,learning all the rules
Dialogue: 0,0:13:48.72,0:13:52.00,BottomCenter,,0,0,0,,and then like applying them and maybe
Dialogue: 0,0:13:52.00,0:13:53.67,BottomCenter,,0,0,0,,looping through stuff but it turns out
Dialogue: 0,0:13:53.67,0:13:55.27,BottomCenter,,0,0,0,,that computer science is broader than
Dialogue: 0,0:13:55.27,0:13:56.55,BottomCenter,,0,0,0,,that it's really about
Dialogue: 0,0:13:56.55,0:13:58.55,BottomCenter,,0,0,0,,solving all kinds of problems using
Dialogue: 0,0:13:58.55,0:13:59.84,BottomCenter,,0,0,0,,computation
Dialogue: 0,0:13:59.84,0:14:02.39,BottomCenter,,0,0,0,,and this idea that you could use things
Dialogue: 0,0:14:02.39,0:14:02.87,BottomCenter,,0,0,0,,you
Dialogue: 0,0:14:02.87,0:14:04.79,BottomCenter,,0,0,0,,are building in order to build bigger
Dialogue: 0,0:14:04.79,0:14:07.12,BottomCenter,,0,0,0,,things comes up over and over and over
Dialogue: 0,0:14:07.12,0:14:08.32,BottomCenter,,0,0,0,,again and it's a different way of
Dialogue: 0,0:14:08.32,0:14:08.79,BottomCenter,,0,0,0,,thinking
Dialogue: 0,0:14:08.79,0:14:12.15,BottomCenter,,0,0,0,,and one of the trickiest parts
Dialogue: 0,0:14:12.15,0:14:14.96,BottomCenter,,0,0,0,,is that you need to relate the code to
Dialogue: 0,0:14:14.96,0:14:16.15,BottomCenter,,0,0,0,,what in the world
Dialogue: 0,0:14:16.15,0:14:17.91,BottomCenter,,0,0,0,,you're representing that's where how
Dialogue: 0,0:14:17.91,0:14:20.39,BottomCenter,,0,0,0,,most like interesting programs work
Dialogue: 0,0:14:20.39,0:14:21.84,BottomCenter,,0,0,0,,is that you're representing something
Dialogue: 0,0:14:21.84,0:14:23.75,BottomCenter,,0,0,0,,about the world using
Dialogue: 0,0:14:23.75,0:14:26.15,BottomCenter,,0,0,0,,your code whether it's numbers or we'll
Dialogue: 0,0:14:26.15,0:14:27.12,BottomCenter,,0,0,0,,learn about lists
Dialogue: 0,0:14:27.12,0:14:28.79,BottomCenter,,0,0,0,,on monday or whatever it is you can
Dialogue: 0,0:14:28.79,0:14:30.08,BottomCenter,,0,0,0,,represent all kinds of stuff in the
Dialogue: 0,0:14:30.08,0:14:32.15,BottomCenter,,0,0,0,,world using your program
Dialogue: 0,0:14:32.15,0:14:34.32,BottomCenter,,0,0,0,,but that means that like lines of code
Dialogue: 0,0:14:34.32,0:14:36.00,BottomCenter,,0,0,0,,have to correspond to stuff that you're
Dialogue: 0,0:14:36.00,0:14:37.03,BottomCenter,,0,0,0,,trying to represent
Dialogue: 0,0:14:37.03,0:14:38.32,BottomCenter,,0,0,0,,and it takes a little while to get used
Dialogue: 0,0:14:38.32,0:14:41.51,BottomCenter,,0,0,0,,to that but you'll get better at it
Dialogue: 0,0:14:42.48,0:14:44.32,BottomCenter,,0,0,0,,there's a question in the chat that asks
Dialogue: 0,0:14:44.32,0:14:46.08,BottomCenter,,0,0,0,,do we go all the way down to
Dialogue: 0,0:14:46.08,0:14:49.20,BottomCenter,,0,0,0,,six two uh sorry to six one or do we
Dialogue: 0,0:14:49.20,0:14:49.67,BottomCenter,,0,0,0,,stop
Dialogue: 0,0:14:49.67,0:14:52.79,BottomCenter,,0,0,0,,at six two and you can see here that to
Dialogue: 0,0:14:52.79,0:14:53.03,BottomCenter,,0,0,0,,get
Dialogue: 0,0:14:53.03,0:14:55.91,BottomCenter,,0,0,0,,that last line here we have to do six
Dialogue: 0,0:14:55.91,0:14:56.79,BottomCenter,,0,0,0,,one
Dialogue: 0,0:14:56.79,0:14:58.79,BottomCenter,,0,0,0,,so we go all the way down to 6 1 and you
Dialogue: 0,0:14:58.79,0:15:00.96,BottomCenter,,0,0,0,,can also see the base case
Dialogue: 0,0:15:00.96,0:15:04.55,BottomCenter,,0,0,0,,is that when n is equal to 0
Dialogue: 0,0:15:04.55,0:15:06.15,BottomCenter,,0,0,0,,and is less than 0 which means we've
Dialogue: 0,0:15:06.15,0:15:07.91,BottomCenter,,0,0,0,,gone sideways somewhere
Dialogue: 0,0:15:07.91,0:15:11.12,BottomCenter,,0,0,0,,and m is 0. so the base case
Dialogue: 0,0:15:11.12,0:15:13.67,BottomCenter,,0,0,0,,when you stop is either n has gone to
Dialogue: 0,0:15:13.67,0:15:14.32,BottomCenter,,0,0,0,,zero
Dialogue: 0,0:15:14.32,0:15:16.63,BottomCenter,,0,0,0,,or m has gone to zero in which case
Dialogue: 0,0:15:16.63,0:15:17.60,BottomCenter,,0,0,0,,there's nothing to do
Dialogue: 0,0:15:17.60,0:15:20.32,BottomCenter,,0,0,0,,and so that m equals one does in fact
Dialogue: 0,0:15:20.32,0:15:20.63,BottomCenter,,0,0,0,,get
Dialogue: 0,0:15:20.63,0:15:24.39,BottomCenter,,0,0,0,,um partitioned in the recursive call
Dialogue: 0,0:15:24.39,0:15:27.36,BottomCenter,,0,0,0,,yeah so you go you go from six six four
Dialogue: 0,0:15:27.36,0:15:28.63,BottomCenter,,0,0,0,,to two four
Dialogue: 0,0:15:28.63,0:15:31.75,BottomCenter,,0,0,0,,but you also go from six six or six four
Dialogue: 0,0:15:31.75,0:15:32.55,BottomCenter,,0,0,0,,to six three
Dialogue: 0,0:15:32.55,0:15:37.67,BottomCenter,,0,0,0,,and that goes to both uh
Dialogue: 0,0:15:38.15,0:15:41.51,BottomCenter,,0,0,0,,uh three three and five
Dialogue: 0,0:15:41.51,0:15:45.60,BottomCenter,,0,0,0,,and six two uh it's way too early for
Dialogue: 0,0:15:45.60,0:15:46.24,BottomCenter,,0,0,0,,this man
Dialogue: 0,0:15:46.24,0:15:47.84,BottomCenter,,0,0,0,,but the point is like there's all these
Dialogue: 0,0:15:47.84,0:15:49.75,BottomCenter,,0,0,0,,different options and they both happen
Dialogue: 0,0:15:49.75,0:15:51.27,BottomCenter,,0,0,0,,each time and so you go from six four to
Dialogue: 0,0:15:51.27,0:15:52.48,BottomCenter,,0,0,0,,six three to six two
Dialogue: 0,0:15:52.48,0:15:55.51,BottomCenter,,0,0,0,,to six one to five one to four one to
Dialogue: 0,0:15:55.51,0:15:57.27,BottomCenter,,0,0,0,,three one to two one to one one
Dialogue: 0,0:15:57.27,0:15:59.27,BottomCenter,,0,0,0,,to zero one and then you finally like
Dialogue: 0,0:15:59.27,0:16:00.32,BottomCenter,,0,0,0,,have built this
Dialogue: 0,0:16:00.32,0:16:02.55,BottomCenter,,0,0,0,,last example but it takes it takes a
Dialogue: 0,0:16:02.55,0:16:04.48,BottomCenter,,0,0,0,,bunch of recursive calls to even count
Dialogue: 0,0:16:04.48,0:16:05.44,BottomCenter,,0,0,0,,one of these
Dialogue: 0,0:16:05.44,0:16:06.96,BottomCenter,,0,0,0,,but you're making so many that you count
Dialogue: 0,0:16:06.96,0:16:09.12,BottomCenter,,0,0,0,,them all so there's another question
Dialogue: 0,0:16:09.12,0:16:10.24,BottomCenter,,0,0,0,,here which i like which is
Dialogue: 0,0:16:10.24,0:16:14.00,BottomCenter,,0,0,0,,could we have done so in your with m
Dialogue: 0,0:16:14.00,0:16:16.79,BottomCenter,,0,0,0,,example you said well we can't really do
Dialogue: 0,0:16:16.79,0:16:18.79,BottomCenter,,0,0,0,,2 4 this is basically 2 2. so could we
Dialogue: 0,0:16:18.79,0:16:19.91,BottomCenter,,0,0,0,,have done
Dialogue: 0,0:16:19.91,0:16:23.03,BottomCenter,,0,0,0,,n minus m n minus m
Dialogue: 0,0:16:23.03,0:16:26.15,BottomCenter,,0,0,0,,for the with m call
Dialogue: 0,0:16:26.15,0:16:29.20,BottomCenter,,0,0,0,,um yeah that would have worked for this
Dialogue: 0,0:16:29.20,0:16:32.24,BottomCenter,,0,0,0,,example but not for all examples one
Dialogue: 0,0:16:32.24,0:16:33.27,BottomCenter,,0,0,0,,thing you could do
Dialogue: 0,0:16:33.27,0:16:35.84,BottomCenter,,0,0,0,,is you could write i want the minimum of
Dialogue: 0,0:16:35.84,0:16:36.39,BottomCenter,,0,0,0,,m
Dialogue: 0,0:16:36.39,0:16:39.44,BottomCenter,,0,0,0,,and n minus m to say like look
Dialogue: 0,0:16:39.44,0:16:42.24,BottomCenter,,0,0,0,,if if this is getting so small that it's
Dialogue: 0,0:16:42.24,0:16:44.08,BottomCenter,,0,0,0,,bigger than m why don't we just use that
Dialogue: 0,0:16:44.08,0:16:47.44,BottomCenter,,0,0,0,,instead but sometimes it's not bigger in
Dialogue: 0,0:16:47.44,0:16:48.08,BottomCenter,,0,0,0,,6
Dialogue: 0,0:16:48.08,0:16:51.60,BottomCenter,,0,0,0,,6 4 it turned out it was if this was
Dialogue: 0,0:16:51.60,0:16:55.44,BottomCenter,,0,0,0,,15 4 then after using 1 4 you'd be at 11
Dialogue: 0,0:16:55.44,0:16:57.03,BottomCenter,,0,0,0,,4 but you don't want to make a recursive
Dialogue: 0,0:16:57.03,0:16:58.32,BottomCenter,,0,0,0,,call on 11 11
Dialogue: 0,0:16:58.32,0:16:59.51,BottomCenter,,0,0,0,,because then you're using parts that are
Dialogue: 0,0:16:59.51,0:17:00.96,BottomCenter,,0,0,0,,bigger than size 4 which is where you
Dialogue: 0,0:17:00.96,0:17:02.08,BottomCenter,,0,0,0,,wanted to start so
Dialogue: 0,0:17:02.08,0:17:03.51,BottomCenter,,0,0,0,,this would be a perfectly good
Dialogue: 0,0:17:03.51,0:17:06.31,BottomCenter,,0,0,0,,alternative version
Dialogue: 0,0:17:07.68,0:17:09.75,BottomCenter,,0,0,0,,so remember first of all so i think
Dialogue: 0,0:17:09.75,0:17:11.27,BottomCenter,,0,0,0,,you're asking about the return in the
Dialogue: 0,0:17:11.27,0:17:13.20,BottomCenter,,0,0,0,,else clause yeah
Dialogue: 0,0:17:13.20,0:17:14.88,BottomCenter,,0,0,0,,yeah right so we're asking about the
Dialogue: 0,0:17:14.88,0:17:16.96,BottomCenter,,0,0,0,,return on that size now remember
Dialogue: 0,0:17:16.96,0:17:20.24,BottomCenter,,0,0,0,,that that return has to be evaluated
Dialogue: 0,0:17:20.24,0:17:23.03,BottomCenter,,0,0,0,,every single time we call count
Dialogue: 0,0:17:23.03,0:17:24.64,BottomCenter,,0,0,0,,partitions
Dialogue: 0,0:17:24.64,0:17:26.31,BottomCenter,,0,0,0,,right there's not just one return here
Dialogue: 0,0:17:26.31,0:17:28.64,BottomCenter,,0,0,0,,there are multiple multiple multiple
Dialogue: 0,0:17:28.64,0:17:29.51,BottomCenter,,0,0,0,,returns
Dialogue: 0,0:17:29.51,0:17:31.68,BottomCenter,,0,0,0,,right so why so let's do the first call
Dialogue: 0,0:17:31.68,0:17:33.68,BottomCenter,,0,0,0,,to close count partitions
Dialogue: 0,0:17:33.68,0:17:36.31,BottomCenter,,0,0,0,,what do you do you call competition
Dialogue: 0,0:17:36.31,0:17:37.92,BottomCenter,,0,0,0,,that's the first line there with the
Dialogue: 0,0:17:37.92,0:17:38.88,BottomCenter,,0,0,0,,with m
Dialogue: 0,0:17:38.88,0:17:42.00,BottomCenter,,0,0,0,,there is a promise to come back yeah and
Dialogue: 0,0:17:42.00,0:17:44.31,BottomCenter,,0,0,0,,do the without and then the return
Dialogue: 0,0:17:44.31,0:17:46.00,BottomCenter,,0,0,0,,but you can't do that until you finish
Dialogue: 0,0:17:46.00,0:17:47.35,BottomCenter,,0,0,0,,the with
Dialogue: 0,0:17:47.35,0:17:48.64,BottomCenter,,0,0,0,,so you go off and you do a bunch of
Dialogue: 0,0:17:48.64,0:17:50.79,BottomCenter,,0,0,0,,bunch of recursive calls eventually it
Dialogue: 0,0:17:50.79,0:17:52.96,BottomCenter,,0,0,0,,will hit a base case in return
Dialogue: 0,0:17:52.96,0:17:55.11,BottomCenter,,0,0,0,,and then you'll do the without it'll do
Dialogue: 0,0:17:55.11,0:17:56.55,BottomCenter,,0,0,0,,a bunch of recursive calls eventually at
Dialogue: 0,0:17:56.55,0:17:58.16,BottomCenter,,0,0,0,,a base case in return and then you do a
Dialogue: 0,0:17:58.16,0:18:00.40,BottomCenter,,0,0,0,,return so there isn't just one return
Dialogue: 0,0:18:00.40,0:18:02.24,BottomCenter,,0,0,0,,there is the return of everything that
Dialogue: 0,0:18:02.24,0:18:03.68,BottomCenter,,0,0,0,,is being built up
Dialogue: 0,0:18:03.68,0:18:05.27,BottomCenter,,0,0,0,,yeah and that's why you get all the
Dialogue: 0,0:18:05.27,0:18:07.59,BottomCenter,,0,0,0,,outputs not just that last one with the
Dialogue: 0,0:18:07.59,0:18:10.07,BottomCenter,,0,0,0,,one on one
Dialogue: 0,0:18:10.96,0:18:12.64,BottomCenter,,0,0,0,,should we do something a little bit fun
Dialogue: 0,0:18:12.64,0:18:14.64,BottomCenter,,0,0,0,,we could use a decorator to see exactly
Dialogue: 0,0:18:14.64,0:18:16.00,BottomCenter,,0,0,0,,how it works
Dialogue: 0,0:18:16.00,0:18:17.35,BottomCenter,,0,0,0,,i was about to ask i think we should use
Dialogue: 0,0:18:17.35,0:18:19.27,BottomCenter,,0,0,0,,a decorator illustrate
Dialogue: 0,0:18:19.27,0:18:23.75,BottomCenter,,0,0,0,,what honey just described so uh
Dialogue: 0,0:18:26.88,0:18:29.92,BottomCenter,,0,0,0,,well let's call it trace so we'll trace
Dialogue: 0,0:18:29.92,0:18:30.88,BottomCenter,,0,0,0,,a function
Dialogue: 0,0:18:30.88,0:18:34.64,BottomCenter,,0,0,0,,by creating a new function that takes
Dialogue: 0,0:18:34.64,0:18:38.16,BottomCenter,,0,0,0,,n and m and it's actually going to
Dialogue: 0,0:18:38.16,0:18:41.27,BottomCenter,,0,0,0,,get the return value of calling
Dialogue: 0,0:18:41.27,0:18:44.40,BottomCenter,,0,0,0,,that uh f
Dialogue: 0,0:18:44.40,0:18:47.11,BottomCenter,,0,0,0,,on n m and then it's gonna print what
Dialogue: 0,0:18:47.11,0:18:47.75,BottomCenter,,0,0,0,,happened
Dialogue: 0,0:18:47.75,0:18:51.27,BottomCenter,,0,0,0,,so this is gonna print
Dialogue: 0,0:18:51.27,0:18:54.55,BottomCenter,,0,0,0,,uh f
Dialogue: 0,0:18:54.55,0:18:55.92,BottomCenter,,0,0,0,,that's just to get the name count
Dialogue: 0,0:18:55.92,0:18:57.68,BottomCenter,,0,0,0,,partitions
Dialogue: 0,0:18:57.68,0:19:01.83,BottomCenter,,0,0,0,,uh and then we had an m
Dialogue: 0,0:19:01.83,0:19:04.88,BottomCenter,,0,0,0,,and then we had uh
Dialogue: 0,0:19:04.88,0:19:08.72,BottomCenter,,0,0,0,,m and then
Dialogue: 0,0:19:08.72,0:19:11.75,BottomCenter,,0,0,0,,we had uh what a return
Dialogue: 0,0:19:11.75,0:19:14.64,BottomCenter,,0,0,0,,and what did it return
Dialogue: 0,0:19:15.75,0:19:19.68,BottomCenter,,0,0,0,,result okay i'm sure there's a better
Dialogue: 0,0:19:19.68,0:19:20.79,BottomCenter,,0,0,0,,way to write this but
Dialogue: 0,0:19:20.79,0:19:24.31,BottomCenter,,0,0,0,,we've done what we've done
Dialogue: 0,0:19:24.31,0:19:29.51,BottomCenter,,0,0,0,,uh return g
Dialogue: 0,0:19:31.68,0:19:34.96,BottomCenter,,0,0,0,,and uh we actually do need to move this
Dialogue: 0,0:19:34.96,0:19:39.68,BottomCenter,,0,0,0,,up here so that we can use it
Dialogue: 0,0:19:39.68,0:19:40.88,BottomCenter,,0,0,0,,and i really need to make it a little
Dialogue: 0,0:19:40.88,0:19:42.96,BottomCenter,,0,0,0,,wider so it doesn't look so weird get my
Dialogue: 0,0:19:42.96,0:19:44.55,BottomCenter,,0,0,0,,picture out of the way
Dialogue: 0,0:19:44.55,0:19:47.27,BottomCenter,,0,0,0,,and then we can trace this and then we
Dialogue: 0,0:19:47.27,0:19:49.68,BottomCenter,,0,0,0,,can try to look at what happens
Dialogue: 0,0:19:49.68,0:19:52.79,BottomCenter,,0,0,0,,when we call count partitions on six and
Dialogue: 0,0:19:52.79,0:19:54.48,BottomCenter,,0,0,0,,four
Dialogue: 0,0:19:54.48,0:19:58.16,BottomCenter,,0,0,0,,it crashes uh i think you've got
Dialogue: 0,0:19:58.16,0:20:01.35,BottomCenter,,0,0,0,,ah you have to convert yeah
Dialogue: 0,0:20:03.35,0:20:07.83,BottomCenter,,0,0,0,,well that was a miracle that that ran
Dialogue: 0,0:20:10.00,0:20:12.24,BottomCenter,,0,0,0,,quite a crash now you got another oh
Dialogue: 0,0:20:12.24,0:20:14.48,BottomCenter,,0,0,0,,result is an int
Dialogue: 0,0:20:14.48,0:20:16.72,BottomCenter,,0,0,0,,okay
Dialogue: 0,0:20:17.51,0:20:19.27,BottomCenter,,0,0,0,,so there are more compact ways to build
Dialogue: 0,0:20:19.27,0:20:20.40,BottomCenter,,0,0,0,,a big string but we haven't talked to
Dialogue: 0,0:20:20.40,0:20:21.51,BottomCenter,,0,0,0,,you about them yet so
Dialogue: 0,0:20:21.51,0:20:24.88,BottomCenter,,0,0,0,,yeah uh oh you've got a return
Dialogue: 0,0:20:24.88,0:20:27.92,BottomCenter,,0,0,0,,none somewhere oh yeah there it is
Dialogue: 0,0:20:27.92,0:20:30.48,BottomCenter,,0,0,0,,okay we finally made it okay so here's
Dialogue: 0,0:20:30.48,0:20:32.00,BottomCenter,,0,0,0,,what happened is that
Dialogue: 0,0:20:32.00,0:20:36.31,BottomCenter,,0,0,0,,competitions actually returned nine
Dialogue: 0,0:20:36.31,0:20:40.72,BottomCenter,,0,0,0,,when we called it on six and four
Dialogue: 0,0:20:40.72,0:20:43.11,BottomCenter,,0,0,0,,so this expression actually came up with
Dialogue: 0,0:20:43.11,0:20:44.64,BottomCenter,,0,0,0,,nine at the very end
Dialogue: 0,0:20:44.64,0:20:46.31,BottomCenter,,0,0,0,,why did it come up with nine well it
Dialogue: 0,0:20:46.31,0:20:48.40,BottomCenter,,0,0,0,,came up with two for this
Dialogue: 0,0:20:48.40,0:20:50.55,BottomCenter,,0,0,0,,which are these two and it came up with
Dialogue: 0,0:20:50.55,0:20:51.68,BottomCenter,,0,0,0,,seven for this
Dialogue: 0,0:20:51.68,0:20:52.96,BottomCenter,,0,0,0,,i didn't list them all out but you saw
Dialogue: 0,0:20:52.96,0:20:55.27,BottomCenter,,0,0,0,,them in a picture
Dialogue: 0,0:20:55.27,0:20:57.11,BottomCenter,,0,0,0,,and that seven came from calling
Dialogue: 0,0:20:57.11,0:20:59.59,BottomCenter,,0,0,0,,competitions on six and three
Dialogue: 0,0:20:59.59,0:21:01.75,BottomCenter,,0,0,0,,and where did the two come from well
Dialogue: 0,0:21:01.75,0:21:02.72,BottomCenter,,0,0,0,,long ago
Dialogue: 0,0:21:02.72,0:21:04.96,BottomCenter,,0,0,0,,we counted called competitions on two
Dialogue: 0,0:21:04.96,0:21:07.03,BottomCenter,,0,0,0,,and two and that's how we got the two
Dialogue: 0,0:21:07.03,0:21:10.55,BottomCenter,,0,0,0,,so it added you know that two
Dialogue: 0,0:21:10.55,0:21:14.31,BottomCenter,,0,0,0,,and that seven together to get this nine
Dialogue: 0,0:21:14.31,0:21:16.16,BottomCenter,,0,0,0,,how does it keep track of all this stuff
Dialogue: 0,0:21:16.16,0:21:18.40,BottomCenter,,0,0,0,,well that is the mechanics of
Dialogue: 0,0:21:18.40,0:21:19.92,BottomCenter,,0,0,0,,the programming language how call
Dialogue: 0,0:21:19.92,0:21:21.20,BottomCenter,,0,0,0,,expressions work is that they don't
Dialogue: 0,0:21:21.20,0:21:22.72,BottomCenter,,0,0,0,,return until they have all
Dialogue: 0,0:21:22.72,0:21:25.11,BottomCenter,,0,0,0,,of the values that they need to compute
Dialogue: 0,0:21:25.11,0:21:27.20,BottomCenter,,0,0,0,,and uh then can compute the return value
Dialogue: 0,0:21:27.20,0:21:28.88,BottomCenter,,0,0,0,,and then returns that so
Dialogue: 0,0:21:28.88,0:21:30.55,BottomCenter,,0,0,0,,this thing is doing a bunch of work in
Dialogue: 0,0:21:30.55,0:21:31.92,BottomCenter,,0,0,0,,order to find out that with m
Dialogue: 0,0:21:31.92,0:21:34.24,BottomCenter,,0,0,0,,is two making a bunch of recursive calls
Dialogue: 0,0:21:34.24,0:21:35.75,BottomCenter,,0,0,0,,after that to figure out that without
Dialogue: 0,0:21:35.75,0:21:37.51,BottomCenter,,0,0,0,,m is seven and then finally adding two
Dialogue: 0,0:21:37.51,0:21:40.00,BottomCenter,,0,0,0,,and seven together and returning
Dialogue: 0,0:21:40.00,0:21:41.35,BottomCenter,,0,0,0,,and these are all the different calls
Dialogue: 0,0:21:41.35,0:21:43.20,BottomCenter,,0,0,0,,that mix yeah go ahead whether we had
Dialogue: 0,0:21:43.20,0:21:44.16,BottomCenter,,0,0,0,,recursion or not
Dialogue: 0,0:21:44.16,0:21:46.00,BottomCenter,,0,0,0,,imagine that with them and without m
Dialogue: 0,0:21:46.00,0:21:47.35,BottomCenter,,0,0,0,,just called some other function not
Dialogue: 0,0:21:47.35,0:21:48.72,BottomCenter,,0,0,0,,recursively
Dialogue: 0,0:21:48.72,0:21:50.00,BottomCenter,,0,0,0,,it would be it would make total sense
Dialogue: 0,0:21:50.00,0:21:51.44,BottomCenter,,0,0,0,,right with them call some function you
Dialogue: 0,0:21:51.44,0:21:53.11,BottomCenter,,0,0,0,,get a two back without an m call some
Dialogue: 0,0:21:53.11,0:21:54.64,BottomCenter,,0,0,0,,function gets a seven back
Dialogue: 0,0:21:54.64,0:21:57.11,BottomCenter,,0,0,0,,and then we return the sum of those two
Dialogue: 0,0:21:57.11,0:21:58.00,BottomCenter,,0,0,0,,that's fine
Dialogue: 0,0:21:58.00,0:21:59.83,BottomCenter,,0,0,0,,right all that's happening here is that
Dialogue: 0,0:21:59.83,0:22:01.27,BottomCenter,,0,0,0,,in order to get that two and in order to
Dialogue: 0,0:22:01.27,0:22:02.24,BottomCenter,,0,0,0,,get that seven
Dialogue: 0,0:22:02.24,0:22:04.55,BottomCenter,,0,0,0,,we're calling ourselves but there's no
Dialogue: 0,0:22:04.55,0:22:06.24,BottomCenter,,0,0,0,,problem with that because what john just
Dialogue: 0,0:22:06.24,0:22:07.27,BottomCenter,,0,0,0,,said is that
Dialogue: 0,0:22:07.27,0:22:09.51,BottomCenter,,0,0,0,,the python interpreter has has state has
Dialogue: 0,0:22:09.51,0:22:11.03,BottomCenter,,0,0,0,,memory it knows
Dialogue: 0,0:22:11.03,0:22:14.07,BottomCenter,,0,0,0,,that it has to after the first call
Dialogue: 0,0:22:14.07,0:22:16.48,BottomCenter,,0,0,0,,return the sum of with them and without
Dialogue: 0,0:22:16.48,0:22:17.11,BottomCenter,,0,0,0,,them
Dialogue: 0,0:22:17.11,0:22:19.20,BottomCenter,,0,0,0,,when competition was called on six and
Dialogue: 0,0:22:19.20,0:22:21.44,BottomCenter,,0,0,0,,three and so it has to go do all the
Dialogue: 0,0:22:21.44,0:22:23.35,BottomCenter,,0,0,0,,work it needs to get with them recursive
Dialogue: 0,0:22:23.35,0:22:25.11,BottomCenter,,0,0,0,,non-recursive don't care it has to go
Dialogue: 0,0:22:25.11,0:22:26.31,BottomCenter,,0,0,0,,through all the work to do
Dialogue: 0,0:22:26.31,0:22:28.64,BottomCenter,,0,0,0,,to get without m recursive not recursive
Dialogue: 0,0:22:28.64,0:22:29.44,BottomCenter,,0,0,0,,don't care
Dialogue: 0,0:22:29.44,0:22:31.68,BottomCenter,,0,0,0,,and then it slams them together and then
Dialogue: 0,0:22:31.68,0:22:32.79,BottomCenter,,0,0,0,,the beauty here
Dialogue: 0,0:22:32.79,0:22:35.75,BottomCenter,,0,0,0,,is that okay to get the with them i had
Dialogue: 0,0:22:35.75,0:22:36.55,BottomCenter,,0,0,0,,to do
Dialogue: 0,0:22:36.55,0:22:38.40,BottomCenter,,0,0,0,,sort of the subversion of the problem so
Dialogue: 0,0:22:38.40,0:22:39.92,BottomCenter,,0,0,0,,then i had to solve exactly the same
Dialogue: 0,0:22:39.92,0:22:40.55,BottomCenter,,0,0,0,,thing
Dialogue: 0,0:22:40.55,0:22:41.92,BottomCenter,,0,0,0,,but there's no conflict with the
Dialogue: 0,0:22:41.92,0:22:43.03,BottomCenter,,0,0,0,,original call because that's in a
Dialogue: 0,0:22:43.03,0:22:44.40,BottomCenter,,0,0,0,,different environment
Dialogue: 0,0:22:44.40,0:22:47.11,BottomCenter,,0,0,0,,um if you will um and so it's doing its
Dialogue: 0,0:22:47.11,0:22:48.24,BottomCenter,,0,0,0,,own little thing in its own little
Dialogue: 0,0:22:48.24,0:22:49.51,BottomCenter,,0,0,0,,environment when it's done it finally
Dialogue: 0,0:22:49.51,0:22:55.83,BottomCenter,,0,0,0,,pops back out to the other one
Dialogue: 0,0:22:56.07,0:22:58.07,BottomCenter,,0,0,0,,the next question was how do you get the
Dialogue: 0,0:22:58.07,0:22:59.51,BottomCenter,,0,0,0,,competitions 0
Dialogue: 0,0:22:59.51,0:23:02.72,BottomCenter,,0,0,0,,0 when only one of n or m
Dialogue: 0,0:23:02.72,0:23:04.40,BottomCenter,,0,0,0,,is being decreased at any given
Dialogue: 0,0:23:04.40,0:23:07.20,BottomCenter,,0,0,0,,recursive call
Dialogue: 0,0:23:07.20,0:23:11.03,BottomCenter,,0,0,0,,ah but they're not right so the with m
Dialogue: 0,0:23:11.03,0:23:14.07,BottomCenter,,0,0,0,,is decreasing n and the without m is
Dialogue: 0,0:23:14.07,0:23:15.27,BottomCenter,,0,0,0,,decreasing
Dialogue: 0,0:23:15.27,0:23:19.03,BottomCenter,,0,0,0,,m right which means they're both getting
Dialogue: 0,0:23:19.03,0:23:20.24,BottomCenter,,0,0,0,,decreased
Dialogue: 0,0:23:20.24,0:23:22.40,BottomCenter,,0,0,0,,right because in the recursive call so
Dialogue: 0,0:23:22.40,0:23:23.59,BottomCenter,,0,0,0,,let's do the with
Dialogue: 0,0:23:23.59,0:23:26.31,BottomCenter,,0,0,0,,m yeah so with that is going to make a
Dialogue: 0,0:23:26.31,0:23:26.96,BottomCenter,,0,0,0,,call to
Dialogue: 0,0:23:26.96,0:23:29.35,BottomCenter,,0,0,0,,uh com partitions with a smaller n do we
Dialogue: 0,0:23:29.35,0:23:31.92,BottomCenter,,0,0,0,,agree on that
Dialogue: 0,0:23:31.92,0:23:33.75,BottomCenter,,0,0,0,,good that means that the pair of
Dialogue: 0,0:23:33.75,0:23:34.96,BottomCenter,,0,0,0,,recursive calls
Dialogue: 0,0:23:34.96,0:23:38.64,BottomCenter,,0,0,0,,for that call will both have a smaller n
Dialogue: 0,0:23:38.64,0:23:41.20,BottomCenter,,0,0,0,,right don't confuse this second end here
Dialogue: 0,0:23:41.20,0:23:42.00,BottomCenter,,0,0,0,,and without
Dialogue: 0,0:23:42.00,0:23:45.75,BottomCenter,,0,0,0,,m with the original n it's now the end
Dialogue: 0,0:23:45.75,0:23:48.88,BottomCenter,,0,0,0,,from the recursive call which is smaller
Dialogue: 0,0:23:48.88,0:23:51.68,BottomCenter,,0,0,0,,yeah and then with that makes another
Dialogue: 0,0:23:51.68,0:23:53.44,BottomCenter,,0,0,0,,recursive call decrementing and even
Dialogue: 0,0:23:53.44,0:23:54.16,BottomCenter,,0,0,0,,again
Dialogue: 0,0:23:54.16,0:23:56.00,BottomCenter,,0,0,0,,and then it goes down so that you have
Dialogue: 0,0:23:56.00,0:23:57.92,BottomCenter,,0,0,0,,to remember that those end variables are
Dialogue: 0,0:23:57.92,0:23:58.40,BottomCenter,,0,0,0,,with
Dialogue: 0,0:23:58.40,0:24:01.27,BottomCenter,,0,0,0,,with respect to the recursive call not
Dialogue: 0,0:24:01.27,0:24:02.64,BottomCenter,,0,0,0,,the original
Dialogue: 0,0:24:02.64,0:24:04.00,BottomCenter,,0,0,0,,call which in which case of course it
Dialogue: 0,0:24:04.00,0:24:05.35,BottomCenter,,0,0,0,,would always be the same but that's not
Dialogue: 0,0:24:05.35,0:24:07.75,BottomCenter,,0,0,0,,the case
Dialogue: 0,0:24:07.83,0:24:10.64,BottomCenter,,0,0,0,,i see yeah okay yeah that makes sense
Dialogue: 0,0:24:10.64,0:24:11.59,BottomCenter,,0,0,0,,now
Dialogue: 0,0:24:11.59,0:24:13.75,BottomCenter,,0,0,0,,good so just to finish this up i had a
Dialogue: 0,0:24:13.75,0:24:14.88,BottomCenter,,0,0,0,,little bit more trace
Dialogue: 0,0:24:14.88,0:24:16.64,BottomCenter,,0,0,0,,which says what happens when things get
Dialogue: 0,0:24:16.64,0:24:18.07,BottomCenter,,0,0,0,,called and
Dialogue: 0,0:24:18.07,0:24:20.24,BottomCenter,,0,0,0,,you know first we call it on six four
Dialogue: 0,0:24:20.24,0:24:22.07,BottomCenter,,0,0,0,,and that calls it on two two and that
Dialogue: 0,0:24:22.07,0:24:22.64,BottomCenter,,0,0,0,,calls it
Dialogue: 0,0:24:22.64,0:24:25.51,BottomCenter,,0,0,0,,on zero zero and then finally something
Dialogue: 0,0:24:25.51,0:24:27.35,BottomCenter,,0,0,0,,gets returned
Dialogue: 0,0:24:27.35,0:24:29.27,BottomCenter,,0,0,0,,so you can see that like in the
Dialogue: 0,0:24:29.27,0:24:31.35,BottomCenter,,0,0,0,,recursive call
Dialogue: 0,0:24:31.35,0:24:34.79,BottomCenter,,0,0,0,,n is now two and m is now two and so it
Dialogue: 0,0:24:34.79,0:24:39.35,BottomCenter,,0,0,0,,counts competitions on zero and zero
Dialogue: 0,0:24:39.35,0:24:41.35,BottomCenter,,0,0,0,,in the second time around and so we see
Dialogue: 0,0:24:41.35,0:24:43.51,BottomCenter,,0,0,0,,that call and that call is a base case
Dialogue: 0,0:24:43.51,0:24:46.79,BottomCenter,,0,0,0,,and so we find there's one way
Dialogue: 0,0:24:46.79,0:24:50.64,BottomCenter,,0,0,0,,to um
Dialogue: 0,0:24:51.44,0:24:54.79,BottomCenter,,0,0,0,,compute two using parts up to size two
Dialogue: 0,0:24:54.79,0:24:58.16,BottomCenter,,0,0,0,,where you actually use a two which is
Dialogue: 0,0:24:58.16,0:24:58.48,BottomCenter,,0,0,0,,just
Dialogue: 0,0:24:58.48,0:25:01.51,BottomCenter,,0,0,0,,two okay so if this example is extremely
Dialogue: 0,0:25:01.51,0:25:03.11,BottomCenter,,0,0,0,,confusing and it's understandable
Dialogue: 0,0:25:03.11,0:25:05.03,BottomCenter,,0,0,0,,because of the tree recursion so what i
Dialogue: 0,0:25:05.03,0:25:06.48,BottomCenter,,0,0,0,,would suggest is go back to
Dialogue: 0,0:25:06.48,0:25:09.03,BottomCenter,,0,0,0,,to one of the examples that doesn't have
Dialogue: 0,0:25:09.03,0:25:10.64,BottomCenter,,0,0,0,,tree recursion that just does a simple
Dialogue: 0,0:25:10.64,0:25:13.83,BottomCenter,,0,0,0,,like the the factorial yeah and make
Dialogue: 0,0:25:13.83,0:25:15.75,BottomCenter,,0,0,0,,sure that you really understand that how
Dialogue: 0,0:25:15.75,0:25:17.27,BottomCenter,,0,0,0,,every time you make the recursive call
Dialogue: 0,0:25:17.27,0:25:19.03,BottomCenter,,0,0,0,,you're reinstantiating the local
Dialogue: 0,0:25:19.03,0:25:21.03,BottomCenter,,0,0,0,,variables and the parameters
Dialogue: 0,0:25:21.03,0:25:22.72,BottomCenter,,0,0,0,,and once you've really got your handle
Dialogue: 0,0:25:22.72,0:25:24.24,BottomCenter,,0,0,0,,on that then the tree recurrence the
Dialogue: 0,0:25:24.24,0:25:25.35,BottomCenter,,0,0,0,,trigger pins are a little tricky because
Dialogue: 0,0:25:25.35,0:25:26.55,BottomCenter,,0,0,0,,you got to sort of
Dialogue: 0,0:25:26.55,0:25:28.24,BottomCenter,,0,0,0,,build out these trees by the way the
Dialogue: 0,0:25:28.24,0:25:29.68,BottomCenter,,0,0,0,,absolute right way to follow
Dialogue: 0,0:25:29.68,0:25:31.20,BottomCenter,,0,0,0,,these recursions is not the environment
Dialogue: 0,0:25:31.20,0:25:33.59,BottomCenter,,0,0,0,,diagram by drawing the tree
Dialogue: 0,0:25:33.59,0:25:35.59,BottomCenter,,0,0,0,,right so sit at the root make a call to
Dialogue: 0,0:25:35.59,0:25:36.96,BottomCenter,,0,0,0,,count partition with n
Dialogue: 0,0:25:36.96,0:25:40.00,BottomCenter,,0,0,0,,m before you do anything put the promise
Dialogue: 0,0:25:40.00,0:25:41.59,BottomCenter,,0,0,0,,for the three things for the two things
Dialogue: 0,0:25:41.59,0:25:42.64,BottomCenter,,0,0,0,,you have to do i have to make a call
Dialogue: 0,0:25:42.64,0:25:44.48,BottomCenter,,0,0,0,,here i have to make a call here
Dialogue: 0,0:25:44.48,0:25:45.68,BottomCenter,,0,0,0,,okay what does this one have to do i
Dialogue: 0,0:25:45.68,0:25:48.00,BottomCenter,,0,0,0,,have to do two calls two calls two calls
Dialogue: 0,0:25:48.00,0:25:49.83,BottomCenter,,0,0,0,,and you'll see the diagram and then you
Dialogue: 0,0:25:49.83,0:25:51.20,BottomCenter,,0,0,0,,should be able to trace the order
Dialogue: 0,0:25:51.20,0:25:54.64,BottomCenter,,0,0,0,,as john did in the lecture
Dialogue: 0,0:25:55.11,0:25:56.55,BottomCenter,,0,0,0,,yeah keep in mind that the environment
Dialogue: 0,0:25:56.55,0:25:58.40,BottomCenter,,0,0,0,,diagram is going to have as many frames
Dialogue: 0,0:25:58.40,0:25:59.51,BottomCenter,,0,0,0,,as we have
Dialogue: 0,0:25:59.51,0:26:01.51,BottomCenter,,0,0,0,,calls here so it's going to be just
Dialogue: 0,0:26:01.51,0:26:02.88,BottomCenter,,0,0,0,,absurdly large
Dialogue: 0,0:26:02.88,0:26:04.79,BottomCenter,,0,0,0,,right and that's why the tree diagram is
Dialogue: 0,0:26:04.79,0:26:06.00,BottomCenter,,0,0,0,,a little bit easier to see
Dialogue: 0,0:26:06.00,0:26:08.55,BottomCenter,,0,0,0,,it's just just you're not lugging around
Dialogue: 0,0:26:08.55,0:26:11.27,BottomCenter,,0,0,0,,all that extra stuff
Dialogue: 0,0:26:11.27,0:26:13.11,BottomCenter,,0,0,0,,and i would also say that this trace
Dialogue: 0,0:26:13.11,0:26:14.31,BottomCenter,,0,0,0,,while it's interesting
Dialogue: 0,0:26:14.31,0:26:16.79,BottomCenter,,0,0,0,,to kind of watch what's happening tends
Dialogue: 0,0:26:16.79,0:26:18.24,BottomCenter,,0,0,0,,not to be that useful
Dialogue: 0,0:26:18.24,0:26:21.83,BottomCenter,,0,0,0,,for writing the program or understanding
Dialogue: 0,0:26:21.83,0:26:23.68,BottomCenter,,0,0,0,,how the program works you really have to
Dialogue: 0,0:26:23.68,0:26:24.07,BottomCenter,,0,0,0,,think
Dialogue: 0,0:26:24.07,0:26:26.96,BottomCenter,,0,0,0,,abstractly about what's in here like
Dialogue: 0,0:26:26.96,0:26:28.24,BottomCenter,,0,0,0,,what are these going to do what are you
Dialogue: 0,0:26:28.24,0:26:29.20,BottomCenter,,0,0,0,,going to get back
Dialogue: 0,0:26:29.20,0:26:30.40,BottomCenter,,0,0,0,,and what happens when you add them
Dialogue: 0,0:26:30.40,0:26:32.40,BottomCenter,,0,0,0,,together
Dialogue: 0,0:26:32.40,0:26:34.64,BottomCenter,,0,0,0,,the next question was could you explain
Dialogue: 0,0:26:34.64,0:26:35.68,BottomCenter,,0,0,0,,why you added
Dialogue: 0,0:26:35.68,0:26:39.68,BottomCenter,,0,0,0,,min n minus n m
Dialogue: 0,0:26:39.68,0:26:43.20,BottomCenter,,0,0,0,,earlier on in this q a so
Dialogue: 0,0:26:43.20,0:26:45.20,BottomCenter,,0,0,0,,the question is about the min function
Dialogue: 0,0:26:45.20,0:26:46.31,BottomCenter,,0,0,0,,in the with m
Dialogue: 0,0:26:46.31,0:26:48.31,BottomCenter,,0,0,0,,you don't actually need that um the
Dialogue: 0,0:26:48.31,0:26:49.75,BottomCenter,,0,0,0,,reason we put that in there
Dialogue: 0,0:26:49.75,0:26:52.07,BottomCenter,,0,0,0,,is in this particular example with six
Dialogue: 0,0:26:52.07,0:26:53.35,BottomCenter,,0,0,0,,four
Dialogue: 0,0:26:53.35,0:26:57.20,BottomCenter,,0,0,0,,the first call um uh would be to f
Dialogue: 0,0:26:57.20,0:27:00.72,BottomCenter,,0,0,0,,uh four what was it uh
Dialogue: 0,0:27:00.72,0:27:02.88,BottomCenter,,0,0,0,,let me see if i can get this right uh a
Dialogue: 0,0:27:02.88,0:27:04.79,BottomCenter,,0,0,0,,two four
Dialogue: 0,0:27:04.79,0:27:07.75,BottomCenter,,0,0,0,,in which case there's there's there's
Dialogue: 0,0:27:07.75,0:27:09.44,BottomCenter,,0,0,0,,you don't need the second term to be
Dialogue: 0,0:27:09.44,0:27:11.51,BottomCenter,,0,0,0,,larger than the first term
Dialogue: 0,0:27:11.51,0:27:13.59,BottomCenter,,0,0,0,,and so i i'm pretty sure if you run like
Dialogue: 0,0:27:13.59,0:27:14.96,BottomCenter,,0,0,0,,this everything will run just fine it'll
Dialogue: 0,0:27:14.96,0:27:16.31,BottomCenter,,0,0,0,,just hit the base case
Dialogue: 0,0:27:16.31,0:27:18.48,BottomCenter,,0,0,0,,yeah um so we just put that min in there
Dialogue: 0,0:27:18.48,0:27:20.07,BottomCenter,,0,0,0,,because it sort of doubt with the with
Dialogue: 0,0:27:20.07,0:27:20.79,BottomCenter,,0,0,0,,the case when
Dialogue: 0,0:27:20.79,0:27:23.59,BottomCenter,,0,0,0,,m the second number is greater than the
Dialogue: 0,0:27:23.59,0:27:24.79,BottomCenter,,0,0,0,,first number which of course doesn't
Dialogue: 0,0:27:24.79,0:27:25.75,BottomCenter,,0,0,0,,make sense
Dialogue: 0,0:27:25.75,0:27:27.68,BottomCenter,,0,0,0,,because you can't get to two using a
Dialogue: 0,0:27:27.68,0:27:29.44,BottomCenter,,0,0,0,,four it doesn't do any harm
Dialogue: 0,0:27:29.44,0:27:32.79,BottomCenter,,0,0,0,,you just it's just sort of unnecessary
Dialogue: 0,0:27:32.79,0:27:34.16,BottomCenter,,0,0,0,,but this is something that's very
Dialogue: 0,0:27:34.16,0:27:35.83,BottomCenter,,0,0,0,,problem specific like it's
Dialogue: 0,0:27:35.83,0:27:38.79,BottomCenter,,0,0,0,,the the fact that you can't build up a
Dialogue: 0,0:27:38.79,0:27:40.16,BottomCenter,,0,0,0,,number using a sum
Dialogue: 0,0:27:40.16,0:27:41.59,BottomCenter,,0,0,0,,using parts that are bigger than that
Dialogue: 0,0:27:41.59,0:27:43.75,BottomCenter,,0,0,0,,sum is basically why that man is there
Dialogue: 0,0:27:43.75,0:27:45.44,BottomCenter,,0,0,0,,it's not something that's like a general
Dialogue: 0,0:27:45.44,0:27:47.20,BottomCenter,,0,0,0,,fact about recreating recursive
Dialogue: 0,0:27:47.20,0:27:48.64,BottomCenter,,0,0,0,,functions in general or something like
Dialogue: 0,0:27:48.64,0:27:48.96,BottomCenter,,0,0,0,,that
Dialogue: 0,0:27:48.96,0:27:52.07,BottomCenter,,0,0,0,,it was very probable specific
Dialogue: 0,0:27:52.07,0:27:54.16,BottomCenter,,0,0,0,,the next question was what would count
Dialogue: 0,0:27:54.16,0:27:57.27,BottomCenter,,0,0,0,,partitions 2-4 do
Dialogue: 0,0:27:57.27,0:27:58.79,BottomCenter,,0,0,0,,so let's think about a little bit and
Dialogue: 0,0:27:58.79,0:28:01.20,BottomCenter,,0,0,0,,we'll run it um 2 4 says
Dialogue: 0,0:28:01.20,0:28:03.83,BottomCenter,,0,0,0,,how do you make two out of sums and
Dialogue: 0,0:28:03.83,0:28:04.79,BottomCenter,,0,0,0,,there are two ways
Dialogue: 0,0:28:04.79,0:28:06.00,BottomCenter,,0,0,0,,you could have just two or you could
Dialogue: 0,0:28:06.00,0:28:08.40,BottomCenter,,0,0,0,,have one plus one so this should return
Dialogue: 0,0:28:08.40,0:28:10.40,BottomCenter,,0,0,0,,two
Dialogue: 0,0:28:10.40,0:28:14.72,BottomCenter,,0,0,0,,and fingers crossed
Dialogue: 0,0:28:14.72,0:28:16.88,BottomCenter,,0,0,0,,that's what it returns so it's finding
Dialogue: 0,0:28:16.88,0:28:18.48,BottomCenter,,0,0,0,,one way to do it with a two which is
Dialogue: 0,0:28:18.48,0:28:18.88,BottomCenter,,0,0,0,,just
Dialogue: 0,0:28:18.88,0:28:20.48,BottomCenter,,0,0,0,,two it's finding one way to do it
Dialogue: 0,0:28:20.48,0:28:22.64,BottomCenter,,0,0,0,,without a two which is one plus one
Dialogue: 0,0:28:22.64,0:28:30.07,BottomCenter,,0,0,0,,that's the recursive call uh two one
Dialogue: 0,0:28:30.07,0:28:34.07,BottomCenter,,0,0,0,,and then it counts both of those
Dialogue: 0,0:28:34.48,0:28:37.11,BottomCenter,,0,0,0,,so now the question is what would happen
Dialogue: 0,0:28:37.11,0:28:39.51,BottomCenter,,0,0,0,,if john changed compartitions to four to
Dialogue: 0,0:28:39.51,0:28:45.35,BottomCenter,,0,0,0,,two two
Dialogue: 0,0:28:45.35,0:28:47.20,BottomCenter,,0,0,0,,same answer right so what's going on
Dialogue: 0,0:28:47.20,0:28:49.83,BottomCenter,,0,0,0,,here well yes the second argument was
Dialogue: 0,0:28:49.83,0:28:52.96,BottomCenter,,0,0,0,,4 but you can't use a 4 to get to a 2.
Dialogue: 0,0:28:52.96,0:28:54.00,BottomCenter,,0,0,0,,so it ignores it
Dialogue: 0,0:28:54.00,0:28:56.79,BottomCenter,,0,0,0,,and i can't use a 3 to get to a 2. so i
Dialogue: 0,0:28:56.79,0:28:58.72,BottomCenter,,0,0,0,,ignore it um so
Dialogue: 0,0:28:58.72,0:29:01.27,BottomCenter,,0,0,0,,and the the last number can't be greater
Dialogue: 0,0:29:01.27,0:29:02.64,BottomCenter,,0,0,0,,than the first number
Dialogue: 0,0:29:02.64,0:29:04.00,BottomCenter,,0,0,0,,and that's what the min there was
Dialogue: 0,0:29:04.00,0:29:05.44,BottomCenter,,0,0,0,,therefore is just to sort of make that
Dialogue: 0,0:29:05.44,0:29:06.24,BottomCenter,,0,0,0,,explicit
Dialogue: 0,0:29:06.24,0:29:08.64,BottomCenter,,0,0,0,,but it doesn't harm to do it it just you
Dialogue: 0,0:29:08.64,0:29:11.20,BottomCenter,,0,0,0,,won't be able to get to it
Dialogue: 0,0:29:11.20,0:29:13.68,BottomCenter,,0,0,0,,all right any other questions i want to
Dialogue: 0,0:29:13.68,0:29:15.03,BottomCenter,,0,0,0,,re-emphasize
Dialogue: 0,0:29:15.03,0:29:16.48,BottomCenter,,0,0,0,,something that was said is don't don't
Dialogue: 0,0:29:16.48,0:29:18.07,BottomCenter,,0,0,0,,get frustrated at the recursion it takes
Dialogue: 0,0:29:18.07,0:29:19.92,BottomCenter,,0,0,0,,time it's it's it's one of these
Dialogue: 0,0:29:19.92,0:29:21.51,BottomCenter,,0,0,0,,it's a little weird it's not like the
Dialogue: 0,0:29:21.51,0:29:22.55,BottomCenter,,0,0,0,,the loops which are really
Dialogue: 0,0:29:22.55,0:29:24.07,BottomCenter,,0,0,0,,straightforward the conditionals and
Dialogue: 0,0:29:24.07,0:29:25.92,BottomCenter,,0,0,0,,all that it takes a little time you have
Dialogue: 0,0:29:25.92,0:29:27.11,BottomCenter,,0,0,0,,to sort of think a little bit different
Dialogue: 0,0:29:27.11,0:29:27.92,BottomCenter,,0,0,0,,by the way
Dialogue: 0,0:29:27.92,0:29:29.83,BottomCenter,,0,0,0,,back in the day we used to start by
Dialogue: 0,0:29:29.83,0:29:31.59,BottomCenter,,0,0,0,,teaching recursion the first day of
Dialogue: 0,0:29:31.59,0:29:33.03,BottomCenter,,0,0,0,,class john and i were just talking about
Dialogue: 0,0:29:33.03,0:29:34.00,BottomCenter,,0,0,0,,this the other day
Dialogue: 0,0:29:34.00,0:29:35.35,BottomCenter,,0,0,0,,if we don't teach you about iteration we
Dialogue: 0,0:29:35.35,0:29:36.40,BottomCenter,,0,0,0,,don't do anything we just teach you
Dialogue: 0,0:29:36.40,0:29:37.51,BottomCenter,,0,0,0,,recursion
Dialogue: 0,0:29:37.51,0:29:39.51,BottomCenter,,0,0,0,,in some ways that's excruciatingly
Dialogue: 0,0:29:39.51,0:29:41.35,BottomCenter,,0,0,0,,painful but it also
Dialogue: 0,0:29:41.35,0:29:43.27,BottomCenter,,0,0,0,,in some ways is easier because you don't
Dialogue: 0,0:29:43.27,0:29:45.20,BottomCenter,,0,0,0,,have this sort of iterative construct to
Dialogue: 0,0:29:45.20,0:29:46.24,BottomCenter,,0,0,0,,think about
Dialogue: 0,0:29:46.24,0:29:47.59,BottomCenter,,0,0,0,,i think we're doing it the right way
Dialogue: 0,0:29:47.59,0:29:49.51,BottomCenter,,0,0,0,,bringing it downstream a little bit but
Dialogue: 0,0:29:49.51,0:29:51.03,BottomCenter,,0,0,0,,it's okay these will take a little bit
Dialogue: 0,0:29:51.03,0:29:52.24,BottomCenter,,0,0,0,,of time to get your head around how
Dialogue: 0,0:29:52.24,0:29:54.07,BottomCenter,,0,0,0,,these things are working
Dialogue: 0,0:29:54.07,0:29:55.92,BottomCenter,,0,0,0,,well yeah a lot of people used to drop
Dialogue: 0,0:29:55.92,0:29:57.75,BottomCenter,,0,0,0,,after lecture two and this was a lecture
Dialogue: 0,0:29:57.75,0:29:59.75,BottomCenter,,0,0,0,,two example instead of a lecture nine
Dialogue: 0,0:29:59.75,0:30:00.88,BottomCenter,,0,0,0,,example but
Dialogue: 0,0:30:00.88,0:30:02.79,BottomCenter,,0,0,0,,still in this course we teach this much
Dialogue: 0,0:30:02.79,0:30:05.20,BottomCenter,,0,0,0,,earlier than most other universities
Dialogue: 0,0:30:05.20,0:30:07.27,BottomCenter,,0,0,0,,um i think it's a great way to get used
Dialogue: 0,0:30:07.27,0:30:09.11,BottomCenter,,0,0,0,,to the idea of functional abstraction
Dialogue: 0,0:30:09.11,0:30:11.59,BottomCenter,,0,0,0,,and to see the kind of problem-solving
Dialogue: 0,0:30:11.59,0:30:13.44,BottomCenter,,0,0,0,,power of just writing simple functions
Dialogue: 0,0:30:13.44,0:30:15.03,BottomCenter,,0,0,0,,and letting the computer do the work for
Dialogue: 0,0:30:15.03,0:30:16.16,BottomCenter,,0,0,0,,you
Dialogue: 0,0:30:16.16,0:30:19.27,BottomCenter,,0,0,0,,but it's not easy at all
Dialogue: 0,0:30:19.83,0:30:21.44,BottomCenter,,0,0,0,,all right we'll be back to answer your
Dialogue: 0,0:30:21.44,0:30:23.83,BottomCenter,,0,0,0,,questions at 2 10 p.m if you want to
Dialogue: 0,0:30:23.83,0:30:24.31,BottomCenter,,0,0,0,,join
Dialogue: 0,0:30:24.31,0:30:28.16,BottomCenter,,0,0,0,,for the unrecorded ask us anything
Dialogue: 0,0:30:28.16,0:30:29.11,BottomCenter,,0,0,0,,session then
Dialogue: 0,0:30:29.11,0:30:30.40,BottomCenter,,0,0,0,,see you soon i thought you were going to
Dialogue: 0,0:30:30.40,0:30:33.20,BottomCenter,,0,0,0,,say unhinged but okay unrecorded is fine
Dialogue: 0,0:30:33.20,0:30:37.03,BottomCenter,,0,0,0,,also might be on
Dialogue: 0,0:30:37.03,0:30:39.96,BottomCenter,,0,0,0,,thanks everybody see you this afternoon