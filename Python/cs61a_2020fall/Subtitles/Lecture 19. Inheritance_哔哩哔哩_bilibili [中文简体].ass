[Script Info]
Title: Lecture 19. Inheritance_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1s3411G7yM?p=46&vd_source=6ffca0aa1006734a4fba52f389036611
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.67,0:00:03.37,*Default,NTP,0000,0000,0000,,61第19讲
Dialogue: 0,0:00:03.70,0:00:04.70,*Default,NTP,0000,0000,0000,,公告
Dialogue: 0,0:00:05.57,0:00:07.50,*Default,NTP,0000,0000,0000,,实验室七周二做
Dialogue: 0,0:00:08.10,0:00:10.33,*Default,NTP,0000,0000,0000,,作业四到周四
Dialogue: 0,0:00:11.30,0:00:13.50,*Default,NTP,0000,0000,0000,,并发布了一个新项目
Dialogue: 0,0:00:14.10,0:00:16.53,*Default,NTP,0000,0000,0000,,蚂蚁项目下周五进行
Dialogue: 0,0:00:16.70,0:00:19.13,*Default,NTP,0000,0000,0000,,但你需要在下周二之前开始
Dialogue: 0,0:00:19.13,0:00:20.50,*Default,NTP,0000,0000,0000,,赢得检查站
Dialogue: 0,0:00:20.57,0:00:22.07,*Default,NTP,0000,0000,0000,,你可以取消交错提交
Dialogue: 0,0:00:22.07,0:00:24.00,*Default,NTP,0000,0000,0000,,提交整个内容的奖励积分
Dialogue: 0,0:00:24.00,0:00:25.70,*Default,NTP,0000,0000,0000,,下周四之前
Dialogue: 0,0:00:26.27,0:00:29.77,*Default,NTP,0000,0000,0000,,该项目还存在额外的信用问题
Dialogue: 0,0:00:29.93,0:00:32.57,*Default,NTP,0000,0000,0000,,因此可以在那里获得更多额外学分
Dialogue: 0,0:00:33.13,0:00:36.37,*Default,NTP,0000,0000,0000,,这个版本的项目 iii 比平常短
Dialogue: 0,0:00:36.67,0:00:39.33,*Default,NTP,0000,0000,0000,,这个学期比平时压力更大
Dialogue: 0,0:00:39.57,0:00:40.87,*Default,NTP,0000,0000,0000,,获得帮助更困难
Dialogue: 0,0:00:40.97,0:00:42.87,*Default,NTP,0000,0000,0000,,世界上发生了很多事情
Dialogue: 0,0:00:42.97,0:00:44.97,*Default,NTP,0000,0000,0000,,与同事合作更加困难
Dialogue: 0,0:00:45.67,0:00:49.00,*Default,NTP,0000,0000,0000,,现在这个项目以合理的规模开始
Dialogue: 0,0:00:49.07,0:00:50.17,*Default,NTP,0000,0000,0000,,然后每个学期
Dialogue: 0,0:00:50.17,0:00:51.93,*Default,NTP,0000,0000,0000,,好像长大了一点
Dialogue: 0,0:00:51.93,0:00:54.37,*Default,NTP,0000,0000,0000,,当人们想到更多要问的问题时
Dialogue: 0,0:00:54.50,0:00:57.00,*Default,NTP,0000,0000,0000,,我们所做的只是削减它
Dialogue: 0,0:00:57.33,0:00:59.30,*Default,NTP,0000,0000,0000,,更接近其原始尺寸
Dialogue: 0,0:00:59.40,0:01:02.30,*Default,NTP,0000,0000,0000,,它仍然是一个相当大的程序，你必须编写
Dialogue: 0,0:01:02.60,0:01:05.10,*Default,NTP,0000,0000,0000,,比您之前完成的任何项目都要大
Dialogue: 0,0:01:05.77,0:01:07.57,*Default,NTP,0000,0000,0000,,现在可能更容易管理
Dialogue: 0,0:01:07.57,0:01:09.40,*Default,NTP,0000,0000,0000,,因为你的经验增长了
Dialogue: 0,0:01:09.40,0:01:10.53,*Default,NTP,0000,0000,0000,,整个学期
Dialogue: 0,0:01:10.87,0:01:11.53,*Default,NTP,0000,0000,0000,,但仍然
Dialogue: 0,0:01:11.53,0:01:14.30,*Default,NTP,0000,0000,0000,,我鼓励你为此留出充足的时间
Dialogue: 0,0:01:14.30,0:01:15.67,*Default,NTP,0000,0000,0000,,大项目
Dialogue: 0,0:01:15.80,0:01:17.70,*Default,NTP,0000,0000,0000,,这样你就可以确保完成它
Dialogue: 0,0:01:17.70,0:01:18.93,*Default,NTP,0000,0000,0000,,下周五之前
Dialogue: 0,0:01:18.97,0:01:20.00,*Default,NTP,0000,0000,0000,,或者更好
Dialogue: 0,0:01:20.13,0:01:23.37,*Default,NTP,0000,0000,0000,,下周四之前获得奖励积分
Dialogue: 0,0:01:24.17,0:01:26.97,*Default,NTP,0000,0000,0000,,这个项目是关于什么的，是关于蚂蚁的
Dialogue: 0,0:01:27.50,0:01:28.53,*Default,NTP,0000,0000,0000,,尤其
Dialogue: 0,0:01:28.70,0:01:32.13,*Default,NTP,0000,0000,0000,,这是我喜欢的一款游戏的重新实现
Dialogue: 0,0:01:32.33,0:01:34.77,*Default,NTP,0000,0000,0000,,植物大战僵尸
Dialogue: 0,0:01:35.20,0:01:37.73,*Default,NTP,0000,0000,0000,,我们在 61 a 中构建的版本称为
Dialogue: 0,0:01:37.90,0:01:40.47,*Default,NTP,0000,0000,0000,,蚂蚁与一些蜜蜂
Dialogue: 0,0:01:41.10,0:01:43.57,*Default,NTP,0000,0000,0000,,你的工作是构建所有的逻辑
Dialogue: 0,0:01:43.73,0:01:44.00,*Default,NTP,0000,0000,0000,,关于
Dialogue: 0,0:01:44.00,0:01:46.80,*Default,NTP,0000,0000,0000,,游戏中不同角色如何互动
Dialogue: 0,0:01:47.30,0:01:47.90,*Default,NTP,0000,0000,0000,,这是一个
Dialogue: 0,0:01:47.90,0:01:50.93,*Default,NTP,0000,0000,0000,,面向对象编程的自然应用
Dialogue: 0,0:01:51.07,0:01:52.37,*Default,NTP,0000,0000,0000,,和继承
Dialogue: 0,0:01:52.77,0:01:54.93,*Default,NTP,0000,0000,0000,,我会让你自己实现游戏
Dialogue: 0,0:01:54.97,0:01:56.33,*Default,NTP,0000,0000,0000,,然后你就可以玩了
Dialogue: 0,0:01:57.37,0:02:00.33,*Default,NTP,0000,0000,0000,,这个星期四我们将有一个咨询小组
Dialogue: 0,0:02:00.67,0:02:03.97,*Default,NTP,0000,0000,0000,,我们一直在进行一些一对一的办公时间建议
Dialogue: 0,0:02:03.97,0:02:05.90,*Default,NTP,0000,0000,0000,,但有时也会出现同样的问题
Dialogue: 0,0:02:05.90,0:02:06.73,*Default,NTP,0000,0000,0000,,一次又一次
Dialogue: 0,0:02:06.93,0:02:08.40,*Default,NTP,0000,0000,0000,,所以我们认为我们会
Dialogue: 0,0:02:08.70,0:02:11.90,*Default,NTP,0000,0000,0000,,一个更大的论坛，很多人可以同时参加
Dialogue: 0,0:02:12.27,0:02:14.53,*Default,NTP,0000,0000,0000,,你可以问任何你想问的问题
Dialogue: 0,0:02:14.70,0:02:17.90,*Default,NTP,0000,0000,0000,,行业俱乐部与您的硕士课程进行研究
Dialogue: 0,0:02:17.90,0:02:19.30,*Default,NTP,0000,0000,0000,,任何课程
Dialogue: 0,0:02:19.47,0:02:21.70,*Default,NTP,0000,0000,0000,,我们会有一些核心人员
Dialogue: 0,0:02:21.90,0:02:24.40,*Default,NTP,0000,0000,0000,,随时解答您的问题
Dialogue: 0,0:02:24.73,0:02:27.57,*Default,NTP,0000,0000,0000,,所以这只是非正式的纯粹建议
Dialogue: 0,0:02:27.60,0:02:29.40,*Default,NTP,0000,0000,0000,,但给你一个机会去理解
Dialogue: 0,0:02:29.57,0:02:32.10,*Default,NTP,0000,0000,0000,,伯克利可以提供什么以及如何参与
Dialogue: 0,0:02:32.77,0:02:35.33,*Default,NTP,0000,0000,0000,,我们仍将举行 1 对 1 咨询办公时间
Dialogue: 0,0:02:35.37,0:02:37.17,*Default,NTP,0000,0000,0000,,他们现在要来了
Dialogue: 0,0:02:37.27,0:02:39.00,*Default,NTP,0000,0000,0000,,周五从1个做30个
Dialogue: 0,0:02:39.30,0:02:40.10,*Default,NTP,0000,0000,0000,,在办公时间
Dialogue: 0,0:02:40.10,0:02:40.90,*Default,NTP,0000,0000,0000,,q
Dialogue: 0,0:02:41.47,0:02:43.70,*Default,NTP,0000,0000,0000,,我们刚刚发布了匿名服务
Dialogue: 0,0:02:44.13,0:02:45.50,*Default,NTP,0000,0000,0000,,真的很短
Dialogue: 0,0:02:45.80,0:02:47.17,*Default,NTP,0000,0000,0000,,这不是必需的
Dialogue: 0,0:02:47.27,0:02:49.53,*Default,NTP,0000,0000,0000,,但如果你能填写的话那就太好了
Dialogue: 0,0:02:49.97,0:02:51.17,*Default,NTP,0000,0000,0000,,这就是全部内容
Dialogue: 0,0:02:51.60,0:02:53.97,*Default,NTP,0000,0000,0000,,所有这些底部的问题都是可选的
Dialogue: 0,0:02:54.70,0:02:56.47,*Default,NTP,0000,0000,0000,,所以如果你想给我们一个指示
Dialogue: 0,0:02:56.47,0:02:58.27,*Default,NTP,0000,0000,0000,,关于您对课程的感受
Dialogue: 0,0:02:58.37,0:03:00.80,*Default,NTP,0000,0000,0000,,无论您是在听讲座还是在赶时间
Dialogue: 0,0:03:00.90,0:03:02.77,*Default,NTP,0000,0000,0000,,你对作业的感觉如何
Dialogue: 0,0:03:02.77,0:03:04.20,*Default,NTP,0000,0000,0000,,以及提示视频
Dialogue: 0,0:03:04.20,0:03:06.47,*Default,NTP,0000,0000,0000,,以及给我们一些建议
Dialogue: 0,0:03:06.47,0:03:07.93,*Default,NTP,0000,0000,0000,,关于如何改进课程
Dialogue: 0,0:03:08.17,0:03:09.57,*Default,NTP,0000,0000,0000,,我会很感激
Dialogue: 0,0:03:09.60,0:03:10.57,*Default,NTP,0000,0000,0000,,我们将尽力实施
Dialogue: 0,0:03:10.57,0:03:12.90,*Default,NTP,0000,0000,0000,,我们会尽快提出这些建议
Dialogue: 0,0:03:13.97,0:03:16.47,*Default,NTP,0000,0000,0000,,所以请在周一之前完成该调查
Dialogue: 0,0:03:16.87,0:03:19.33,*Default,NTP,0000,0000,0000,,期中二终于要来了
Dialogue: 0,0:03:20.87,0:03:22.47,*Default,NTP,0000,0000,0000,,距离周三还有两周
Dialogue: 0,0:03:22.87,0:03:24.77,*Default,NTP,0000,0000,0000,,所以下周你可以关注蚂蚁
Dialogue: 0,0:03:24.77,0:03:27.00,*Default,NTP,0000,0000,0000,,期中考试将在下周进行
Dialogue: 0,0:03:27.37,0:03:30.30,*Default,NTP,0000,0000,0000,,它将具有与期中考试相似的格式和风格
Dialogue: 0,0:03:30.67,0:03:32.47,*Default,NTP,0000,0000,0000,,虽然如果有你不喜欢的事情
Dialogue: 0,0:03:32.47,0:03:33.27,*Default,NTP,0000,0000,0000,,关于期中一
Dialogue: 0,0:03:33.27,0:03:36.30,*Default,NTP,0000,0000,0000,,您可以在这个同义调查中告诉我们这一点
Dialogue: 0,0:03:36.33,0:03:39.33,*Default,NTP,0000,0000,0000,,我们也许可以在期中二之前调整它们
Dialogue: 0,0:03:39.33,0:03:40.20,*Default,NTP,0000,0000,0000,,被写成
Dialogue: 0,0:03:41.27,0:03:44.07,*Default,NTP,0000,0000,0000,,该考试将涵盖本周的内容
Dialogue: 0,0:03:44.37,0:03:46.90,*Default,NTP,0000,0000,0000,,但下周不会有新内容
Dialogue: 0,0:03:47.17,0:03:48.13,*Default,NTP,0000,0000,0000,,以及之后的一周
Dialogue: 0,0:03:48.13,0:03:49.37,*Default,NTP,0000,0000,0000,,当你真正参加考试时
Dialogue: 0,0:03:49.37,0:03:51.00,*Default,NTP,0000,0000,0000,,也不会有新内容
Dialogue: 0,0:03:52.00,0:03:54.40,*Default,NTP,0000,0000,0000,,我的感觉是有些人有点落后
Dialogue: 0,0:03:54.40,0:03:56.20,*Default,NTP,0000,0000,0000,,在讲座等中
Dialogue: 0,0:03:56.47,0:03:57.53,*Default,NTP,0000,0000,0000,,我想给你一个机会
Dialogue: 0,0:03:57.53,0:03:59.47,*Default,NTP,0000,0000,0000,,不仅仅是为了听到这些话题
Dialogue: 0,0:03:59.50,0:04:01.77,*Default,NTP,0000,0000,0000,,但解决他们的家庭作业问题
Dialogue: 0,0:04:01.97,0:04:04.87,*Default,NTP,0000,0000,0000,,或者在实验室、讨论或教程中听到它们
Dialogue: 0,0:04:05.20,0:04:07.20,*Default,NTP,0000,0000,0000,,这样你才能真正做好做好准备
Dialogue: 0,0:04:07.20,0:04:08.27,*Default,NTP,0000,0000,0000,,在考试中
Dialogue: 0,0:04:09.20,0:04:11.30,*Default,NTP,0000,0000,0000,,所以如果你看看即将到来的时间表
Dialogue: 0,0:04:12.13,0:04:13.50,*Default,NTP,0000,0000,0000,,还有期中考试
Dialogue: 0,0:04:13.67,0:04:15.07,*Default,NTP,0000,0000,0000,,这就是我们现在的处境
Dialogue: 0,0:04:15.57,0:04:18.00,*Default,NTP,0000,0000,0000,,这三个主题将在中期
Dialogue: 0,0:04:18.60,0:04:19.97,*Default,NTP,0000,0000,0000,,这个话题将会是
Dialogue: 0,0:04:19.97,0:04:21.77,*Default,NTP,0000,0000,0000,,本学期完全可选
Dialogue: 0,0:04:22.37,0:04:23.77,*Default,NTP,0000,0000,0000,,它不会包含在任何
Dialogue: 0,0:04:23.77,0:04:26.97,*Default,NTP,0000,0000,0000,,家庭作业或实验或讨论或考试
Dialogue: 0,0:04:27.33,0:04:28.77,*Default,NTP,0000,0000,0000,,我觉得很有趣
Dialogue: 0,0:04:29.00,0:04:31.50,*Default,NTP,0000,0000,0000,,你会在 61 b 中听到很多关于它的内容
Dialogue: 0,0:04:31.70,0:04:33.93,*Default,NTP,0000,0000,0000,,所以我们只是推迟到那时
Dialogue: 0,0:04:35.80,0:04:37.27,*Default,NTP,0000,0000,0000,,这两场讲座真的
Dialogue: 0,0:04:37.27,0:04:39.27,*Default,NTP,0000,0000,0000,,关于回顾你所学的一切
Dialogue: 0,0:04:39.27,0:04:41.17,*Default,NTP,0000,0000,0000,,关于对象和值
Dialogue: 0,0:04:41.80,0:04:43.90,*Default,NTP,0000,0000,0000,,所以我建议你看那些
Dialogue: 0,0:04:43.90,0:04:44.90,*Default,NTP,0000,0000,0000,,当他们出来时
Dialogue: 0,0:04:45.07,0:04:47.20,*Default,NTP,0000,0000,0000,,因为他们会帮助你准备考试
Dialogue: 0,0:04:47.77,0:04:48.93,*Default,NTP,0000,0000,0000,,以及这个讲座
Dialogue: 0,0:04:49.70,0:04:52.40,*Default,NTP,0000,0000,0000,,是可选的它一直是可选的
Dialogue: 0,0:04:52.77,0:04:55.37,*Default,NTP,0000,0000,0000,,但这通常是学生最喜欢的课程部分
Dialogue: 0,0:04:55.37,0:04:58.47,*Default,NTP,0000,0000,0000,,所以我绝对推荐观看那个讲座
Dialogue: 0,0:04:58.50,0:05:00.47,*Default,NTP,0000,0000,0000,,但你不需要从中学到任何东西
Dialogue: 0,0:05:00.50,0:05:03.27,*Default,NTP,0000,0000,0000,,这将适用于周三的期中考试
Dialogue: 0,0:05:04.40,0:05:05.77,*Default,NTP,0000,0000,0000,,这就是即将发生的事情
Dialogue: 0,0:05:06.13,0:05:08.40,*Default,NTP,0000,0000,0000,,今天的讲座是关于继承的
Dialogue: 0,0:05:08.60,0:05:11.67,*Default,NTP,0000,0000,0000,,关于一个可能被过度使用的主题
Dialogue: 0,0:05:12.10,0:05:13.90,*Default,NTP,0000,0000,0000,,所以你确实需要了解它
Dialogue: 0,0:05:14.07,0:05:15.27,*Default,NTP,0000,0000,0000,,但我不推荐
Dialogue: 0,0:05:15.27,0:05:17.60,*Default,NTP,0000,0000,0000,,在任何可能的地方使用它
Dialogue: 0,0:05:18.07,0:05:20.40,*Default,NTP,0000,0000,0000,,但这可能是一个非常有用的技术
Dialogue: 0,0:05:20.50,0:05:24.33,*Default,NTP,0000,0000,0000,,当它被适当应用时，我们就可以了
Dialogue: 0,0:05:26.97,0:05:29.20,*Default,NTP,0000,0000,0000,,让我们回忆一下属性
Dialogue: 0,0:05:29.77,0:05:32.20,*Default,NTP,0000,0000,0000,,所以属性是对象的一部分
Dialogue: 0,0:05:32.50,0:05:34.17,*Default,NTP,0000,0000,0000,,还有所有这些新术语
Dialogue: 0,0:05:34.17,0:05:36.20,*Default,NTP,0000,0000,0000,,关于函数、方法和属性
Dialogue: 0,0:05:36.20,0:05:37.80,*Default,NTP,0000,0000,0000,,我想简单回顾一下
Dialogue: 0,0:05:38.47,0:05:40.37,*Default,NTP,0000,0000,0000,,所以所有对象都有属性
Dialogue: 0,0:05:40.37,0:05:42.60,*Default,NTP,0000,0000,0000,,这是名称值对
Dialogue: 0,0:05:43.67,0:05:45.33,*Default,NTP,0000,0000,0000,,类也是对象
Dialogue: 0,0:05:45.80,0:05:47.67,*Default,NTP,0000,0000,0000,,所以类有属性
Dialogue: 0,0:05:48.93,0:05:49.77,*Default,NTP,0000,0000,0000,,一个实例
Dialogue: 0,0:05:49.77,0:05:53.13,*Default,NTP,0000,0000,0000,,attribute 是类的实例的属性
Dialogue: 0,0:05:53.77,0:05:56.67,*Default,NTP,0000,0000,0000,,类属性是类的属性
Dialogue: 0,0:05:56.67,0:05:57.67,*Default,NTP,0000,0000,0000,,一个实例的
Dialogue: 0,0:05:58.73,0:05:59.73,*Default,NTP,0000,0000,0000,,所以有两个不同的
Dialogue: 0,0:05:59.73,0:06:01.50,*Default,NTP,0000,0000,0000,,您可以在属性中找到的地方
Dialogue: 0,0:06:01.87,0:06:04.00,*Default,NTP,0000,0000,0000,,在其实例或类中
Dialogue: 0,0:06:05.07,0:06:06.90,*Default,NTP,0000,0000,0000,,现在是棘手的部分
Dialogue: 0,0:06:07.50,0:06:09.73,*Default,NTP,0000,0000,0000,,我们有所有类属性的集合
Dialogue: 0,0:06:09.77,0:06:12.13,*Default,NTP,0000,0000,0000,,以及所有函数的集合
Dialogue: 0,0:06:12.47,0:06:13.13,*Default,NTP,0000,0000,0000,,函数不是
Dialogue: 0,0:06:13.13,0:06:15.40,*Default,NTP,0000,0000,0000,,特别是面向对象编程
Dialogue: 0,0:06:15.67,0:06:17.60,*Default,NTP,0000,0000,0000,,但方法是
Dialogue: 0,0:06:17.87,0:06:21.37,*Default,NTP,0000,0000,0000,,所以方法是一个函数，也是一个类属性
Dialogue: 0,0:06:22.90,0:06:24.67,*Default,NTP,0000,0000,0000,,在Python对象系统中
Dialogue: 0,0:06:24.97,0:06:26.50,*Default,NTP,0000,0000,0000,,函数是对象
Dialogue: 0,0:06:27.07,0:06:29.00,*Default,NTP,0000,0000,0000,,绑定方法也是对象
Dialogue: 0,0:06:29.10,0:06:31.07,*Default,NTP,0000,0000,0000,,略有不同种类的物体
Dialogue: 0,0:06:31.17,0:06:34.77,*Default,NTP,0000,0000,0000,,有一个第一个参数为 self 的函数
Dialogue: 0,0:06:35.00,0:06:36.10,*Default,NTP,0000,0000,0000,,已经填写了
Dialogue: 0,0:06:36.47,0:06:38.13,*Default,NTP,0000,0000,0000,,已经绑定到实例
Dialogue: 0,0:06:39.37,0:06:41.90,*Default,NTP,0000,0000,0000,,点表达式计算结果为绑定方法
Dialogue: 0,0:06:41.97,0:06:44.47,*Default,NTP,0000,0000,0000,,当你有一个类属性时，它就是一个函数
Dialogue: 0,0:06:45.93,0:06:48.10,*Default,NTP,0000,0000,0000,,这是一个很常见的模式
Dialogue: 0,0:06:48.27,0:06:50.80,*Default,NTP,0000,0000,0000,,在点之前有一些实例
Dialogue: 0,0:06:50.87,0:06:52.80,*Default,NTP,0000,0000,0000,,点后面有一个方法名称
Dialogue: 0,0:06:53.13,0:06:54.33,*Default,NTP,0000,0000,0000,,那么那个方法
Dialogue: 0,0:06:54.70,0:06:56.47,*Default,NTP,0000,0000,0000,,是名为
Dialogue: 0,0:06:56.53,0:06:59.47,*Default,NTP,0000,0000,0000,,将实例填写为 self 参数
Dialogue: 0,0:07:01.67,0:07:02.50,*Default,NTP,0000,0000,0000,,让我们快点
Dialogue: 0,0:07:02.50,0:07:04.60,*Default,NTP,0000,0000,0000,,回顾当你评估时会发生什么
Dialogue: 0,0:07:04.60,0:07:05.77,*Default,NTP,0000,0000,0000,,点表达式
Dialogue: 0,0:07:06.40,0:07:07.47,*Default,NTP,0000,0000,0000,,你评价这个
Dialogue: 0,0:07:07.47,0:07:10.00,*Default,NTP,0000,0000,0000,,通过计算点左边的表达式
Dialogue: 0,0:07:10.10,0:07:11.67,*Default,NTP,0000,0000,0000,,产生一个对象
Dialogue: 0,0:07:12.73,0:07:15.30,*Default,NTP,0000,0000,0000,,名称与实例属性匹配
Dialogue: 0,0:07:15.60,0:07:18.27,*Default,NTP,0000,0000,0000,,如果存在具有该名称的实例属性
Dialogue: 0,0:07:18.30,0:07:19.13,*Default,NTP,0000,0000,0000,,它的价值
Dialogue: 0,0:07:19.13,0:07:22.07,*Default,NTP,0000,0000,0000,,作为整个点表达式的值返回
Dialogue: 0,0:07:23.13,0:07:26.30,*Default,NTP,0000,0000,0000,,如果没有，则在班级中查找姓名
Dialogue: 0,0:07:26.30,0:07:28.50,*Default,NTP,0000,0000,0000,,产生一个类属性值
Dialogue: 0,0:07:29.97,0:07:31.40,*Default,NTP,0000,0000,0000,,并返回该值
Dialogue: 0,0:07:31.40,0:07:32.87,*Default,NTP,0000,0000,0000,,除非它是一个函数
Dialogue: 0,0:07:32.87,0:07:34.77,*Default,NTP,0000,0000,0000,,在这种情况下你会得到稍微不同的结果
Dialogue: 0,0:07:34.77,0:07:35.93,*Default,NTP,0000,0000,0000,,函数的版本
Dialogue: 0,0:07:35.93,0:07:37.70,*Default,NTP,0000,0000,0000,,你得到一个绑定方法
Dialogue: 0,0:07:38.00,0:07:41.40,*Default,NTP,0000,0000,0000,,或者你得到带有第一个参数的函数
Dialogue: 0,0:07:41.53,0:07:42.57,*Default,NTP,0000,0000,0000,,已经绑定
Dialogue: 0,0:07:42.77,0:07:44.80,*Default,NTP,0000,0000,0000,,到点表达式的对象
Dialogue: 0,0:07:47.77,0:07:49.87,*Default,NTP,0000,0000,0000,,属性赋值语句
Dialogue: 0,0:07:49.87,0:07:51.77,*Default,NTP,0000,0000,0000,,更改绑定的值
Dialogue: 0,0:07:51.80,0:07:55.37,*Default,NTP,0000,0000,0000,,对象或类中的属性名称
Dialogue: 0,0:07:56.33,0:07:58.77,*Default,NTP,0000,0000,0000,,这样你就可以分配给属性
Dialogue: 0,0:07:59.50,0:08:00.47,*Default,NTP,0000,0000,0000,,赋值语句
Dialogue: 0,0:08:00.47,0:08:02.87,*Default,NTP,0000,0000,0000,,对于其左侧的点表达式
Dialogue: 0,0:08:03.10,0:08:05.17,*Default,NTP,0000,0000,0000,,是属性赋值语句
Dialogue: 0,0:08:05.30,0:08:08.20,*Default,NTP,0000,0000,0000,,所以它们会影响该点的对象的属性
Dialogue: 0,0:08:08.20,0:08:09.07,*Default,NTP,0000,0000,0000,,表达
Dialogue: 0,0:08:10.40,0:08:12.40,*Default,NTP,0000,0000,0000,,如果该对象是一个实例
Dialogue: 0,0:08:12.73,0:08:15.20,*Default,NTP,0000,0000,0000,,然后赋值设置一个实例属性
Dialogue: 0,0:08:15.77,0:08:17.50,*Default,NTP,0000,0000,0000,,如果对象是一个类
Dialogue: 0,0:08:17.50,0:08:19.80,*Default,NTP,0000,0000,0000,,赋值设置类属性
Dialogue: 0,0:08:21.97,0:08:24.47,*Default,NTP,0000,0000,0000,,所以假设我有帐户类别
Dialogue: 0,0:08:24.73,0:08:26.47,*Default,NTP,0000,0000,0000,,我刚刚向您展示了其中的一部分
Dialogue: 0,0:08:27.13,0:08:30.27,*Default,NTP,0000,0000,0000,,人们已经对这个定义产生了兴趣
Dialogue: 0,0:08:30.40,0:08:32.93,*Default,NTP,0000,0000,0000,,类属性，因为它已定义
Dialogue: 0,0:08:32.93,0:08:34.37,*Default,NTP,0000,0000,0000,,直接在班级内
Dialogue: 0,0:08:35.00,0:08:36.87,*Default,NTP,0000,0000,0000,,或作为持有人和余额
Dialogue: 0,0:08:37.00,0:08:38.87,*Default,NTP,0000,0000,0000,,是实例属性
Dialogue: 0,0:08:38.87,0:08:42.13,*Default,NTP,0000,0000,0000,,因为它们是在创建的新实例上设置的
Dialogue: 0,0:08:42.47,0:08:44.17,*Default,NTP,0000,0000,0000,,并传递给其中
Dialogue: 0,0:08:46.10,0:08:47.70,*Default,NTP,0000,0000,0000,,所以帐户是一个类
Dialogue: 0,0:08:47.70,0:08:50.30,*Default,NTP,0000,0000,0000,,汤姆帐户是该类的一个实例
Dialogue: 0,0:08:51.97,0:08:56.10,*Default,NTP,0000,0000,0000,,如果我说 tomacount 利息等于 0.08
Dialogue: 0,0:08:56.80,0:08:59.20,*Default,NTP,0000,0000,0000,,这就是设置一个实例属性
Dialogue: 0,0:08:59.27,0:08:59.87,*Default,NTP,0000,0000,0000,,因为
Dialogue: 0,0:08:59.87,0:09:02.60,*Default,NTP,0000,0000,0000,,点表达式的对象是一个实例
Dialogue: 0,0:09:03.90,0:09:06.13,*Default,NTP,0000,0000,0000,,所以这个表达式的计算结果是一个对象
Dialogue: 0,0:09:06.40,0:09:07.53,*Default,NTP,0000,0000,0000,,这整件事
Dialogue: 0,0:09:08.07,0:09:09.57,*Default,NTP,0000,0000,0000,,不查找兴趣
Dialogue: 0,0:09:09.57,0:09:12.37,*Default,NTP,0000,0000,0000,,在那个对象上并在类中找到它
Dialogue: 0,0:09:12.77,0:09:13.97,*Default,NTP,0000,0000,0000,,相反，我们只是
Dialogue: 0,0:09:14.00,0:09:14.77,*Default,NTP,0000,0000,0000,,直接赋值
Dialogue: 0,0:09:14.77,0:09:17.20,*Default,NTP,0000,0000,0000,,到这里的对象的属性
Dialogue: 0,0:09:18.37,0:09:20.27,*Default,NTP,0000,0000,0000,,所以这是属性分配
Dialogue: 0,0:09:20.47,0:09:23.90,*Default,NTP,0000,0000,0000,,添加或修改名为interest的属性
Dialogue: 0,0:09:24.10,0:09:25.70,*Default,NTP,0000,0000,0000,,到汤姆帐户
Dialogue: 0,0:09:26.13,0:09:27.20,*Default,NTP,0000,0000,0000,,在这种情况下
Dialogue: 0,0:09:27.37,0:09:31.67,*Default,NTP,0000,0000,0000,,该实例之前没有兴趣属性
Dialogue: 0,0:09:31.97,0:09:34.70,*Default,NTP,0000,0000,0000,,所以赋值语句会添加一个
Dialogue: 0,0:09:36.17,0:09:38.87,*Default,NTP,0000,0000,0000,,这是实例属性分配的示例
Dialogue: 0,0:09:39.97,0:09:41.57,*Default,NTP,0000,0000,0000,,类属性赋值
Dialogue: 0,0:09:42.27,0:09:45.87,*Default,NTP,0000,0000,0000,,当您有属性赋值语句时出现
Dialogue: 0,0:09:45.87,0:09:48.47,*Default,NTP,0000,0000,0000,,意思是有一些表达式左边有一个点
Dialogue: 0,0:09:49.37,0:09:52.97,*Default,NTP,0000,0000,0000,,该点表达式的对象是一个类
Dialogue: 0,0:09:53.33,0:09:55.20,*Default,NTP,0000,0000,0000,,所以这将会改变
Dialogue: 0,0:09:55.60,0:09:59.13,*Default,NTP,0000,0000,0000,,账户类别的利息属性
Dialogue: 0,0:09:59.13,0:10:01.20,*Default,NTP,0000,0000,0000,,在这种情况下已经存在
Dialogue: 0,0:10:01.33,0:10:02.73,*Default,NTP,0000,0000,0000,,所以我们去改变它
Dialogue: 0,0:10:05.33,0:10:07.40,*Default,NTP,0000,0000,0000,,好的，这是一个扩展的例子
Dialogue: 0,0:10:07.40,0:10:10.30,*Default,NTP,0000,0000,0000,,属性赋值语句如何影响类
Dialogue: 0,0:10:10.30,0:10:11.40,*Default,NTP,0000,0000,0000,,和物体
Dialogue: 0,0:10:13.00,0:10:16.77,*Default,NTP,0000,0000,0000,,假设我说 jim 帐户是 jim 的帐户
Dialogue: 0,0:10:17.60,0:10:19.60,*Default,NTP,0000,0000,0000,,现在我要介绍这个新对象
Dialogue: 0,0:10:19.67,0:10:21.67,*Default,NTP,0000,0000,0000,,它有一个天平和一个支架
Dialogue: 0,0:10:21.93,0:10:23.10,*Default,NTP,0000,0000,0000,,和这个例子
Dialogue: 0,0:10:23.50,0:10:25.47,*Default,NTP,0000,0000,0000,,是这个类的一个实例
Dialogue: 0,0:10:26.00,0:10:28.30,*Default,NTP,0000,0000,0000,,现在账户类别有利息
Dialogue: 0,0:10:28.80,0:10:31.07,*Default,NTP,0000,0000,0000,,并且可以从所有实例访问
Dialogue: 0,0:10:31.07,0:10:33.07,*Default,NTP,0000,0000,0000,,但这是课程的一部分
Dialogue: 0,0:10:33.70,0:10:36.47,*Default,NTP,0000,0000,0000,,它还有提款和存款方式
Dialogue: 0,0:10:36.67,0:10:37.73,*Default,NTP,0000,0000,0000,,和一个开始
Dialogue: 0,0:10:40.00,0:10:40.70,*Default,NTP,0000,0000,0000,,所以在这里我们看到
Dialogue: 0,0:10:40.70,0:10:41.97,*Default,NTP,0000,0000,0000,,a 的实例属性
Dialogue: 0,0:10:41.97,0:10:44.27,*Default,NTP,0000,0000,0000,,健身房账户只是余额和持有人
Dialogue: 0,0:10:44.97,0:10:46.70,*Default,NTP,0000,0000,0000,,如果我创建汤姆帐户
Dialogue: 0,0:10:46.93,0:10:47.10,*Default,NTP,0000,0000,0000,,出色地
Dialogue: 0,0:10:47.10,0:10:49.57,*Default,NTP,0000,0000,0000,,那么它将有自己的余额和自己的持有者
Dialogue: 0,0:10:50.20,0:10:52.00,*Default,NTP,0000,0000,0000,,余额恰好相同
Dialogue: 0,0:10:52.00,0:10:53.60,*Default,NTP,0000,0000,0000,,但他们以后可能会改变
Dialogue: 0,0:10:55.13,0:10:57.60,*Default,NTP,0000,0000,0000,,在这里我们查询了汤姆账户的利息
Dialogue: 0,0:10:57.90,0:10:59.07,*Default,NTP,0000,0000,0000,,这意味着寻找汤姆
Dialogue: 0,0:10:59.07,0:11:01.20,*Default,NTP,0000,0000,0000,,账户查看是否有利息属性
Dialogue: 0,0:11:01.30,0:11:04.10,*Default,NTP,0000,0000,0000,,没有那么你看看班级
Dialogue: 0,0:11:04.30,0:11:06.30,*Default,NTP,0000,0000,0000,,发现0.02
Dialogue: 0,0:11:06.50,0:11:08.13,*Default,NTP,0000,0000,0000,,这就是我们看到的价值
Dialogue: 0,0:11:09.57,0:11:12.67,*Default,NTP,0000,0000,0000,,jim 账户的利息也是 0.02
Dialogue: 0,0:11:13.77,0:11:17.87,*Default,NTP,0000,0000,0000,,接下来我可以将计数点利息设置为0.04
Dialogue: 0,0:11:18.80,0:11:23.20,*Default,NTP,0000,0000,0000,,更改帐户类别的类别属性
Dialogue: 0,0:11:23.87,0:11:26.00,*Default,NTP,0000,0000,0000,,所以我们可以看到这里反映了变化
Dialogue: 0,0:11:26.20,0:11:29.00,*Default,NTP,0000,0000,0000,,利息不再局限于 0.02
Dialogue: 0,0:11:29.13,0:11:31.57,*Default,NTP,0000,0000,0000,,但属性值现在是点o四
Dialogue: 0,0:11:33.37,0:11:35.30,*Default,NTP,0000,0000,0000,,如果我查一下汤姆账户上的利息
Dialogue: 0,0:11:35.30,0:11:36.73,*Default,NTP,0000,0000,0000,,我会找到第四点
Dialogue: 0,0:11:36.77,0:11:38.73,*Default,NTP,0000,0000,0000,,在吉姆的账户上我会找到同样的
Dialogue: 0,0:11:39.13,0:11:42.30,*Default,NTP,0000,0000,0000,,即使这些是在那时创建的
Dialogue: 0,0:11:43.13,0:11:45.40,*Default,NTP,0000,0000,0000,,账户类别有不同的利率
Dialogue: 0,0:11:46.80,0:11:48.17,*Default,NTP,0000,0000,0000,,所以事实并非如此
Dialogue: 0,0:11:48.20,0:11:51.30,*Default,NTP,0000,0000,0000,,实例已锁定其类属性
Dialogue: 0,0:11:51.60,0:11:52.80,*Default,NTP,0000,0000,0000,,当它被创建时
Dialogue: 0,0:11:52.97,0:11:55.13,*Default,NTP,0000,0000,0000,,相反，它们会随着时间的推移而改变
Dialogue: 0,0:11:55.70,0:11:58.17,*Default,NTP,0000,0000,0000,,实例将反映这些变化
Dialogue: 0,0:12:01.47,0:12:05.70,*Default,NTP,0000,0000,0000,,接下来我们看到 jimacount 利息设置为 0.08
Dialogue: 0,0:12:06.37,0:12:09.40,*Default,NTP,0000,0000,0000,,这是一个实例属性分配
Dialogue: 0,0:12:09.67,0:12:13.70,*Default,NTP,0000,0000,0000,,为 jima 计数添加兴趣属性
Dialogue: 0,0:12:15.50,0:12:18.60,*Default,NTP,0000,0000,0000,,好的，现在我看到两个地方反映了兴趣
Dialogue: 0,0:12:18.67,0:12:21.20,*Default,NTP,0000,0000,0000,,在实例和类中
Dialogue: 0,0:12:22.77,0:12:24.60,*Default,NTP,0000,0000,0000,,如果我们查一下吉姆账户的利息
Dialogue: 0,0:12:24.60,0:12:27.30,*Default,NTP,0000,0000,0000,,我们会看到我们刚刚设置的 0.08
Dialogue: 0,0:12:27.80,0:12:29.80,*Default,NTP,0000,0000,0000,,如果我们查一下汤姆账户的利息
Dialogue: 0,0:12:30.10,0:12:32.70,*Default,NTP,0000,0000,0000,,我们首先查看汤姆帐户，它没有利息
Dialogue: 0,0:12:32.73,0:12:34.30,*Default,NTP,0000,0000,0000,,所以我们看看它的类
Dialogue: 0,0:12:34.30,0:12:36.67,*Default,NTP,0000,0000,0000,,目前设置为 0.04
Dialogue: 0,0:12:37.87,0:12:38.93,*Default,NTP,0000,0000,0000,,所以现在我们看到
Dialogue: 0,0:12:39.10,0:12:42.37,*Default,NTP,0000,0000,0000,,我们能够专门化一个特定的实例
Dialogue: 0,0:12:43.90,0:12:45.53,*Default,NTP,0000,0000,0000,,账户类别的
Dialogue: 0,0:12:45.60,0:12:47.57,*Default,NTP,0000,0000,0000,,给予它自己的特殊利率
Dialogue: 0,0:12:47.60,0:12:49.27,*Default,NTP,0000,0000,0000,,你知道这可能发生在背部
Dialogue: 0,0:12:49.27,0:12:51.73,*Default,NTP,0000,0000,0000,,有人获得比其他人更高的利率
Dialogue: 0,0:12:53.37,0:12:57.13,*Default,NTP,0000,0000,0000,,假设现在我们将计数点利息更改为 0.05
Dialogue: 0,0:12:57.87,0:12:58.70,*Default,NTP,0000,0000,0000,,嗯，这是一个
Dialogue: 0,0:12:58.87,0:13:00.57,*Default,NTP,0000,0000,0000,,类属性赋值语句
Dialogue: 0,0:13:00.57,0:13:02.93,*Default,NTP,0000,0000,0000,,这会将其更改为 0.05
Dialogue: 0,0:13:03.37,0:13:05.77,*Default,NTP,0000,0000,0000,,最后我们可以检查每个的利率
Dialogue: 0,0:13:05.93,0:13:10.07,*Default,NTP,0000,0000,0000,,实例汤姆的账户利率为 0.0 5
Dialogue: 0,0:13:10.50,0:13:11.73,*Default,NTP,0000,0000,0000,,刚刚改变的
Dialogue: 0,0:13:11.80,0:13:14.93,*Default,NTP,0000,0000,0000,,因为这个类的属性赋值语句
Dialogue: 0,0:13:15.77,0:13:16.57,*Default,NTP,0000,0000,0000,,吉姆
Dialogue: 0,0:13:16.60,0:13:20.47,*Default,NTP,0000,0000,0000,,仍然有一个特殊情况的利率 0.0 8
Dialogue: 0,0:13:21.07,0:13:22.87,*Default,NTP,0000,0000,0000,,所以通过分配给班级
Dialogue: 0,0:13:22.87,0:13:25.30,*Default,NTP,0000,0000,0000,,你没有提出所有的特殊情况
Dialogue: 0,0:13:25.30,0:13:26.27,*Default,NTP,0000,0000,0000,,他们还在那里
Dialogue: 0,0:13:31.00,0:13:33.60,*Default,NTP,0000,0000,0000,,到一个新的主题继承
Dialogue: 0,0:13:34.33,0:13:37.07,*Default,NTP,0000,0000,0000,,这是Python对象系统的一个新特性
Dialogue: 0,0:13:37.60,0:13:39.93,*Default,NTP,0000,0000,0000,,这是几乎所有产品中都存在的功能
Dialogue: 0,0:13:40.07,0:13:42.30,*Default,NTP,0000,0000,0000,,每种编程语言中的对象系统
Dialogue: 0,0:13:43.37,0:13:44.53,*Default,NTP,0000,0000,0000,,所以继承
Dialogue: 0,0:13:44.97,0:13:48.47,*Default,NTP,0000,0000,0000,,是将多个类关联在一起的方法
Dialogue: 0,0:13:49.27,0:13:51.93,*Default,NTP,0000,0000,0000,,因为并不是每个类都是孤立存在的
Dialogue: 0,0:13:51.93,0:13:53.40,*Default,NTP,0000,0000,0000,,有时候一个人只是
Dialogue: 0,0:13:53.60,0:13:54.90,*Default,NTP,0000,0000,0000,,与另一个相似
Dialogue: 0,0:13:54.90,0:13:56.87,*Default,NTP,0000,0000,0000,,我们想要表达这种关系
Dialogue: 0,0:13:57.73,0:13:59.93,*Default,NTP,0000,0000,0000,,所以你应该想到的最常见的用例
Dialogue: 0,0:13:59.93,0:14:01.60,*Default,NTP,0000,0000,0000,,关于何时使用继承
Dialogue: 0,0:14:01.97,0:14:04.53,*Default,NTP,0000,0000,0000,,当你有两个相似的类时
Dialogue: 0,0:14:04.60,0:14:07.90,*Default,NTP,0000,0000,0000,,专业化程度不同
Dialogue: 0,0:14:10.00,0:14:11.00,*Default,NTP,0000,0000,0000,,所以专门的
Dialogue: 0,0:14:11.00,0:14:12.97,*Default,NTP,0000,0000,0000,,类可能具有与以下所有相同的属性
Dialogue: 0,0:14:12.97,0:14:14.20,*Default,NTP,0000,0000,0000,,普通班
Dialogue: 0,0:14:14.67,0:14:17.30,*Default,NTP,0000,0000,0000,,以及一些特殊情况的行为
Dialogue: 0,0:14:19.50,0:14:23.80,*Default,NTP,0000,0000,0000,,你在 python 中表达这个语法的方式
Dialogue: 0,0:14:24.37,0:14:25.37,*Default,NTP,0000,0000,0000,,除此之外
Dialogue: 0,0:14:25.37,0:14:27.70,*Default,NTP,0000,0000,0000,,有一个带有名称和套件的类声明
Dialogue: 0,0:14:28.10,0:14:31.47,*Default,NTP,0000,0000,0000,,你也可以在括号中放入低音类
Dialogue: 0,0:14:31.80,0:14:35.53,*Default,NTP,0000,0000,0000,,bass 类是该类继承的类
Dialogue: 0,0:14:38.37,0:14:41.67,*Default,NTP,0000,0000,0000,,所以从概念上讲，发生的事情是子类
Dialogue: 0,0:14:41.67,0:14:43.97,*Default,NTP,0000,0000,0000,,我们用这个类语句创建的
Dialogue: 0,0:14:44.37,0:14:48.50,*Default,NTP,0000,0000,0000,,与其基类共享所有属性
Dialogue: 0,0:14:49.93,0:14:52.07,*Default,NTP,0000,0000,0000,,子类可能会覆盖
Dialogue: 0,0:14:52.07,0:14:53.90,*Default,NTP,0000,0000,0000,,某些继承的属性按顺序排列
Dialogue: 0,0:14:53.90,0:14:55.80,*Default,NTP,0000,0000,0000,,稍微改变它的行为
Dialogue: 0,0:14:56.20,0:14:59.27,*Default,NTP,0000,0000,0000,,但任何没有改变的东西都保持不变
Dialogue: 0,0:15:00.00,0:15:01.37,*Default,NTP,0000,0000,0000,,所以使用继承
Dialogue: 0,0:15:01.37,0:15:04.37,*Default,NTP,0000,0000,0000,,当我们写下现有类的子类时
Dialogue: 0,0:15:04.67,0:15:06.90,*Default,NTP,0000,0000,0000,,我们所做的就是指定不同之处
Dialogue: 0,0:15:06.90,0:15:08.17,*Default,NTP,0000,0000,0000,,关于这个子类
Dialogue: 0,0:15:08.33,0:15:09.70,*Default,NTP,0000,0000,0000,,从基类
Dialogue: 0,0:15:09.80,0:15:11.20,*Default,NTP,0000,0000,0000,,其他一切保持不变
Dialogue: 0,0:15:13.80,0:15:14.97,*Default,NTP,0000,0000,0000,,让我们举个例子
Dialogue: 0,0:15:15.13,0:15:15.93,*Default,NTP,0000,0000,0000,,所以
Dialogue: 0,0:15:16.73,0:15:18.30,*Default,NTP,0000,0000,0000,,假设我们有一个支票账户
Dialogue: 0,0:15:18.30,0:15:19.57,*Default,NTP,0000,0000,0000,,就像一个帐户
Dialogue: 0,0:15:20.53,0:15:22.50,*Default,NTP,0000,0000,0000,,但有以下特殊之处
Dialogue: 0,0:15:23.27,0:15:24.90,*Default,NTP,0000,0000,0000,,当您创建支票账户时
Dialogue: 0,0:15:24.90,0:15:26.53,*Default,NTP,0000,0000,0000,,你仍然给它一个支架
Dialogue: 0,0:15:27.40,0:15:29.17,*Default,NTP,0000,0000,0000,,但其利率较低
Dialogue: 0,0:15:29.17,0:15:30.90,*Default,NTP,0000,0000,0000,,比你得到的利率
Dialogue: 0,0:15:30.90,0:15:32.13,*Default,NTP,0000,0000,0000,,在普通帐户上
Dialogue: 0,0:15:32.67,0:15:34.90,*Default,NTP,0000,0000,0000,,所以你每个月得到的钱更少
Dialogue: 0,0:15:36.33,0:15:39.17,*Default,NTP,0000,0000,0000,,当你存款时和以前一样
Dialogue: 0,0:15:39.17,0:15:41.07,*Default,NTP,0000,0000,0000,,您将钱存入您的支票账户
Dialogue: 0,0:15:41.67,0:15:44.10,*Default,NTP,0000,0000,0000,,当您从支票账户提款时
Dialogue: 0,0:15:44.37,0:15:46.30,*Default,NTP,0000,0000,0000,,你会发生退缩脚
Dialogue: 0,0:15:46.30,0:15:48.70,*Default,NTP,0000,0000,0000,,我的意思是银行必须以某种方式赚一些钱
Dialogue: 0,0:15:49.13,0:15:51.97,*Default,NTP,0000,0000,0000,,所以当你从银行账户提取 5 美元时
Dialogue: 0,0:15:51.97,0:15:53.13,*Default,NTP,0000,0000,0000,,里面有 20 个
Dialogue: 0,0:15:53.27,0:15:56.60,*Default,NTP,0000,0000,0000,,真正剩下的是 14 的余额
Dialogue: 0,0:15:59.47,0:16:00.93,*Default,NTP,0000,0000,0000,,好吧，大部分都是这样
Dialogue: 0,0:16:00.93,0:16:04.20,*Default,NTP,0000,0000,0000,,该行为与 bass 类帐户共享
Dialogue: 0,0:16:04.80,0:16:07.33,*Default,NTP,0000,0000,0000,,所以这一切都不同
Dialogue: 0,0:16:07.33,0:16:09.00,*Default,NTP,0000,0000,0000,,是我们的利率较低
Dialogue: 0,0:16:09.97,0:16:11.73,*Default,NTP,0000,0000,0000,,当我们取款时
Dialogue: 0,0:16:11.73,0:16:13.17,*Default,NTP,0000,0000,0000,,我们必须额外支付一美元
Dialogue: 0,0:16:14.33,0:16:15.13,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:16:15.27,0:16:17.80,*Default,NTP,0000,0000,0000,,这是我们为该支票账户编写代码的方式
Dialogue: 0,0:16:18.27,0:16:20.50,*Default,NTP,0000,0000,0000,,我们说有一类叫做支票账户
Dialogue: 0,0:16:20.50,0:16:22.73,*Default,NTP,0000,0000,0000,,它的基类是 account
Dialogue: 0,0:16:23.27,0:16:24.90,*Default,NTP,0000,0000,0000,,同一件事的另一种说法
Dialogue: 0,0:16:25.37,0:16:27.37,*Default,NTP,0000,0000,0000,,我们将创建一个名为支票帐户的类
Dialogue: 0,0:16:27.37,0:16:29.67,*Default,NTP,0000,0000,0000,,从帐户继承
Dialogue: 0,0:16:31.50,0:16:34.17,*Default,NTP,0000,0000,0000,,所以这是一个收取提款费用的银行账户
Dialogue: 0,0:16:34.30,0:16:36.80,*Default,NTP,0000,0000,0000,,我们将提款费用设置为一美元
Dialogue: 0,0:16:37.20,0:16:39.93,*Default,NTP,0000,0000,0000,,我们将利率设定为 0 点
Dialogue: 0,0:16:39.93,0:16:41.77,*Default,NTP,0000,0000,0000,,而不是通常的两点
Dialogue: 0,0:16:42.33,0:16:44.97,*Default,NTP,0000,0000,0000,,然后我们还必须改变提款方法
Dialogue: 0,0:16:45.07,0:16:47.17,*Default,NTP,0000,0000,0000,,因为写下提款费
Dialogue: 0,0:16:47.17,0:16:47.47,*Default,NTP,0000,0000,0000,,可能
Dialogue: 0,0:16:47.47,0:16:49.53,*Default,NTP,0000,0000,0000,,看起来它正在帮助我们走向正确的方向
Dialogue: 0,0:16:49.53,0:16:50.37,*Default,NTP,0000,0000,0000,,它是
Dialogue: 0,0:16:50.77,0:16:53.77,*Default,NTP,0000,0000,0000,,但我们从来没有说过如何使用提现费
Dialogue: 0,0:16:53.80,0:16:56.00,*Default,NTP,0000,0000,0000,,所以我们必须写一个方法来做到这一点
Dialogue: 0,0:16:56.27,0:16:58.17,*Default,NTP,0000,0000,0000,,我们会写下取款方法
Dialogue: 0,0:16:59.27,0:17:01.33,*Default,NTP,0000,0000,0000,,所以提现方法需要一些金额
Dialogue: 0,0:17:01.97,0:17:04.93,*Default,NTP,0000,0000,0000,,它所做的就是撤回
Dialogue: 0,0:17:06.13,0:17:07.80,*Default,NTP,0000,0000,0000,,从经常账户
Dialogue: 0,0:17:08.40,0:17:10.37,*Default,NTP,0000,0000,0000,,指定的金额
Dialogue: 0,0:17:10.87,0:17:14.00,*Default,NTP,0000,0000,0000,,加上无论提款费用是多少
Dialogue: 0,0:17:14.53,0:17:16.00,*Default,NTP,0000,0000,0000,,对于这个经常账户
Dialogue: 0,0:17:16.87,0:17:19.10,*Default,NTP,0000,0000,0000,,现在为什么我一直说活期账户
Dialogue: 0,0:17:19.70,0:17:21.50,*Default,NTP,0000,0000,0000,,当它说 self 就在那里
Dialogue: 0,0:17:21.67,0:17:23.13,*Default,NTP,0000,0000,0000,,或者记住那个自己
Dialogue: 0,0:17:23.27,0:17:26.10,*Default,NTP,0000,0000,0000,,是我们用来引用对象的名称
Dialogue: 0,0:17:26.60,0:17:29.27,*Default,NTP,0000,0000,0000,,调用此方法
Dialogue: 0,0:17:30.77,0:17:33.77,*Default,NTP,0000,0000,0000,,所以当我们真正在这里打电话撤回时
Dialogue: 0,0:17:34.57,0:17:36.77,*Default,NTP,0000,0000,0000,,self 将被绑定到该支票账户
Dialogue: 0,0:17:36.77,0:17:38.67,*Default,NTP,0000,0000,0000,,目前称为 ch
Dialogue: 0,0:17:38.90,0:17:40.47,*Default,NTP,0000,0000,0000,,并最初创建
Dialogue: 0,0:17:40.67,0:17:42.50,*Default,NTP,0000,0000,0000,,通过此调用支票帐户
Dialogue: 0,0:17:43.17,0:17:45.10,*Default,NTP,0000,0000,0000,,好的，我们将提取 5 美元
Dialogue: 0,0:17:45.30,0:17:46.77,*Default,NTP,0000,0000,0000,,金额将为五
Dialogue: 0,0:17:46.90,0:17:49.73,*Default,NTP,0000,0000,0000,,我们将添加 1 的提款费
Dialogue: 0,0:17:49.73,0:17:51.80,*Default,NTP,0000,0000,0000,,所有支票账户共享
Dialogue: 0,0:17:51.80,0:17:53.67,*Default,NTP,0000,0000,0000,,因为这是一个类属性
Dialogue: 0,0:17:54.50,0:17:56.67,*Default,NTP,0000,0000,0000,,然后我们如何实际进行提款
Dialogue: 0,0:17:56.67,0:17:57.97,*Default,NTP,0000,0000,0000,,嗯，这就是有趣的部分
Dialogue: 0,0:17:58.37,0:17:59.67,*Default,NTP,0000,0000,0000,,我们指的是
Dialogue: 0,0:17:59.87,0:18:03.40,*Default,NTP,0000,0000,0000,,Bass 类上的方法称为帐户取款
Dialogue: 0,0:18:03.97,0:18:06.00,*Default,NTP,0000,0000,0000,,现在我们正在课堂上查找这个
Dialogue: 0,0:18:06.00,0:18:07.67,*Default,NTP,0000,0000,0000,,与实例相反
Dialogue: 0,0:18:07.97,0:18:09.90,*Default,NTP,0000,0000,0000,,我们不会找回绑定的方法
Dialogue: 0,0:18:10.13,0:18:12.80,*Default,NTP,0000,0000,0000,,我们必须自己提供这个自我
Dialogue: 0,0:18:15.50,0:18:16.30,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:18:16.93,0:18:19.70,*Default,NTP,0000,0000,0000,,因为我们把 account 放在这里作为基类
Dialogue: 0,0:18:19.70,0:18:21.80,*Default,NTP,0000,0000,0000,,我们不需要说任何关于存款的事情
Dialogue: 0,0:18:21.80,0:18:23.77,*Default,NTP,0000,0000,0000,,和以前一样
Dialogue: 0,0:18:23.93,0:18:25.73,*Default,NTP,0000,0000,0000,,我们不需要在其中说什么
Dialogue: 0,0:18:25.73,0:18:27.53,*Default,NTP,0000,0000,0000,,和以前一样
Dialogue: 0,0:18:27.53,0:18:30.30,*Default,NTP,0000,0000,0000,,所以支票账户从 0 美元开始
Dialogue: 0,0:18:32.60,0:18:35.47,*Default,NTP,0000,0000,0000,,好的，让我们谈谈查找属性名称
Dialogue: 0,0:18:35.47,0:18:38.57,*Default,NTP,0000,0000,0000,,不复制 bass 类属性的类
Dialogue: 0,0:18:38.57,0:18:39.53,*Default,NTP,0000,0000,0000,,进入子类
Dialogue: 0,0:18:39.53,0:18:41.40,*Default,NTP,0000,0000,0000,,相反是过程的一部分
Dialogue: 0,0:18:41.40,0:18:43.53,*Default,NTP,0000,0000,0000,,按名称查找属性
Dialogue: 0,0:18:44.10,0:18:46.90,*Default,NTP,0000,0000,0000,,这给了你一个属性的行为
Dialogue: 0,0:18:47.10,0:18:49.57,*Default,NTP,0000,0000,0000,,未更改的子类
Dialogue: 0,0:18:50.00,0:18:52.70,*Default,NTP,0000,0000,0000,,与低音类别相同
Dialogue: 0,0:18:54.07,0:18:56.60,*Default,NTP,0000,0000,0000,,所以要在班级中查找名字，这就是你要做的
Dialogue: 0,0:18:56.87,0:18:59.60,*Default,NTP,0000,0000,0000,,如果它指定一个属性在该类中
Dialogue: 0,0:18:59.70,0:19:01.67,*Default,NTP,0000,0000,0000,,然后返回属性值
Dialogue: 0,0:19:02.37,0:19:04.60,*Default,NTP,0000,0000,0000,,记住的属性或名称值对
Dialogue: 0,0:19:05.67,0:19:06.53,*Default,NTP,0000,0000,0000,,如果不
Dialogue: 0,0:19:06.90,0:19:09.77,*Default,NTP,0000,0000,0000,,在基类中查找该名称（如果有）
Dialogue: 0,0:19:11.30,0:19:13.70,*Default,NTP,0000,0000,0000,,现在低音类只是一个类
Dialogue: 0,0:19:13.80,0:19:16.50,*Default,NTP,0000,0000,0000,,所以我们递归地做同样的事情
Dialogue: 0,0:19:16.80,0:19:17.80,*Default,NTP,0000,0000,0000,,我们去那里看看
Dialogue: 0,0:19:17.97,0:19:19.50,*Default,NTP,0000,0000,0000,,看看类中是否有该属性
Dialogue: 0,0:19:19.50,0:19:21.57,*Default,NTP,0000,0000,0000,,如果是则推翻其属性值
Dialogue: 0,0:19:21.77,0:19:22.57,*Default,NTP,0000,0000,0000,,否则
Dialogue: 0,0:19:22.80,0:19:26.07,*Default,NTP,0000,0000,0000,,我们将在低音类的低音类中查找
Dialogue: 0,0:19:26.33,0:19:29.60,*Default,NTP,0000,0000,0000,,好吧，让我们来谈谈到底发生了什么
Dialogue: 0,0:19:30.37,0:19:32.20,*Default,NTP,0000,0000,0000,,当我创建支票账户时
Dialogue: 0,0:19:33.13,0:19:35.30,*Default,NTP,0000,0000,0000,,我将汤姆作为持有人
Dialogue: 0,0:19:36.00,0:19:38.77,*Default,NTP,0000,0000,0000,,由于我们刚刚定义了支票帐户类
Dialogue: 0,0:19:38.97,0:19:41.37,*Default,NTP,0000,0000,0000,,没有自己的 in it 方法
Dialogue: 0,0:19:42.60,0:19:44.17,*Default,NTP,0000,0000,0000,,我们在其中查找名字
Dialogue: 0,0:19:44.40,0:19:46.33,*Default,NTP,0000,0000,0000,,我们在支票账户中找不到它
Dialogue: 0,0:19:46.37,0:19:48.57,*Default,NTP,0000,0000,0000,,但我们确实在帐户中找到了它
Dialogue: 0,0:19:49.10,0:19:50.97,*Default,NTP,0000,0000,0000,,这就是被称为的那个
Dialogue: 0,0:19:51.40,0:19:55.17,*Default,NTP,0000,0000,0000,,这表示余额为零，持有人到顶部
Dialogue: 0,0:19:56.73,0:19:58.00,*Default,NTP,0000,0000,0000,,当我们查询利率时
Dialogue: 0,0:19:58.00,0:19:59.50,*Default,NTP,0000,0000,0000,,虽然有特殊利率
Dialogue: 0,0:19:59.50,0:20:00.50,*Default,NTP,0000,0000,0000,,对于支票账户
Dialogue: 0,0:20:00.50,0:20:01.60,*Default,NTP,0000,0000,0000,,所以这就是我们找到它的地方
Dialogue: 0,0:20:01.60,0:20:02.57,*Default,NTP,0000,0000,0000,,是 201
Dialogue: 0,0:20:03.67,0:20:04.93,*Default,NTP,0000,0000,0000,,当我们存款时
Dialogue: 0,0:20:05.30,0:20:09.30,*Default,NTP,0000,0000,0000,,所有存款均通过账户方法进行
Dialogue: 0,0:20:09.47,0:20:10.73,*Default,NTP,0000,0000,0000,,所以这就是我们所做的
Dialogue: 0,0:20:10.73,0:20:13.10,*Default,NTP,0000,0000,0000,,我们尝试评估这个运算符表达式
Dialogue: 0,0:20:13.10,0:20:14.60,*Default,NTP,0000,0000,0000,,这是一个点表达式
Dialogue: 0,0:20:14.60,0:20:16.27,*Default,NTP,0000,0000,0000,,这意味着我们查找存款
Dialogue: 0,0:20:16.27,0:20:17.67,*Default,NTP,0000,0000,0000,,在这个支票账户上
Dialogue: 0,0:20:17.67,0:20:19.00,*Default,NTP,0000,0000,0000,,检查实例
Dialogue: 0,0:20:19.10,0:20:21.17,*Default,NTP,0000,0000,0000,,那里没有存款属性
Dialogue: 0,0:20:21.47,0:20:23.50,*Default,NTP,0000,0000,0000,,我们检查支票账户类别
Dialogue: 0,0:20:24.07,0:20:25.77,*Default,NTP,0000,0000,0000,,那里没有属性存款
Dialogue: 0,0:20:26.10,0:20:27.93,*Default,NTP,0000,0000,0000,,然后我们检查帐户类别
Dialogue: 0,0:20:27.93,0:20:29.77,*Default,NTP,0000,0000,0000,,它有一个方法叫做存款
Dialogue: 0,0:20:29.93,0:20:33.10,*Default,NTP,0000,0000,0000,,所以我们在这里返回一个绑定方法并在 20 上调用它
Dialogue: 0,0:20:33.33,0:20:35.37,*Default,NTP,0000,0000,0000,,在帐户中存入 20 美元
Dialogue: 0,0:20:36.40,0:20:38.17,*Default,NTP,0000,0000,0000,,最后当我们撤退时
Dialogue: 0,0:20:38.33,0:20:40.10,*Default,NTP,0000,0000,0000,,而我们发现在支票账户中
Dialogue: 0,0:20:40.10,0:20:41.57,*Default,NTP,0000,0000,0000,,这给了我们 14
Dialogue: 0,0:20:42.70,0:20:44.77,*Default,NTP,0000,0000,0000,,好吧，让我们把整个事情写下来
Dialogue: 0,0:20:44.77,0:20:46.33,*Default,NTP,0000,0000,0000,,以便我们了解发生了什么
Dialogue: 0,0:20:47.87,0:20:49.30,*Default,NTP,0000,0000,0000,,所以在右边你看到
Dialogue: 0,0:20:49.30,0:20:51.37,*Default,NTP,0000,0000,0000,,上次的账户类别
Dialogue: 0,0:20:52.77,0:20:54.77,*Default,NTP,0000,0000,0000,,所以除了我们的课程之外
Dialogue: 0,0:20:54.77,0:20:56.90,*Default,NTP,0000,0000,0000,,我们将创建一个班级支票帐户
Dialogue: 0,0:20:59.33,0:21:01.07,*Default,NTP,0000,0000,0000,,从帐户继承
Dialogue: 0,0:21:03.80,0:21:05.57,*Default,NTP,0000,0000,0000,,它有不同的利率
Dialogue: 0,0:21:08.37,0:21:12.47,*Default,NTP,0000,0000,0000,,以及与所有 1 美元提款相关的费用
Dialogue: 0,0:21:13.27,0:21:15.17,*Default,NTP,0000,0000,0000,,以及费用的使用方式
Dialogue: 0,0:21:15.80,0:21:18.40,*Default,NTP,0000,0000,0000,,就是我们写一个提现方法
Dialogue: 0,0:21:23.90,0:21:27.10,*Default,NTP,0000,0000,0000,,不仅提取金额，还额外提取一美元
Dialogue: 0,0:21:28.93,0:21:29.97,*Default,NTP,0000,0000,0000,,现在好吧
Dialogue: 0,0:21:30.10,0:21:32.93,*Default,NTP,0000,0000,0000,,我们可以直接复制这个，这是合理的
Dialogue: 0,0:21:32.93,0:21:34.47,*Default,NTP,0000,0000,0000,,然后说
Dialogue: 0,0:21:34.60,0:21:37.77,*Default,NTP,0000,0000,0000,,好的，我们要做的第一件事就是添加一个
Dialogue: 0,0:21:38.90,0:21:41.93,*Default,NTP,0000,0000,0000,,金额，然后我们将通过
Dialogue: 0,0:21:42.17,0:21:44.60,*Default,NTP,0000,0000,0000,,我们会检查一下金额是否太大
Dialogue: 0,0:21:44.60,0:21:47.37,*Default,NTP,0000,0000,0000,,如果是，我们会说资金不足
Dialogue: 0,0:21:47.57,0:21:49.90,*Default,NTP,0000,0000,0000,,如果我们没问题的话我们就会改变平衡
Dialogue: 0,0:21:50.00,0:21:51.27,*Default,NTP,0000,0000,0000,,我们将退还该余额
Dialogue: 0,0:21:51.90,0:21:54.13,*Default,NTP,0000,0000,0000,,这在一段时间内是正确的
Dialogue: 0,0:21:54.27,0:21:55.30,*Default,NTP,0000,0000,0000,,但问题是
Dialogue: 0,0:21:55.30,0:21:56.70,*Default,NTP,0000,0000,0000,,如果我们在这里做出改变
Dialogue: 0,0:21:56.70,0:21:58.37,*Default,NTP,0000,0000,0000,,它们不会在这里反映出来
Dialogue: 0,0:21:59.53,0:22:02.37,*Default,NTP,0000,0000,0000,,所以这就是为什么在我向您展示的示例中
Dialogue: 0,0:22:02.87,0:22:05.07,*Default,NTP,0000,0000,0000,,我说我们实际上
Dialogue: 0,0:22:05.10,0:22:07.97,*Default,NTP,0000,0000,0000,,只需使用我们已有的实现即可
Dialogue: 0,0:22:08.13,0:22:09.80,*Default,NTP,0000,0000,0000,,向上计数提款
Dialogue: 0,0:22:10.10,0:22:11.97,*Default,NTP,0000,0000,0000,,这就是这个函数
Dialogue: 0,0:22:12.87,0:22:14.80,*Default,NTP,0000,0000,0000,,算出提款需要什么
Dialogue: 0,0:22:15.13,0:22:15.30,*Default,NTP,0000,0000,0000,,出色地
Dialogue: 0,0:22:15.30,0:22:18.93,*Default,NTP,0000,0000,0000,,它将 self 帐户对象作为第一个参数
Dialogue: 0,0:22:19.10,0:22:20.07,*Default,NTP,0000,0000,0000,,和叙利亚第二
Dialogue: 0,0:22:20.07,0:22:22.17,*Default,NTP,0000,0000,0000,,参数是我们要提取的金额
Dialogue: 0,0:22:22.40,0:22:25.00,*Default,NTP,0000,0000,0000,,这是这里传入的金额
Dialogue: 0,0:22:25.30,0:22:27.07,*Default,NTP,0000,0000,0000,,加上撤回脚
Dialogue: 0,0:22:30.97,0:22:33.73,*Default,NTP,0000,0000,0000,,让我们快速验证一下这是否有效
Dialogue: 0,0:22:35.73,0:22:37.53,*Default,NTP,0000,0000,0000,,所以如果我有一个帐户
Dialogue: 0,0:22:38.30,0:22:41.07,*Default,NTP,0000,0000,0000,,这是约翰的旧帐户
Dialogue: 0,0:22:41.80,0:22:44.70,*Default,NTP,0000,0000,0000,,然后是另一个账户，这是一个鸡账户
Dialogue: 0,0:22:45.50,0:22:47.20,*Default,NTP,0000,0000,0000,,为了我的好朋友杰克
Dialogue: 0,0:22:48.47,0:22:51.10,*Default,NTP,0000,0000,0000,,所以a是一个账户b是一个支票账户
Dialogue: 0,0:22:51.87,0:22:54.80,*Default,NTP,0000,0000,0000,,他们的余额都为零
Dialogue: 0,0:22:56.40,0:22:59.93,*Default,NTP,0000,0000,0000,,让我们通过存款来添加余额
Dialogue: 0,0:23:00.57,0:23:04.27,*Default,NTP,0000,0000,0000,,变成 100 a 并存入
Dialogue: 0,0:23:05.60,0:23:07.17,*Default,NTP,0000,0000,0000,,100 和 b
Dialogue: 0,0:23:08.30,0:23:10.20,*Default,NTP,0000,0000,0000,,现在他们都做了同样的事情
Dialogue: 0,0:23:10.57,0:23:11.67,*Default,NTP,0000,0000,0000,,因为他们都在使用
Dialogue: 0,0:23:11.67,0:23:13.60,*Default,NTP,0000,0000,0000,,这里有相同的存款功能
Dialogue: 0,0:23:14.57,0:23:18.17,*Default,NTP,0000,0000,0000,,但如果我从 a 中提取 10 美元，我还剩下 90 美元
Dialogue: 0,0:23:18.30,0:23:22.93,*Default,NTP,0000,0000,0000,,或者如果我从 b 中提取 10，那么我只剩下 89
Dialogue: 0,0:23:23.07,0:23:25.13,*Default,NTP,0000,0000,0000,,因为我用这个撤脚
Dialogue: 0,0:23:28.80,0:23:30.93,*Default,NTP,0000,0000,0000,,接下来我们将讨论设计
Dialogue: 0,0:23:31.30,0:23:33.00,*Default,NTP,0000,0000,0000,,面向对象的程序
Dialogue: 0,0:23:33.00,0:23:34.90,*Default,NTP,0000,0000,0000,,你会遇到的一些选择
Dialogue: 0,0:23:35.17,0:23:38.00,*Default,NTP,0000,0000,0000,,以及一些关于如何找到有用的解决方案的指导
Dialogue: 0,0:23:39.90,0:23:40.27,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:23:40.27,0:23:43.17,*Default,NTP,0000,0000,0000,,这是我们刚刚定义的支票帐户类
Dialogue: 0,0:23:43.87,0:23:44.80,*Default,NTP,0000,0000,0000,,让我
Dialogue: 0,0:23:44.87,0:23:47.53,*Default,NTP,0000,0000,0000,,重申我们为什么做某些事情
Dialogue: 0,0:23:48.60,0:23:49.57,*Default,NTP,0000,0000,0000,,所以首先
Dialogue: 0,0:23:49.87,0:23:52.77,*Default,NTP,0000,0000,0000,,继续遵循指南很重要
Dialogue: 0,0:23:52.77,0:23:54.37,*Default,NTP,0000,0000,0000,,您在课程前面看到的
Dialogue: 0,0:23:54.67,0:23:55.97,*Default,NTP,0000,0000,0000,,不要重复自己
Dialogue: 0,0:23:56.10,0:23:59.07,*Default,NTP,0000,0000,0000,,尽可能使用现有的实现
Dialogue: 0,0:23:59.30,0:24:02.27,*Default,NTP,0000,0000,0000,,并尽量避免复制粘贴外套
Dialogue: 0,0:24:03.87,0:24:04.67,*Default,NTP,0000,0000,0000,,第二名
Dialogue: 0,0:24:05.17,0:24:07.20,*Default,NTP,0000,0000,0000,,已被覆盖的属性
Dialogue: 0,0:24:07.60,0:24:10.80,*Default,NTP,0000,0000,0000,,仍然应该可以通过类对象访问
Dialogue: 0,0:24:11.30,0:24:12.57,*Default,NTP,0000,0000,0000,,我在说什么
Dialogue: 0,0:24:12.87,0:24:13.60,*Default,NTP,0000,0000,0000,,出色地
Dialogue: 0,0:24:13.60,0:24:17.53,*Default,NTP,0000,0000,0000,,覆盖一个属性意味着在子类中
Dialogue: 0,0:24:17.80,0:24:20.27,*Default,NTP,0000,0000,0000,,你给一个属性赋予了相同的名称
Dialogue: 0,0:24:20.67,0:24:23.07,*Default,NTP,0000,0000,0000,,正如低音类中存在的那样
Dialogue: 0,0:24:23.73,0:24:26.40,*Default,NTP,0000,0000,0000,,所以在这里我们看到支票账户类别已撤回
Dialogue: 0,0:24:26.60,0:24:28.90,*Default,NTP,0000,0000,0000,,它也存在于 count 类中
Dialogue: 0,0:24:29.33,0:24:32.67,*Default,NTP,0000,0000,0000,,但即使我们已经覆盖了这个名字
Dialogue: 0,0:24:33.30,0:24:35.67,*Default,NTP,0000,0000,0000,,意味着支票账户将调用此提款
Dialogue: 0,0:24:35.67,0:24:37.37,*Default,NTP,0000,0000,0000,,而不是原来的提款
Dialogue: 0,0:24:37.73,0:24:39.93,*Default,NTP,0000,0000,0000,,我们仍然可以访问它们并使用它们
Dialogue: 0,0:24:40.07,0:24:41.53,*Default,NTP,0000,0000,0000,,使用类对象
Dialogue: 0,0:24:42.13,0:24:43.70,*Default,NTP,0000,0000,0000,,这是帐户类别
Dialogue: 0,0:24:43.80,0:24:47.17,*Default,NTP,0000,0000,0000,,帐户点提款将给我们原始的
Dialogue: 0,0:24:47.27,0:24:48.60,*Default,NTP,0000,0000,0000,,提现方式
Dialogue: 0,0:24:48.77,0:24:51.27,*Default,NTP,0000,0000,0000,,与支票账户的新账户相反
Dialogue: 0,0:24:51.73,0:24:54.00,*Default,NTP,0000,0000,0000,,所以我们仍然可以遵循旧的逻辑
Dialogue: 0,0:24:54.27,0:24:56.50,*Default,NTP,0000,0000,0000,,我们只是做了这个小小的改变
Dialogue: 0,0:24:56.57,0:24:57.73,*Default,NTP,0000,0000,0000,,提款费
Dialogue: 0,0:24:59.77,0:25:02.47,*Default,NTP,0000,0000,0000,,您还可以查找实例的属性
Dialogue: 0,0:25:02.47,0:25:03.47,*Default,NTP,0000,0000,0000,,只要有可能
Dialogue: 0,0:25:03.47,0:25:04.93,*Default,NTP,0000,0000,0000,,这是个好主意
Dialogue: 0,0:25:05.90,0:25:07.50,*Default,NTP,0000,0000,0000,,那我在说什么
Dialogue: 0,0:25:08.00,0:25:10.00,*Default,NTP,0000,0000,0000,,当我们计算时
Dialogue: 0,0:25:11.20,0:25:13.60,*Default,NTP,0000,0000,0000,,我们要提取的总金额
Dialogue: 0,0:25:13.60,0:25:15.57,*Default,NTP,0000,0000,0000,,金额加上自助提款费用
Dialogue: 0,0:25:15.80,0:25:17.27,*Default,NTP,0000,0000,0000,,我们这里有几个选择
Dialogue: 0,0:25:17.27,0:25:19.07,*Default,NTP,0000,0000,0000,,我们可以只写金额加一
Dialogue: 0,0:25:19.33,0:25:21.10,*Default,NTP,0000,0000,0000,,与提款费用硬编码
Dialogue: 0,0:25:21.10,0:25:22.57,*Default,NTP,0000,0000,0000,,但我们永远无法改变它
Dialogue: 0,0:25:23.13,0:25:25.20,*Default,NTP,0000,0000,0000,,我们也可以写金额加
Dialogue: 0,0:25:25.33,0:25:27.57,*Default,NTP,0000,0000,0000,,支票账户取款费用
Dialogue: 0,0:25:28.67,0:25:29.97,*Default,NTP,0000,0000,0000,,这会得到这个
Dialogue: 0,0:25:30.20,0:25:31.50,*Default,NTP,0000,0000,0000,,这个属性在这里
Dialogue: 0,0:25:32.00,0:25:33.77,*Default,NTP,0000,0000,0000,,但它不允许这样的事实
Dialogue: 0,0:25:33.77,0:25:35.93,*Default,NTP,0000,0000,0000,,一些鸡账户可能有一个特殊的
Dialogue: 0,0:25:35.93,0:25:36.97,*Default,NTP,0000,0000,0000,,萎缩
Dialogue: 0,0:25:37.77,0:25:41.93,*Default,NTP,0000,0000,0000,,所以最好的方法是查找提款费用
Dialogue: 0,0:25:42.17,0:25:43.77,*Default,NTP,0000,0000,0000,,在实例本身上
Dialogue: 0,0:25:44.27,0:25:45.57,*Default,NTP,0000,0000,0000,,这意味着如果
Dialogue: 0,0:25:45.70,0:25:47.80,*Default,NTP,0000,0000,0000,,该实例有特定的提款费用
Dialogue: 0,0:25:47.80,0:25:51.90,*Default,NTP,0000,0000,0000,,如果没有，我们将使用该帐户中的一个
Dialogue: 0,0:25:55.13,0:25:55.50,*Default,NTP,0000,0000,0000,,好的
Dialogue: 0,0:25:55.50,0:25:58.00,*Default,NTP,0000,0000,0000,,所以这里我们有一个低音类的属性查找
Dialogue: 0,0:25:58.07,0:26:00.27,*Default,NTP,0000,0000,0000,,在这里我们有
Dialogue: 0,0:26:00.60,0:26:02.40,*Default,NTP,0000,0000,0000,,查看实例属性
Dialogue: 0,0:26:03.00,0:26:04.97,*Default,NTP,0000,0000,0000,,这比查找支票账户更好
Dialogue: 0,0:26:04.97,0:26:09.00,*Default,NTP,0000,0000,0000,,提款费用，因为它允许专用账户
Dialogue: 0,0:26:09.20,0:26:11.13,*Default,NTP,0000,0000,0000,,通过进一步的子类
Dialogue: 0,0:26:11.30,0:26:15.00,*Default,NTP,0000,0000,0000,,或者通过为特定帐户提供实例属性
Dialogue: 0,0:26:17.80,0:26:19.60,*Default,NTP,0000,0000,0000,,当你需要考虑的另一件事
Dialogue: 0,0:26:19.60,0:26:21.67,*Default,NTP,0000,0000,0000,,设计面向对象的编程
Dialogue: 0,0:26:21.93,0:26:23.67,*Default,NTP,0000,0000,0000,,何时使用继承
Dialogue: 0,0:26:24.00,0:26:25.87,*Default,NTP,0000,0000,0000,,与何时使用组合
Dialogue: 0,0:26:26.87,0:26:28.10,*Default,NTP,0000,0000,0000,,什么是组成
Dialogue: 0,0:26:28.57,0:26:30.33,*Default,NTP,0000,0000,0000,,好吧，那就是当一个物体
Dialogue: 0,0:26:30.50,0:26:32.67,*Default,NTP,0000,0000,0000,,有另一个对象作为属性
Dialogue: 0,0:26:32.87,0:26:34.87,*Default,NTP,0000,0000,0000,,这也是一个很常见的模式
Dialogue: 0,0:26:35.77,0:26:37.17,*Default,NTP,0000,0000,0000,,如此执着的编程
Dialogue: 0,0:26:37.17,0:26:39.13,*Default,NTP,0000,0000,0000,,当我们遵循隐喻时就会发光
Dialogue: 0,0:26:39.40,0:26:42.53,*Default,NTP,0000,0000,0000,,那就是我们像对待世界上真实的事物一样对待物体
Dialogue: 0,0:26:42.70,0:26:44.73,*Default,NTP,0000,0000,0000,,这有助于我们清楚地思考它们
Dialogue: 0,0:26:45.30,0:26:48.07,*Default,NTP,0000,0000,0000,,所以继承最好代表
Dialogue: 0,0:26:48.50,0:26:50.37,*Default,NTP,0000,0000,0000,,是一种关系
Dialogue: 0,0:26:50.53,0:26:54.67,*Default,NTP,0000,0000,0000,,意味着支票帐户是帐户的一种类型
Dialogue: 0,0:26:56.13,0:26:58.40,*Default,NTP,0000,0000,0000,,所以结帐是一种特定类型的帐户
Dialogue: 0,0:26:58.40,0:27:01.53,*Default,NTP,0000,0000,0000,,所以支票帐户自然继承自帐户
Dialogue: 0,0:27:01.60,0:27:04.80,*Default,NTP,0000,0000,0000,,从而拥有该帐户的所有属性
Dialogue: 0,0:27:05.93,0:27:06.97,*Default,NTP,0000,0000,0000,,作品
Dialogue: 0,0:27:07.13,0:27:09.90,*Default,NTP,0000,0000,0000,,当一个对象有另一个对象作为属性时
Dialogue: 0,0:27:10.47,0:27:13.70,*Default,NTP,0000,0000,0000,,最适合代表有关系
Dialogue: 0,0:27:13.97,0:27:14.90,*Default,NTP,0000,0000,0000,,例如
Dialogue: 0,0:27:14.90,0:27:17.47,*Default,NTP,0000,0000,0000,,银行有一系列银行账户
Dialogue: 0,0:27:17.47,0:27:18.70,*Default,NTP,0000,0000,0000,,它管理的
Dialogue: 0,0:27:19.33,0:27:20.07,*Default,NTP,0000,0000,0000,,所以在那种情况下
Dialogue: 0,0:27:20.07,0:27:22.47,*Default,NTP,0000,0000,0000,,银行有一个账户列表作为属性
Dialogue: 0,0:27:22.73,0:27:25.67,*Default,NTP,0000,0000,0000,,但银行不会继承账户
Dialogue: 0,0:27:25.73,0:27:28.13,*Default,NTP,0000,0000,0000,,并且帐户不会继承银行
Dialogue: 0,0:27:28.60,0:27:29.30,*Default,NTP,0000,0000,0000,,他们有关系
Dialogue: 0,0:27:29.30,0:27:31.67,*Default,NTP,0000,0000,0000,,其中一个具有另一个是一种属性
Dialogue: 0,0:27:31.70,0:27:34.27,*Default,NTP,0000,0000,0000,,但他们没有继承关系
Dialogue: 0,0:27:35.87,0:27:38.60,*Default,NTP,0000,0000,0000,,所以让我们在银行里快速设计它
Dialogue: 0,0:27:42.00,0:27:43.20,*Default,NTP,0000,0000,0000,,一个银行
Dialogue: 0,0:27:45.90,0:27:48.13,*Default,NTP,0000,0000,0000,,不会从帐户继承
Dialogue: 0,0:27:49.17,0:27:51.17,*Default,NTP,0000,0000,0000,,因为银行有
Dialogue: 0,0:27:52.53,0:27:53.53,*Default,NTP,0000,0000,0000,,账户
Dialogue: 0,0:27:55.77,0:27:57.57,*Default,NTP,0000,0000,0000,,使用银行会是什么样子
Dialogue: 0,0:27:57.70,0:27:58.97,*Default,NTP,0000,0000,0000,,我要创建一家银行
Dialogue: 0,0:27:59.70,0:28:01.00,*Default,NTP,0000,0000,0000,,所以现在我们有了一家新银行
Dialogue: 0,0:28:01.50,0:28:04.37,*Default,NTP,0000,0000,0000,,银行会为我们做一些事情，比如创建账户
Dialogue: 0,0:28:05.80,0:28:08.53,*Default,NTP,0000,0000,0000,,所以如果我去银行那么我可能会开户
Dialogue: 0,0:28:08.87,0:28:11.53,*Default,NTP,0000,0000,0000,,向他们提供我的个人身份信息
Dialogue: 0,0:28:11.53,0:28:15.40,*Default,NTP,0000,0000,0000,,嗨，我是约翰，这里有 10 美元，请为我开设一个账户
Dialogue: 0,0:28:15.73,0:28:18.07,*Default,NTP,0000,0000,0000,,银行会记住它开设了该账户
Dialogue: 0,0:28:18.07,0:28:19.20,*Default,NTP,0000,0000,0000,,它会返回它
Dialogue: 0,0:28:20.30,0:28:21.57,*Default,NTP,0000,0000,0000,,和我的好朋友杰克
Dialogue: 0,0:28:21.77,0:28:24.70,*Default,NTP,0000,0000,0000,,也可以去银行开户
Dialogue: 0,0:28:27.60,0:28:29.77,*Default,NTP,0000,0000,0000,,杰克身上只有 5 美元
Dialogue: 0,0:28:29.97,0:28:32.27,*Default,NTP,0000,0000,0000,,银行经理说哦，没关系
Dialogue: 0,0:28:32.30,0:28:34.70,*Default,NTP,0000,0000,0000,,但你必须开一个支票账户
Dialogue: 0,0:28:38.33,0:28:41.33,*Default,NTP,0000,0000,0000,,所以约翰只有一个普通帐户，这意味着
Dialogue: 0,0:28:41.73,0:28:44.93,*Default,NTP,0000,0000,0000,,约翰的利率应该是 0.02
Dialogue: 0,0:28:45.50,0:28:47.70,*Default,NTP,0000,0000,0000,,或作为杰克的利率
Dialogue: 0,0:28:48.30,0:28:51.13,*Default,NTP,0000,0000,0000,,他的支票账户将是 0.0 什么
Dialogue: 0,0:28:52.80,0:28:55.00,*Default,NTP,0000,0000,0000,,好吧，那么银行是什么？
Dialogue: 0,0:28:55.73,0:28:56.73,*Default,NTP,0000,0000,0000,,嘿兴趣
Dialogue: 0,0:28:57.40,0:28:59.17,*Default,NTP,0000,0000,0000,,关于你存放在他们那里的钱
Dialogue: 0,0:28:59.97,0:29:01.87,*Default,NTP,0000,0000,0000,,假设我们刚刚支付了利息
Dialogue: 0,0:29:02.33,0:29:05.17,*Default,NTP,0000,0000,0000,,现在我们可以检查约翰的余额是多少
Dialogue: 0,0:29:05.40,0:29:08.40,*Default,NTP,0000,0000,0000,,余额还有他之前的 10 美元
Dialogue: 0,0:29:08.57,0:29:11.33,*Default,NTP,0000,0000,0000,,并额外支付 0.2 美元，因为
Dialogue: 0,0:29:11.80,0:29:14.93,*Default,NTP,0000,0000,0000,,他的 10 美元有 2% 的利息
Dialogue: 0,0:29:16.87,0:29:19.30,*Default,NTP,0000,0000,0000,,好的，现在我们遇到了一个有趣的问题
Dialogue: 0,0:29:19.37,0:29:20.90,*Default,NTP,0000,0000,0000,,我们如何实施银行
Dialogue: 0,0:29:22.20,0:29:24.30,*Default,NTP,0000,0000,0000,,好吧，让我们寻找一些线索
Dialogue: 0,0:29:24.30,0:29:25.77,*Default,NTP,0000,0000,0000,,关于银行如何实施
Dialogue: 0,0:29:26.17,0:29:28.53,*Default,NTP,0000,0000,0000,,通过我们到目前为止所绘制的示例
Dialogue: 0,0:29:28.70,0:29:30.30,*Default,NTP,0000,0000,0000,,我们将编写实现
Dialogue: 0,0:29:31.00,0:29:34.13,*Default,NTP,0000,0000,0000,,所以银行是在没有参数的情况下构建的
Dialogue: 0,0:29:38.20,0:29:39.97,*Default,NTP,0000,0000,0000,,当我们开设银行时会发生什么
Dialogue: 0,0:29:40.73,0:29:42.87,*Default,NTP,0000,0000,0000,,我们必须记住哪些账户
Dialogue: 0,0:29:42.87,0:29:44.47,*Default,NTP,0000,0000,0000,,由该银行持有
Dialogue: 0,0:29:47.13,0:29:47.93,*Default,NTP,0000,0000,0000,,什么时候
Dialogue: 0,0:29:48.77,0:29:50.93,*Default,NTP,0000,0000,0000,,我去银行开户
Dialogue: 0,0:29:51.33,0:29:52.50,*Default,NTP,0000,0000,0000,,这是一个方法
Dialogue: 0,0:29:53.40,0:29:55.17,*Default,NTP,0000,0000,0000,,其本身与银行绑定
Dialogue: 0,0:29:55.80,0:29:57.97,*Default,NTP,0000,0000,0000,,然后我们还看到我们有一个持有者
Dialogue: 0,0:29:58.20,0:30:00.90,*Default,NTP,0000,0000,0000,,一定数量和某种类型
Dialogue: 0,0:30:01.33,0:30:03.33,*Default,NTP,0000,0000,0000,,我们开设的账户
Dialogue: 0,0:30:03.50,0:30:04.50,*Default,NTP,0000,0000,0000,,这是可选的
Dialogue: 0,0:30:06.00,0:30:08.57,*Default,NTP,0000,0000,0000,,假设我们默认开设一个普通账户
Dialogue: 0,0:30:10.07,0:30:11.87,*Default,NTP,0000,0000,0000,,当我们开设账户时会发生什么
Dialogue: 0,0:30:11.97,0:30:13.53,*Default,NTP,0000,0000,0000,,好吧，我们必须创建该帐户
Dialogue: 0,0:30:13.90,0:30:14.93,*Default,NTP,0000,0000,0000,,我们该怎么做
Dialogue: 0,0:30:14.93,0:30:15.93,*Default,NTP,0000,0000,0000,,我们所说的善良
Dialogue: 0,0:30:15.93,0:30:18.13,*Default,NTP,0000,0000,0000,,这是皮革账户还是支票账户
Dialogue: 0,0:30:18.40,0:30:19.57,*Default,NTP,0000,0000,0000,,通过支架
Dialogue: 0,0:30:19.57,0:30:21.53,*Default,NTP,0000,0000,0000,,因为这就是银行账户的运作方式
Dialogue: 0,0:30:24.80,0:30:28.07,*Default,NTP,0000,0000,0000,,我们将把金额存入该新账户
Dialogue: 0,0:30:28.30,0:30:29.60,*Default,NTP,0000,0000,0000,,那是给我们的
Dialogue: 0,0:30:30.33,0:30:31.13,*Default,NTP,0000,0000,0000,,下一个
Dialogue: 0,0:30:31.20,0:30:33.77,*Default,NTP,0000,0000,0000,,我们必须记住这是我们的帐户之一
Dialogue: 0,0:30:34.80,0:30:36.97,*Default,NTP,0000,0000,0000,,与另一家银行的账户相反
Dialogue: 0,0:30:37.67,0:30:39.27,*Default,NTP,0000,0000,0000,,所以我们要把它添加为计数
Dialogue: 0,0:30:39.30,0:30:40.73,*Default,NTP,0000,0000,0000,,到我们的帐户列表
Dialogue: 0,0:30:41.27,0:30:42.50,*Default,NTP,0000,0000,0000,,然后我们就可以返回
Dialogue: 0,0:30:45.90,0:30:48.30,*Default,NTP,0000,0000,0000,,好的，实施的最后一部分是什么
Dialogue: 0,0:30:48.37,0:30:50.00,*Default,NTP,0000,0000,0000,,我们必须有能力支付利息
Dialogue: 0,0:30:50.70,0:30:51.40,*Default,NTP,0000,0000,0000,,支付利息
Dialogue: 0,0:30:51.40,0:30:54.00,*Default,NTP,0000,0000,0000,,不接受银行本身以外的任何争论
Dialogue: 0,0:30:55.37,0:30:56.53,*Default,NTP,0000,0000,0000,,那么我们如何支付利息
Dialogue: 0,0:30:56.53,0:30:58.80,*Default,NTP,0000,0000,0000,,好吧，我们必须检查我们拥有的每个帐户
Dialogue: 0,0:30:59.20,0:31:00.27,*Default,NTP,0000,0000,0000,,所以我们称之为
Dialogue: 0,0:31:02.40,0:31:04.97,*Default,NTP,0000,0000,0000,,以及如何获取我拥有的所有帐户
Dialogue: 0,0:31:04.97,0:31:06.93,*Default,NTP,0000,0000,0000,,这就是所谓的自我账户
Dialogue: 0,0:31:08.50,0:31:09.77,*Default,NTP,0000,0000,0000,,对于每一个
Dialogue: 0,0:31:10.57,0:31:12.40,*Default,NTP,0000,0000,0000,,都存了一些额外的钱在里面
Dialogue: 0,0:31:12.50,0:31:14.60,*Default,NTP,0000,0000,0000,,这取决于其当前余额
Dialogue: 0,0:31:14.97,0:31:17.50,*Default,NTP,0000,0000,0000,,以及该账户的利率
Dialogue: 0,0:31:19.27,0:31:21.00,*Default,NTP,0000,0000,0000,,让我们看看所有测试是否都通过了
Dialogue: 0,0:31:21.10,0:31:23.70,*Default,NTP,0000,0000,0000,,他们这样做了，我们已经实施了银行
Dialogue: 0,0:31:24.33,0:31:25.80,*Default,NTP,0000,0000,0000,,不使用继承
Dialogue: 0,0:31:28.17,0:31:30.33,*Default,NTP,0000,0000,0000,,所以每一个完成都还没有完成
Dialogue: 0,0:31:30.90,0:31:33.93,*Default,NTP,0000,0000,0000,,我们需要为我们的银行提供一些保护
Dialogue: 0,0:31:34.70,0:31:36.90,*Default,NTP,0000,0000,0000,,因为我们不想让我们的银行陷入麻烦
Dialogue: 0,0:31:37.27,0:31:39.30,*Default,NTP,0000,0000,0000,,如果最终支付太多利息
Dialogue: 0,0:31:40.07,0:31:42.67,*Default,NTP,0000,0000,0000,,所以我们应该写一个函数
Dialogue: 0,0:31:43.10,0:31:44.57,*Default,NTP,0000,0000,0000,,关于是否太大
Dialogue: 0,0:31:44.97,0:31:45.90,*Default,NTP,0000,0000,0000,,失败
Dialogue: 0,0:31:46.67,0:31:48.13,*Default,NTP,0000,0000,0000,,那什么时候会是真的
Dialogue: 0,0:31:48.57,0:31:51.73,*Default,NTP,0000,0000,0000,,好吧，可能每当我们至少有
Dialogue: 0,0:31:52.40,0:31:54.00,*Default,NTP,0000,0000,0000,,两个帐户
Dialogue: 0,0:31:55.47,0:31:57.67,*Default,NTP,0000,0000,0000,,那么这家银行是不是太大而不能倒呢
Dialogue: 0,0:32:01.50,0:32:05.90,*Default,NTP,0000,0000,0000,,当然是，我的意思是它同时容纳约翰和杰克的钱
Dialogue: 0,0:32:08.50,0:32:09.67,*Default,NTP,0000,0000,0000,,测试通过
Dialogue: 0,0:32:12.20,0:32:14.00,*Default,NTP,0000,0000,0000,,让我们来压力测试一下
Dialogue: 0,0:32:14.27,0:32:17.20,*Default,NTP,0000,0000,0000,,了解属性查找和继承
Dialogue: 0,0:32:17.47,0:32:20.50,*Default,NTP,0000,0000,0000,,通过一个稍微复杂的例子
Dialogue: 0,0:32:22.20,0:32:25.90,*Default,NTP,0000,0000,0000,,在此我建议您暂停视频
Dialogue: 0,0:32:26.13,0:32:28.10,*Default,NTP,0000,0000,0000,,并尝试弄清楚会发生什么
Dialogue: 0,0:32:28.27,0:32:31.33,*Default,NTP,0000,0000,0000,,运行左侧的所有代码后
Dialogue: 0,0:32:31.70,0:32:35.00,*Default,NTP,0000,0000,0000,,然后计算右边这三个表达式
Dialogue: 0,0:32:35.17,0:32:36.60,*Default,NTP,0000,0000,0000,,他们的价值观是什么
Dialogue: 0,0:32:36.97,0:32:38.00,*Default,NTP,0000,0000,0000,,如果你完成了
Dialogue: 0,0:32:38.00,0:32:39.57,*Default,NTP,0000,0000,0000,,尝试回答哪个问题
Dialogue: 0,0:32:39.57,0:32:41.07,*Default,NTP,0000,0000,0000,,计算结果为整数
Dialogue: 0,0:32:41.27,0:32:44.37,*Default,NTP,0000,0000,0000,,bidazi bidazizi bida zi da zi
Dialogue: 0,0:32:45.93,0:32:47.20,*Default,NTP,0000,0000,0000,,或者这些都没有
Dialogue: 0,0:32:47.60,0:32:50.77,*Default,NTP,0000,0000,0000,,所以就像我说的，请暂停并自己解决
Dialogue: 0,0:32:51.00,0:32:54.47,*Default,NTP,0000,0000,0000,,我们将在 321 中讨论解决方案
Dialogue: 0,0:32:55.47,0:32:57.77,*Default,NTP,0000,0000,0000,,为了解决这样的问题
Dialogue: 0,0:32:57.87,0:32:59.90,*Default,NTP,0000,0000,0000,,你需要弄清楚什么
Dialogue: 0,0:32:59.90,0:33:02.93,*Default,NTP,0000,0000,0000,,当您执行这三个类语句时会发生
Dialogue: 0,0:33:02.93,0:33:05.20,*Default,NTP,0000,0000,0000,,然后这三个赋值语句
Dialogue: 0,0:33:05.50,0:33:06.67,*Default,NTP,0000,0000,0000,,让我们来看看
Dialogue: 0,0:33:07.30,0:33:11.13,*Default,NTP,0000,0000,0000,,当你执行 class a 时，你创建了一个新类
Dialogue: 0,0:33:11.37,0:33:13.33,*Default,NTP,0000,0000,0000,,类就像任何其他值一样
Dialogue: 0,0:33:13.33,0:33:15.50,*Default,NTP,0000,0000,0000,,从某种意义上说，它可以被分配一个名称
Dialogue: 0,0:33:15.90,0:33:18.90,*Default,NTP,0000,0000,0000,,以及它在全局框架中分配的名称
Dialogue: 0,0:33:18.90,0:33:22.07,*Default,NTP,0000,0000,0000,,是大写字母 a 因为这是我们给它起的名字
Dialogue: 0,0:33:22.77,0:33:25.73,*Default,NTP,0000,0000,0000,,现在类本身有两个类属性
Dialogue: 0,0:33:25.87,0:33:28.80,*Default,NTP,0000,0000,0000,,由于此赋值语句，z 为 -1
Dialogue: 0,0:33:28.80,0:33:32.60,*Default,NTP,0000,0000,0000,,f 是返回 x 的 b 减一的函数
Dialogue: 0,0:33:32.87,0:33:34.97,*Default,NTP,0000,0000,0000,,该函数与其他函数一样
Dialogue: 0,0:33:35.20,0:33:36.97,*Default,NTP,0000,0000,0000,,是否有父框架
Dialogue: 0,0:33:37.70,0:33:39.80,*Default,NTP,0000,0000,0000,,本例中的所有函数
Dialogue: 0,0:33:40.13,0:33:41.77,*Default,NTP,0000,0000,0000,,具有全局父框架
Dialogue: 0,0:33:41.77,0:33:43.33,*Default,NTP,0000,0000,0000,,所以我不会把它们写进去
Dialogue: 0,0:33:44.07,0:33:46.10,*Default,NTP,0000,0000,0000,,所以这个结构就被创建了
Dialogue: 0,0:33:46.10,0:33:48.53,*Default,NTP,0000,0000,0000,,通过执行第一类语句
Dialogue: 0,0:33:48.73,0:33:50.77,*Default,NTP,0000,0000,0000,,第二类声明
Dialogue: 0,0:33:50.90,0:33:53.90,*Default,NTP,0000,0000,0000,,创建一个继承自a的类b
Dialogue: 0,0:33:54.40,0:33:56.73,*Default,NTP,0000,0000,0000,,这个班级将永远知道
Dialogue: 0,0:33:56.80,0:34:00.33,*Default,NTP,0000,0000,0000,,它继承自 a 或 a 是基类
Dialogue: 0,0:34:01.00,0:34:01.93,*Default,NTP,0000,0000,0000,,它也是
Dialogue: 0,0:34:02.10,0:34:06.40,*Default,NTP,0000,0000,0000,,由于该类的主体而具有一些属性
Dialogue: 0,0:34:06.40,0:34:09.20,*Default,NTP,0000,0000,0000,,语句所以 n 绑定到 4
Dialogue: 0,0:34:09.37,0:34:14.07,*Default,NTP,0000,0000,0000,,并在其中绑定到一个初始化 self 的函数
Dialogue: 0,0:34:14.80,0:34:16.17,*Default,NTP,0000,0000,0000,,在全球框架内
Dialogue: 0,0:34:16.17,0:34:18.70,*Default,NTP,0000,0000,0000,,这个类的名称为大写 b
Dialogue: 0,0:34:19.67,0:34:23.33,*Default,NTP,0000,0000,0000,,最后第三个类语句创建了一个类 c
Dialogue: 0,0:34:23.33,0:34:24.67,*Default,NTP,0000,0000,0000,,它继承自 b
Dialogue: 0,0:34:24.67,0:34:26.50,*Default,NTP,0000,0000,0000,,因为b继承自a
Dialogue: 0,0:34:26.77,0:34:30.70,*Default,NTP,0000,0000,0000,,c 的任何实例都可以访问 a 的内容
Dialogue: 0,0:34:31.33,0:34:33.27,*Default,NTP,0000,0000,0000,,除非是这种情况
Dialogue: 0,0:34:33.50,0:34:35.33,*Default,NTP,0000,0000,0000,,某些名字重复
Dialogue: 0,0:34:36.37,0:34:37.77,*Default,NTP,0000,0000,0000,,所以啊c类
Dialogue: 0,0:34:37.77,0:34:40.33,*Default,NTP,0000,0000,0000,,或者类 c 的实例将有一个 f
Dialogue: 0,0:34:40.33,0:34:42.30,*Default,NTP,0000,0000,0000,,这与 a 不同
Dialogue: 0,0:34:42.37,0:34:45.20,*Default,NTP,0000,0000,0000,,因为 f 被高估了
Dialogue: 0,0:34:45.20,0:34:47.07,*Default,NTP,0000,0000,0000,,f 还有另一个定义
Dialogue: 0,0:34:47.37,0:34:50.40,*Default,NTP,0000,0000,0000,,在本例中是仅返回 x 的函数
Dialogue: 0,0:34:51.37,0:34:53.87,*Default,NTP,0000,0000,0000,,全班都给了名字c
Dialogue: 0,0:34:54.13,0:34:56.87,*Default,NTP,0000,0000,0000,,在全球框架内资本化
Dialogue: 0,0:34:57.30,0:35:00.70,*Default,NTP,0000,0000,0000,,然后我们执行这三个赋值语句
Dialogue: 0,0:35:01.30,0:35:04.40,*Default,NTP,0000,0000,0000,,调用 a 会引入 a 的新实例
Dialogue: 0,0:35:04.93,0:35:06.13,*Default,NTP,0000,0000,0000,,我们称之为
Dialogue: 0,0:35:06.80,0:35:08.60,*Default,NTP,0000,0000,0000,,因为里面没有
Dialogue: 0,0:35:08.90,0:35:12.10,*Default,NTP,0000,0000,0000,,类定义中的方法a
Dialogue: 0,0:35:12.90,0:35:15.93,*Default,NTP,0000,0000,0000,,没有设置实例属性
Dialogue: 0,0:35:16.80,0:35:19.60,*Default,NTP,0000,0000,0000,,这个实例只是一张白纸
Dialogue: 0,0:35:21.07,0:35:23.30,*Default,NTP,0000,0000,0000,,现在我们创建 b 之一
Dialogue: 0,0:35:24.53,0:35:27.70,*Default,NTP,0000,0000,0000,,调用 b 会引入一个新的 b 实例
Dialogue: 0,0:35:27.97,0:35:32.77,*Default,NTP,0000,0000,0000,,并自动调用 b 的 init 方法
Dialogue: 0,0:35:32.87,0:35:36.40,*Default,NTP,0000,0000,0000,,实例的自绑定和 y 绑定为 1
Dialogue: 0,0:35:37.27,0:35:40.57,*Default,NTP,0000,0000,0000,,然后我们有一些关于 self z 的表达式
Dialogue: 0,0:35:40.77,0:35:42.17,*Default,NTP,0000,0000,0000,,这取决于 y
Dialogue: 0,0:35:42.17,0:35:44.20,*Default,NTP,0000,0000,0000,,所以因为 y 是一个真值
Dialogue: 0,0:35:44.20,0:35:46.77,*Default,NTP,0000,0000,0000,,我们要调用 self. y 上的 f
Dialogue: 0,0:35:47.13,0:35:48.67,*Default,NTP,0000,0000,0000,,它调用哪个 f
Dialogue: 0,0:35:48.77,0:35:50.47,*Default,NTP,0000,0000,0000,,那么 b 没有任何 f
Dialogue: 0,0:35:50.47,0:35:53.20,*Default,NTP,0000,0000,0000,,然后它会查找 bass 类并将其称为 f
Dialogue: 0,0:35:53.20,0:35:54.80,*Default,NTP,0000,0000,0000,,这会创建另一个 b
Dialogue: 0,0:35:55.30,0:35:57.27,*Default,NTP,0000,0000,0000,,天哪，这太复杂了
Dialogue: 0,0:35:57.33,0:35:59.77,*Default,NTP,0000,0000,0000,,我们暂时不用担心
Dialogue: 0,0:35:59.87,0:36:04.97,*Default,NTP,0000,0000,0000,,而是关注 z 是发送给 self z 的事实
Dialogue: 0,0:36:05.07,0:36:06.50,*Default,NTP,0000,0000,0000,,等于某物
Dialogue: 0,0:36:06.93,0:36:10.33,*Default,NTP,0000,0000,0000,,它是对 f 的调用的返回值
Dialogue: 0,0:36:11.90,0:36:12.40,*Default,NTP,0000,0000,0000,,任何
Dialogue: 0,0:36:12.40,0:36:15.53,*Default,NTP,0000,0000,0000,,该b实例的属性内容可以是
Dialogue: 0,0:36:15.73,0:36:18.30,*Default,NTP,0000,0000,0000,,该实例本身被分配给该名称
Dialogue: 0,0:36:18.30,0:36:19.80,*Default,NTP,0000,0000,0000,,b 在全局框架中
Dialogue: 0,0:36:20.80,0:36:23.27,*Default,NTP,0000,0000,0000,,现在我们有了属性分配
Dialogue: 0,0:36:23.33,0:36:25.57,*Default,NTP,0000,0000,0000,,小写 b 的属性
Dialogue: 0,0:36:25.57,0:36:27.57,*Default,NTP,0000,0000,0000,,所以我在当前环境中查找b
Dialogue: 0,0:36:27.57,0:36:28.90,*Default,NTP,0000,0000,0000,,就是这个例子
Dialogue: 0,0:36:29.10,0:36:30.87,*Default,NTP,0000,0000,0000,,设置 n 等于 5
Dialogue: 0,0:36:30.90,0:36:33.13,*Default,NTP,0000,0000,0000,,意思是我在这里添加一个属性
Dialogue: 0,0:36:33.67,0:36:37.57,*Default,NTP,0000,0000,0000,,这对蜜蜂类别或其太空类别没有影响
Dialogue: 0,0:36:37.57,0:36:41.33,*Default,NTP,0000,0000,0000,,相反，这只是对此特定实例的更改
Dialogue: 0,0:36:42.37,0:36:44.53,*Default,NTP,0000,0000,0000,,现在我认为我们可以进行审查
Dialogue: 0,0:36:44.53,0:36:45.33,*Default,NTP,0000,0000,0000,,其中一些
Dialogue: 0,0:36:45.47,0:36:48.40,*Default,NTP,0000,0000,0000,,最终我们将不得不填写 z 是什么
Dialogue: 0,0:36:48.47,0:36:51.77,*Default,NTP,0000,0000,0000,,但在此之前我们先解决前两个问题
Dialogue: 0,0:36:52.70,0:36:56.47,*Default,NTP,0000,0000,0000,,所以 2.n 的 c 这是一个必须的表达式
Dialogue: 0,0:36:56.47,0:36:58.20,*Default,NTP,0000,0000,0000,,评估某个对象
Dialogue: 0,0:36:58.40,0:37:02.77,*Default,NTP,0000,0000,0000,,在本例中，它计算为 c 类的实例
Dialogue: 0,0:37:03.97,0:37:07.40,*Default,NTP,0000,0000,0000,,这是 c 类，所以我们构建一个新实例
Dialogue: 0,0:37:08.47,0:37:10.93,*Default,NTP,0000,0000,0000,,当你构建一个实例时会发生什么
Dialogue: 0,0:37:10.93,0:37:14.13,*Default,NTP,0000,0000,0000,,c类就是你自动调用里面的方法
Dialogue: 0,0:37:14.13,0:37:15.57,*Default,NTP,0000,0000,0000,,对于c级
Dialogue: 0,0:37:16.27,0:37:19.87,*Default,NTP,0000,0000,0000,,由于 c 中没有，我们查看它的基类
Dialogue: 0,0:37:19.97,0:37:23.17,*Default,NTP,0000,0000,0000,,这是其中的这个函数
Dialogue: 0,0:37:24.13,0:37:27.30,*Default,NTP,0000,0000,0000,,所以我们用 y 来调用它
Dialogue: 0,0:37:28.00,0:37:29.90,*Default,NTP,0000,0000,0000,,2 如果 y 为 2
Dialogue: 0,0:37:30.33,0:37:31.97,*Default,NTP,0000,0000,0000,,是一个真值
Dialogue: 0,0:37:32.13,0:37:36.10,*Default,NTP,0000,0000,0000,,然后我们将把 self z 卖给 y 的 self f
Dialogue: 0,0:37:36.57,0:37:38.57,*Default,NTP,0000,0000,0000,,现在在这种情况下 self 是什么
Dialogue: 0,0:37:38.90,0:37:41.80,*Default,NTP,0000,0000,0000,,self 是我们刚刚创建的 c 实例
Dialogue: 0,0:37:42.13,0:37:44.57,*Default,NTP,0000,0000,0000,,所以我们要添加 az 属性
Dialogue: 0,0:37:44.77,0:37:47.80,*Default,NTP,0000,0000,0000,,你可以在我的幻灯片中看到这将是两个
Dialogue: 0,0:37:48.07,0:37:49.30,*Default,NTP,0000,0000,0000,,为什么是两个
Dialogue: 0,0:37:49.50,0:37:52.73,*Default,NTP,0000,0000,0000,,好吧，我们查找 self.f
Dialogue: 0,0:37:52.77,0:37:55.47,*Default,NTP,0000,0000,0000,,这个 c 实例的 f 函数是什么
Dialogue: 0,0:37:55.60,0:37:57.37,*Default,NTP,0000,0000,0000,,这里没有 f 属性
Dialogue: 0,0:37:57.37,0:37:59.13,*Default,NTP,0000,0000,0000,,所以我们在课堂上看
Dialogue: 0,0:37:59.13,0:38:02.20,*Default,NTP,0000,0000,0000,,其中 f 属性是恒等函数
Dialogue: 0,0:38:02.33,0:38:05.10,*Default,NTP,0000,0000,0000,,所以我们调用 2 上的恒等函数
Dialogue: 0,0:38:05.20,0:38:08.47,*Default,NTP,0000,0000,0000,,我们返回 2 并且它绑定到 self c
Dialogue: 0,0:38:08.67,0:38:10.17,*Default,NTP,0000,0000,0000,,所以这里 z 是 2
Dialogue: 0,0:38:10.93,0:38:13.53,*Default,NTP,0000,0000,0000,,但有趣的是 c ii
Dialogue: 0,0:38:13.60,0:38:14.90,*Default,NTP,0000,0000,0000,,已被创造
Dialogue: 0,0:38:15.10,0:38:18.47,*Default,NTP,0000,0000,0000,,仅用于查找属性
Dialogue: 0,0:38:19.30,0:38:22.20,*Default,NTP,0000,0000,0000,,所以当我们在这个 c 实例上查找属性 n 时
Dialogue: 0,0:38:22.20,0:38:24.17,*Default,NTP,0000,0000,0000,,因为 n 不是属性
Dialogue: 0,0:38:24.20,0:38:26.53,*Default,NTP,0000,0000,0000,,我们在课堂上看
Dialogue: 0,0:38:26.67,0:38:30.30,*Default,NTP,0000,0000,0000,,n 在这里不是一个属性，所以我们看它的基类
Dialogue: 0,0:38:30.67,0:38:34.47,*Default,NTP,0000,0000,0000,,n在这里所以c到n的值为4
Dialogue: 0,0:38:35.13,0:38:38.07,*Default,NTP,0000,0000,0000,,如果我们问 c 2 点 z 是什么
Dialogue: 0,0:38:38.10,0:38:39.67,*Default,NTP,0000,0000,0000,,我们会得到两个
Dialogue: 0,0:38:41.20,0:38:45.10,*Default,NTP,0000,0000,0000,,好的，点 z 是否等于 c
Dialogue: 0,0:38:46.30,0:38:48.70,*Default,NTP,0000,0000,0000,,让我们弄清楚点 z 是什么
Dialogue: 0,0:38:49.47,0:38:51.33,*Default,NTP,0000,0000,0000,,a 是这个实例
Dialogue: 0,0:38:51.73,0:38:53.67,*Default,NTP,0000,0000,0000,,它没有 az 属性
Dialogue: 0,0:38:53.67,0:38:55.30,*Default,NTP,0000,0000,0000,,所以我们在课堂上看
Dialogue: 0,0:38:55.37,0:38:57.20,*Default,NTP,0000,0000,0000,,az 属性为-1
Dialogue: 0,0:38:57.47,0:39:00.67,*Default,NTP,0000,0000,0000,,所以这个等式的左边是-1
Dialogue: 0,0:39:01.47,0:39:04.30,*Default,NTP,0000,0000,0000,,c指的是c类
Dialogue: 0,0:39:04.53,0:39:07.53,*Default,NTP,0000,0000,0000,,c是一个属性，这里没有出现
Dialogue: 0,0:39:07.53,0:39:09.53,*Default,NTP,0000,0000,0000,,所以我们在这里查看低音级别 no z
Dialogue: 0,0:39:09.53,0:39:12.87,*Default,NTP,0000,0000,0000,,所以我们查看 bass 类，我们看到 az 是 -1
Dialogue: 0,0:39:13.17,0:39:15.33,*Default,NTP,0000,0000,0000,,所以这些是相等的因为事实上
Dialogue: 0,0:39:15.37,0:39:17.50,*Default,NTP,0000,0000,0000,,我们指的是同一个属性
Dialogue: 0,0:39:17.50,0:39:19.50,*Default,NTP,0000,0000,0000,,以两种截然不同的方式
Dialogue: 0,0:39:20.67,0:39:23.57,*Default,NTP,0000,0000,0000,,好吧，我们已经算出了他的 -1
Dialogue: 0,0:39:23.57,0:39:26.70,*Default,NTP,0000,0000,0000,,bc 是什么，b 是这个 b 实例
Dialogue: 0,0:39:26.77,0:39:30.30,*Default,NTP,0000,0000,0000,,它有一个名为 z 的实例属性
Dialogue: 0,0:39:31.10,0:39:33.40,*Default,NTP,0000,0000,0000,,我们从未真正写下它是什么
Dialogue: 0,0:39:33.73,0:39:36.93,*Default,NTP,0000,0000,0000,,但我很确定它不会出现 -1
Dialogue: 0,0:39:37.27,0:39:40.47,*Default,NTP,0000,0000,0000,,我认为是时候我们弄清楚它的作用是什么了
Dialogue: 0,0:39:41.90,0:39:46.40,*Default,NTP,0000,0000,0000,,所以当这个实例创建时我们传入一个
Dialogue: 0,0:39:46.47,0:39:47.93,*Default,NTP,0000,0000,0000,,作为 y 的值
Dialogue: 0,0:39:48.27,0:39:50.97,*Default,NTP,0000,0000,0000,,self 绑定到实例本身
Dialogue: 0,0:39:51.27,0:39:55.53,*Default,NTP,0000,0000,0000,,我们检查 y 是否为真，因此我们在 y 上调用 self.f
Dialogue: 0,0:39:56.87,0:40:00.53,*Default,NTP,0000,0000,0000,,因为 b 是 b 类的实例
Dialogue: 0,0:40:00.77,0:40:04.50,*Default,NTP,0000,0000,0000,,f 指的是这个，因为我们看这里没有 f
Dialogue: 0,0:40:04.50,0:40:06.57,*Default,NTP,0000,0000,0000,,所以我们看看它的类中没有 f
Dialogue: 0,0:40:06.57,0:40:08.70,*Default,NTP,0000,0000,0000,,所以我们查看基类，发现有 f
Dialogue: 0,0:40:08.70,0:40:12.07,*Default,NTP,0000,0000,0000,,这是返回 x 的 b 减一的函数
Dialogue: 0,0:40:13.13,0:40:16.33,*Default,NTP,0000,0000,0000,,x 的 b 减一创建一个新实例
Dialogue: 0,0:40:16.77,0:40:18.73,*Default,NTP,0000,0000,0000,,B级的
Dialogue: 0,0:40:18.97,0:40:21.53,*Default,NTP,0000,0000,0000,,但这一次我们调用构造函数
Dialogue: 0,0:40:22.17,0:40:26.00,*Default,NTP,0000,0000,0000,,无论 x 是什么，1-1 都是零
Dialogue: 0,0:40:26.20,0:40:28.70,*Default,NTP,0000,0000,0000,,所以现在我们把它称为零
Dialogue: 0,0:40:28.93,0:40:31.17,*Default,NTP,0000,0000,0000,,对于 b 的第二个实例
Dialogue: 0,0:40:32.27,0:40:35.17,*Default,NTP,0000,0000,0000,,由于零不是一个真正的值，我们设置 self
Dialogue: 0,0:40:35.30,0:40:37.70,*Default,NTP,0000,0000,0000,,z 等于 ac 实例
Dialogue: 0,0:40:37.93,0:40:43.27,*Default,NTP,0000,0000,0000,,我们传入 0+1 的地方是 1 作为参数
Dialogue: 0,0:40:44.20,0:40:46.00,*Default,NTP,0000,0000,0000,,所以我们要建造一个ac
Dialogue: 0,0:40:46.00,0:40:47.77,*Default,NTP,0000,0000,0000,,我们传入的实例
Dialogue: 0,0:40:47.77,0:40:50.27,*Default,NTP,0000,0000,0000,,1 作为构造函数的参数
Dialogue: 0,0:40:50.57,0:40:52.07,*Default,NTP,0000,0000,0000,,c没有构造函数
Dialogue: 0,0:40:52.07,0:40:54.37,*Default,NTP,0000,0000,0000,,所以我们查看基类并发现
Dialogue: 0,0:40:54.37,0:40:55.60,*Default,NTP,0000,0000,0000,,这个构造函数
Dialogue: 0,0:40:56.57,0:40:59.47,*Default,NTP,0000,0000,0000,,为什么绑定到一并且一是一个真正的值
Dialogue: 0,0:40:59.47,0:41:04.90,*Default,NTP,0000,0000,0000,,所以我们将这个 c 实例的 self z 设置为 self.f
Dialogue: 0,0:41:05.13,0:41:08.60,*Default,NTP,0000,0000,0000,,现在由于 self 已绑定到 c 实例
Dialogue: 0,0:41:08.73,0:41:12.20,*Default,NTP,0000,0000,0000,,在这里查找自点 f
Dialogue: 0,0:41:12.40,0:41:15.33,*Default,NTP,0000,0000,0000,,然后在c班上
Dialogue: 0,0:41:15.93,0:41:17.10,*Default,NTP,0000,0000,0000,,并且有一个 f
Dialogue: 0,0:41:17.13,0:41:20.07,*Default,NTP,0000,0000,0000,,那里只返回传入的内容
Dialogue: 0,0:41:20.13,0:41:23.20,*Default,NTP,0000,0000,0000,,在这种情况下这就是为什么等于一
Dialogue: 0,0:41:23.70,0:41:24.50,*Default,NTP,0000,0000,0000,,打扰
Dialogue: 0,0:41:25.40,0:41:28.30,*Default,NTP,0000,0000,0000,,好的，很明显这是-1
Dialogue: 0,0:41:28.30,0:41:30.20,*Default,NTP,0000,0000,0000,,这是一些 b 实例
Dialogue: 0,0:41:30.27,0:41:32.00,*Default,NTP,0000,0000,0000,,这些不能相等
Dialogue: 0,0:41:32.80,0:41:34.67,*Default,NTP,0000,0000,0000,,现在我们可以继续讨论其中的哪一个
Dialogue: 0,0:41:34.67,0:41:37.00,*Default,NTP,0000,0000,0000,,表达式的计算结果为整数
Dialogue: 0,0:41:37.53,0:41:39.87,*Default,NTP,0000,0000,0000,,bc 是 ab 实例
Dialogue: 0,0:41:40.30,0:41:41.10,*Default,NTP,0000,0000,0000,,乙那
Dialogue: 0,0:41:41.47,0:41:43.90,*Default,NTP,0000,0000,0000,,z 是 ac 实例
Dialogue: 0,0:41:44.40,0:41:46.70,*Default,NTP,0000,0000,0000,,b 点 z 点 z 点 z
Dialogue: 0,0:41:47.33,0:41:48.40,*Default,NTP,0000,0000,0000,,是一
Dialogue: 0,0:41:48.87,0:41:52.00,*Default,NTP,0000,0000,0000,,一个点 z 根本就不是一个错误
Dialogue: 0,0:41:52.27,0:41:55.57,*Default,NTP,0000,0000,0000,,所以只有这个表达式计算结果为整数
Dialogue: 0,0:41:55.67,0:41:57.73,*Default,NTP,0000,0000,0000,,这个整数是一
Dialogue: 0,0:42:01.27,0:42:03.37,*Default,NTP,0000,0000,0000,,多重继承是当
Dialogue: 0,0:42:03.40,0:42:06.30,*Default,NTP,0000,0000,0000,,一个子类有多个低音类
Dialogue: 0,0:42:08.33,0:42:09.33,*Default,NTP,0000,0000,0000,,好的，我们开始吧
Dialogue: 0,0:42:09.80,0:42:12.37,*Default,NTP,0000,0000,0000,,让我们决定另一种银行账户
Dialogue: 0,0:42:12.53,0:42:14.47,*Default,NTP,0000,0000,0000,,这称为储蓄账户
Dialogue: 0,0:42:14.87,0:42:16.80,*Default,NTP,0000,0000,0000,,它类似于一个帐户
Dialogue: 0,0:42:17.10,0:42:19.87,*Default,NTP,0000,0000,0000,,唯一的区别是有押金费用
Dialogue: 0,0:42:20.20,0:42:21.50,*Default,NTP,0000,0000,0000,,这是怎么用的
Dialogue: 0,0:42:21.50,0:42:23.07,*Default,NTP,0000,0000,0000,,好吧，每次你存款时
Dialogue: 0,0:42:23.47,0:42:25.73,*Default,NTP,0000,0000,0000,,然后我们将退还存款账户
Dialogue: 0,0:42:26.37,0:42:29.33,*Default,NTP,0000,0000,0000,,金额减去存款英尺
Dialogue: 0,0:42:29.67,0:42:31.30,*Default,NTP,0000,0000,0000,,所以你存了 10 美元
Dialogue: 0,0:42:31.30,0:42:32.50,*Default,NTP,0000,0000,0000,,你真的只得到八个
Dialogue: 0,0:42:32.50,0:42:34.00,*Default,NTP,0000,0000,0000,,您的银行账户中有更多美元
Dialogue: 0,0:42:35.57,0:42:38.57,*Default,NTP,0000,0000,0000,,一个类实际上可能继承自多个 bass 类
Dialogue: 0,0:42:38.57,0:42:39.50,*Default,NTP,0000,0000,0000,,在Python中
Dialogue: 0,0:42:40.77,0:42:44.57,*Default,NTP,0000,0000,0000,,假设我们有一位非常聪明的银行高管
Dialogue: 0,0:42:44.73,0:42:48.37,*Default,NTP,0000,0000,0000,,谁认为我对帐户有完美的想法
Dialogue: 0,0:42:49.13,0:42:52.10,*Default,NTP,0000,0000,0000,,我们将享受 1% 的低利率
Dialogue: 0,0:42:52.13,0:42:55.20,*Default,NTP,0000,0000,0000,,所以我们不必付给客户很多钱
Dialogue: 0,0:42:55.73,0:42:57.97,*Default,NTP,0000,0000,0000,,我们将收取一美元的提款费用
Dialogue: 0,0:42:58.10,0:43:00.80,*Default,NTP,0000,0000,0000,,以及 2 美元的存款费用
Dialogue: 0,0:43:01.47,0:43:04.00,*Default,NTP,0000,0000,0000,,但人们会涌向我们
Dialogue: 0,0:43:04.07,0:43:06.00,*Default,NTP,0000,0000,0000,,因为我们会免费给他们一美元
Dialogue: 0,0:43:06.17,0:43:07.90,*Default,NTP,0000,0000,0000,,当他们开设账户时
Dialogue: 0,0:43:09.70,0:43:11.10,*Default,NTP,0000,0000,0000,,这是一个非常好的帐户
Dialogue: 0,0:43:11.10,0:43:14.10,*Default,NTP,0000,0000,0000,,他们称之为电视帐户中的场景
Dialogue: 0,0:43:14.37,0:43:16.10,*Default,NTP,0000,0000,0000,,以及我们定义这个计数的方式
Dialogue: 0,0:43:16.20,0:43:17.60,*Default,NTP,0000,0000,0000,,其实很简单
Dialogue: 0,0:43:17.60,0:43:20.30,*Default,NTP,0000,0000,0000,,因为我们已经有支票存入储蓄账户
Dialogue: 0,0:43:20.47,0:43:22.47,*Default,NTP,0000,0000,0000,,所以电视帐户上的场景
Dialogue: 0,0:43:22.57,0:43:25.00,*Default,NTP,0000,0000,0000,,继承自两个支票账户
Dialogue: 0,0:43:25.00,0:43:26.47,*Default,NTP,0000,0000,0000,,和储蓄账户
Dialogue: 0,0:43:28.37,0:43:29.57,*Default,NTP,0000,0000,0000,,当它被创建时
Dialogue: 0,0:43:29.93,0:43:31.87,*Default,NTP,0000,0000,0000,,它需要一个账户持有人
Dialogue: 0,0:43:32.57,0:43:34.07,*Default,NTP,0000,0000,0000,,记得账户持有人
Dialogue: 0,0:43:34.30,0:43:36.30,*Default,NTP,0000,0000,0000,,但不是将反弹设置为零
Dialogue: 0,0:43:36.37,0:43:38.53,*Default,NTP,0000,0000,0000,,你得到一块免费的美元
Dialogue: 0,0:43:39.50,0:43:41.53,*Default,NTP,0000,0000,0000,,这实际上是整个实现
Dialogue: 0,0:43:42.80,0:43:45.90,*Default,NTP,0000,0000,0000,,好的，一个类可以继承多个 bass 类
Dialogue: 0,0:43:45.97,0:43:47.80,*Default,NTP,0000,0000,0000,,当我创建时会发生什么
Dialogue: 0,0:43:47.80,0:43:49.60,*Default,NTP,0000,0000,0000,,眼睛在电视帐户上看到过
Dialogue: 0,0:43:50.07,0:43:52.20,*Default,NTP,0000,0000,0000,,好吧，我一开始的余额为一
Dialogue: 0,0:43:52.97,0:43:54.53,*Default,NTP,0000,0000,0000,,这是一个实例属性
Dialogue: 0,0:43:55.20,0:43:56.30,*Default,NTP,0000,0000,0000,,当我抬头时
Dialogue: 0,0:43:57.00,0:43:58.70,*Default,NTP,0000,0000,0000,,如何存钱
Dialogue: 0,0:43:58.97,0:44:01.33,*Default,NTP,0000,0000,0000,,我要查找存款方式
Dialogue: 0,0:44:01.33,0:44:03.00,*Default,NTP,0000,0000,0000,,那是在储蓄账户里
Dialogue: 0,0:44:03.50,0:44:05.20,*Default,NTP,0000,0000,0000,,这就是储蓄账户方法
Dialogue: 0,0:44:05.50,0:44:07.47,*Default,NTP,0000,0000,0000,,当我存入 20 美元时
Dialogue: 0,0:44:07.47,0:44:09.10,*Default,NTP,0000,0000,0000,,其实我只输入了18个
Dialogue: 0,0:44:09.10,0:44:10.73,*Default,NTP,0000,0000,0000,,因为双重存款费
Dialogue: 0,0:44:10.73,0:44:13.40,*Default,NTP,0000,0000,0000,,我以前有过一个，现在我有19块钱了
Dialogue: 0,0:44:13.53,0:44:15.07,*Default,NTP,0000,0000,0000,,当我抽到五的时候
Dialogue: 0,0:44:15.13,0:44:16.10,*Default,NTP,0000,0000,0000,,好吧，我付钱
Dialogue: 0,0:44:16.33,0:44:19.53,*Default,NTP,0000,0000,0000,,一美元的支票账户提款费
Dialogue: 0,0:44:20.60,0:44:22.50,*Default,NTP,0000,0000,0000,,这样的交易和深度
Dialogue: 0,0:44:24.93,0:44:25.77,*Default,NTP,0000,0000,0000,,可以，然后呢
Dialogue: 0,0:44:25.77,0:44:27.57,*Default,NTP,0000,0000,0000,,事实证明有多种不同的
Dialogue: 0,0:44:27.57,0:44:29.47,*Default,NTP,0000,0000,0000,,取款和存款
Dialogue: 0,0:44:30.33,0:44:31.17,*Default,NTP,0000,0000,0000,,但在这种情况下
Dialogue: 0,0:44:31.17,0:44:33.73,*Default,NTP,0000,0000,0000,,很容易找出首先看哪一个
Dialogue: 0,0:44:34.13,0:44:36.93,*Default,NTP,0000,0000,0000,,所以正如电视帐户上看到的那样，我们会得到
Dialogue: 0,0:44:38.67,0:44:41.53,*Default,NTP,0000,0000,0000,,从这里提款并从这里存款
Dialogue: 0,0:44:42.00,0:44:42.50,*Default,NTP,0000,0000,0000,,真的
Dialogue: 0,0:44:42.50,0:44:44.57,*Default,NTP,0000,0000,0000,,它从帐户继承的唯一东西
Dialogue: 0,0:44:44.57,0:44:45.70,*Default,NTP,0000,0000,0000,,是利率
Dialogue: 0,0:44:47.00,0:44:49.70,*Default,NTP,0000,0000,0000,,所以因为 this 继承自 this 继承自 this
Dialogue: 0,0:44:49.70,0:44:52.30,*Default,NTP,0000,0000,0000,,我们先在这里找到提现方式
Dialogue: 0,0:44:53.20,0:44:54.60,*Default,NTP,0000,0000,0000,,有一个特定的顺序
Dialogue: 0,0:44:54.60,0:44:56.40,*Default,NTP,0000,0000,0000,,我们在其中审视所有这些
Dialogue: 0,0:44:56.97,0:44:58.17,*Default,NTP,0000,0000,0000,,以及你需要知道的一切
Dialogue: 0,0:44:58.17,0:44:59.90,*Default,NTP,0000,0000,0000,,就是你看子类
Dialogue: 0,0:44:59.90,0:45:01.70,*Default,NTP,0000,0000,0000,,在看贝斯课程之前
Dialogue: 0,0:45:03.93,0:45:07.27,*Default,NTP,0000,0000,0000,,今天的最后一个话题只是一个警告
Dialogue: 0,0:45:07.60,0:45:09.53,*Default,NTP,0000,0000,0000,,多重继承
Dialogue: 0,0:45:09.87,0:45:12.70,*Default,NTP,0000,0000,0000,,往往会使程序变得复杂
Dialogue: 0,0:45:13.10,0:45:16.70,*Default,NTP,0000,0000,0000,,所以它确实应该很少使用
Dialogue: 0,0:45:16.93,0:45:19.07,*Default,NTP,0000,0000,0000,,如果你想设计清晰的程序
Dialogue: 0,0:45:19.87,0:45:22.40,*Default,NTP,0000,0000,0000,,现在我很难告诉你为什么会这样
Dialogue: 0,0:45:22.53,0:45:24.80,*Default,NTP,0000,0000,0000,,所以我只是给你看一个类比
Dialogue: 0,0:45:25.30,0:45:27.10,*Default,NTP,0000,0000,0000,,关于人类遗传
Dialogue: 0,0:45:28.67,0:45:31.27,*Default,NTP,0000,0000,0000,,假设你有一位爷爷奶奶
Dialogue: 0,0:45:31.27,0:45:33.17,*Default,NTP,0000,0000,0000,,爷爷和奶奶
Dialogue: 0,0:45:33.37,0:45:37.20,*Default,NTP,0000,0000,0000,,他们给了你你的爸爸妈妈，然后就是你了
Dialogue: 0,0:45:37.70,0:45:41.10,*Default,NTP,0000,0000,0000,,这就是我们自然地思考家庭款待的方式
Dialogue: 0,0:45:42.57,0:45:47.60,*Default,NTP,0000,0000,0000,,好吧，所以蚂蚁是你妈妈的妹妹，所以是其他人
Dialogue: 0,0:45:48.27,0:45:51.97,*Default,NTP,0000,0000,0000,,谁是奶奶和爷爷的孩子
Dialogue: 0,0:45:52.60,0:45:53.97,*Default,NTP,0000,0000,0000,,这就是蚂蚁
Dialogue: 0,0:45:53.97,0:45:56.07,*Default,NTP,0000,0000,0000,,还有一种东西叫半蚂蚁
Dialogue: 0,0:45:56.30,0:45:57.50,*Default,NTP,0000,0000,0000,,半只蚂蚁是什么
Dialogue: 0,0:45:57.77,0:46:01.00,*Default,NTP,0000,0000,0000,,半只蚂蚁就是和你有共同祖母的人
Dialogue: 0,0:46:01.47,0:46:03.10,*Default,NTP,0000,0000,0000,,但不分享你的爷爷
Dialogue: 0,0:46:04.73,0:46:07.10,*Default,NTP,0000,0000,0000,,到目前为止看起来很简单
Dialogue: 0,0:46:07.50,0:46:10.33,*Default,NTP,0000,0000,0000,,如果你的半只蚂蚁和其他人有了孩子
Dialogue: 0,0:46:10.47,0:46:12.00,*Default,NTP,0000,0000,0000,,那么你有一个同父异母的表弟
Dialogue: 0,0:46:13.40,0:46:15.30,*Default,NTP,0000,0000,0000,,但要意识到的是
Dialogue: 0,0:46:15.37,0:46:19.70,*Default,NTP,0000,0000,0000,,这棵树在每一层都呈指数级增长
Dialogue: 0,0:46:20.33,0:46:21.77,*Default,NTP,0000,0000,0000,,这意味着有很多
Dialogue: 0,0:46:21.77,0:46:24.87,*Default,NTP,0000,0000,0000,,还有更多的前几代人
Dialogue: 0,0:46:25.00,0:46:26.10,*Default,NTP,0000,0000,0000,,比现在有
Dialogue: 0,0:46:26.20,0:46:27.77,*Default,NTP,0000,0000,0000,,但事实并非如此
Dialogue: 0,0:46:28.17,0:46:29.10,*Default,NTP,0000,0000,0000,,100年前
Dialogue: 0,0:46:29.10,0:46:30.20,*Default,NTP,0000,0000,0000,,人少了很多
Dialogue: 0,0:46:30.20,0:46:31.67,*Default,NTP,0000,0000,0000,,地球上比现在
Dialogue: 0,0:46:31.93,0:46:34.70,*Default,NTP,0000,0000,0000,,所以这些树不可能只是生长
Dialogue: 0,0:46:35.53,0:46:38.13,*Default,NTP,0000,0000,0000,,与不同人群的接触范围越来越广
Dialogue: 0,0:46:38.60,0:46:41.13,*Default,NTP,0000,0000,0000,,治疗中必须有一些重叠
Dialogue: 0,0:46:41.80,0:46:43.87,*Default,NTP,0000,0000,0000,,所以实际上有术语
Dialogue: 0,0:46:43.87,0:46:44.87,*Default,NTP,0000,0000,0000,,有点重叠
Dialogue: 0,0:46:44.87,0:46:45.97,*Default,NTP,0000,0000,0000,,让我们看看它是什么
Dialogue: 0,0:46:47.30,0:46:49.10,*Default,NTP,0000,0000,0000,,所以如果你的半只蚂蚁
Dialogue: 0,0:46:49.93,0:46:52.80,*Default,NTP,0000,0000,0000,,是你奶奶的孩子，而不仅仅是某个人
Dialogue: 0,0:46:52.80,0:46:56.47,*Default,NTP,0000,0000,0000,,但你的爷爷却在你的另一边
Dialogue: 0,0:46:56.93,0:46:59.50,*Default,NTP,0000,0000,0000,,嗯，它有一个名字，叫做你的双半蚂蚁
Dialogue: 0,0:46:59.57,0:47:01.40,*Default,NTP,0000,0000,0000,,如果你的双半蚂蚁有一个孩子
Dialogue: 0,0:47:01.40,0:47:02.90,*Default,NTP,0000,0000,0000,,那是你的同父异母表弟
Dialogue: 0,0:47:03.17,0:47:07.37,*Default,NTP,0000,0000,0000,,由于多重继承已经变得复杂
Dialogue: 0,0:47:07.87,0:47:08.87,*Default,NTP,0000,0000,0000,,啊，但我可以变得更糟
Dialogue: 0,0:47:08.87,0:47:10.37,*Default,NTP,0000,0000,0000,,如果你有一只双半蚂蚁
Dialogue: 0,0:47:10.40,0:47:12.40,*Default,NTP,0000,0000,0000,,当然你可以有一个双同父异母的叔叔
Dialogue: 0,0:47:12.57,0:47:13.80,*Default,NTP,0000,0000,0000,,另一方面
Dialogue: 0,0:47:14.13,0:47:17.67,*Default,NTP,0000,0000,0000,,如果爷爷和奶奶决定拥有一个工具包
Dialogue: 0,0:47:18.27,0:47:20.27,*Default,NTP,0000,0000,0000,,如果另一个人会发生什么
Dialogue: 0,0:47:20.30,0:47:22.60,*Default,NTP,0000,0000,0000,,你的双半蚂蚁正在和你一起出去玩
Dialogue: 0,0:47:22.70,0:47:25.53,*Default,NTP,0000,0000,0000,,其实你是双同父异母的叔叔
Dialogue: 0,0:47:26.20,0:47:28.60,*Default,NTP,0000,0000,0000,,那么那不仅仅是你的同父异母表弟
Dialogue: 0,0:47:28.80,0:47:30.60,*Default,NTP,0000,0000,0000,,那是你的同父异母的四表弟
Dialogue: 0,0:47:30.80,0:47:33.50,*Default,NTP,0000,0000,0000,,谁拥有你的四个祖父母
Dialogue: 0,0:47:34.60,0:47:36.00,*Default,NTP,0000,0000,0000,,故事的道德启示
