[Script Info]
Title: Lecture 34. Q&A_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1s3411G7yM?p=82&vd_source=6ffca0aa1006734a4fba52f389036611
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.48,0:00:03.68,*Default,NTP,0000,0000,0000,,61a lecture 34 q a
Dialogue: 0,0:00:03.68,0:00:05.52,*Default,NTP,0000,0000,0000,,yeah good question so if you have a
Dialogue: 0,0:00:05.52,0:00:07.04,*Default,NTP,0000,0000,0000,,select
Dialogue: 0,0:00:07.04,0:00:09.68,*Default,NTP,0000,0000,0000,,statement with a group by clause and the
Dialogue: 0,0:00:09.68,0:00:10.64,*Default,NTP,0000,0000,0000,,group by has
Dialogue: 0,0:00:10.64,0:00:14.00,*Default,NTP,0000,0000,0000,,three different column names
Dialogue: 0,0:00:14.00,0:00:17.68,*Default,NTP,0000,0000,0000,,separated by commas what happens
Dialogue: 0,0:00:17.68,0:00:21.36,*Default,NTP,0000,0000,0000,,um so so we have select something
Dialogue: 0,0:00:21.36,0:00:22.32,*Default,NTP,0000,0000,0000,,something
Dialogue: 0,0:00:22.32,0:00:25.60,*Default,NTP,0000,0000,0000,,grouped by column name
Dialogue: 0,0:00:25.60,0:00:29.20,*Default,NTP,0000,0000,0000,,column email column
Dialogue: 0,0:00:29.20,0:00:33.76,*Default,NTP,0000,0000,0000,,uh city or whatever
Dialogue: 0,0:00:33.92,0:00:37.92,*Default,NTP,0000,0000,0000,,bad example name city
Dialogue: 0,0:00:37.92,0:00:41.12,*Default,NTP,0000,0000,0000,,and uh what's an interesting
Dialogue: 0,0:00:41.12,0:00:42.84,*Default,NTP,0000,0000,0000,,characteristic
Dialogue: 0,0:00:42.84,0:00:46.16,*Default,NTP,0000,0000,0000,,shoes if
Dialogue: 0,0:00:46.16,0:00:48.72,*Default,NTP,0000,0000,0000,,you had some big table full of people
Dialogue: 0,0:00:48.72,0:00:49.28,*Default,NTP,0000,0000,0000,,and
Dialogue: 0,0:00:49.28,0:00:50.96,*Default,NTP,0000,0000,0000,,you know they had names and they had
Dialogue: 0,0:00:50.96,0:00:52.24,*Default,NTP,0000,0000,0000,,cities where they're from and they had
Dialogue: 0,0:00:52.24,0:00:54.96,*Default,NTP,0000,0000,0000,,shoe sizes or whatever
Dialogue: 0,0:00:54.96,0:00:56.72,*Default,NTP,0000,0000,0000,,if you just group by name then you'll
Dialogue: 0,0:00:56.72,0:00:59.44,*Default,NTP,0000,0000,0000,,put all the johns in the same group
Dialogue: 0,0:00:59.44,0:01:02.64,*Default,NTP,0000,0000,0000,,if you group by name comma city
Dialogue: 0,0:01:02.64,0:01:06.08,*Default,NTP,0000,0000,0000,,then if there are john's in one city
Dialogue: 0,0:01:06.08,0:01:06.88,*Default,NTP,0000,0000,0000,,berkeley and
Dialogue: 0,0:01:06.88,0:01:09.52,*Default,NTP,0000,0000,0000,,john's in another city oakland they will
Dialogue: 0,0:01:09.52,0:01:11.12,*Default,NTP,0000,0000,0000,,be in different groups
Dialogue: 0,0:01:11.12,0:01:13.20,*Default,NTP,0000,0000,0000,,but there still might be multiple johns
Dialogue: 0,0:01:13.20,0:01:15.76,*Default,NTP,0000,0000,0000,,in oakland
Dialogue: 0,0:01:16.00,0:01:18.48,*Default,NTP,0000,0000,0000,,to group by three different columns
Dialogue: 0,0:01:18.48,0:01:19.04,*Default,NTP,0000,0000,0000,,means
Dialogue: 0,0:01:19.04,0:01:22.96,*Default,NTP,0000,0000,0000,,that you're separating the
Dialogue: 0,0:01:22.96,0:01:26.16,*Default,NTP,0000,0000,0000,,oakland johns with a large shoe size
Dialogue: 0,0:01:26.16,0:01:28.24,*Default,NTP,0000,0000,0000,,from the oakland johns with the small
Dialogue: 0,0:01:28.24,0:01:29.36,*Default,NTP,0000,0000,0000,,shoot size
Dialogue: 0,0:01:29.36,0:01:31.92,*Default,NTP,0000,0000,0000,,so basically what this does is it finds
Dialogue: 0,0:01:31.92,0:01:33.68,*Default,NTP,0000,0000,0000,,all combinations
Dialogue: 0,0:01:33.68,0:01:36.08,*Default,NTP,0000,0000,0000,,of a person's name what city they're
Dialogue: 0,0:01:36.08,0:01:38.24,*Default,NTP,0000,0000,0000,,from and their shoe size
Dialogue: 0,0:01:38.24,0:01:40.72,*Default,NTP,0000,0000,0000,,and makes a group for each of those
Dialogue: 0,0:01:40.72,0:01:42.48,*Default,NTP,0000,0000,0000,,combinations
Dialogue: 0,0:01:42.48,0:01:44.96,*Default,NTP,0000,0000,0000,,and um at that point there still might
Dialogue: 0,0:01:44.96,0:01:45.68,*Default,NTP,0000,0000,0000,,be two
Dialogue: 0,0:01:45.68,0:01:47.44,*Default,NTP,0000,0000,0000,,john's in oakland with the same shoe
Dialogue: 0,0:01:47.44,0:01:49.36,*Default,NTP,0000,0000,0000,,size and so it's not like these groups
Dialogue: 0,0:01:49.36,0:01:50.40,*Default,NTP,0000,0000,0000,,necessarily have
Dialogue: 0,0:01:50.40,0:01:53.36,*Default,NTP,0000,0000,0000,,one thing in them but the more columns
Dialogue: 0,0:01:53.36,0:01:54.56,*Default,NTP,0000,0000,0000,,you include here
Dialogue: 0,0:01:54.56,0:01:56.48,*Default,NTP,0000,0000,0000,,the more groups you're going to get and
Dialogue: 0,0:01:56.48,0:01:58.32,*Default,NTP,0000,0000,0000,,those groups are associated with
Dialogue: 0,0:01:58.32,0:02:00.72,*Default,NTP,0000,0000,0000,,unique combinations of values for each
Dialogue: 0,0:02:00.72,0:02:03.60,*Default,NTP,0000,0000,0000,,of these three columns
Dialogue: 0,0:02:04.00,0:02:08.88,*Default,NTP,0000,0000,0000,,yeah let's talk about latin
Dialogue: 0,0:02:08.88,0:02:12.08,*Default,NTP,0000,0000,0000,,so um
Dialogue: 0,0:02:12.64,0:02:14.96,*Default,NTP,0000,0000,0000,,let does a lot like define where you're
Dialogue: 0,0:02:14.96,0:02:16.00,*Default,NTP,0000,0000,0000,,defining
Dialogue: 0,0:02:16.00,0:02:20.00,*Default,NTP,0000,0000,0000,,symbols as opposed to um procedures
Dialogue: 0,0:02:20.00,0:02:23.76,*Default,NTP,0000,0000,0000,,so this kind of define
Dialogue: 0,0:02:24.24,0:02:28.00,*Default,NTP,0000,0000,0000,,except that when you define
Dialogue: 0,0:02:28.00,0:02:31.12,*Default,NTP,0000,0000,0000,,x will remain bound
Dialogue: 0,0:02:31.12,0:02:34.40,*Default,NTP,0000,0000,0000,,like no matter what you do next whereas
Dialogue: 0,0:02:34.40,0:02:35.20,*Default,NTP,0000,0000,0000,,let
Dialogue: 0,0:02:35.20,0:02:38.56,*Default,NTP,0000,0000,0000,,only binds a symbol to a value for a
Dialogue: 0,0:02:38.56,0:02:39.36,*Default,NTP,0000,0000,0000,,little while
Dialogue: 0,0:02:39.36,0:02:41.28,*Default,NTP,0000,0000,0000,,and what do i mean by a little while
Dialogue: 0,0:02:41.28,0:02:42.96,*Default,NTP,0000,0000,0000,,well until you reach
Dialogue: 0,0:02:42.96,0:02:45.60,*Default,NTP,0000,0000,0000,,the closing parenthesis of the let
Dialogue: 0,0:02:45.60,0:02:47.60,*Default,NTP,0000,0000,0000,,special form
Dialogue: 0,0:02:47.60,0:02:51.76,*Default,NTP,0000,0000,0000,,so um let has
Dialogue: 0,0:02:51.76,0:02:54.88,*Default,NTP,0000,0000,0000,,always two parts the
Dialogue: 0,0:02:54.88,0:02:56.96,*Default,NTP,0000,0000,0000,,new symbol bindings that you want to
Dialogue: 0,0:02:56.96,0:02:58.56,*Default,NTP,0000,0000,0000,,create and then
Dialogue: 0,0:02:58.56,0:03:00.00,*Default,NTP,0000,0000,0000,,some expression that you want to
Dialogue: 0,0:03:00.00,0:03:02.80,*Default,NTP,0000,0000,0000,,evaluate and the value of the whole let
Dialogue: 0,0:03:02.80,0:03:03.76,*Default,NTP,0000,0000,0000,,expression
Dialogue: 0,0:03:03.76,0:03:06.24,*Default,NTP,0000,0000,0000,,is equal to the value of whatever this
Dialogue: 0,0:03:06.24,0:03:08.16,*Default,NTP,0000,0000,0000,,last expression is
Dialogue: 0,0:03:08.16,0:03:11.20,*Default,NTP,0000,0000,0000,,and this part here is just
Dialogue: 0,0:03:11.20,0:03:14.16,*Default,NTP,0000,0000,0000,,there in order to let you set up some
Dialogue: 0,0:03:14.16,0:03:14.88,*Default,NTP,0000,0000,0000,,symbols
Dialogue: 0,0:03:14.88,0:03:16.84,*Default,NTP,0000,0000,0000,,that you will use in this final
Dialogue: 0,0:03:16.84,0:03:18.56,*Default,NTP,0000,0000,0000,,expression
Dialogue: 0,0:03:18.56,0:03:21.60,*Default,NTP,0000,0000,0000,,so i could let x be equal to
Dialogue: 0,0:03:21.60,0:03:25.60,*Default,NTP,0000,0000,0000,,one plus two now i've like
Dialogue: 0,0:03:25.60,0:03:28.64,*Default,NTP,0000,0000,0000,,done some work already right i've bound
Dialogue: 0,0:03:28.64,0:03:32.24,*Default,NTP,0000,0000,0000,,x to the value three
Dialogue: 0,0:03:32.24,0:03:35.68,*Default,NTP,0000,0000,0000,,i do that by writing a pair
Dialogue: 0,0:03:35.68,0:03:39.20,*Default,NTP,0000,0000,0000,,where the first element is
Dialogue: 0,0:03:39.20,0:03:42.96,*Default,NTP,0000,0000,0000,,x and the second element is
Dialogue: 0,0:03:42.96,0:03:45.04,*Default,NTP,0000,0000,0000,,some value some expression which gives
Dialogue: 0,0:03:45.04,0:03:46.64,*Default,NTP,0000,0000,0000,,me some value
Dialogue: 0,0:03:46.64,0:03:49.36,*Default,NTP,0000,0000,0000,,and then i can use x so i could figure
Dialogue: 0,0:03:49.36,0:03:49.84,*Default,NTP,0000,0000,0000,,out oh
Dialogue: 0,0:03:49.84,0:03:54.32,*Default,NTP,0000,0000,0000,,what's 3 times 4
Dialogue: 0,0:03:54.32,0:03:57.44,*Default,NTP,0000,0000,0000,,and it will tell me 12.
Dialogue: 0,0:03:57.44,0:03:59.12,*Default,NTP,0000,0000,0000,,so this is particularly relevant because
Dialogue: 0,0:03:59.12,0:04:00.64,*Default,NTP,0000,0000,0000,,there's an extra credit problem
Dialogue: 0,0:04:00.64,0:04:02.72,*Default,NTP,0000,0000,0000,,in scheme which is supposed to translate
Dialogue: 0,0:04:02.72,0:04:05.20,*Default,NTP,0000,0000,0000,,this and how would you translate this
Dialogue: 0,0:04:05.20,0:04:07.28,*Default,NTP,0000,0000,0000,,into an expression that doesn't involve
Dialogue: 0,0:04:07.28,0:04:08.24,*Default,NTP,0000,0000,0000,,let
Dialogue: 0,0:04:08.24,0:04:10.64,*Default,NTP,0000,0000,0000,,well you could use a different mechanism
Dialogue: 0,0:04:10.64,0:04:12.56,*Default,NTP,0000,0000,0000,,for binding
Dialogue: 0,0:04:12.56,0:04:15.92,*Default,NTP,0000,0000,0000,,symbols to values you could use a
Dialogue: 0,0:04:15.92,0:04:19.52,*Default,NTP,0000,0000,0000,,lambda expression so when i say
Dialogue: 0,0:04:19.52,0:04:23.68,*Default,NTP,0000,0000,0000,,lambda x times x4
Dialogue: 0,0:04:23.68,0:04:25.60,*Default,NTP,0000,0000,0000,,i'm basically saying like x is going to
Dialogue: 0,0:04:25.60,0:04:26.96,*Default,NTP,0000,0000,0000,,be bound to some value
Dialogue: 0,0:04:26.96,0:04:28.16,*Default,NTP,0000,0000,0000,,and then i'm going to compute this
Dialogue: 0,0:04:28.16,0:04:30.16,*Default,NTP,0000,0000,0000,,result oh that's the same thing with let
Dialogue: 0,0:04:30.16,0:04:31.20,*Default,NTP,0000,0000,0000,,let says
Dialogue: 0,0:04:31.20,0:04:33.12,*Default,NTP,0000,0000,0000,,x is going to be bound to some value and
Dialogue: 0,0:04:33.12,0:04:35.20,*Default,NTP,0000,0000,0000,,then i'll compute this result
Dialogue: 0,0:04:35.20,0:04:38.72,*Default,NTP,0000,0000,0000,,but where do you set up the value for x
Dialogue: 0,0:04:38.72,0:04:40.00,*Default,NTP,0000,0000,0000,,well that would be in the
Dialogue: 0,0:04:40.00,0:04:43.36,*Default,NTP,0000,0000,0000,,call to the lambda function
Dialogue: 0,0:04:43.36,0:04:46.72,*Default,NTP,0000,0000,0000,,here's where you say x is
Dialogue: 0,0:04:46.72,0:04:49.84,*Default,NTP,0000,0000,0000,,1 plus 2 then this will give me that
Dialogue: 0,0:04:49.84,0:04:51.12,*Default,NTP,0000,0000,0000,,same value 12.
Dialogue: 0,0:04:51.12,0:04:54.32,*Default,NTP,0000,0000,0000,,so these are equivalent
Dialogue: 0,0:04:54.56,0:04:56.56,*Default,NTP,0000,0000,0000,,it's just the lead is convenient because
Dialogue: 0,0:04:56.56,0:04:58.08,*Default,NTP,0000,0000,0000,,you kind of set things up first
Dialogue: 0,0:04:58.08,0:04:59.76,*Default,NTP,0000,0000,0000,,and then you compute what you want
Dialogue: 0,0:04:59.76,0:05:01.44,*Default,NTP,0000,0000,0000,,whereas this kind of does it backwards
Dialogue: 0,0:05:01.44,0:05:02.56,*Default,NTP,0000,0000,0000,,this says here's what i'm going to
Dialogue: 0,0:05:02.56,0:05:03.20,*Default,NTP,0000,0000,0000,,compute
Dialogue: 0,0:05:03.20,0:05:06.72,*Default,NTP,0000,0000,0000,,and then i have to put all the values in
Dialogue: 0,0:05:06.72,0:05:08.40,*Default,NTP,0000,0000,0000,,so this is a great example because it's
Dialogue: 0,0:05:08.40,0:05:10.32,*Default,NTP,0000,0000,0000,,exactly what let does it's a local
Dialogue: 0,0:05:10.32,0:05:11.12,*Default,NTP,0000,0000,0000,,variable
Dialogue: 0,0:05:11.12,0:05:13.12,*Default,NTP,0000,0000,0000,,think about it the scope of it is only
Dialogue: 0,0:05:13.12,0:05:14.64,*Default,NTP,0000,0000,0000,,within if you think about the scope of a
Dialogue: 0,0:05:14.64,0:05:16.40,*Default,NTP,0000,0000,0000,,variable in a function
Dialogue: 0,0:05:16.40,0:05:18.00,*Default,NTP,0000,0000,0000,,it's only scoped in the function it's
Dialogue: 0,0:05:18.00,0:05:19.52,*Default,NTP,0000,0000,0000,,the same thing with the let and this
Dialogue: 0,0:05:19.52,0:05:21.44,*Default,NTP,0000,0000,0000,,very nicely illustrates that i like that
Dialogue: 0,0:05:21.44,0:05:23.44,*Default,NTP,0000,0000,0000,,example
Dialogue: 0,0:05:23.44,0:05:25.76,*Default,NTP,0000,0000,0000,,right so in either case x is not bound
Dialogue: 0,0:05:25.76,0:05:26.96,*Default,NTP,0000,0000,0000,,here
Dialogue: 0,0:05:26.96,0:05:29.92,*Default,NTP,0000,0000,0000,,okay so two things what happens when you
Dialogue: 0,0:05:29.92,0:05:32.88,*Default,NTP,0000,0000,0000,,have a lambda
Dialogue: 0,0:05:32.96,0:05:35.12,*Default,NTP,0000,0000,0000,,that has more than one line like it
Dialogue: 0,0:05:35.12,0:05:37.04,*Default,NTP,0000,0000,0000,,computes one plus x
Dialogue: 0,0:05:37.04,0:05:40.80,*Default,NTP,0000,0000,0000,,and then it computes 2 plus x
Dialogue: 0,0:05:40.80,0:05:44.80,*Default,NTP,0000,0000,0000,,well the answer is that both of these
Dialogue: 0,0:05:44.80,0:05:47.76,*Default,NTP,0000,0000,0000,,are body expressions but when you call
Dialogue: 0,0:05:47.76,0:05:48.32,*Default,NTP,0000,0000,0000,,this
Dialogue: 0,0:05:48.32,0:05:51.84,*Default,NTP,0000,0000,0000,,on say 5 you'll get 7. it really did
Dialogue: 0,0:05:51.84,0:05:52.32,*Default,NTP,0000,0000,0000,,compute
Dialogue: 0,0:05:52.32,0:05:54.32,*Default,NTP,0000,0000,0000,,6 along the way but didn't do anything
Dialogue: 0,0:05:54.32,0:05:55.52,*Default,NTP,0000,0000,0000,,with it
Dialogue: 0,0:05:55.52,0:05:58.32,*Default,NTP,0000,0000,0000,,and so it was basically lost at the end
Dialogue: 0,0:05:58.32,0:05:59.12,*Default,NTP,0000,0000,0000,,the value
Dialogue: 0,0:05:59.12,0:06:02.96,*Default,NTP,0000,0000,0000,,of a call to any procedure is the value
Dialogue: 0,0:06:02.96,0:06:03.60,*Default,NTP,0000,0000,0000,,of its
Dialogue: 0,0:06:03.60,0:06:06.96,*Default,NTP,0000,0000,0000,,last sub-expression if there are more
Dialogue: 0,0:06:06.96,0:06:08.08,*Default,NTP,0000,0000,0000,,than one
Dialogue: 0,0:06:08.08,0:06:10.16,*Default,NTP,0000,0000,0000,,so like what's the point of having these
Dialogue: 0,0:06:10.16,0:06:11.44,*Default,NTP,0000,0000,0000,,well you could
Dialogue: 0,0:06:11.44,0:06:13.84,*Default,NTP,0000,0000,0000,,make scheme do something with it like
Dialogue: 0,0:06:13.84,0:06:15.12,*Default,NTP,0000,0000,0000,,print it out
Dialogue: 0,0:06:15.12,0:06:17.04,*Default,NTP,0000,0000,0000,,and then you'd see that the six really
Dialogue: 0,0:06:17.04,0:06:18.56,*Default,NTP,0000,0000,0000,,was computed and now we're printing it
Dialogue: 0,0:06:18.56,0:06:21.12,*Default,NTP,0000,0000,0000,,out and now you see both
Dialogue: 0,0:06:21.12,0:06:24.24,*Default,NTP,0000,0000,0000,,so the answer to what do you do in the
Dialogue: 0,0:06:24.24,0:06:26.32,*Default,NTP,0000,0000,0000,,case that there are multiple
Dialogue: 0,0:06:26.32,0:06:29.20,*Default,NTP,0000,0000,0000,,body expressions is that you evaluate
Dialogue: 0,0:06:29.20,0:06:30.32,*Default,NTP,0000,0000,0000,,each one in order
Dialogue: 0,0:06:30.32,0:06:31.68,*Default,NTP,0000,0000,0000,,but you just return the value of the
Dialogue: 0,0:06:31.68,0:06:34.80,*Default,NTP,0000,0000,0000,,last one
Dialogue: 0,0:06:34.80,0:06:36.72,*Default,NTP,0000,0000,0000,,okay so a second question was what is
Dialogue: 0,0:06:36.72,0:06:38.00,*Default,NTP,0000,0000,0000,,going on here
Dialogue: 0,0:06:38.00,0:06:42.08,*Default,NTP,0000,0000,0000,,let's take a look this says
Dialogue: 0,0:06:42.08,0:06:45.36,*Default,NTP,0000,0000,0000,,create a procedure which takes an x
Dialogue: 0,0:06:45.36,0:06:48.88,*Default,NTP,0000,0000,0000,,evaluates a which is like something that
Dialogue: 0,0:06:48.88,0:06:50.72,*Default,NTP,0000,0000,0000,,must be defined already
Dialogue: 0,0:06:50.72,0:06:54.00,*Default,NTP,0000,0000,0000,,otherwise this would crash and then
Dialogue: 0,0:06:54.00,0:06:57.20,*Default,NTP,0000,0000,0000,,you let the symbol a equal
Dialogue: 0,0:06:57.20,0:07:00.40,*Default,NTP,0000,0000,0000,,x and you evaluate a again
Dialogue: 0,0:07:00.40,0:07:02.56,*Default,NTP,0000,0000,0000,,but this a might be different from this
Dialogue: 0,0:07:02.56,0:07:03.92,*Default,NTP,0000,0000,0000,,a because
Dialogue: 0,0:07:03.92,0:07:06.80,*Default,NTP,0000,0000,0000,,this a is bound to whatever x was the
Dialogue: 0,0:07:06.80,0:07:07.92,*Default,NTP,0000,0000,0000,,value of x
Dialogue: 0,0:07:07.92,0:07:09.44,*Default,NTP,0000,0000,0000,,whereas this a must have been there
Dialogue: 0,0:07:09.44,0:07:11.84,*Default,NTP,0000,0000,0000,,already so if i evaluate this directly
Dialogue: 0,0:07:11.84,0:07:13.20,*Default,NTP,0000,0000,0000,,it'll
Dialogue: 0,0:07:13.20,0:07:15.92,*Default,NTP,0000,0000,0000,,or sorry if i call this on let's say 12
Dialogue: 0,0:07:15.92,0:07:17.52,*Default,NTP,0000,0000,0000,,it will give me an error that says
Dialogue: 0,0:07:17.52,0:07:21.44,*Default,NTP,0000,0000,0000,,unknown identifier a but
Dialogue: 0,0:07:21.44,0:07:27.20,*Default,NTP,0000,0000,0000,,if i define a to be something
Dialogue: 0,0:07:27.20,0:07:30.24,*Default,NTP,0000,0000,0000,,then i can evaluate this this will
Dialogue: 0,0:07:30.24,0:07:32.32,*Default,NTP,0000,0000,0000,,evaluate to seven
Dialogue: 0,0:07:32.32,0:07:35.92,*Default,NTP,0000,0000,0000,,this will evaluate to twelve
Dialogue: 0,0:07:35.92,0:07:38.40,*Default,NTP,0000,0000,0000,,since there are two expressions we never
Dialogue: 0,0:07:38.40,0:07:39.12,*Default,NTP,0000,0000,0000,,really see
Dialogue: 0,0:07:39.12,0:07:41.20,*Default,NTP,0000,0000,0000,,the seven if we change this just a
Dialogue: 0,0:07:41.20,0:07:43.68,*Default,NTP,0000,0000,0000,,little bit in order to print this out
Dialogue: 0,0:07:43.68,0:07:46.80,*Default,NTP,0000,0000,0000,,we would see the seven
Dialogue: 0,0:07:48.48,0:07:50.80,*Default,NTP,0000,0000,0000,,and it's basically showing that you know
Dialogue: 0,0:07:50.80,0:07:53.04,*Default,NTP,0000,0000,0000,,within the body of the same
Dialogue: 0,0:07:53.04,0:07:56.00,*Default,NTP,0000,0000,0000,,procedure a could be seven and then it
Dialogue: 0,0:07:56.00,0:07:57.28,*Default,NTP,0000,0000,0000,,could be twelve if
Dialogue: 0,0:07:57.28,0:07:59.52,*Default,NTP,0000,0000,0000,,a the second time was inside a let the
Dialogue: 0,0:07:59.52,0:08:02.16,*Default,NTP,0000,0000,0000,,rebound day
Dialogue: 0,0:08:03.20,0:08:06.16,*Default,NTP,0000,0000,0000,,the question is here's some demos from
Dialogue: 0,0:08:06.16,0:08:07.84,*Default,NTP,0000,0000,0000,,today's lecture
Dialogue: 0,0:08:07.84,0:08:10.24,*Default,NTP,0000,0000,0000,,there's this line that's like build a
Dialogue: 0,0:08:10.24,0:08:11.04,*Default,NTP,0000,0000,0000,,connection
Dialogue: 0,0:08:11.04,0:08:14.08,*Default,NTP,0000,0000,0000,,to some database and then you know we
Dialogue: 0,0:08:14.08,0:08:14.96,*Default,NTP,0000,0000,0000,,give it a name
Dialogue: 0,0:08:14.96,0:08:17.20,*Default,NTP,0000,0000,0000,,give it any name you want db or n or
Dialogue: 0,0:08:17.20,0:08:19.44,*Default,NTP,0000,0000,0000,,something like that
Dialogue: 0,0:08:19.44,0:08:23.28,*Default,NTP,0000,0000,0000,,what would happen if you evaluated this
Dialogue: 0,0:08:23.28,0:08:24.96,*Default,NTP,0000,0000,0000,,same expression a second time
Dialogue: 0,0:08:24.96,0:08:27.52,*Default,NTP,0000,0000,0000,,would that give you a new database or
Dialogue: 0,0:08:27.52,0:08:28.96,*Default,NTP,0000,0000,0000,,the same database
Dialogue: 0,0:08:28.96,0:08:31.44,*Default,NTP,0000,0000,0000,,or would it erase the old one like
Dialogue: 0,0:08:31.44,0:08:33.04,*Default,NTP,0000,0000,0000,,what's the story
Dialogue: 0,0:08:33.04,0:08:36.48,*Default,NTP,0000,0000,0000,,and the story is that
Dialogue: 0,0:08:36.48,0:08:39.28,*Default,NTP,0000,0000,0000,,this name which describes the name of a
Dialogue: 0,0:08:39.28,0:08:40.08,*Default,NTP,0000,0000,0000,,file on your
Dialogue: 0,0:08:40.08,0:08:43.28,*Default,NTP,0000,0000,0000,,file system is
Dialogue: 0,0:08:43.28,0:08:45.44,*Default,NTP,0000,0000,0000,,a database that won't ever kind of just
Dialogue: 0,0:08:45.44,0:08:46.80,*Default,NTP,0000,0000,0000,,get erased
Dialogue: 0,0:08:46.80,0:08:49.68,*Default,NTP,0000,0000,0000,,instead it's persistent even if you quit
Dialogue: 0,0:08:49.68,0:08:51.92,*Default,NTP,0000,0000,0000,,python and start python again
Dialogue: 0,0:08:51.92,0:08:54.56,*Default,NTP,0000,0000,0000,,it will retain whatever information was
Dialogue: 0,0:08:54.56,0:08:55.52,*Default,NTP,0000,0000,0000,,in it
Dialogue: 0,0:08:55.52,0:08:59.20,*Default,NTP,0000,0000,0000,,before if you evaluate this expression
Dialogue: 0,0:08:59.20,0:09:00.56,*Default,NTP,0000,0000,0000,,multiple times then you just get
Dialogue: 0,0:09:00.56,0:09:02.00,*Default,NTP,0000,0000,0000,,multiple connections to the same
Dialogue: 0,0:09:02.00,0:09:02.72,*Default,NTP,0000,0000,0000,,database
Dialogue: 0,0:09:02.72,0:09:05.52,*Default,NTP,0000,0000,0000,,with the same data in it and that's okay
Dialogue: 0,0:09:05.52,0:09:07.36,*Default,NTP,0000,0000,0000,,actually databases are designed to have
Dialogue: 0,0:09:07.36,0:09:08.64,*Default,NTP,0000,0000,0000,,multiple connections
Dialogue: 0,0:09:08.64,0:09:10.32,*Default,NTP,0000,0000,0000,,and what do these connections mean that
Dialogue: 0,0:09:10.32,0:09:12.88,*Default,NTP,0000,0000,0000,,means different programs might all be
Dialogue: 0,0:09:12.88,0:09:14.56,*Default,NTP,0000,0000,0000,,changing the database or querying the
Dialogue: 0,0:09:14.56,0:09:16.24,*Default,NTP,0000,0000,0000,,database at the same time
Dialogue: 0,0:09:16.24,0:09:17.68,*Default,NTP,0000,0000,0000,,but that doesn't mean that the database
Dialogue: 0,0:09:17.68,0:09:19.52,*Default,NTP,0000,0000,0000,,is going to get refreshed or changed or
Dialogue: 0,0:09:19.52,0:09:20.32,*Default,NTP,0000,0000,0000,,something like that
Dialogue: 0,0:09:20.32,0:09:22.80,*Default,NTP,0000,0000,0000,,it basically just stays there and
Dialogue: 0,0:09:22.80,0:09:23.68,*Default,NTP,0000,0000,0000,,accumulates
Dialogue: 0,0:09:23.68,0:09:26.16,*Default,NTP,0000,0000,0000,,information over time and you can if one
Dialogue: 0,0:09:26.16,0:09:27.68,*Default,NTP,0000,0000,0000,,program changes it and then another
Dialogue: 0,0:09:27.68,0:09:28.96,*Default,NTP,0000,0000,0000,,program queries it
Dialogue: 0,0:09:28.96,0:09:30.48,*Default,NTP,0000,0000,0000,,that second program is going to see the
Dialogue: 0,0:09:30.48,0:09:32.72,*Default,NTP,0000,0000,0000,,changes from the first program
Dialogue: 0,0:09:32.72,0:09:34.96,*Default,NTP,0000,0000,0000,,so i think within a particular python
Dialogue: 0,0:09:34.96,0:09:36.00,*Default,NTP,0000,0000,0000,,program there really isn't
Dialogue: 0,0:09:36.00,0:09:37.52,*Default,NTP,0000,0000,0000,,a good reason to have multiple
Dialogue: 0,0:09:37.52,0:09:39.36,*Default,NTP,0000,0000,0000,,connections usually those multiple
Dialogue: 0,0:09:39.36,0:09:40.96,*Default,NTP,0000,0000,0000,,connections come from multiple python
Dialogue: 0,0:09:40.96,0:09:43.76,*Default,NTP,0000,0000,0000,,programs or maybe they're not all python
Dialogue: 0,0:09:43.76,0:09:45.28,*Default,NTP,0000,0000,0000,,but you certainly could do it and i
Dialogue: 0,0:09:45.28,0:09:48.40,*Default,NTP,0000,0000,0000,,don't think anything would break
Dialogue: 0,0:09:48.48,0:09:49.84,*Default,NTP,0000,0000,0000,,i guess the question is what happens
Dialogue: 0,0:09:49.84,0:09:52.64,*Default,NTP,0000,0000,0000,,when you define something within a let
Dialogue: 0,0:09:52.64,0:09:54.96,*Default,NTP,0000,0000,0000,,for example or like you have a define
Dialogue: 0,0:09:54.96,0:09:58.08,*Default,NTP,0000,0000,0000,,that's deeply embedded somewhere um
Dialogue: 0,0:09:58.08,0:10:00.48,*Default,NTP,0000,0000,0000,,i i guess i misspoke about let earlier
Dialogue: 0,0:10:00.48,0:10:02.64,*Default,NTP,0000,0000,0000,,you can have multiple expressions and it
Dialogue: 0,0:10:02.64,0:10:04.32,*Default,NTP,0000,0000,0000,,just evaluates the last one it's the
Dialogue: 0,0:10:04.32,0:10:05.68,*Default,NTP,0000,0000,0000,,value of the whole lip
Dialogue: 0,0:10:05.68,0:10:10.00,*Default,NTP,0000,0000,0000,,kind of like uh kind of like a lambda
Dialogue: 0,0:10:10.00,0:10:13.44,*Default,NTP,0000,0000,0000,,um what would happen if
Dialogue: 0,0:10:13.44,0:10:15.20,*Default,NTP,0000,0000,0000,,this expression here wasn't just
Dialogue: 0,0:10:15.20,0:10:16.64,*Default,NTP,0000,0000,0000,,evaluate x
Dialogue: 0,0:10:16.64,0:10:19.84,*Default,NTP,0000,0000,0000,,but it was define a to be x
Dialogue: 0,0:10:19.84,0:10:22.80,*Default,NTP,0000,0000,0000,,and then we compute x plus one well the
Dialogue: 0,0:10:22.80,0:10:24.40,*Default,NTP,0000,0000,0000,,value's the same the value is just
Dialogue: 0,0:10:24.40,0:10:24.88,*Default,NTP,0000,0000,0000,,whatever
Dialogue: 0,0:10:24.88,0:10:28.00,*Default,NTP,0000,0000,0000,,x plus one is but we have a
Dialogue: 0,0:10:28.00,0:10:31.36,*Default,NTP,0000,0000,0000,,defined expression in here and so we can
Dialogue: 0,0:10:31.36,0:10:33.12,*Default,NTP,0000,0000,0000,,look up what a is
Dialogue: 0,0:10:33.12,0:10:35.92,*Default,NTP,0000,0000,0000,,and it tells us a is nothing because it
Dialogue: 0,0:10:35.92,0:10:39.68,*Default,NTP,0000,0000,0000,,all happened kind of within the let
Dialogue: 0,0:10:39.76,0:10:42.88,*Default,NTP,0000,0000,0000,,on the other hand if you
Dialogue: 0,0:10:42.88,0:10:47.76,*Default,NTP,0000,0000,0000,,define a here and you wonder what
Dialogue: 0,0:10:47.76,0:10:52.00,*Default,NTP,0000,0000,0000,,x plus a is you could refer to a
Dialogue: 0,0:10:52.00,0:10:54.48,*Default,NTP,0000,0000,0000,,within this expression because you just
Dialogue: 0,0:10:54.48,0:10:55.28,*Default,NTP,0000,0000,0000,,defined it
Dialogue: 0,0:10:55.28,0:10:58.16,*Default,NTP,0000,0000,0000,,so you defined x to be 1 you defined a
Dialogue: 0,0:10:58.16,0:10:58.72,*Default,NTP,0000,0000,0000,,to be
Dialogue: 0,0:10:58.72,0:11:01.76,*Default,NTP,0000,0000,0000,,x which is one and now you're adding
Dialogue: 0,0:11:01.76,0:11:05.12,*Default,NTP,0000,0000,0000,,one and one together and you get two
Dialogue: 0,0:11:05.12,0:11:08.08,*Default,NTP,0000,0000,0000,,so um i think the answer to the question
Dialogue: 0,0:11:08.08,0:11:09.36,*Default,NTP,0000,0000,0000,,of what happens when you have an
Dialogue: 0,0:11:09.36,0:11:10.08,*Default,NTP,0000,0000,0000,,embedded
Dialogue: 0,0:11:10.08,0:11:13.44,*Default,NTP,0000,0000,0000,,defined is if it's within a lambda or
Dialogue: 0,0:11:13.44,0:11:16.08,*Default,NTP,0000,0000,0000,,a procedure or a let then it kind of
Dialogue: 0,0:11:16.08,0:11:19.76,*Default,NTP,0000,0000,0000,,defines it within that scope
Dialogue: 0,0:11:19.76,0:11:23.12,*Default,NTP,0000,0000,0000,,otherwise it could actually be defining
Dialogue: 0,0:11:23.12,0:11:23.68,*Default,NTP,0000,0000,0000,,it
Dialogue: 0,0:11:23.68,0:11:25.92,*Default,NTP,0000,0000,0000,,more broadly so if i say something like
Dialogue: 0,0:11:25.92,0:11:27.28,*Default,NTP,0000,0000,0000,,if
Dialogue: 0,0:11:27.28,0:11:28.96,*Default,NTP,0000,0000,0000,,2 is greater than 1 which is true then
Dialogue: 0,0:11:28.96,0:11:30.96,*Default,NTP,0000,0000,0000,,i'm going to define y to be 7.
Dialogue: 0,0:11:30.96,0:11:34.96,*Default,NTP,0000,0000,0000,,otherwise i'll define y to be 8.
Dialogue: 0,0:11:34.96,0:11:36.96,*Default,NTP,0000,0000,0000,,and then i could say what's y and it's
Dialogue: 0,0:11:36.96,0:11:39.52,*Default,NTP,0000,0000,0000,,7. so it's not like the define
Dialogue: 0,0:11:39.52,0:11:41.76,*Default,NTP,0000,0000,0000,,only ever works within the scope you're
Dialogue: 0,0:11:41.76,0:11:43.44,*Default,NTP,0000,0000,0000,,in it's
Dialogue: 0,0:11:43.44,0:11:46.16,*Default,NTP,0000,0000,0000,,let's or just like procedure calls like
Dialogue: 0,0:11:46.16,0:11:46.88,*Default,NTP,0000,0000,0000,,define
Dialogue: 0,0:11:46.88,0:11:50.00,*Default,NTP,0000,0000,0000,,uh set something in the local frame
Dialogue: 0,0:11:50.00,0:11:53.92,*Default,NTP,0000,0000,0000,,and um right it
Dialogue: 0,0:11:53.92,0:11:55.44,*Default,NTP,0000,0000,0000,,as long as you're in that frame you can
Dialogue: 0,0:11:55.44,0:11:56.96,*Default,NTP,0000,0000,0000,,access it and as soon as you leave that
Dialogue: 0,0:11:56.96,0:11:58.48,*Default,NTP,0000,0000,0000,,local frame then you
Dialogue: 0,0:11:58.48,0:12:01.04,*Default,NTP,0000,0000,0000,,can't access it anymore all right so
Dialogue: 0,0:12:01.04,0:12:02.64,*Default,NTP,0000,0000,0000,,we're going to look at this test case
Dialogue: 0,0:12:02.64,0:12:05.84,*Default,NTP,0000,0000,0000,,together from question 14
Dialogue: 0,0:12:05.84,0:12:10.00,*Default,NTP,0000,0000,0000,,and let's just step through it
Dialogue: 0,0:12:10.00,0:12:12.64,*Default,NTP,0000,0000,0000,,see what we learned no i think all the
Dialogue: 0,0:12:12.64,0:12:14.72,*Default,NTP,0000,0000,0000,,action starts here so we define z to be
Dialogue: 0,0:12:14.72,0:12:16.32,*Default,NTP,0000,0000,0000,,zero
Dialogue: 0,0:12:16.32,0:12:18.64,*Default,NTP,0000,0000,0000,,and then what happens when we let a be
Dialogue: 0,0:12:18.64,0:12:20.56,*Default,NTP,0000,0000,0000,,the result of dividing z to be
Dialogue: 0,0:12:20.56,0:12:24.24,*Default,NTP,0000,0000,0000,,z plus one well when you define
Dialogue: 0,0:12:24.24,0:12:26.08,*Default,NTP,0000,0000,0000,,z well we can see it right here when you
Dialogue: 0,0:12:26.08,0:12:28.88,*Default,NTP,0000,0000,0000,,when you evaluate a
Dialogue: 0,0:12:28.88,0:12:31.60,*Default,NTP,0000,0000,0000,,define expression it does have a value
Dialogue: 0,0:12:31.60,0:12:34.88,*Default,NTP,0000,0000,0000,,that value is a symbol
Dialogue: 0,0:12:35.44,0:12:38.56,*Default,NTP,0000,0000,0000,,so if i said something like define a
Dialogue: 0,0:12:38.56,0:12:42.56,*Default,NTP,0000,0000,0000,,to be defined z0
Dialogue: 0,0:12:42.56,0:12:46.40,*Default,NTP,0000,0000,0000,,what is a now it's bound to the symbol z
Dialogue: 0,0:12:46.40,0:12:49.28,*Default,NTP,0000,0000,0000,,it's as if i had said define a to be the
Dialogue: 0,0:12:49.28,0:12:49.76,*Default,NTP,0000,0000,0000,,symbol
Dialogue: 0,0:12:49.76,0:12:53.76,*Default,NTP,0000,0000,0000,,z i'd get the same result
Dialogue: 0,0:12:53.76,0:12:56.80,*Default,NTP,0000,0000,0000,,so here we are
Dialogue: 0,0:12:56.80,0:13:00.80,*Default,NTP,0000,0000,0000,,using a let expression
Dialogue: 0,0:13:00.88,0:13:04.00,*Default,NTP,0000,0000,0000,,to assign a to
Dialogue: 0,0:13:04.00,0:13:10.16,*Default,NTP,0000,0000,0000,,some value and that value happens to be
Dialogue: 0,0:13:10.56,0:13:13.68,*Default,NTP,0000,0000,0000,,a symbol the symbol z
Dialogue: 0,0:13:13.68,0:13:15.84,*Default,NTP,0000,0000,0000,,now what is z after we do this
Dialogue: 0,0:13:15.84,0:13:17.52,*Default,NTP,0000,0000,0000,,definition
Dialogue: 0,0:13:17.52,0:13:20.96,*Default,NTP,0000,0000,0000,,it's 1. what was
Dialogue: 0,0:13:20.96,0:13:25.04,*Default,NTP,0000,0000,0000,,a in here a was bound to the symbol z so
Dialogue: 0,0:13:25.04,0:13:26.56,*Default,NTP,0000,0000,0000,,if instead i had written that
Dialogue: 0,0:13:26.56,0:13:29.92,*Default,NTP,0000,0000,0000,,then i would have seen z but really what
Dialogue: 0,0:13:29.92,0:13:31.44,*Default,NTP,0000,0000,0000,,this is checking is to make sure that
Dialogue: 0,0:13:31.44,0:13:32.24,*Default,NTP,0000,0000,0000,,you're actually
Dialogue: 0,0:13:32.24,0:13:34.16,*Default,NTP,0000,0000,0000,,evaluating the define expression and
Dialogue: 0,0:13:34.16,0:13:36.32,*Default,NTP,0000,0000,0000,,when you evaluate the defined expression
Dialogue: 0,0:13:36.32,0:13:39.52,*Default,NTP,0000,0000,0000,,then z should change
Dialogue: 0,0:13:39.60,0:13:40.72,*Default,NTP,0000,0000,0000,,okay so we got to go back to the
Dialogue: 0,0:13:40.72,0:13:42.96,*Default,NTP,0000,0000,0000,,beginning because i kind of did this
Dialogue: 0,0:13:42.96,0:13:44.40,*Default,NTP,0000,0000,0000,,twice
Dialogue: 0,0:13:44.40,0:13:48.24,*Default,NTP,0000,0000,0000,,now z is bound to one a is not defined
Dialogue: 0,0:13:48.24,0:13:50.88,*Default,NTP,0000,0000,0000,,what would happen if we wrote this
Dialogue: 0,0:13:50.88,0:13:53.20,*Default,NTP,0000,0000,0000,,expression
Dialogue: 0,0:13:53.20,0:13:56.32,*Default,NTP,0000,0000,0000,,this expression says bind
Dialogue: 0,0:13:56.32,0:14:00.08,*Default,NTP,0000,0000,0000,,x to 1 and y to 3
Dialogue: 0,0:14:00.08,0:14:03.52,*Default,NTP,0000,0000,0000,,and then do two things define
Dialogue: 0,0:14:03.52,0:14:06.80,*Default,NTP,0000,0000,0000,,x to be x plus one so now x is bound to
Dialogue: 0,0:14:06.80,0:14:08.96,*Default,NTP,0000,0000,0000,,two
Dialogue: 0,0:14:08.96,0:14:11.68,*Default,NTP,0000,0000,0000,,and what would happen if i listed out x
Dialogue: 0,0:14:11.68,0:14:12.80,*Default,NTP,0000,0000,0000,,and y
Dialogue: 0,0:14:12.80,0:14:17.84,*Default,NTP,0000,0000,0000,,well i'd list out uh two and three
Dialogue: 0,0:14:17.92,0:14:20.56,*Default,NTP,0000,0000,0000,,so i guess like um whether we had
Dialogue: 0,0:14:20.56,0:14:21.44,*Default,NTP,0000,0000,0000,,written
Dialogue: 0,0:14:21.44,0:14:25.20,*Default,NTP,0000,0000,0000,,this thing or we had just written
Dialogue: 0,0:14:25.20,0:14:27.84,*Default,NTP,0000,0000,0000,,that thing alone we'd get the same
Dialogue: 0,0:14:27.84,0:14:29.84,*Default,NTP,0000,0000,0000,,effect which would be that z is one now
Dialogue: 0,0:14:29.84,0:14:32.56,*Default,NTP,0000,0000,0000,,instead of zero
Dialogue: 0,0:14:33.28,0:14:36.16,*Default,NTP,0000,0000,0000,,yeah interesting so um the question is
Dialogue: 0,0:14:36.16,0:14:37.68,*Default,NTP,0000,0000,0000,,about group by where you're writing some
Dialogue: 0,0:14:37.68,0:14:39.92,*Default,NTP,0000,0000,0000,,arbitrary expression not just a
Dialogue: 0,0:14:39.92,0:14:44.16,*Default,NTP,0000,0000,0000,,column name but you know any old thing
Dialogue: 0,0:14:44.16,0:14:47.20,*Default,NTP,0000,0000,0000,,so i put uh
Dialogue: 0,0:14:47.20,0:14:51.28,*Default,NTP,0000,0000,0000,,one two three and five in a table
Dialogue: 0,0:14:51.28,0:14:53.76,*Default,NTP,0000,0000,0000,,if i
Dialogue: 0,0:14:56.72,0:14:59.84,*Default,NTP,0000,0000,0000,,wanna know well okay let me do the exact
Dialogue: 0,0:14:59.84,0:15:02.00,*Default,NTP,0000,0000,0000,,uh question that you did which is like
Dialogue: 0,0:15:02.00,0:15:03.44,*Default,NTP,0000,0000,0000,,how many of these are bigger than one
Dialogue: 0,0:15:03.44,0:15:04.72,*Default,NTP,0000,0000,0000,,and how many of these are not bigger
Dialogue: 0,0:15:04.72,0:15:05.44,*Default,NTP,0000,0000,0000,,than one
Dialogue: 0,0:15:05.44,0:15:06.72,*Default,NTP,0000,0000,0000,,well i could write an expression that
Dialogue: 0,0:15:06.72,0:15:08.80,*Default,NTP,0000,0000,0000,,says is uh n
Dialogue: 0,0:15:08.80,0:15:11.28,*Default,NTP,0000,0000,0000,,bigger than one and i could also count
Dialogue: 0,0:15:11.28,0:15:12.32,*Default,NTP,0000,0000,0000,,how many
Dialogue: 0,0:15:12.32,0:15:16.80,*Default,NTP,0000,0000,0000,,different values fall into a group
Dialogue: 0,0:15:19.28,0:15:22.24,*Default,NTP,0000,0000,0000,,oh come on
Dialogue: 0,0:15:22.80,0:15:26.64,*Default,NTP,0000,0000,0000,,n bigger than one count star
Dialogue: 0,0:15:26.64,0:15:29.76,*Default,NTP,0000,0000,0000,,from the numbers table group by
Dialogue: 0,0:15:29.76,0:15:30.88,*Default,NTP,0000,0000,0000,,and here i'm going to write some
Dialogue: 0,0:15:30.88,0:15:33.20,*Default,NTP,0000,0000,0000,,arbitrary expression n greater than one
Dialogue: 0,0:15:33.20,0:15:36.24,*Default,NTP,0000,0000,0000,,what happens i get two groups
Dialogue: 0,0:15:36.24,0:15:39.52,*Default,NTP,0000,0000,0000,,i get a group where i've grouped
Dialogue: 0,0:15:39.52,0:15:40.56,*Default,NTP,0000,0000,0000,,together all the rows
Dialogue: 0,0:15:40.56,0:15:43.44,*Default,NTP,0000,0000,0000,,where n is not bigger than one zero is
Dialogue: 0,0:15:43.44,0:15:44.32,*Default,NTP,0000,0000,0000,,kind of representing
Dialogue: 0,0:15:44.32,0:15:47.44,*Default,NTP,0000,0000,0000,,false value here in sql
Dialogue: 0,0:15:47.44,0:15:48.64,*Default,NTP,0000,0000,0000,,and then i've grouped together all the
Dialogue: 0,0:15:48.64,0:15:50.72,*Default,NTP,0000,0000,0000,,rows where n is bigger than one
Dialogue: 0,0:15:50.72,0:15:52.80,*Default,NTP,0000,0000,0000,,where one is representing a true value
Dialogue: 0,0:15:52.80,0:15:54.00,*Default,NTP,0000,0000,0000,,and then these counts are
Dialogue: 0,0:15:54.00,0:15:55.84,*Default,NTP,0000,0000,0000,,how many different rows were less than
Dialogue: 0,0:15:55.84,0:15:57.68,*Default,NTP,0000,0000,0000,,one and how many are sorry were
Dialogue: 0,0:15:57.68,0:15:59.60,*Default,NTP,0000,0000,0000,,not bigger than one and how many rows
Dialogue: 0,0:15:59.60,0:16:01.52,*Default,NTP,0000,0000,0000,,were bigger than one
Dialogue: 0,0:16:01.52,0:16:03.68,*Default,NTP,0000,0000,0000,,so it is certainly possible to group by
Dialogue: 0,0:16:03.68,0:16:05.04,*Default,NTP,0000,0000,0000,,some arbitrary expression
Dialogue: 0,0:16:05.04,0:16:06.64,*Default,NTP,0000,0000,0000,,or you could even have a comma separated
Dialogue: 0,0:16:06.64,0:16:09.28,*Default,NTP,0000,0000,0000,,list of multiple arbitrary expressions
Dialogue: 0,0:16:09.28,0:16:12.48,*Default,NTP,0000,0000,0000,,and you know would you do this
Dialogue: 0,0:16:12.48,0:16:16.00,*Default,NTP,0000,0000,0000,,i think there's a reason it's built into
Dialogue: 0,0:16:16.00,0:16:16.64,*Default,NTP,0000,0000,0000,,the language
Dialogue: 0,0:16:16.64,0:16:18.72,*Default,NTP,0000,0000,0000,,it really depends on what table you have
Dialogue: 0,0:16:18.72,0:16:20.48,*Default,NTP,0000,0000,0000,,and what you want so if it turns out the
Dialogue: 0,0:16:20.48,0:16:21.76,*Default,NTP,0000,0000,0000,,table you have
Dialogue: 0,0:16:21.76,0:16:23.84,*Default,NTP,0000,0000,0000,,doesn't have a column for bigger than
Dialogue: 0,0:16:23.84,0:16:25.60,*Default,NTP,0000,0000,0000,,one or less than
Dialogue: 0,0:16:25.60,0:16:27.52,*Default,NTP,0000,0000,0000,,or not bigger than one but that's like a
Dialogue: 0,0:16:27.52,0:16:28.96,*Default,NTP,0000,0000,0000,,really important part of
Dialogue: 0,0:16:28.96,0:16:30.72,*Default,NTP,0000,0000,0000,,what computation you're doing then it
Dialogue: 0,0:16:30.72,0:16:32.72,*Default,NTP,0000,0000,0000,,makes sense to have like a group by
Dialogue: 0,0:16:32.72,0:16:33.36,*Default,NTP,0000,0000,0000,,there
Dialogue: 0,0:16:33.36,0:16:35.60,*Default,NTP,0000,0000,0000,,i think it's a little more common just
Dialogue: 0,0:16:35.60,0:16:37.12,*Default,NTP,0000,0000,0000,,to
Dialogue: 0,0:16:37.12,0:16:40.80,*Default,NTP,0000,0000,0000,,um have another column in your table
Dialogue: 0,0:16:40.80,0:16:43.04,*Default,NTP,0000,0000,0000,,which would have these values in it
Dialogue: 0,0:16:43.04,0:16:44.56,*Default,NTP,0000,0000,0000,,about whether something is bigger than
Dialogue: 0,0:16:44.56,0:16:46.40,*Default,NTP,0000,0000,0000,,one or not and then group by that
Dialogue: 0,0:16:46.40,0:16:47.44,*Default,NTP,0000,0000,0000,,just to make it a little bit more
Dialogue: 0,0:16:47.44,0:16:49.36,*Default,NTP,0000,0000,0000,,explicit but if you want to kind of skip
Dialogue: 0,0:16:49.36,0:16:51.60,*Default,NTP,0000,0000,0000,,that step of adding yet another column
Dialogue: 0,0:16:51.60,0:16:55.44,*Default,NTP,0000,0000,0000,,then you you can do it this way
Dialogue: 0,0:16:56.16,0:16:58.32,*Default,NTP,0000,0000,0000,,yeah john raises a really good point is
Dialogue: 0,0:16:58.32,0:16:59.36,*Default,NTP,0000,0000,0000,,that
Dialogue: 0,0:16:59.36,0:17:02.16,*Default,NTP,0000,0000,0000,,if that information something being
Dialogue: 0,0:17:02.16,0:17:03.52,*Default,NTP,0000,0000,0000,,greater than one is important
Dialogue: 0,0:17:03.52,0:17:05.84,*Default,NTP,0000,0000,0000,,well then store it don't compute it so
Dialogue: 0,0:17:05.84,0:17:07.68,*Default,NTP,0000,0000,0000,,there's that sort of you can
Dialogue: 0,0:17:07.68,0:17:09.28,*Default,NTP,0000,0000,0000,,i think of the computation as well okay
Dialogue: 0,0:17:09.28,0:17:10.40,*Default,NTP,0000,0000,0000,,i've got to do this every once in a
Dialogue: 0,0:17:10.40,0:17:11.52,*Default,NTP,0000,0000,0000,,while but if it's something that i
Dialogue: 0,0:17:11.52,0:17:13.04,*Default,NTP,0000,0000,0000,,constantly need
Dialogue: 0,0:17:13.04,0:17:14.56,*Default,NTP,0000,0000,0000,,that's what a database is for right go
Dialogue: 0,0:17:14.56,0:17:15.84,*Default,NTP,0000,0000,0000,,ahead and store that information and
Dialogue: 0,0:17:15.84,0:17:17.52,*Default,NTP,0000,0000,0000,,then just query the database so there's
Dialogue: 0,0:17:17.52,0:17:18.80,*Default,NTP,0000,0000,0000,,there's that interesting sort of
Dialogue: 0,0:17:18.80,0:17:20.56,*Default,NTP,0000,0000,0000,,question always do i compute it or do i
Dialogue: 0,0:17:20.56,0:17:21.44,*Default,NTP,0000,0000,0000,,store it
Dialogue: 0,0:17:21.44,0:17:22.72,*Default,NTP,0000,0000,0000,,and there's a trade-off right storage
Dialogue: 0,0:17:22.72,0:17:24.32,*Default,NTP,0000,0000,0000,,costs a little bit computation costs a
Dialogue: 0,0:17:24.32,0:17:25.04,*Default,NTP,0000,0000,0000,,little bit
Dialogue: 0,0:17:25.04,0:17:26.40,*Default,NTP,0000,0000,0000,,and so you have to decide sort of what's
Dialogue: 0,0:17:26.40,0:17:28.88,*Default,NTP,0000,0000,0000,,important
Dialogue: 0,0:17:29.52,0:17:32.00,*Default,NTP,0000,0000,0000,,well like if you had a database that had
Dialogue: 0,0:17:32.00,0:17:33.76,*Default,NTP,0000,0000,0000,,really detailed zip codes you know these
Dialogue: 0,0:17:33.76,0:17:34.96,*Default,NTP,0000,0000,0000,,ones that have like
Dialogue: 0,0:17:34.96,0:17:36.72,*Default,NTP,0000,0000,0000,,multiple numbers and then what you
Dialogue: 0,0:17:36.72,0:17:38.56,*Default,NTP,0000,0000,0000,,really want to do is group by zip code
Dialogue: 0,0:17:38.56,0:17:39.92,*Default,NTP,0000,0000,0000,,well then you might write a group by
Dialogue: 0,0:17:39.92,0:17:42.56,*Default,NTP,0000,0000,0000,,expression that finds only the first
Dialogue: 0,0:17:42.56,0:17:43.44,*Default,NTP,0000,0000,0000,,five letters
Dialogue: 0,0:17:43.44,0:17:45.68,*Default,NTP,0000,0000,0000,,of the zip code and group by that and
Dialogue: 0,0:17:45.68,0:17:47.04,*Default,NTP,0000,0000,0000,,then you'd have grouped by the kind of
Dialogue: 0,0:17:47.04,0:17:48.56,*Default,NTP,0000,0000,0000,,regular zip code that you're used to so
Dialogue: 0,0:17:48.56,0:17:51.44,*Default,NTP,0000,0000,0000,,this kind of stuff does happen
Dialogue: 0,0:17:51.44,0:17:53.36,*Default,NTP,0000,0000,0000,,i think we did walk through this in the
Dialogue: 0,0:17:53.36,0:17:56.00,*Default,NTP,0000,0000,0000,,earlier yeah i think we did this
Dialogue: 0,0:17:56.00,0:17:58.48,*Default,NTP,0000,0000,0000,,yesterday or monday yeah john yeah but
Dialogue: 0,0:17:58.48,0:18:00.16,*Default,NTP,0000,0000,0000,,we'll do a fast version now just
Dialogue: 0,0:18:00.16,0:18:03.12,*Default,NTP,0000,0000,0000,,like to remind everybody you have to
Dialogue: 0,0:18:03.12,0:18:04.16,*Default,NTP,0000,0000,0000,,evaluate this
Dialogue: 0,0:18:04.16,0:18:07.36,*Default,NTP,0000,0000,0000,,so that's one you have to evaluate
Dialogue: 0,0:18:07.36,0:18:10.88,*Default,NTP,0000,0000,0000,,that but in order to evaluate that you
Dialogue: 0,0:18:10.88,0:18:12.80,*Default,NTP,0000,0000,0000,,have to evaluate this symbol and this
Dialogue: 0,0:18:12.80,0:18:13.68,*Default,NTP,0000,0000,0000,,number
Dialogue: 0,0:18:13.68,0:18:16.96,*Default,NTP,0000,0000,0000,,so now we're up to two three
Dialogue: 0,0:18:16.96,0:18:20.48,*Default,NTP,0000,0000,0000,,four now
Dialogue: 0,0:18:20.48,0:18:23.84,*Default,NTP,0000,0000,0000,,i have to call cube on three
Dialogue: 0,0:18:23.84,0:18:26.24,*Default,NTP,0000,0000,0000,,that's not an instance of eval that's an
Dialogue: 0,0:18:26.24,0:18:27.76,*Default,NTP,0000,0000,0000,,instance of apply
Dialogue: 0,0:18:27.76,0:18:31.36,*Default,NTP,0000,0000,0000,,but part of the apply process is to now
Dialogue: 0,0:18:31.36,0:18:33.84,*Default,NTP,0000,0000,0000,,evaluate this expression so we've done
Dialogue: 0,0:18:33.84,0:18:35.36,*Default,NTP,0000,0000,0000,,four so far
Dialogue: 0,0:18:35.36,0:18:36.64,*Default,NTP,0000,0000,0000,,this expression is something that gets
Dialogue: 0,0:18:36.64,0:18:38.56,*Default,NTP,0000,0000,0000,,evaluated so that's five
Dialogue: 0,0:18:38.56,0:18:40.48,*Default,NTP,0000,0000,0000,,we have to evaluate this that's six we
Dialogue: 0,0:18:40.48,0:18:42.00,*Default,NTP,0000,0000,0000,,have to evaluate this seven
Dialogue: 0,0:18:42.00,0:18:45.84,*Default,NTP,0000,0000,0000,,eight nine so i counted nine evals in
Dialogue: 0,0:18:45.84,0:18:47.84,*Default,NTP,0000,0000,0000,,this particular example
Dialogue: 0,0:18:47.84,0:18:49.76,*Default,NTP,0000,0000,0000,,in april i think if you go back i don't
Dialogue: 0,0:18:49.76,0:18:51.76,*Default,NTP,0000,0000,0000,,know if it was wednesday or monday
Dialogue: 0,0:18:51.76,0:18:53.76,*Default,NTP,0000,0000,0000,,uh we did a much more detailed version
Dialogue: 0,0:18:53.76,0:18:55.04,*Default,NTP,0000,0000,0000,,of that you'll see it on the video on
Dialogue: 0,0:18:55.04,0:18:57.12,*Default,NTP,0000,0000,0000,,the first website
Dialogue: 0,0:18:57.12,0:18:59.68,*Default,NTP,0000,0000,0000,,yeah we did something like cube the cube
Dialogue: 0,0:18:59.68,0:19:01.76,*Default,NTP,0000,0000,0000,,of plus one two or something like that
Dialogue: 0,0:19:01.76,0:19:04.96,*Default,NTP,0000,0000,0000,,yeah yeah yeah yeah
Dialogue: 0,0:19:04.96,0:19:07.28,*Default,NTP,0000,0000,0000,,before we answer this your your battery
Dialogue: 0,0:19:07.28,0:19:11.84,*Default,NTP,0000,0000,0000,,level is terrifyingly low
Dialogue: 0,0:19:12.00,0:19:15.20,*Default,NTP,0000,0000,0000,,uh it is but i don't
Dialogue: 0,0:19:15.20,0:19:18.40,*Default,NTP,0000,0000,0000,,like to live in the moment john that's
Dialogue: 0,0:19:18.40,0:19:21.12,*Default,NTP,0000,0000,0000,,ridiculous
Dialogue: 0,0:19:21.60,0:19:24.00,*Default,NTP,0000,0000,0000,,oh well unfortunately the answer to this
Dialogue: 0,0:19:24.00,0:19:25.36,*Default,NTP,0000,0000,0000,,question is pretty short which is that
Dialogue: 0,0:19:25.36,0:19:27.12,*Default,NTP,0000,0000,0000,,you don't have to think about recursive
Dialogue: 0,0:19:27.12,0:19:29.60,*Default,NTP,0000,0000,0000,,sequel either this semester or in most
Dialogue: 0,0:19:29.60,0:19:30.56,*Default,NTP,0000,0000,0000,,of your life
Dialogue: 0,0:19:30.56,0:19:33.12,*Default,NTP,0000,0000,0000,,so uh it was a topic that we taught for
Dialogue: 0,0:19:33.12,0:19:34.72,*Default,NTP,0000,0000,0000,,a couple of semesters sort of
Dialogue: 0,0:19:34.72,0:19:35.68,*Default,NTP,0000,0000,0000,,experimentally
Dialogue: 0,0:19:35.68,0:19:37.12,*Default,NTP,0000,0000,0000,,and therefore there's some old practice
Dialogue: 0,0:19:37.12,0:19:39.04,*Default,NTP,0000,0000,0000,,problems about it but
Dialogue: 0,0:19:39.04,0:19:43.76,*Default,NTP,0000,0000,0000,,um it's fairly unusual that you'll see
Dialogue: 0,0:19:43.76,0:19:47.68,*Default,NTP,0000,0000,0000,,a recursive uh select expression
Dialogue: 0,0:19:47.68,0:19:50.72,*Default,NTP,0000,0000,0000,,in sql out there in the world like you
Dialogue: 0,0:19:50.72,0:19:51.60,*Default,NTP,0000,0000,0000,,know
Dialogue: 0,0:19:51.60,0:19:53.36,*Default,NTP,0000,0000,0000,,i don't think i've ever seen that if you
Dialogue: 0,0:19:53.36,0:19:54.88,*Default,NTP,0000,0000,0000,,dig around on github long enough you'll
Dialogue: 0,0:19:54.88,0:19:55.84,*Default,NTP,0000,0000,0000,,find some but
Dialogue: 0,0:19:55.84,0:19:57.68,*Default,NTP,0000,0000,0000,,you'd have to look pretty hard so dig
Dialogue: 0,0:19:57.68,0:19:58.96,*Default,NTP,0000,0000,0000,,around in github
Dialogue: 0,0:19:58.96,0:20:00.42,*Default,NTP,0000,0000,0000,,long enough you'll find everything
Dialogue: 0,0:20:00.42,0:20:02.48,*Default,NTP,0000,0000,0000,,[Laughter]
Dialogue: 0,0:20:02.48,0:20:06.64,*Default,NTP,0000,0000,0000,,um so right
Dialogue: 0,0:20:06.64,0:20:10.56,*Default,NTP,0000,0000,0000,,the this course used to teach another
Dialogue: 0,0:20:10.56,0:20:12.40,*Default,NTP,0000,0000,0000,,um declarative programming language a
Dialogue: 0,0:20:12.40,0:20:13.92,*Default,NTP,0000,0000,0000,,variant of prologue
Dialogue: 0,0:20:13.92,0:20:16.08,*Default,NTP,0000,0000,0000,,which has a fair amount of recursion in
Dialogue: 0,0:20:16.08,0:20:17.92,*Default,NTP,0000,0000,0000,,it and we were kind of
Dialogue: 0,0:20:17.92,0:20:20.72,*Default,NTP,0000,0000,0000,,trying to capture that old flavor in sql
Dialogue: 0,0:20:20.72,0:20:21.04,*Default,NTP,0000,0000,0000,,and
Dialogue: 0,0:20:21.04,0:20:22.80,*Default,NTP,0000,0000,0000,,it's possible to do recursion but it's
Dialogue: 0,0:20:22.80,0:20:24.48,*Default,NTP,0000,0000,0000,,just so restricted
Dialogue: 0,0:20:24.48,0:20:28.00,*Default,NTP,0000,0000,0000,,and the syntax is so bizarre that uh
Dialogue: 0,0:20:28.00,0:20:30.64,*Default,NTP,0000,0000,0000,,it wasn't very enlightening i think to
Dialogue: 0,0:20:30.64,0:20:31.84,*Default,NTP,0000,0000,0000,,to spend a whole
Dialogue: 0,0:20:31.84,0:20:35.20,*Default,NTP,0000,0000,0000,,week studying that so uh
Dialogue: 0,0:20:35.20,0:20:37.84,*Default,NTP,0000,0000,0000,,yeah i'll just let recursive sequel go
Dialogue: 0,0:20:37.84,0:20:39.76,*Default,NTP,0000,0000,0000,,and ignore all those problems
Dialogue: 0,0:20:39.76,0:20:41.52,*Default,NTP,0000,0000,0000,,and if you really want to read about it
Dialogue: 0,0:20:41.52,0:20:43.52,*Default,NTP,0000,0000,0000,,um you can find old versions of the
Dialogue: 0,0:20:43.52,0:20:44.16,*Default,NTP,0000,0000,0000,,class
Dialogue: 0,0:20:44.16,0:20:45.76,*Default,NTP,0000,0000,0000,,where we used to teach this i'll show
Dialogue: 0,0:20:45.76,0:20:47.28,*Default,NTP,0000,0000,0000,,you how just in case someone wants to
Dialogue: 0,0:20:47.28,0:20:48.72,*Default,NTP,0000,0000,0000,,follow up
Dialogue: 0,0:20:48.72,0:20:51.84,*Default,NTP,0000,0000,0000,,um if you go to instix berkeley.idu you
Dialogue: 0,0:20:51.84,0:20:53.60,*Default,NTP,0000,0000,0000,,can find all the old versions of the
Dialogue: 0,0:20:53.60,0:20:56.32,*Default,NTP,0000,0000,0000,,course so probably around 2016.
Dialogue: 0,0:20:56.32,0:20:58.80,*Default,NTP,0000,0000,0000,,we had some recursive sequel in there
Dialogue: 0,0:20:58.80,0:21:00.40,*Default,NTP,0000,0000,0000,,let's see
Dialogue: 0,0:21:00.40,0:21:03.12,*Default,NTP,0000,0000,0000,,uh yeah there it is recursive select so
Dialogue: 0,0:21:03.12,0:21:04.48,*Default,NTP,0000,0000,0000,,if you want to watch a whole lecture on
Dialogue: 0,0:21:04.48,0:21:05.60,*Default,NTP,0000,0000,0000,,it you could but i
Dialogue: 0,0:21:05.60,0:21:07.04,*Default,NTP,0000,0000,0000,,i don't think it's the best use of your
Dialogue: 0,0:21:07.04,0:21:10.80,*Default,NTP,0000,0000,0000,,time yeah i agree
Dialogue: 0,0:21:10.88,0:21:12.48,*Default,NTP,0000,0000,0000,,the next question was can you have a
Dialogue: 0,0:21:12.48,0:21:15.12,*Default,NTP,0000,0000,0000,,select statement inside of a where
Dialogue: 0,0:21:15.12,0:21:16.96,*Default,NTP,0000,0000,0000,,clause
Dialogue: 0,0:21:16.96,0:21:22.16,*Default,NTP,0000,0000,0000,,let's go back to our very simple
Dialogue: 0,0:21:23.12,0:21:25.76,*Default,NTP,0000,0000,0000,,one two three five table and the
Dialogue: 0,0:21:25.76,0:21:27.36,*Default,NTP,0000,0000,0000,,question is can you have a select
Dialogue: 0,0:21:27.36,0:21:29.28,*Default,NTP,0000,0000,0000,,statement within the where clause
Dialogue: 0,0:21:29.28,0:21:30.96,*Default,NTP,0000,0000,0000,,the answer is yes but we don't cover it
Dialogue: 0,0:21:30.96,0:21:32.40,*Default,NTP,0000,0000,0000,,in this course so you don't have to
Dialogue: 0,0:21:32.40,0:21:33.76,*Default,NTP,0000,0000,0000,,think about it again if you want to just
Dialogue: 0,0:21:33.76,0:21:35.36,*Default,NTP,0000,0000,0000,,kind of stick with the course material
Dialogue: 0,0:21:35.36,0:21:37.04,*Default,NTP,0000,0000,0000,,if you're just curious it's a fine thing
Dialogue: 0,0:21:37.04,0:21:39.12,*Default,NTP,0000,0000,0000,,to wonder about
Dialogue: 0,0:21:39.12,0:21:41.28,*Default,NTP,0000,0000,0000,,sql allows for some sort of bizarre
Dialogue: 0,0:21:41.28,0:21:42.16,*Default,NTP,0000,0000,0000,,things to happen
Dialogue: 0,0:21:42.16,0:21:45.20,*Default,NTP,0000,0000,0000,,so when you evaluate a select
Dialogue: 0,0:21:45.20,0:21:46.88,*Default,NTP,0000,0000,0000,,you really should be thinking of that as
Dialogue: 0,0:21:46.88,0:21:49.44,*Default,NTP,0000,0000,0000,,producing a table
Dialogue: 0,0:21:49.44,0:21:52.64,*Default,NTP,0000,0000,0000,,but if that table happens to have only
Dialogue: 0,0:21:52.64,0:21:54.24,*Default,NTP,0000,0000,0000,,one
Dialogue: 0,0:21:54.24,0:21:57.84,*Default,NTP,0000,0000,0000,,row and one column then select is
Dialogue: 0,0:21:57.84,0:21:59.44,*Default,NTP,0000,0000,0000,,basically happy to treat it like an
Dialogue: 0,0:21:59.44,0:22:01.28,*Default,NTP,0000,0000,0000,,individual number
Dialogue: 0,0:22:01.28,0:22:04.72,*Default,NTP,0000,0000,0000,,so you could write things like uh
Dialogue: 0,0:22:04.72,0:22:08.24,*Default,NTP,0000,0000,0000,,select star from numbers where
Dialogue: 0,0:22:08.24,0:22:11.28,*Default,NTP,0000,0000,0000,,uh the result of selecting
Dialogue: 0,0:22:11.28,0:22:14.96,*Default,NTP,0000,0000,0000,,the max n from
Dialogue: 0,0:22:14.96,0:22:18.00,*Default,NTP,0000,0000,0000,,numbers okay so what would that give you
Dialogue: 0,0:22:18.00,0:22:18.80,*Default,NTP,0000,0000,0000,,that would give you like
Dialogue: 0,0:22:18.80,0:22:22.00,*Default,NTP,0000,0000,0000,,a table with just one
Dialogue: 0,0:22:22.00,0:22:24.24,*Default,NTP,0000,0000,0000,,row and just one column that has the
Dialogue: 0,0:22:24.24,0:22:26.64,*Default,NTP,0000,0000,0000,,number of five in it you know sql is
Dialogue: 0,0:22:26.64,0:22:28.48,*Default,NTP,0000,0000,0000,,basically happy to let you treat this
Dialogue: 0,0:22:28.48,0:22:31.84,*Default,NTP,0000,0000,0000,,like the number five um so then you
Dialogue: 0,0:22:31.84,0:22:33.20,*Default,NTP,0000,0000,0000,,could say something like this
Dialogue: 0,0:22:33.20,0:22:36.56,*Default,NTP,0000,0000,0000,,is uh greater than
Dialogue: 0,0:22:36.56,0:22:39.92,*Default,NTP,0000,0000,0000,,n and it will tell you that's one two
Dialogue: 0,0:22:39.92,0:22:40.32,*Default,NTP,0000,0000,0000,,three
Dialogue: 0,0:22:40.32,0:22:41.60,*Default,NTP,0000,0000,0000,,and basically just treat this whole
Dialogue: 0,0:22:41.60,0:22:44.16,*Default,NTP,0000,0000,0000,,thing as the number five
Dialogue: 0,0:22:44.16,0:22:45.52,*Default,NTP,0000,0000,0000,,again you don't need to know that for
Dialogue: 0,0:22:45.52,0:22:47.84,*Default,NTP,0000,0000,0000,,this course but sometimes it's handy so
Dialogue: 0,0:22:47.84,0:22:50.32,*Default,NTP,0000,0000,0000,,if for example you wanted like
Dialogue: 0,0:22:50.32,0:22:53.44,*Default,NTP,0000,0000,0000,,uh all the rows
Dialogue: 0,0:22:53.44,0:22:55.76,*Default,NTP,0000,0000,0000,,where the name like you wanted the name
Dialogue: 0,0:22:55.76,0:22:57.36,*Default,NTP,0000,0000,0000,,of everybody whose height was the
Dialogue: 0,0:22:57.36,0:22:58.88,*Default,NTP,0000,0000,0000,,maximum height you might write something
Dialogue: 0,0:22:58.88,0:23:01.28,*Default,NTP,0000,0000,0000,,like this
Dialogue: 0,0:23:01.76,0:23:04.88,*Default,NTP,0000,0000,0000,,yeah good question so how would you uh
Dialogue: 0,0:23:04.88,0:23:06.40,*Default,NTP,0000,0000,0000,,if you had a table of numbers how would
Dialogue: 0,0:23:06.40,0:23:06.72,*Default,NTP,0000,0000,0000,,you
Dialogue: 0,0:23:06.72,0:23:10.16,*Default,NTP,0000,0000,0000,,create a table of prime numbers um
Dialogue: 0,0:23:10.16,0:23:12.88,*Default,NTP,0000,0000,0000,,and one intuition is that you need to
Dialogue: 0,0:23:12.88,0:23:13.92,*Default,NTP,0000,0000,0000,,know the primes
Dialogue: 0,0:23:13.92,0:23:16.80,*Default,NTP,0000,0000,0000,,in order to know the primes basically
Dialogue: 0,0:23:16.80,0:23:18.24,*Default,NTP,0000,0000,0000,,you need to know the prime so far in
Dialogue: 0,0:23:18.24,0:23:20.16,*Default,NTP,0000,0000,0000,,order to check whether something's
Dialogue: 0,0:23:20.16,0:23:22.32,*Default,NTP,0000,0000,0000,,something larger is a prime and that's
Dialogue: 0,0:23:22.32,0:23:23.92,*Default,NTP,0000,0000,0000,,one approach to finding out whether
Dialogue: 0,0:23:23.92,0:23:25.28,*Default,NTP,0000,0000,0000,,something's a prime number but it's not
Dialogue: 0,0:23:25.28,0:23:26.48,*Default,NTP,0000,0000,0000,,the only one
Dialogue: 0,0:23:26.48,0:23:28.96,*Default,NTP,0000,0000,0000,,a more brute force approach is in order
Dialogue: 0,0:23:28.96,0:23:31.12,*Default,NTP,0000,0000,0000,,to figure out whether 12 is prime
Dialogue: 0,0:23:31.12,0:23:34.08,*Default,NTP,0000,0000,0000,,you just divide it by every number 1
Dialogue: 0,0:23:34.08,0:23:34.88,*Default,NTP,0000,0000,0000,,through 11
Dialogue: 0,0:23:34.88,0:23:36.88,*Default,NTP,0000,0000,0000,,before it not just the primes but
Dialogue: 0,0:23:36.88,0:23:38.64,*Default,NTP,0000,0000,0000,,everything the primes
Dialogue: 0,0:23:38.64,0:23:41.04,*Default,NTP,0000,0000,0000,,below it or in there somewhere and you
Dialogue: 0,0:23:41.04,0:23:41.76,*Default,NTP,0000,0000,0000,,make sure that
Dialogue: 0,0:23:41.76,0:23:45.20,*Default,NTP,0000,0000,0000,,uh you know if 12 were prime then
Dialogue: 0,0:23:45.20,0:23:47.20,*Default,NTP,0000,0000,0000,,only one would divide it evenly so
Dialogue: 0,0:23:47.20,0:23:48.56,*Default,NTP,0000,0000,0000,,basically none of these other numbers
Dialogue: 0,0:23:48.56,0:23:50.16,*Default,NTP,0000,0000,0000,,would divide it
Dialogue: 0,0:23:50.16,0:23:54.08,*Default,NTP,0000,0000,0000,,so i think probably the trick uh to
Dialogue: 0,0:23:54.08,0:23:57.28,*Default,NTP,0000,0000,0000,,finding a table of primes from a table
Dialogue: 0,0:23:57.28,0:23:58.72,*Default,NTP,0000,0000,0000,,of numbers
Dialogue: 0,0:23:58.72,0:24:00.40,*Default,NTP,0000,0000,0000,,is to first join the numbers with the
Dialogue: 0,0:24:00.40,0:24:03.92,*Default,NTP,0000,0000,0000,,numbers so now you have pairs of numbers
Dialogue: 0,0:24:03.92,0:24:06.40,*Default,NTP,0000,0000,0000,,then you can group by the second number
Dialogue: 0,0:24:06.40,0:24:08.32,*Default,NTP,0000,0000,0000,,to ask yourself is this thing prime or
Dialogue: 0,0:24:08.32,0:24:10.40,*Default,NTP,0000,0000,0000,,not you figure out
Dialogue: 0,0:24:10.40,0:24:13.92,*Default,NTP,0000,0000,0000,,um how many of the numbers it's been
Dialogue: 0,0:24:13.92,0:24:16.40,*Default,NTP,0000,0000,0000,,paired with divide evenly into it