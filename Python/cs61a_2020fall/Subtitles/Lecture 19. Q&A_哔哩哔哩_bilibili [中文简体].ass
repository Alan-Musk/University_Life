[Script Info]
Title: Lecture 19. Q&A_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1s3411G7yM/?p=47&spm_id_from=pageDriver&vd_source=6ffca0aa1006734a4fba52f389036611
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.64,0:00:03.60,*Default,NTP,0000,0000,0000,,61a 讲座 19 问答
Dialogue: 0,0:00:03.60,0:00:05.12,*Default,NTP,0000,0000,0000,,嘿约翰让我问一个问题
Dialogue: 0,0:00:05.12,0:00:06.96,*Default,NTP,0000,0000,0000,,等待有人插话
Dialogue: 0,0:00:06.96,0:00:09.36,*Default,NTP,0000,0000,0000,,当面向对象第一次开始这个
Dialogue: 0,0:00:09.36,0:00:11.60,*Default,NTP,0000,0000,0000,,继承类的概念非常重要
Dialogue: 0,0:00:11.60,0:00:13.04,*Default,NTP,0000,0000,0000,,流行和
Dialogue: 0,0:00:13.04,0:00:14.48,*Default,NTP,0000,0000,0000,,我认为这是一个很大的动力
Dialogue: 0,0:00:14.48,0:00:16.32,*Default,NTP,0000,0000,0000,,因子，你在以下网站上做了精彩的讲座
Dialogue: 0,0:00:16.32,0:00:16.88,*Default,NTP,0000,0000,0000,,结束
Dialogue: 0,0:00:16.88,0:00:18.16,*Default,NTP,0000,0000,0000,,你在哪里你谈论过如何
Dialogue: 0,0:00:18.16,0:00:20.00,*Default,NTP,0000,0000,0000,,事情变得复杂
Dialogue: 0,0:00:20.00,0:00:21.68,*Default,NTP,0000,0000,0000,,就像在想什么
Dialogue: 0,0:00:21.68,0:00:23.36,*Default,NTP,0000,0000,0000,,如今，面向对象
Dialogue: 0,0:00:23.36,0:00:24.48,*Default,NTP,0000,0000,0000,,我总是发现一旦你得到
Dialogue: 0,0:00:24.48,0:00:26.64,*Default,NTP,0000,0000,0000,,超出一类或两类继承
Dialogue: 0,0:00:26.64,0:00:28.32,*Default,NTP,0000,0000,0000,,它只是变得不守规矩
Dialogue: 0,0:00:28.32,0:00:31.60,*Default,NTP,0000,0000,0000,,就像这些天东西在哪里呃
Dialogue: 0,0:00:31.60,0:00:35.12,*Default,NTP,0000,0000,0000,,好问题，我认为嗯有
Dialogue: 0,0:00:35.12,0:00:36.40,*Default,NTP,0000,0000,0000,,绝对是这样认为的人
Dialogue: 0,0:00:36.40,0:00:38.48,*Default,NTP,0000,0000,0000,,应完全避免继承
Dialogue: 0,0:00:38.48,0:00:41.20,*Default,NTP,0000,0000,0000,,是的，嗯，但那是一个
Dialogue: 0,0:00:41.20,0:00:43.36,*Default,NTP,0000,0000,0000,,我想说的是极端主义观点
Dialogue: 0,0:00:43.36,0:00:47.20,*Default,NTP,0000,0000,0000,,一个更普遍的信念是
Dialogue: 0,0:00:47.20,0:00:50.40,*Default,NTP,0000,0000,0000,,继承方法没问题
Dialogue: 0,0:00:50.40,0:00:51.52,*Default,NTP,0000,0000,0000,,继承
Dialogue: 0,0:00:51.52,0:00:54.96,*Default,NTP,0000,0000,0000,,属性很复杂，因为
Dialogue: 0,0:00:54.96,0:00:57.12,*Default,NTP,0000,0000,0000,,嗯，是的，如果你不知道在哪里
Dialogue: 0,0:00:57.12,0:00:59.12,*Default,NTP,0000,0000,0000,,属性最初是在那时声明的
Dialogue: 0,0:00:59.12,0:01:00.40,*Default,NTP,0000,0000,0000,,很难追踪
Dialogue: 0,0:01:00.40,0:01:01.52,*Default,NTP,0000,0000,0000,,这是怎么回事
Dialogue: 0,0:01:01.52,0:01:04.96,*Default,NTP,0000,0000,0000,,所以我看到程序在哪里
Dialogue: 0,0:01:04.96,0:01:06.88,*Default,NTP,0000,0000,0000,,是的，就像定义的功能
Dialogue: 0,0:01:06.88,0:01:08.32,*Default,NTP,0000,0000,0000,,一堆方法
Dialogue: 0,0:01:08.32,0:01:10.80,*Default,NTP,0000,0000,0000,,有时甚至是多重遗传
Dialogue: 0,0:01:10.80,0:01:12.40,*Default,NTP,0000,0000,0000,,那里允许继承
Dialogue: 0,0:01:12.40,0:01:14.24,*Default,NTP,0000,0000,0000,,但你只是想小心
Dialogue: 0,0:01:14.24,0:01:16.08,*Default,NTP,0000,0000,0000,,就像在其中定义属性一样
Dialogue: 0,0:01:16.08,0:01:16.80,*Default,NTP,0000,0000,0000,,地方
Dialogue: 0,0:01:16.80,0:01:18.88,*Default,NTP,0000,0000,0000,,然后有一个像这样的子类
Dialogue: 0,0:01:18.88,0:01:20.80,*Default,NTP,0000,0000,0000,,试图忽略其中一些属性
Dialogue: 0,0:01:20.80,0:01:22.08,*Default,NTP,0000,0000,0000,,因为它足够不同以至于你
Dialogue: 0,0:01:22.08,0:01:23.60,*Default,NTP,0000,0000,0000,,不想要全部
Dialogue: 0,0:01:23.60,0:01:25.44,*Default,NTP,0000,0000,0000,,很快就变得混乱了
Dialogue: 0,0:01:25.44,0:01:27.28,*Default,NTP,0000,0000,0000,,通常最好只使用组合
Dialogue: 0,0:01:27.28,0:01:27.84,*Default,NTP,0000,0000,0000,,反而
Dialogue: 0,0:01:27.84,0:01:29.36,*Default,NTP,0000,0000,0000,,是的，这听起来不错，我必须这样做
Dialogue: 0,0:01:29.36,0:01:31.52,*Default,NTP,0000,0000,0000,,说我认为我更有可能使用
Dialogue: 0,0:01:31.52,0:01:33.20,*Default,NTP,0000,0000,0000,,组合而不是继承
Dialogue: 0,0:01:33.20,0:01:35.04,*Default,NTP,0000,0000,0000,,真的很常见
Dialogue: 0,0:01:35.04,0:01:38.00,*Default,NTP,0000,0000,0000,,当然，问题是关于这个的
Dialogue: 0,0:01:38.00,0:01:39.52,*Default,NTP,0000,0000,0000,,复杂的例子
Dialogue: 0,0:01:39.52,0:01:43.60,*Default,NTP,0000,0000,0000,,发生了什么事，特别是
Dialogue: 0,0:01:43.60,0:01:46.40,*Default,NTP,0000,0000,0000,,最后有一个关于b的例子
Dialogue: 0,0:01:46.40,0:01:46.80,*Default,NTP,0000,0000,0000,,点
Dialogue: 0,0:01:46.80,0:01:50.24,*Default,NTP,0000,0000,0000,,z 点 z 点 z 为什么这是对的但是
Dialogue: 0,0:01:50.24,0:01:52.80,*Default,NTP,0000,0000,0000,,四个 z 是错误的，两个 z 是错误的
Dialogue: 0,0:01:52.80,0:01:55.84,*Default,NTP,0000,0000,0000,,其中一个 1z 是错误的
Dialogue: 0,0:01:56.32,0:01:58.88,*Default,NTP,0000,0000,0000,,一旦你有了正确的图片
Dialogue: 0,0:01:58.88,0:02:01.36,*Default,NTP,0000,0000,0000,,解决这些问题并不是那么糟糕
Dialogue: 0,0:02:01.36,0:02:03.84,*Default,NTP,0000,0000,0000,,所以假设我们已经走了
Dialogue: 0,0:02:03.84,0:02:05.36,*Default,NTP,0000,0000,0000,,通过工作画出这样的图画
Dialogue: 0,0:02:05.36,0:02:07.36,*Default,NTP,0000,0000,0000,,这是关于正在发生的事情
Dialogue: 0,0:02:07.36,0:02:08.80,*Default,NTP,0000,0000,0000,,那么我们来谈谈如何点
Dialogue: 0,0:02:08.80,0:02:11.36,*Default,NTP,0000,0000,0000,,表达式被求值
Dialogue: 0,0:02:11.36,0:02:14.56,*Default,NTP,0000,0000,0000,,这个点表达式 bzzz
Dialogue: 0,0:02:14.56,0:02:16.56,*Default,NTP,0000,0000,0000,,正在取某物的点 z，但你
Dialogue: 0,0:02:16.56,0:02:17.68,*Default,NTP,0000,0000,0000,,不知道那是什么
Dialogue: 0,0:02:17.68,0:02:20.72,*Default,NTP,0000,0000,0000,,直到你计算它并计算它
Dialogue: 0,0:02:20.72,0:02:23.68,*Default,NTP,0000,0000,0000,,你必须评估 b 点 z 点 z
Dialogue: 0,0:02:23.68,0:02:24.96,*Default,NTP,0000,0000,0000,,但你不能这样做，除非你知道
Dialogue: 0,0:02:24.96,0:02:26.48,*Default,NTP,0000,0000,0000,,b 点 z 是什么，你不能这样做，所以你
Dialogue: 0,0:02:26.48,0:02:27.04,*Default,NTP,0000,0000,0000,,知道什么b
Dialogue: 0,0:02:27.04,0:02:29.36,*Default,NTP,0000,0000,0000,,b 只是一个名字所以这就是东西
Dialogue: 0,0:02:29.36,0:02:30.72,*Default,NTP,0000,0000,0000,,自从我们能够处理
Dialogue: 0,0:02:30.72,0:02:31.76,*Default,NTP,0000,0000,0000,,上课第一周
Dialogue: 0,0:02:31.76,0:02:33.68,*Default,NTP,0000,0000,0000,,我们在全球框架中看到
Dialogue: 0,0:02:33.68,0:02:35.44,*Default,NTP,0000,0000,0000,,b 是这个东西
Dialogue: 0,0:02:35.44,0:02:38.64,*Default,NTP,0000,0000,0000,,这个物体是它的草图
Dialogue: 0,0:02:38.64,0:02:39.60,*Default,NTP,0000,0000,0000,,看起来有一个
Dialogue: 0,0:02:39.60,0:02:42.08,*Default,NTP,0000,0000,0000,,具有特定类的实例所以这
Dialogue: 0,0:02:42.08,0:02:42.80,*Default,NTP,0000,0000,0000,,有 b
Dialogue: 0,0:02:42.80,0:02:45.76,*Default,NTP,0000,0000,0000,,类和一堆实例属性
Dialogue: 0,0:02:45.76,0:02:47.12,*Default,NTP,0000,0000,0000,,在这种情况下，有一个叫做 z
Dialogue: 0,0:02:47.12,0:02:49.44,*Default,NTP,0000,0000,0000,,一个人打电话来，我们要访问
Dialogue: 0,0:02:49.44,0:02:50.72,*Default,NTP,0000,0000,0000,,一个叫
Dialogue: 0,0:02:50.72,0:02:54.56,*Default,NTP,0000,0000,0000,,z 这将我们带到
Dialogue: 0,0:02:54.56,0:02:57.84,*Default,NTP,0000,0000,0000,,这个物体恰好是另一个物体
Dialogue: 0,0:02:57.84,0:03:01.12,*Default,NTP,0000,0000,0000,,b 实例所以这件事是一种方法
Dialogue: 0,0:03:01.12,0:03:02.24,*Default,NTP,0000,0000,0000,,参考它是
Dialogue: 0,0:03:02.24,0:03:06.08,*Default,NTP,0000,0000,0000,,bz我怎么到那里我去了b
Dialogue: 0,0:03:06.08,0:03:08.40,*Default,NTP,0000,0000,0000,,然后我去了 it's z 我必须
Dialogue: 0,0:03:08.40,0:03:09.68,*Default,NTP,0000,0000,0000,,这个对象
Dialogue: 0,0:03:09.68,0:03:12.16,*Default,NTP,0000,0000,0000,,现在它也恰好有 az
Dialogue: 0,0:03:12.16,0:03:12.96,*Default,NTP,0000,0000,0000,,属性
Dialogue: 0,0:03:12.96,0:03:14.56,*Default,NTP,0000,0000,0000,,这不像是与此相关的
Dialogue: 0,0:03:14.56,0:03:16.00,*Default,NTP,0000,0000,0000,,无论如何，他们碰巧拥有
Dialogue: 0,0:03:16.00,0:03:16.88,*Default,NTP,0000,0000,0000,,同名
Dialogue: 0,0:03:16.88,0:03:22.40,*Default,NTP,0000,0000,0000,,好吧，当你看看 bs.zz 是什么时
Dialogue: 0,0:03:22.40,0:03:23.92,*Default,NTP,0000,0000,0000,,我们必须遵循这个并弄清楚
Dialogue: 0,0:03:23.92,0:03:26.48,*Default,NTP,0000,0000,0000,,我们得到什么然后我们得到这个对象
Dialogue: 0,0:03:26.48,0:03:29.52,*Default,NTP,0000,0000,0000,,答案也是如此bzz
Dialogue: 0,0:03:29.52,0:03:32.72,*Default,NTP,0000,0000,0000,,整数 no bz 点 z
Dialogue: 0,0:03:32.72,0:03:36.00,*Default,NTP,0000,0000,0000,,是 c 类的一个实例，所以它是
Dialogue: 0,0:03:36.00,0:03:39.44,*Default,NTP,0000,0000,0000,,某个不是整数的对象
Dialogue: 0,0:03:39.44,0:03:41.60,*Default,NTP,0000,0000,0000,,但它恰好有一个属性
Dialogue: 0,0:03:41.60,0:03:42.72,*Default,NTP,0000,0000,0000,,谁的名字是
Dialogue: 0,0:03:42.72,0:03:45.92,*Default,NTP,0000,0000,0000,,z 且其值为 1，因此如果您
Dialogue: 0,0:03:45.92,0:03:46.88,*Default,NTP,0000,0000,0000,,评价
Dialogue: 0,0:03:46.88,0:03:48.77,*Default,NTP,0000,0000,0000,,b 的 z
Dialogue: 0,0:03:48.77,0:03:49.92,*Default,NTP,0000,0000,0000,,[音乐]
Dialogue: 0,0:03:49.92,0:03:52.96,*Default,NTP,0000,0000,0000,,zz 你得到一个号码
Dialogue: 0,0:03:52.96,0:03:55.44,*Default,NTP,0000,0000,0000,,排名第一，这就是为什么哪一个
Dialogue: 0,0:03:55.44,0:03:57.20,*Default,NTP,0000,0000,0000,,这些评估结果恰好是一个整数
Dialogue: 0,0:03:57.20,0:03:57.60,*Default,NTP,0000,0000,0000,,是b
Dialogue: 0,0:03:57.60,0:03:59.44,*Default,NTP,0000,0000,0000,,z 零 z 而不是其中之一
Dialogue: 0,0:03:59.44,0:04:01.60,*Default,NTP,0000,0000,0000,,如果你要拿其他的
Dialogue: 0,0:04:01.60,0:04:04.48,*Default,NTP,0000,0000,0000,,那个整数并寻找它的点 z 你
Dialogue: 0,0:04:04.48,0:04:05.36,*Default,NTP,0000,0000,0000,,会得到一个错误
Dialogue: 0,0:04:05.36,0:04:08.24,*Default,NTP,0000,0000,0000,,整数没有 z 属性，如果
Dialogue: 0,0:04:08.24,0:04:09.44,*Default,NTP,0000,0000,0000,,你要执行以下任一操作
Dialogue: 0,0:04:09.44,0:04:11.12,*Default,NTP,0000,0000,0000,,你会得到的回报是其中之一
Dialogue: 0,0:04:11.12,0:04:12.48,*Default,NTP,0000,0000,0000,,沿途有物体所以b
Dialogue: 0,0:04:12.48,0:04:15.20,*Default,NTP,0000,0000,0000,,是一个对象 b 点 z 是一个对象 b 点
Dialogue: 0,0:04:15.20,0:04:16.48,*Default,NTP,0000,0000,0000,,zz 是一个对象
Dialogue: 0,0:04:16.48,0:04:18.48,*Default,NTP,0000,0000,0000,,只有 b 做简单的 z 才能给你 a
Dialogue: 0,0:04:18.48,0:04:20.24,*Default,NTP,0000,0000,0000,,数量还可以，所以有时会有这些
Dialogue: 0,0:04:20.24,0:04:21.20,*Default,NTP,0000,0000,0000,,长链
Dialogue: 0,0:04:21.20,0:04:22.88,*Default,NTP,0000,0000,0000,,呃我们只是跟着他们
Dialogue: 0,0:04:22.88,0:04:24.40,*Default,NTP,0000,0000,0000,,基本上从左到右看这个
Dialogue: 0,0:04:24.40,0:04:25.04,*Default,NTP,0000,0000,0000,,正确的
Dialogue: 0,0:04:25.04,0:04:26.56,*Default,NTP,0000,0000,0000,,真正发生的事情是我们
Dialogue: 0,0:04:26.56,0:04:28.48,*Default,NTP,0000,0000,0000,,弄清楚最终得到什么对象
Dialogue: 0,0:04:28.48,0:04:29.20,*Default,NTP,0000,0000,0000,,点z
Dialogue: 0,0:04:29.20,0:04:31.20,*Default,NTP,0000,0000,0000,,但要做到这一点，我们必须弄清楚
Dialogue: 0,0:04:31.20,0:04:33.28,*Default,NTP,0000,0000,0000,,什么物体会得到这个点z
Dialogue: 0,0:04:33.28,0:04:35.12,*Default,NTP,0000,0000,0000,,获得这个点 z 的对象等等
Dialogue: 0,0:04:35.12,0:04:36.96,*Default,NTP,0000,0000,0000,,你最终会从左到右工作
Dialogue: 0,0:04:36.96,0:04:39.20,*Default,NTP,0000,0000,0000,,为了找到答案
Dialogue: 0,0:04:39.20,0:04:40.96,*Default,NTP,0000,0000,0000,,顺便说一句，永远不要编写这样的代码
Dialogue: 0,0:04:40.96,0:04:43.68,*Default,NTP,0000,0000,0000,,看起来像这样
Dialogue: 0,0:04:43.68,0:04:45.68,*Default,NTP,0000,0000,0000,,这是一个很好的教学例子，但是
Dialogue: 0,0:04:45.68,0:04:47.28,*Default,NTP,0000,0000,0000,,这不是你的代码应该看起来的样子
Dialogue: 0,0:04:47.28,0:04:48.48,*Default,NTP,0000,0000,0000,,喜欢
Dialogue: 0,0:04:48.48,0:04:51.92,*Default,NTP,0000,0000,0000,,这确实是真的好吗
Dialogue: 0,0:04:51.92,0:04:54.32,*Default,NTP,0000,0000,0000,,现在让我们稍微备份一下
Dialogue: 0,0:04:54.32,0:04:56.00,*Default,NTP,0000,0000,0000,,弄清楚我们是如何到达这里的
Dialogue: 0,0:04:56.00,0:04:57.44,*Default,NTP,0000,0000,0000,,首先我们从这个开始
Dialogue: 0,0:04:57.44,0:04:59.52,*Default,NTP,0000,0000,0000,,很长的例子，也许我们会努力
Dialogue: 0,0:04:59.52,0:05:00.24,*Default,NTP,0000,0000,0000,,一直到
Dialogue: 0,0:05:00.24,0:05:02.80,*Default,NTP,0000,0000,0000,,z 等于 b 点 z 说有 a
Dialogue: 0,0:05:02.80,0:05:03.60,*Default,NTP,0000,0000,0000,,A类
Dialogue: 0,0:05:03.60,0:05:06.00,*Default,NTP,0000,0000,0000,,有一个b类 有一个c类
Dialogue: 0,0:05:06.00,0:05:07.20,*Default,NTP,0000,0000,0000,,有一个例子
Dialogue: 0,0:05:07.20,0:05:10.16,*Default,NTP,0000,0000,0000,,a 有一个 b 的实例，然后是这个
Dialogue: 0,0:05:10.16,0:05:11.52,*Default,NTP,0000,0000,0000,,根本不创建新实例
Dialogue: 0,0:05:11.52,0:05:13.28,*Default,NTP,0000,0000,0000,,这只是一个属性分配所以
Dialogue: 0,0:05:13.28,0:05:14.32,*Default,NTP,0000,0000,0000,,这正在改变 b
Dialogue: 0,0:05:14.32,0:05:16.64,*Default,NTP,0000,0000,0000,,对象有一个名为 n 的属性
Dialogue: 0,0:05:16.64,0:05:19.04,*Default,NTP,0000,0000,0000,,即值为 5。
Dialogue: 0,0:05:19.04,0:05:23.28,*Default,NTP,0000,0000,0000,,这个表达式确实创建了一个新对象
Dialogue: 0,0:05:23.28,0:05:24.88,*Default,NTP,0000,0000,0000,,但我不确定这是否有趣
Dialogue: 0,0:05:24.88,0:05:26.32,*Default,NTP,0000,0000,0000,,一个如此
Dialogue: 0,0:05:26.32,0:05:28.56,*Default,NTP,0000,0000,0000,,当你执行一个类语句时
Dialogue: 0,0:05:28.56,0:05:30.32,*Default,NTP,0000,0000,0000,,上新课
Dialogue: 0,0:05:30.32,0:05:31.84,*Default,NTP,0000,0000,0000,,当你执行这个类语句时
Dialogue: 0,0:05:31.84,0:05:33.68,*Default,NTP,0000,0000,0000,,你得到一个新班级
Dialogue: 0,0:05:33.68,0:05:35.04,*Default,NTP,0000,0000,0000,,当你执行这个类语句时
Dialogue: 0,0:05:35.04,0:05:36.88,*Default,NTP,0000,0000,0000,,你得到了一个新的课程，所以这已经是全部了
Dialogue: 0,0:05:36.88,0:05:38.00,*Default,NTP,0000,0000,0000,,发生在我们实际之前
Dialogue: 0,0:05:38.00,0:05:40.08,*Default,NTP,0000,0000,0000,,当你创建任何事物的实例时
Dialogue: 0,0:05:40.08,0:05:41.28,*Default,NTP,0000,0000,0000,,举个例子
Dialogue: 0,0:05:41.28,0:05:43.44,*Default,NTP,0000,0000,0000,,现在我们创建了一些对象
Dialogue: 0,0:05:43.44,0:05:44.48,*Default,NTP,0000,0000,0000,,给它一个名字
Dialogue: 0,0:05:44.48,0:05:46.96,*Default,NTP,0000,0000,0000,,使用呃赋值语句所以这个
Dialogue: 0,0:05:46.96,0:05:48.56,*Default,NTP,0000,0000,0000,,被称为
Dialogue: 0,0:05:48.56,0:05:50.08,*Default,NTP,0000,0000,0000,,并记住当你创建这个时
Dialogue: 0,0:05:50.08,0:05:52.40,*Default,NTP,0000,0000,0000,,你必须执行它的事情
Dialogue: 0,0:05:52.40,0:05:54.56,*Default,NTP,0000,0000,0000,,合适的 init 方法恰好是
Dialogue: 0,0:05:54.56,0:05:56.00,*Default,NTP,0000,0000,0000,,a 类没有 init
Dialogue: 0,0:05:56.00,0:05:56.56,*Default,NTP,0000,0000,0000,,方法
Dialogue: 0,0:05:56.56,0:05:58.72,*Default,NTP,0000,0000,0000,,所以什么都没有
Dialogue: 0,0:05:58.72,0:05:59.84,*Default,NTP,0000,0000,0000,,特别关于这个
Dialogue: 0,0:05:59.84,0:06:02.24,*Default,NTP,0000,0000,0000,,对象没有属性
Dialogue: 0,0:06:02.24,0:06:04.08,*Default,NTP,0000,0000,0000,,片刻
Dialogue: 0,0:06:04.08,0:06:05.52,*Default,NTP,0000,0000,0000,,另一方面，当我们
Dialogue: 0,0:06:05.52,0:06:07.36,*Default,NTP,0000,0000,0000,,创造b我们是
Dialogue: 0,0:06:07.36,0:06:11.60,*Default,NTP,0000,0000,0000,,嗯，叫b级
Dialogue: 0,0:06:11.60,0:06:13.28,*Default,NTP,0000,0000,0000,,哦，抱歉，我想有人需要静音
Dialogue: 0,0:06:13.28,0:06:16.08,*Default,NTP,0000,0000,0000,,等一下，我要开始让人们静音
Dialogue: 0,0:06:16.08,0:06:19.36,*Default,NTP,0000,0000,0000,,当我们打电话给 b 时，嗯
Dialogue: 0,0:06:19.36,0:06:21.52,*Default,NTP,0000,0000,0000,,我们创建了 b 类的一个实例，但是
Dialogue: 0,0:06:21.52,0:06:23.44,*Default,NTP,0000,0000,0000,,我们必须
Dialogue: 0,0:06:23.44,0:06:26.16,*Default,NTP,0000,0000,0000,,嗯调用它的 init 方法，因为它有
Dialogue: 0,0:06:26.16,0:06:26.72,*Default,NTP,0000,0000,0000,,一
Dialogue: 0,0:06:26.72,0:06:28.08,*Default,NTP,0000,0000,0000,,这就是当你
Dialogue: 0,0:06:28.08,0:06:29.76,*Default,NTP,0000,0000,0000,,创建一个新对象
Dialogue: 0,0:06:29.76,0:06:32.64,*Default,NTP,0000,0000,0000,,你从一张白纸开始，然后
Dialogue: 0,0:06:32.64,0:06:34.72,*Default,NTP,0000,0000,0000,,然后你开始
Dialogue: 0,0:06:34.72,0:06:37.44,*Default,NTP,0000,0000,0000,,传递它以及任何参数
Dialogue: 0,0:06:37.44,0:06:37.76,*Default,NTP,0000,0000,0000,,到
Dialogue: 0,0:06:37.76,0:06:40.64,*Default,NTP,0000,0000,0000,,原始构造函数所以 y 是
Dialogue: 0,0:06:40.64,0:06:41.36,*Default,NTP,0000,0000,0000,,绑定到一个
Dialogue: 0,0:06:41.36,0:06:43.44,*Default,NTP,0000,0000,0000,,self 将绑定到此 b 实例
Dialogue: 0,0:06:43.44,0:06:44.40,*Default,NTP,0000,0000,0000,,然后我们检查是否
Dialogue: 0,0:06:44.40,0:06:47.04,*Default,NTP,0000,0000,0000,,y 是真的，所以我们设置 self.z
Dialogue: 0,0:06:47.04,0:06:48.80,*Default,NTP,0000,0000,0000,,到某个东西，我把这个点放在那个地方
Dialogue: 0,0:06:48.80,0:06:49.44,*Default,NTP,0000,0000,0000,,因为
Dialogue: 0,0:06:49.44,0:06:50.96,*Default,NTP,0000,0000,0000,,我们实际上并不需要弄清楚
Dialogue: 0,0:06:50.96,0:06:52.64,*Default,NTP,0000,0000,0000,,知道这是做什么的
Dialogue: 0,0:06:52.64,0:06:54.40,*Default,NTP,0000,0000,0000,,为了回答这个问题
Dialogue: 0,0:06:54.40,0:06:56.24,*Default,NTP,0000,0000,0000,,点 z 是否等于 b
Dialogue: 0,0:06:56.24,0:06:59.28,*Default,NTP,0000,0000,0000,,z 好吧所以
Dialogue: 0,0:06:59.28,0:07:01.84,*Default,NTP,0000,0000,0000,,让我们看看我们能学到什么
Dialogue: 0,0:07:01.84,0:07:03.36,*Default,NTP,0000,0000,0000,,结构
Dialogue: 0,0:07:03.36,0:07:06.48,*Default,NTP,0000,0000,0000,,如果我们看 a 并尝试找到
Dialogue: 0,0:07:06.48,0:07:09.76,*Default,NTP,0000,0000,0000,,它的点z我们首先看它
Dialogue: 0,0:07:09.76,0:07:13.44,*Default,NTP,0000,0000,0000,,它没有实例属性
Dialogue: 0,0:07:13.44,0:07:16.24,*Default,NTP,0000,0000,0000,,所以如果我们要寻找它的 z 我们会寻找
Dialogue: 0,0:07:16.24,0:07:16.72,*Default,NTP,0000,0000,0000,,下一个
Dialogue: 0,0:07:16.72,0:07:19.52,*Default,NTP,0000,0000,0000,,在它的类中它是 a 的一个实例
Dialogue: 0,0:07:19.52,0:07:20.16,*Default,NTP,0000,0000,0000,,班级
Dialogue: 0,0:07:20.16,0:07:22.96,*Default,NTP,0000,0000,0000,,所以我们发现它确实有 az 和 z
Dialogue: 0,0:07:22.96,0:07:24.72,*Default,NTP,0000,0000,0000,,值为负数
Dialogue: 0,0:07:24.72,0:07:30.32,*Default,NTP,0000,0000,0000,,这就是点 z 的评估结果
Dialogue: 0,0:07:30.32,0:07:33.44,*Default,NTP,0000,0000,0000,,那么bz呢
Dialogue: 0,0:07:33.44,0:07:37.28,*Default,NTP,0000,0000,0000,,抱歉，当我们抬头时，就是这个东西
Dialogue: 0,0:07:37.28,0:07:40.32,*Default,NTP,0000,0000,0000,,点 z 代表我们首先查看的 b 对象
Dialogue: 0,0:07:40.32,0:07:41.92,*Default,NTP,0000,0000,0000,,它的实例属性
Dialogue: 0,0:07:41.92,0:07:44.88,*Default,NTP,0000,0000,0000,,它有一个我懒得去想的
Dialogue: 0,0:07:44.88,0:07:46.48,*Default,NTP,0000,0000,0000,,知道它是什么
Dialogue: 0,0:07:46.48,0:07:48.40,*Default,NTP,0000,0000,0000,,但我很确定这不是负面的
Dialogue: 0,0:07:48.40,0:07:49.92,*Default,NTP,0000,0000,0000,,一一
Dialogue: 0,0:07:49.92,0:07:53.20,*Default,NTP,0000,0000,0000,,所以 b 点 z 会给你这个
Dialogue: 0,0:07:53.20,0:07:55.84,*Default,NTP,0000,0000,0000,,目标是我们是否完成评估
Dialogue: 0,0:07:55.84,0:07:57.28,*Default,NTP,0000,0000,0000,,嗯，我们必须经历并且
Dialogue: 0,0:07:57.28,0:07:59.44,*Default,NTP,0000,0000,0000,,弄清楚 self.f 返回什么
Dialogue: 0,0:07:59.44,0:08:02.00,*Default,NTP,0000,0000,0000,,呃我们最终在讲座中做到了
Dialogue: 0,0:08:02.00,0:08:03.20,*Default,NTP,0000,0000,0000,,它回来了
Dialogue: 0,0:08:03.20,0:08:06.48,*Default,NTP,0000,0000,0000,,这是另一个 b 实例，这是什么
Dialogue: 0,0:08:06.48,0:08:07.52,*Default,NTP,0000,0000,0000,,评价是
Dialogue: 0,0:08:07.52,0:08:11.04,*Default,NTP,0000,0000,0000,,是一个点 z，其负 1 等于
Dialogue: 0,0:08:11.04,0:08:14.48,*Default,NTP,0000,0000,0000,,bz 这是 b 实例
Dialogue: 0,0:08:14.48,0:08:16.56,*Default,NTP,0000,0000,0000,,答案并不像数字那样
Dialogue: 0,0:08:16.56,0:08:18.08,*Default,NTP,0000,0000,0000,,永远不会等于
Dialogue: 0,0:08:18.08,0:08:21.04,*Default,NTP,0000,0000,0000,,呃一些物体
Dialogue: 0,0:08:21.84,0:08:23.36,*Default,NTP,0000,0000,0000,,是的，所以让我们画出这个草图，然后
Dialogue: 0,0:08:23.36,0:08:24.72,*Default,NTP,0000,0000,0000,,我们将回答您的问题以及
Dialogue: 0,0:08:24.72,0:08:26.24,*Default,NTP,0000,0000,0000,,问题是你是否正在使用
Dialogue: 0,0:08:26.24,0:08:27.84,*Default,NTP,0000,0000,0000,,组合而不是继承如何
Dialogue: 0,0:08:27.84,0:08:30.08,*Default,NTP,0000,0000,0000,,你访问的属性
Dialogue: 0,0:08:30.08,0:08:32.56,*Default,NTP,0000,0000,0000,,某事物的元素所以如果你有一个
Dialogue: 0,0:08:32.56,0:08:34.00,*Default,NTP,0000,0000,0000,,帐户
Dialogue: 0,0:08:34.00,0:08:40.00,*Default,NTP,0000,0000,0000,,有一个平衡
Dialogue: 0,0:08:40.00,0:08:43.04,*Default,NTP,0000,0000,0000,,我们有一家银行
Dialogue: 0,0:08:43.20,0:08:46.00,*Default,NTP,0000,0000,0000,,这不是帐户的子类
Dialogue: 0,0:08:46.00,0:08:48.80,*Default,NTP,0000,0000,0000,,只是它自己的事
Dialogue: 0,0:08:48.80,0:08:51.76,*Default,NTP,0000,0000,0000,,当我们创建一家银行时，我们就会
Dialogue: 0,0:08:51.76,0:08:52.32,*Default,NTP,0000,0000,0000,,有
Dialogue: 0,0:08:52.32,0:08:55.60,*Default,NTP,0000,0000,0000,,一组帐户，开头为
Dialogue: 0,0:08:55.60,0:08:57.92,*Default,NTP,0000,0000,0000,,空的
Dialogue: 0,0:08:58.40,0:09:00.56,*Default,NTP,0000,0000,0000,,然后我们就开设这样的账户
Dialogue: 0,0:09:00.56,0:09:01.76,*Default,NTP,0000,0000,0000,,与之前的有点不同
Dialogue: 0,0:09:01.76,0:09:03.76,*Default,NTP,0000,0000,0000,,讲座但是非常接近
Dialogue: 0,0:09:03.76,0:09:06.80,*Default,NTP,0000,0000,0000,,大约
Dialogue: 0,0:09:07.68,0:09:09.76,*Default,NTP,0000,0000,0000,,开立账户要做的是
Dialogue: 0,0:09:09.76,0:09:11.76,*Default,NTP,0000,0000,0000,,将创建一个新帐户
Dialogue: 0,0:09:11.76,0:09:13.76,*Default,NTP,0000,0000,0000,,无论名称被传递到
Dialogue: 0,0:09:13.76,0:09:16.48,*Default,NTP,0000,0000,0000,,银行，以便银行获得名称并使用
Dialogue: 0,0:09:16.48,0:09:17.36,*Default,NTP,0000,0000,0000,,名字到
Dialogue: 0,0:09:17.36,0:09:22.64,*Default,NTP,0000,0000,0000,,创建一个帐户，然后呃
Dialogue: 0,0:09:22.64,0:09:25.20,*Default,NTP,0000,0000,0000,,我们怎么知道多少钱
Dialogue: 0,0:09:25.20,0:09:27.68,*Default,NTP,0000,0000,0000,,在该帐户中
Dialogue: 0,0:09:27.68,0:09:30.56,*Default,NTP,0000,0000,0000,,这是最小的例子，如果我
Dialogue: 0,0:09:30.56,0:09:30.96,*Default,NTP,0000,0000,0000,,有
Dialogue: 0,0:09:30.96,0:09:34.64,*Default,NTP,0000,0000,0000,,一家银行和我
Dialogue: 0,0:09:34.64,0:09:37.84,*Default,NTP,0000,0000,0000,,开设账户
Dialogue: 0,0:09:37.84,0:09:41.20,*Default,NTP,0000,0000,0000,,我自己也没有名字
Dialogue: 0,0:09:41.20,0:09:42.80,*Default,NTP,0000,0000,0000,,帐户
Dialogue: 0,0:09:42.80,0:09:44.80,*Default,NTP,0000,0000,0000,,我无法直接访问它，因为它是
Dialogue: 0,0:09:44.80,0:09:46.32,*Default,NTP,0000,0000,0000,,不在全球框架内
Dialogue: 0,0:09:46.32,0:09:48.08,*Default,NTP,0000,0000,0000,,世界上唯一的东西
Dialogue: 0,0:09:48.08,0:09:50.24,*Default,NTP,0000,0000,0000,,框架就是银行
Dialogue: 0,0:09:50.24,0:09:54.08,*Default,NTP,0000,0000,0000,,但银行有账户清单
Dialogue: 0,0:09:54.08,0:09:58.00,*Default,NTP,0000,0000,0000,,现在该列表中有一些内容
Dialogue: 0,0:09:58.00,0:10:01.60,*Default,NTP,0000,0000,0000,,所以如果我进入该帐户列表
Dialogue: 0,0:10:01.60,0:10:04.64,*Default,NTP,0000,0000,0000,,并获取索引零处的元素
Dialogue: 0,0:10:04.64,0:10:07.12,*Default,NTP,0000,0000,0000,,谁的帐户是约翰的
Dialogue: 0,0:10:07.12,0:10:08.32,*Default,NTP,0000,0000,0000,,帐户
Dialogue: 0,0:10:08.32,0:10:11.20,*Default,NTP,0000,0000,0000,,里面有多少钱 零 美元
Dialogue: 0,0:10:11.20,0:10:13.04,*Default,NTP,0000,0000,0000,,因为我们还没有存入任何东西
Dialogue: 0,0:10:13.04,0:10:14.48,*Default,NTP,0000,0000,0000,,进去
Dialogue: 0,0:10:14.48,0:10:16.64,*Default,NTP,0000,0000,0000,,所以一般来说你的答案
Dialogue: 0,0:10:16.64,0:10:18.00,*Default,NTP,0000,0000,0000,,当你使用时喜欢的问题
Dialogue: 0,0:10:18.00,0:10:19.76,*Default,NTP,0000,0000,0000,,作文 你如何访问
Dialogue: 0,0:10:19.76,0:10:23.28,*Default,NTP,0000,0000,0000,,经常使用零件的属性
Dialogue: 0,0:10:23.28,0:10:26.80,*Default,NTP,0000,0000,0000,,有些像点表达式链
Dialogue: 0,0:10:26.80,0:10:29.44,*Default,NTP,0000,0000,0000,,哪里而不是为此有一个名字
Dialogue: 0,0:10:29.44,0:10:30.16,*Default,NTP,0000,0000,0000,,帐户
Dialogue: 0,0:10:30.16,0:10:31.84,*Default,NTP,0000,0000,0000,,你的表情就像是
Dialogue: 0,0:10:31.84,0:10:33.36,*Default,NTP,0000,0000,0000,,该帐户的复合表达式
Dialogue: 0,0:10:33.36,0:10:34.88,*Default,NTP,0000,0000,0000,,进入并获得一部分
Dialogue: 0,0:10:34.88,0:10:35.84,*Default,NTP,0000,0000,0000,,高盛
Dialogue: 0,0:10:35.84,0:10:38.40,*Default,NTP,0000,0000,0000,,银行找到他的账户清单
Dialogue: 0,0:10:38.40,0:10:39.28,*Default,NTP,0000,0000,0000,,它的事情
Dialogue: 0,0:10:39.28,0:10:41.60,*Default,NTP,0000,0000,0000,,然后得到平衡现在我们可以
Dialogue: 0,0:10:41.60,0:10:42.56,*Default,NTP,0000,0000,0000,,曾经有过
Dialogue: 0,0:10:42.56,0:10:44.72,*Default,NTP,0000,0000,0000,,执行此操作的方法将
Dialogue: 0,0:10:44.72,0:10:46.08,*Default,NTP,0000,0000,0000,,一直很好
Dialogue: 0,0:10:46.08,0:10:48.96,*Default,NTP,0000,0000,0000,,嗯，但这只是最小的
Dialogue: 0,0:10:48.96,0:10:50.32,*Default,NTP,0000,0000,0000,,你会如何做的例子
Dialogue: 0,0:10:50.32,0:10:54.80,*Default,NTP,0000,0000,0000,,访问组合银行的某些部分
Dialogue: 0,0:10:54.80,0:10:56.40,*Default,NTP,0000,0000,0000,,您可以将该帐户视为
Dialogue: 0,0:10:56.40,0:10:59.12,*Default,NTP,0000,0000,0000,,正如约翰刚才所说的一层
Dialogue: 0,0:10:59.12,0:11:01.44,*Default,NTP,0000,0000,0000,,从你身上移除而不是拥有
Dialogue: 0,0:11:01.44,0:11:02.88,*Default,NTP,0000,0000,0000,,全局变量
Dialogue: 0,0:11:02.88,0:11:04.72,*Default,NTP,0000,0000,0000,,您创建帐户的位置
Dialogue: 0,0:11:04.72,0:11:06.56,*Default,NTP,0000,0000,0000,,现在存储在列表中
Dialogue: 0,0:11:06.56,0:11:09.76,*Default,NTP,0000,0000,0000,,在另一个物体的内部
Dialogue: 0,0:11:09.76,0:11:12.08,*Default,NTP,0000,0000,0000,,现在看看命令对象
Dialogue: 0,0:11:12.08,0:11:13.04,*Default,NTP,0000,0000,0000,,高盛
Dialogue: 0,0:11:13.04,0:11:16.16,*Default,NTP,0000,0000,0000,,列出帐户获取元素低于零
Dialogue: 0,0:11:16.16,0:11:17.36,*Default,NTP,0000,0000,0000,,那是什么
Dialogue: 0,0:11:17.36,0:11:19.52,*Default,NTP,0000,0000,0000,,现在是 account 类型的对象并且
Dialogue: 0,0:11:19.52,0:11:20.88,*Default,NTP,0000,0000,0000,,现在你可以用它做任何你想做的事
Dialogue: 0,0:11:20.88,0:11:22.56,*Default,NTP,0000,0000,0000,,你可以 你可以访问
Dialogue: 0,0:11:22.56,0:11:24.56,*Default,NTP,0000,0000,0000,,可以访问数据的成员函数
Dialogue: 0,0:11:24.56,0:11:26.64,*Default,NTP,0000,0000,0000,,就好像你就好像我们刚刚写过一样
Dialogue: 0,0:11:26.64,0:11:29.36,*Default,NTP,0000,0000,0000,,呃约翰的账户等于高盛点
Dialogue: 0,0:11:29.36,0:11:31.28,*Default,NTP,0000,0000,0000,,账户低于零
Dialogue: 0,0:11:31.28,0:11:33.28,*Default,NTP,0000,0000,0000,,这就是现在的那个物体，现在它是所有的
Dialogue: 0,0:11:33.28,0:11:34.56,*Default,NTP,0000,0000,0000,,同样的事情是的所以只是水平
Dialogue: 0,0:11:34.56,0:11:37.76,*Default,NTP,0000,0000,0000,,你必须遵循的中断
Dialogue: 0,0:11:37.84,0:11:41.20,*Default,NTP,0000,0000,0000,,是的，好问题，所以问题是
Dialogue: 0,0:11:41.20,0:11:43.84,*Default,NTP,0000,0000,0000,,你可以使用语法来引用
Dialogue: 0,0:11:43.84,0:11:44.40,*Default,NTP,0000,0000,0000,,方法
Dialogue: 0,0:11:44.40,0:11:46.72,*Default,NTP,0000,0000,0000,,这只是说明哪个类包含
Dialogue: 0,0:11:46.72,0:11:47.76,*Default,NTP,0000,0000,0000,,那个方法
Dialogue: 0,0:11:47.76,0:11:50.16,*Default,NTP,0000,0000,0000,,然后是方法名称然后调用它
Dialogue: 0,0:11:50.16,0:11:52.48,*Default,NTP,0000,0000,0000,,您显式传入对象的位置
Dialogue: 0,0:11:52.48,0:11:54.24,*Default,NTP,0000,0000,0000,,您想要调用它并且
Dialogue: 0,0:11:54.24,0:11:56.56,*Default,NTP,0000,0000,0000,,答案是肯定的所以嗯
Dialogue: 0,0:11:56.56,0:12:00.16,*Default,NTP,0000,0000,0000,,如果你有一个帐户，确实有
Dialogue: 0,0:12:00.16,0:12:03.44,*Default,NTP,0000,0000,0000,,正常的存入方式
Dialogue: 0,0:12:03.44,0:12:05.36,*Default,NTP,0000,0000,0000,,这就是你会提到的
Dialogue: 0,0:12:05.36,0:12:06.48,*Default,NTP,0000,0000,0000,,方法
Dialogue: 0,0:12:06.48,0:12:08.56,*Default,NTP,0000,0000,0000,,通过使用点表达式
Dialogue: 0,0:12:08.56,0:12:11.44,*Default,NTP,0000,0000,0000,,你感兴趣的对象
Dialogue: 0,0:12:11.44,0:12:13.52,*Default,NTP,0000,0000,0000,,你可以将其视为简写
Dialogue: 0,0:12:13.52,0:12:15.12,*Default,NTP,0000,0000,0000,,为了
Dialogue: 0,0:12:15.12,0:12:18.72,*Default,NTP,0000,0000,0000,,找到a的类
Dialogue: 0,0:12:18.72,0:12:21.76,*Default,NTP,0000,0000,0000,,并使用 a 存入其中
Dialogue: 0,0:12:21.76,0:12:24.72,*Default,NTP,0000,0000,0000,,作为帐户本身和 12 美元作为
Dialogue: 0,0:12:24.72,0:12:26.80,*Default,NTP,0000,0000,0000,,量
Dialogue: 0,0:12:26.80,0:12:28.96,*Default,NTP,0000,0000,0000,,事实上呃你可以写出来如果
Dialogue: 0,0:12:28.96,0:12:30.24,*Default,NTP,0000,0000,0000,,你真的想要
Dialogue: 0,0:12:30.24,0:12:33.36,*Default,NTP,0000,0000,0000,,获取类型 a 是一个帐户并且
Dialogue: 0,0:12:33.36,0:12:35.52,*Default,NTP,0000,0000,0000,,存入该
Dialogue: 0,0:12:35.52,0:12:39.60,*Default,NTP,0000,0000,0000,,12 现在你不会写这个了
Dialogue: 0,0:12:39.60,0:12:40.88,*Default,NTP,0000,0000,0000,,因为它就像一个更多
Dialogue: 0,0:12:40.88,0:12:42.64,*Default,NTP,0000,0000,0000,,这个的复杂版本
Dialogue: 0,0:12:42.64,0:12:45.28,*Default,NTP,0000,0000,0000,,这是允许的，因为这恰好是
Dialogue: 0,0:12:45.28,0:12:46.16,*Default,NTP,0000,0000,0000,,只是一个函数
Dialogue: 0,0:12:46.16,0:12:48.32,*Default,NTP,0000,0000,0000,,你在这里定义的这个函数等等
Dialogue: 0,0:12:48.32,0:12:50.40,*Default,NTP,0000,0000,0000,,你可以将它作为一个函数来调用
Dialogue: 0,0:12:50.40,0:12:52.08,*Default,NTP,0000,0000,0000,,但确实没有充分的理由
Dialogue: 0,0:12:52.08,0:12:54.64,*Default,NTP,0000,0000,0000,,去做吧，呃，当你
Dialogue: 0,0:12:54.64,0:12:56.16,*Default,NTP,0000,0000,0000,,使用继承
Dialogue: 0,0:12:56.16,0:12:58.40,*Default,NTP,0000,0000,0000,,偶尔有一个参考的理由
Dialogue: 0,0:12:58.40,0:12:59.84,*Default,NTP,0000,0000,0000,,你已经覆盖的东西
Dialogue: 0,0:12:59.84,0:13:01.76,*Default,NTP,0000,0000,0000,,这是一种方法，所以
Dialogue: 0,0:13:01.76,0:13:03.28,*Default,NTP,0000,0000,0000,,有时候你会
Dialogue: 0,0:13:03.28,0:13:03.76,*Default,NTP,0000,0000,0000,,实际上
Dialogue: 0,0:13:03.76,0:13:05.52,*Default,NTP,0000,0000,0000,,做这种事但这是允许的
Dialogue: 0,0:13:05.52,0:13:07.36,*Default,NTP,0000,0000,0000,,否则这不是我想要的
Dialogue: 0,0:13:07.36,0:13:08.00,*Default,NTP,0000,0000,0000,,认为是
Dialogue: 0,0:13:08.00,0:13:10.08,*Default,NTP,0000,0000,0000,,通常是这样做的，是的，我想会的
Dialogue: 0,0:13:10.08,0:13:11.92,*Default,NTP,0000,0000,0000,,如果你写的话会被认为是糟糕的形式
Dialogue: 0,0:13:11.92,0:13:12.40,*Default,NTP,0000,0000,0000,,那
Dialogue: 0,0:13:12.40,0:13:14.40,*Default,NTP,0000,0000,0000,,我认为你应该避免这种情况
Dialogue: 0,0:13:14.40,0:13:15.76,*Default,NTP,0000,0000,0000,,因为它只是它不是什么东西
Dialogue: 0,0:13:15.76,0:13:17.76,*Default,NTP,0000,0000,0000,,大多数程序员都会
Dialogue: 0,0:13:17.76,0:13:19.60,*Default,NTP,0000,0000,0000,,会做，你知道我的意思是
Dialogue: 0,0:13:19.60,0:13:20.72,*Default,NTP,0000,0000,0000,,即使事情是允许的，但不允许
Dialogue: 0,0:13:20.72,0:13:21.20,*Default,NTP,0000,0000,0000,,意思是你
Dialogue: 0,0:13:21.20,0:13:24.32,*Default,NTP,0000,0000,0000,,不一定要这样做，但它
Dialogue: 0,0:13:24.32,0:13:26.00,*Default,NTP,0000,0000,0000,,确实说明你知道这是什么
Dialogue: 0,0:13:26.00,0:13:26.96,*Default,NTP,0000,0000,0000,,正在做
Dialogue: 0,0:13:26.96,0:13:29.68,*Default,NTP,0000,0000,0000,,它基本上就是这样做的
Dialogue: 0,0:13:29.68,0:13:30.48,*Default,NTP,0000,0000,0000,,一些功能
Dialogue: 0,0:13:30.48,0:13:34.32,*Default,NTP,0000,0000,0000,,并填写 yes
Dialogue: 0,0:13:34.32,0:13:37.44,*Default,NTP,0000,0000,0000,,好问题，那么什么是超级呢？
Dialogue: 0,0:13:37.44,0:13:39.20,*Default,NTP,0000,0000,0000,,一些内置函数
Dialogue: 0,0:13:39.20,0:13:41.20,*Default,NTP,0000,0000,0000,,这对我来说真的很神奇
Dialogue: 0,0:13:41.20,0:13:42.72,*Default,NTP,0000,0000,0000,,观点
Dialogue: 0,0:13:42.72,0:13:45.36,*Default,NTP,0000,0000,0000,,嗯，就它的作用而言，所以它是
Dialogue: 0,0:13:45.36,0:13:47.12,*Default,NTP,0000,0000,0000,,更好地描述它的作用
Dialogue: 0,0:13:47.12,0:13:48.56,*Default,NTP,0000,0000,0000,,它是如何做到的
Dialogue: 0,0:13:48.56,0:13:51.28,*Default,NTP,0000,0000,0000,,但它的作用是当你
Dialogue: 0,0:13:51.28,0:13:54.24,*Default,NTP,0000,0000,0000,,查一下这个方法
Dialogue: 0,0:13:54.40,0:13:58.08,*Default,NTP,0000,0000,0000,,为了呃
Dialogue: 0,0:13:59.36,0:14:00.96,*Default,NTP,0000,0000,0000,,这有点与自我相关
Dialogue: 0,0:14:00.96,0:14:02.88,*Default,NTP,0000,0000,0000,,说 self 是一个支票账户
Dialogue: 0,0:14:02.88,0:14:05.12,*Default,NTP,0000,0000,0000,,当你查找它的提现方法时
Dialogue: 0,0:14:05.12,0:14:07.04,*Default,NTP,0000,0000,0000,,跳过检查中的那个
Dialogue: 0,0:14:07.04,0:14:08.32,*Default,NTP,0000,0000,0000,,账户类别
Dialogue: 0,0:14:08.32,0:14:10.48,*Default,NTP,0000,0000,0000,,然后去账户类别中找到那个
Dialogue: 0,0:14:10.48,0:14:12.80,*Default,NTP,0000,0000,0000,,反而
Dialogue: 0,0:14:12.80,0:14:14.56,*Default,NTP,0000,0000,0000,,我们本可以明确地说我们
Dialogue: 0,0:14:14.56,0:14:16.24,*Default,NTP,0000,0000,0000,,本来可以说去找到那个
Dialogue: 0,0:14:16.24,0:14:17.68,*Default,NTP,0000,0000,0000,,如果我们知道帐户类别在哪里
Dialogue: 0,0:14:17.68,0:14:18.64,*Default,NTP,0000,0000,0000,,看
Dialogue: 0,0:14:18.64,0:14:22.00,*Default,NTP,0000,0000,0000,,这是要求 python 为你找到它
Dialogue: 0,0:14:22.00,0:14:24.40,*Default,NTP,0000,0000,0000,,说你了解Python
Dialogue: 0,0:14:24.40,0:14:26.96,*Default,NTP,0000,0000,0000,,你知道父母是什么
Dialogue: 0,0:14:26.96,0:14:29.36,*Default,NTP,0000,0000,0000,,的超类或基类
Dialogue: 0,0:14:29.36,0:14:30.00,*Default,NTP,0000,0000,0000,,支票账户
Dialogue: 0,0:14:30.00,0:14:33.12,*Default,NTP,0000,0000,0000,,所以你为什么不去找那个版本
Dialogue: 0,0:14:33.12,0:14:34.88,*Default,NTP,0000,0000,0000,,撤回的
Dialogue: 0,0:14:34.88,0:14:37.68,*Default,NTP,0000,0000,0000,,这就是这个意思，嗯这个
Dialogue: 0,0:14:37.68,0:14:39.68,*Default,NTP,0000,0000,0000,,实际上并不总是这样的语法
Dialogue: 0,0:14:39.68,0:14:41.12,*Default,NTP,0000,0000,0000,,python 那里就像一个不同的
Dialogue: 0,0:14:41.12,0:14:44.00,*Default,NTP,0000,0000,0000,,我认为 python 2 中的版本
Dialogue: 0,0:14:44.00,0:14:47.20,*Default,NTP,0000,0000,0000,,它工作得很好，人们确实使用它并且
Dialogue: 0,0:14:47.20,0:14:49.28,*Default,NTP,0000,0000,0000,,这是一件非常微妙的事情，基本上
Dialogue: 0,0:14:49.28,0:14:50.48,*Default,NTP,0000,0000,0000,,说
Dialogue: 0,0:14:50.48,0:14:52.56,*Default,NTP,0000,0000,0000,,我想要像自己一样的东西
Dialogue: 0,0:14:52.56,0:14:54.40,*Default,NTP,0000,0000,0000,,除了它忽略提款
Dialogue: 0,0:14:54.40,0:14:56.08,*Default,NTP,0000,0000,0000,,在支票账户内，一切顺利
Dialogue: 0,0:14:56.08,0:14:58.08,*Default,NTP,0000,0000,0000,,并找到之前存在的那一个
Dialogue: 0,0:14:58.08,0:15:01.12,*Default,NTP,0000,0000,0000,,支票账户曾经被定义为
Dialogue: 0,0:15:01.12,0:15:02.40,*Default,NTP,0000,0000,0000,,嗯，你知道你可以这么说
Dialogue: 0,0:15:02.40,0:15:04.96,*Default,NTP,0000,0000,0000,,明确地去找账户提款
Dialogue: 0,0:15:04.96,0:15:06.72,*Default,NTP,0000,0000,0000,,或者你可以让 python 查找它
Dialogue: 0,0:15:06.72,0:15:09.04,*Default,NTP,0000,0000,0000,,约翰，你没有，这很奇怪吗？
Dialogue: 0,0:15:09.04,0:15:10.84,*Default,NTP,0000,0000,0000,,当您使用时传递 self
Dialogue: 0,0:15:10.84,0:15:12.32,*Default,NTP,0000,0000,0000,,超级符号
Dialogue: 0,0:15:12.32,0:15:14.00,*Default,NTP,0000,0000,0000,,是的，这是一件有趣的事情
Dialogue: 0,0:15:14.00,0:15:15.36,*Default,NTP,0000,0000,0000,,那个超级不是
Dialogue: 0,0:15:15.36,0:15:19.04,*Default,NTP,0000,0000,0000,,指的是帐户类别，就像
Dialogue: 0,0:15:19.04,0:15:21.76,*Default,NTP,0000,0000,0000,,指的是 self 的一个版本，就好像
Dialogue: 0,0:15:21.76,0:15:23.04,*Default,NTP,0000,0000,0000,,帐户在哪里
Dialogue: 0,0:15:23.04,0:15:24.64,*Default,NTP,0000,0000,0000,,类而不是支票帐户在哪里
Dialogue: 0,0:15:24.64,0:15:26.24,*Default,NTP,0000,0000,0000,,上课了，所以它在做两件事
Dialogue: 0,0:15:26.24,0:15:27.92,*Default,NTP,0000,0000,0000,,一旦它开始并找到帐户
Dialogue: 0,0:15:27.92,0:15:28.64,*Default,NTP,0000,0000,0000,,班级
Dialogue: 0,0:15:28.64,0:15:31.44,*Default,NTP,0000,0000,0000,,并且它也在填写 self
Dialogue: 0,0:15:31.44,0:15:32.48,*Default,NTP,0000,0000,0000,,提现方式
Dialogue: 0,0:15:32.48,0:15:34.00,*Default,NTP,0000,0000,0000,,这样你就不必传递它
Dialogue: 0,0:15:34.00,0:15:36.00,*Default,NTP,0000,0000,0000,,明确地
Dialogue: 0,0:15:36.00,0:15:39.28,*Default,NTP,0000,0000,0000,,想要拥有一个就很重要
Dialogue: 0,0:15:39.28,0:15:41.44,*Default,NTP,0000,0000,0000,,不带参数的内置函数调用
Dialogue: 0,0:15:41.44,0:15:44.48,*Default,NTP,0000,0000,0000,,不知怎的，它就发挥了所有的魔力
Dialogue: 0,0:15:44.48,0:15:46.32,*Default,NTP,0000,0000,0000,,就是这样，所以你知道你不知道
Dialogue: 0,0:15:46.32,0:15:48.16,*Default,NTP,0000,0000,0000,,必须记住这个，我们不需要
Dialogue: 0,0:15:48.16,0:15:50.00,*Default,NTP,0000,0000,0000,,对你进行测试或类似的事情
Dialogue: 0,0:15:50.00,0:15:52.08,*Default,NTP,0000,0000,0000,,这个有点更明确
Dialogue: 0,0:15:52.08,0:15:53.44,*Default,NTP,0000,0000,0000,,但这确实意味着你必须
Dialogue: 0,0:15:53.44,0:15:55.36,*Default,NTP,0000,0000,0000,,多余的你必须说喜欢哦
Dialogue: 0,0:15:55.36,0:15:57.52,*Default,NTP,0000,0000,0000,,该帐户是这个基类并且
Dialogue: 0,0:15:57.52,0:15:58.88,*Default,NTP,0000,0000,0000,,这就是我想要得到的东西
Dialogue: 0,0:15:58.88,0:16:00.72,*Default,NTP,0000,0000,0000,,提款功能
Dialogue: 0,0:16:00.72,0:16:02.48,*Default,NTP,0000,0000,0000,,是的，很好的问题，正是如此
Dialogue: 0,0:16:02.48,0:16:04.24,*Default,NTP,0000,0000,0000,,是的，如果没有的话
Dialogue: 0,0:16:04.24,0:16:06.56,*Default,NTP,0000,0000,0000,,重复或覆盖
Dialogue: 0,0:16:06.56,0:16:07.28,*Default,NTP,0000,0000,0000,,退出
Dialogue: 0,0:16:07.28,0:16:08.80,*Default,NTP,0000,0000,0000,,它存在于两个检查中
Dialogue: 0,0:16:08.80,0:16:11.20,*Default,NTP,0000,0000,0000,,帐户和基类帐户
Dialogue: 0,0:16:11.20,0:16:12.72,*Default,NTP,0000,0000,0000,,那么你就不需要 super 这是
Dialogue: 0,0:16:12.72,0:16:14.56,*Default,NTP,0000,0000,0000,,严格来说，当你有
Dialogue: 0,0:16:14.56,0:16:15.44,*Default,NTP,0000,0000,0000,,遗产
Dialogue: 0,0:16:15.44,0:16:18.00,*Default,NTP,0000,0000,0000,,并且您在中使用相同的方法名称
Dialogue: 0,0:16:18.00,0:16:20.48,*Default,NTP,0000,0000,0000,,子类和基类
Dialogue: 0,0:16:20.48,0:16:21.76,*Default,NTP,0000,0000,0000,,虽然我会认为你可能
Dialogue: 0,0:16:21.76,0:16:23.84,*Default,NTP,0000,0000,0000,,仍然应该将其作为内置的
Dialogue: 0,0:16:23.84,0:16:25.28,*Default,NTP,0000,0000,0000,,文档
Dialogue: 0,0:16:25.28,0:16:27.12,*Default,NTP,0000,0000,0000,,这样用户就不必喜欢
Dialogue: 0,0:16:27.12,0:16:28.40,*Default,NTP,0000,0000,0000,,你知道滚动浏览你的班级
Dialogue: 0,0:16:28.40,0:16:30.32,*Default,NTP,0000,0000,0000,,弄清楚哪一个比较好
Dialogue: 0,0:16:30.32,0:16:32.16,*Default,NTP,0000,0000,0000,,我喜欢制作的事情
Dialogue: 0,0:16:32.16,0:16:34.24,*Default,NTP,0000,0000,0000,,你说的很明确
Dialogue: 0,0:16:34.24,0:16:35.92,*Default,NTP,0000,0000,0000,,某人将是哪一个
Dialogue: 0,0:16:35.92,0:16:37.28,*Default,NTP,0000,0000,0000,,反对依赖
Dialogue: 0,0:16:37.28,0:16:39.12,*Default,NTP,0000,0000,0000,,一些默认，然后如果有人怎么办
Dialogue: 0,0:16:39.12,0:16:40.40,*Default,NTP,0000,0000,0000,,实际上进来并平局
Dialogue: 0,0:16:40.40,0:16:42.08,*Default,NTP,0000,0000,0000,,稍后运行
Dialogue: 0,0:16:42.08,0:16:44.56,*Default,NTP,0000,0000,0000,,我的意思是你有时这样做是好的
Dialogue: 0,0:16:44.56,0:16:46.08,*Default,NTP,0000,0000,0000,,让事情变得明确，即使有
Dialogue: 0,0:16:46.08,0:16:47.04,*Default,NTP,0000,0000,0000,,默认一
Dialogue: 0,0:16:47.04,0:16:50.24,*Default,NTP,0000,0000,0000,,回应你知道是的
Dialogue: 0,0:16:50.24,0:16:51.84,*Default,NTP,0000,0000,0000,,但我想说的一件事是如果你
Dialogue: 0,0:16:51.84,0:16:53.68,*Default,NTP,0000,0000,0000,,有两次存款，就像
Dialogue: 0,0:16:53.68,0:16:54.56,*Default,NTP,0000,0000,0000,,全新的
Dialogue: 0,0:16:54.56,0:16:56.72,*Default,NTP,0000,0000,0000,,你的子类可以
Dialogue: 0,0:16:56.72,0:16:59.76,*Default,NTP,0000,0000,0000,,里面有全新的东西
Dialogue: 0,0:16:59.76,0:17:02.08,*Default,NTP,0000,0000,0000,,你想做的就是存入这个
Dialogue: 0,0:17:02.08,0:17:03.68,*Default,NTP,0000,0000,0000,,金额两倍
Dialogue: 0,0:17:03.68,0:17:06.72,*Default,NTP,0000,0000,0000,,你可以写 self.deposit 那个
Dialogue: 0,0:17:06.72,0:17:07.52,*Default,NTP,0000,0000,0000,,数量
Dialogue: 0,0:17:07.52,0:17:09.76,*Default,NTP,0000,0000,0000,,然后再做一次，你真的没有
Dialogue: 0,0:17:09.76,0:17:11.84,*Default,NTP,0000,0000,0000,,需要在这里使用任何超级或任何东西
Dialogue: 0,0:17:11.84,0:17:12.72,*Default,NTP,0000,0000,0000,,像那样
Dialogue: 0,0:17:12.72,0:17:14.24,*Default,NTP,0000,0000,0000,,你可以相信 python 会看起来
Dialogue: 0,0:17:14.24,0:17:16.24,*Default,NTP,0000,0000,0000,,正确地为你准备好了
Dialogue: 0,0:17:16.24,0:17:18.56,*Default,NTP,0000,0000,0000,,是的，好问题，所以问题是
Dialogue: 0,0:17:18.56,0:17:19.68,*Default,NTP,0000,0000,0000,,在这个例子中
Dialogue: 0,0:17:19.68,0:17:22.88,*Default,NTP,0000,0000,0000,,如果我们做了一个 a 但我们传入了一些
Dialogue: 0,0:17:22.88,0:17:25.44,*Default,NTP,0000,0000,0000,,尝试构造 a 时的参数
Dialogue: 0,0:17:25.44,0:17:26.48,*Default,NTP,0000,0000,0000,,你会得到一个错误吗
Dialogue: 0,0:17:26.48,0:17:28.88,*Default,NTP,0000,0000,0000,,答案是肯定的，因为没有
Dialogue: 0,0:17:28.88,0:17:30.08,*Default,NTP,0000,0000,0000,,在里面
Dialogue: 0,0:17:30.08,0:17:33.76,*Default,NTP,0000,0000,0000,,嗯，它不期待任何争论
Dialogue: 0,0:17:33.76,0:17:36.64,*Default,NTP,0000,0000,0000,,所以嗯，顺便说一句，我一直认为
Dialogue: 0,0:17:36.64,0:17:38.40,*Default,NTP,0000,0000,0000,,python 让你构建这很奇怪
Dialogue: 0,0:17:38.40,0:17:41.84,*Default,NTP,0000,0000,0000,,没有构造函数的类
Dialogue: 0,0:17:42.16,0:17:44.00,*Default,NTP,0000,0000,0000,,这是一件有趣的事情，但如果我们
Dialogue: 0,0:17:44.00,0:17:47.44,*Default,NTP,0000,0000,0000,,没有构造函数，如果它就像
Dialogue: 0,0:17:47.44,0:17:50.56,*Default,NTP,0000,0000,0000,,这里没有构造函数
Dialogue: 0,0:17:50.56,0:17:53.76,*Default,NTP,0000,0000,0000,,是的，奇怪的是，如果你有一个
Dialogue: 0,0:17:53.76,0:17:54.40,*Default,NTP,0000,0000,0000,,帐户
Dialogue: 0,0:17:54.40,0:17:56.64,*Default,NTP,0000,0000,0000,,你已经成功创建了正确的
Dialogue: 0,0:17:56.64,0:17:57.76,*Default,NTP,0000,0000,0000,,成功地
Dialogue: 0,0:17:57.76,0:17:59.76,*Default,NTP,0000,0000,0000,,虽然它没有平衡你
Dialogue: 0,0:17:59.76,0:18:01.76,*Default,NTP,0000,0000,0000,,可以稍后再给一个
Dialogue: 0,0:18:01.76,0:18:03.76,*Default,NTP,0000,0000,0000,,所以虽然这是可能的但很少
Dialogue: 0,0:18:03.76,0:18:05.36,*Default,NTP,0000,0000,0000,,非常有用
Dialogue: 0,0:18:05.36,0:18:06.96,*Default,NTP,0000,0000,0000,,下一个问题是你必须这样做吗
Dialogue: 0,0:18:06.96,0:18:09.76,*Default,NTP,0000,0000,0000,,使用下划线调用 init init 或
Dialogue: 0,0:18:09.76,0:18:11.68,*Default,NTP,0000,0000,0000,,你能叫它别的名字吗
Dialogue: 0,0:18:11.68,0:18:13.68,*Default,NTP,0000,0000,0000,,你必须使用inet，它不是
Dialogue: 0,0:18:13.68,0:18:15.04,*Default,NTP,0000,0000,0000,,约定，因为
Dialogue: 0,0:18:15.04,0:18:17.04,*Default,NTP,0000,0000,0000,,当你调用构造函数时它必须
Dialogue: 0,0:18:17.04,0:18:19.04,*Default,NTP,0000,0000,0000,,知道要调用哪个函数
Dialogue: 0,0:18:19.04,0:18:21.04,*Default,NTP,0000,0000,0000,,这是一个特别的名字，而且总是
Dialogue: 0,0:18:21.04,0:18:22.72,*Default,NTP,0000,0000,0000,,必须是下划线 underscore net
Dialogue: 0,0:18:22.72,0:18:24.80,*Default,NTP,0000,0000,0000,,下划线 下划线
Dialogue: 0,0:18:24.80,0:18:26.72,*Default,NTP,0000,0000,0000,,下一个问题是你是否
Dialogue: 0,0:18:26.72,0:18:28.72,*Default,NTP,0000,0000,0000,,应该知道所有特殊的
Dialogue: 0,0:18:28.72,0:18:30.56,*Default,NTP,0000,0000,0000,,python 中的方法名称
Dialogue: 0,0:18:30.56,0:18:32.64,*Default,NTP,0000,0000,0000,,就像下划线下划线 init
Dialogue: 0,0:18:32.64,0:18:34.00,*Default,NTP,0000,0000,0000,,下划线 下划线
Dialogue: 0,0:18:34.00,0:18:35.36,*Default,NTP,0000,0000,0000,,以及其他一些我们还没有的
Dialogue: 0,0:18:35.36,0:18:37.60,*Default,NTP,0000,0000,0000,,覆盖但像下划线下划线
Dialogue: 0,0:18:37.60,0:18:38.32,*Default,NTP,0000,0000,0000,,搅拌
Dialogue: 0,0:18:38.32,0:18:40.64,*Default,NTP,0000,0000,0000,,下划线 下划线和一般
Dialogue: 0,0:18:40.64,0:18:42.08,*Default,NTP,0000,0000,0000,,答案是我们会介绍这个
Dialogue: 0,0:18:42.08,0:18:43.52,*Default,NTP,0000,0000,0000,,周三告诉你你需要什么
Dialogue: 0,0:18:43.52,0:18:45.36,*Default,NTP,0000,0000,0000,,知道和不知道但这里是
Dialogue: 0,0:18:45.36,0:18:46.64,*Default,NTP,0000,0000,0000,,我们的答案
Dialogue: 0,0:18:46.64,0:18:48.72,*Default,NTP,0000,0000,0000,,那么你必须了解构造函数
Dialogue: 0,0:18:48.72,0:18:50.16,*Default,NTP,0000,0000,0000,,因为你无法真正建立一个班级
Dialogue: 0,0:18:50.16,0:18:51.44,*Default,NTP,0000,0000,0000,,没有你就无法构建一个对象
Dialogue: 0,0:18:51.44,0:18:52.64,*Default,NTP,0000,0000,0000,,没有他们
Dialogue: 0,0:18:52.64,0:18:54.80,*Default,NTP,0000,0000,0000,,str 函数就是这样的
Dialogue: 0,0:18:54.80,0:18:56.16,*Default,NTP,0000,0000,0000,,当你打电话时发生
Dialogue: 0,0:18:56.16,0:18:58.00,*Default,NTP,0000,0000,0000,,在不是的对象上打印
Dialogue: 0,0:18:58.00,0:18:59.76,*Default,NTP,0000,0000,0000,,从根本上定义
Dialogue: 0,0:18:59.76,0:19:01.12,*Default,NTP,0000,0000,0000,,所以你应该知道那些
Dialogue: 0,0:19:01.12,0:19:03.36,*Default,NTP,0000,0000,0000,,功能工作然后但是有
Dialogue: 0,0:19:03.36,0:19:03.76,*Default,NTP,0000,0000,0000,,不
Dialogue: 0,0:19:03.76,0:19:05.36,*Default,NTP,0000,0000,0000,,所以是的，你绝对应该知道如何
Dialogue: 0,0:19:05.36,0:19:07.20,*Default,NTP,0000,0000,0000,,构造函数和打印
Dialogue: 0,0:19:07.20,0:19:08.96,*Default,NTP,0000,0000,0000,,函数工作或 str 和 init
Dialogue: 0,0:19:08.96,0:19:10.16,*Default,NTP,0000,0000,0000,,功能是的
Dialogue: 0,0:19:10.16,0:19:13.60,*Default,NTP,0000,0000,0000,,所以我们来看看搅拌和包装纸
Dialogue: 0,0:19:13.60,0:19:16.16,*Default,NTP,0000,0000,0000,,在周三的讲座中
Dialogue: 0,0:19:16.16,0:19:17.84,*Default,NTP,0000,0000,0000,,和其他几个人
Dialogue: 0,0:19:17.84,0:19:19.44,*Default,NTP,0000,0000,0000,,你不必知道所有的
Dialogue: 0,0:19:19.44,0:19:21.60,*Default,NTP,0000,0000,0000,,特殊的方法名称就像
Dialogue: 0,0:19:21.60,0:19:23.60,*Default,NTP,0000,0000,0000,,一长串内置的东西
Dialogue: 0,0:19:23.60,0:19:24.88,*Default,NTP,0000,0000,0000,,Python
Dialogue: 0,0:19:24.88,0:19:27.52,*Default,NTP,0000,0000,0000,,呃我们会给你一个概述
Dialogue: 0,0:19:27.52,0:19:29.12,*Default,NTP,0000,0000,0000,,周三的内容
Dialogue: 0,0:19:29.12,0:19:30.00,*Default,NTP,0000,0000,0000,,演讲但是
Dialogue: 0,0:19:30.00,0:19:31.84,*Default,NTP,0000,0000,0000,,你不需要记住所有的内容
Dialogue: 0,0:19:31.84,0:19:33.20,*Default,NTP,0000,0000,0000,,但那些创造的
Dialogue: 0,0:19:33.20,0:19:34.80,*Default,NTP,0000,0000,0000,,字符串表示特别
Dialogue: 0,0:19:34.80,0:19:37.12,*Default,NTP,0000,0000,0000,,重要且在其中
Dialogue: 0,0:19:37.12,0:19:40.16,*Default,NTP,0000,0000,0000,,好吧，嗯，问题是
Dialogue: 0,0:19:40.16,0:19:44.16,*Default,NTP,0000,0000,0000,,为什么会出现多重继承
Dialogue: 0,0:19:44.16,0:19:47.20,*Default,NTP,0000,0000,0000,,帐户版本
Dialogue: 0,0:19:47.20,0:19:50.56,*Default,NTP,0000,0000,0000,,当您存入20时，只给您19
Dialogue: 0,0:19:50.56,0:19:53.84,*Default,NTP,0000,0000,0000,,事实上你已经支付了
Dialogue: 0,0:19:53.84,0:19:58.08,*Default,NTP,0000,0000,0000,,某处两美元费用
Dialogue: 0,0:19:58.08,0:20:00.24,*Default,NTP,0000,0000,0000,,因为里面有一美元
Dialogue: 0,0:20:00.24,0:20:01.12,*Default,NTP,0000,0000,0000,,已经
Dialogue: 0,0:20:01.12,0:20:03.36,*Default,NTP,0000,0000,0000,,所以存入 20 应该可以得到 21。
Dialogue: 0,0:20:03.36,0:20:06.64,*Default,NTP,0000,0000,0000,,但不知何故它却让你到了19
Dialogue: 0,0:20:06.64,0:20:08.88,*Default,NTP,0000,0000,0000,,为什么那么好让我们回顾一下
Dialogue: 0,0:20:08.88,0:20:10.48,*Default,NTP,0000,0000,0000,,代码
Dialogue: 0,0:20:10.48,0:20:13.04,*Default,NTP,0000,0000,0000,,我们想出了一个储蓄账户
Dialogue: 0,0:20:13.04,0:20:15.52,*Default,NTP,0000,0000,0000,,有两美元的存款费
Dialogue: 0,0:20:15.52,0:20:17.68,*Default,NTP,0000,0000,0000,,当您存入时会发生什么
Dialogue: 0,0:20:17.68,0:20:18.72,*Default,NTP,0000,0000,0000,,您的储蓄账户
Dialogue: 0,0:20:18.72,0:20:21.04,*Default,NTP,0000,0000,0000,,是你实际上存了二十
Dialogue: 0,0:20:21.04,0:20:23.36,*Default,NTP,0000,0000,0000,,美元减二
Dialogue: 0,0:20:23.36,0:20:25.28,*Default,NTP,0000,0000,0000,,所以我们存了十八美元
Dialogue: 0,0:20:25.28,0:20:27.68,*Default,NTP,0000,0000,0000,,这就是我们如何到达十九岁的
Dialogue: 0,0:20:27.68,0:20:30.32,*Default,NTP,0000,0000,0000,,为什么这笔存款会被叫走
Dialogue: 0,0:20:30.32,0:20:32.72,*Default,NTP,0000,0000,0000,,而不是账户存款
Dialogue: 0,0:20:32.72,0:20:35.76,*Default,NTP,0000,0000,0000,,嗯，当
Dialogue: 0,0:20:35.76,0:20:38.80,*Default,NTP,0000,0000,0000,,您正在寻找调用您的方法
Dialogue: 0,0:20:38.80,0:20:39.28,*Default,NTP,0000,0000,0000,,看
Dialogue: 0,0:20:39.28,0:20:42.08,*Default,NTP,0000,0000,0000,,在课堂上第一件事
Dialogue: 0,0:20:42.08,0:20:42.48,*Default,NTP,0000,0000,0000,,你是
Dialogue: 0,0:20:42.48,0:20:44.96,*Default,NTP,0000,0000,0000,,存入，如果你没有找到它
Dialogue: 0,0:20:44.96,0:20:45.52,*Default,NTP,0000,0000,0000,,那里
Dialogue: 0,0:20:45.52,0:20:48.88,*Default,NTP,0000,0000,0000,,然后你查看它的基类
Dialogue: 0,0:20:48.88,0:20:51.76,*Default,NTP,0000,0000,0000,,然后只有在你调查之后
Dialogue: 0,0:20:51.76,0:20:53.36,*Default,NTP,0000,0000,0000,,它的基类你在基类中查找吗
Dialogue: 0,0:20:53.36,0:20:55.04,*Default,NTP,0000,0000,0000,,基类的类将找到
Dialogue: 0,0:20:55.04,0:20:56.88,*Default,NTP,0000,0000,0000,,您的账户存款方式是
Dialogue: 0,0:20:56.88,0:20:58.00,*Default,NTP,0000,0000,0000,,不这样做
Dialogue: 0,0:20:58.00,0:21:01.20,*Default,NTP,0000,0000,0000,,取出押金是一件令人讨厌的事情
Dialogue: 0,0:21:01.20,0:21:04.72,*Default,NTP,0000,0000,0000,,所以嗯是的所以基本上你会发现
Dialogue: 0,0:21:04.72,0:21:05.44,*Default,NTP,0000,0000,0000,,方法
Dialogue: 0,0:21:05.44,0:21:07.52,*Default,NTP,0000,0000,0000,,好吧，这里没有
Dialogue: 0,0:21:07.52,0:21:08.96,*Default,NTP,0000,0000,0000,,除了初始化
Dialogue: 0,0:21:08.96,0:21:11.20,*Default,NTP,0000,0000,0000,,然后这里然后这里然后帐户
Dialogue: 0,0:21:11.20,0:21:12.88,*Default,NTP,0000,0000,0000,,类别以及为什么帐户类别甚至
Dialogue: 0,0:21:12.88,0:21:14.16,*Default,NTP,0000,0000,0000,,虽然这里没有列出
Dialogue: 0,0:21:14.16,0:21:15.76,*Default,NTP,0000,0000,0000,,那是因为它是基类
Dialogue: 0,0:21:15.76,0:21:18.40,*Default,NTP,0000,0000,0000,,这些
Dialogue: 0,0:21:18.64,0:21:21.28,*Default,NTP,0000,0000,0000,,总体来说是正确的
Dialogue: 0,0:21:21.28,0:21:22.40,*Default,NTP,0000,0000,0000,,遗产
Dialogue: 0,0:21:22.40,0:21:24.96,*Default,NTP,0000,0000,0000,,在你之前你会先看看这两个
Dialogue: 0,0:21:24.96,0:21:25.92,*Default,NTP,0000,0000,0000,,曾经看过
Dialogue: 0,0:21:25.92,0:21:29.12,*Default,NTP,0000,0000,0000,,其中之一的基类所以认为
Dialogue: 0,0:21:29.12,0:21:30.48,*Default,NTP,0000,0000,0000,,它就像一棵树
Dialogue: 0,0:21:30.48,0:21:32.80,*Default,NTP,0000,0000,0000,,根目录下有账户类别
Dialogue: 0,0:21:32.80,0:21:35.20,*Default,NTP,0000,0000,0000,,有支票和储蓄两个子类
Dialogue: 0,0:21:35.20,0:21:36.56,*Default,NTP,0000,0000,0000,,然后你就有了一个子类
Dialogue: 0,0:21:36.56,0:21:39.92,*Default,NTP,0000,0000,0000,,努力回到树上
Dialogue: 0,0:21:39.92,0:21:41.20,*Default,NTP,0000,0000,0000,,如果你想知道是否曾经
Dialogue: 0,0:21:41.20,0:21:43.12,*Default,NTP,0000,0000,0000,,搞不清楚是哪件事
Dialogue: 0,0:21:43.12,0:21:44.40,*Default,NTP,0000,0000,0000,,首先发生
Dialogue: 0,0:21:44.40,0:21:46.80,*Default,NTP,0000,0000,0000,,事实上答案是肯定的
Dialogue: 0,0:21:46.80,0:21:48.08,*Default,NTP,0000,0000,0000,,喜欢
Dialogue: 0,0:21:48.08,0:21:50.00,*Default,NTP,0000,0000,0000,,python 现在已经有了第三个版本
Dialogue: 0,0:21:50.00,0:21:51.76,*Default,NTP,0000,0000,0000,,为了解决这个问题，因为
Dialogue: 0,0:21:51.76,0:21:53.60,*Default,NTP,0000,0000,0000,,前两个有错误，所以
Dialogue: 0,0:21:53.60,0:21:55.44,*Default,NTP,0000,0000,0000,,呃，别担心，这已经超出了
Dialogue: 0,0:21:55.44,0:21:56.64,*Default,NTP,0000,0000,0000,,课程的范围但是
Dialogue: 0,0:21:56.64,0:22:00.16,*Default,NTP,0000,0000,0000,,多重继承确实留下了很多
Dialogue: 0,0:22:00.16,0:22:02.08,*Default,NTP,0000,0000,0000,,呃计算机科学家们正在抓紧他们的
Dialogue: 0,0:22:02.08,0:22:03.36,*Default,NTP,0000,0000,0000,,关心到底要发生什么
Dialogue: 0,0:22:03.36,0:22:04.96,*Default,NTP,0000,0000,0000,,发生这就是为什么一般来说你
Dialogue: 0,0:22:04.96,0:22:06.40,*Default,NTP,0000,0000,0000,,应该尽量避免它
Dialogue: 0,0:22:06.40,0:22:08.24,*Default,NTP,0000,0000,0000,,是的，我同意，我认为有一个层次
Dialogue: 0,0:22:08.24,0:22:10.64,*Default,NTP,0000,0000,0000,,继承比我更关心
Dialogue: 0,0:22:10.64,0:22:11.68,*Default,NTP,0000,0000,0000,,但我不认为
Dialogue: 0,0:22:11.68,0:22:12.96,*Default,NTP,0000,0000,0000,,你去的时候应该非常小心
Dialogue: 0,0:22:12.96,0:22:16.08,*Default,NTP,0000,0000,0000,,除此之外，是的，所以问题是
Dialogue: 0,0:22:16.08,0:22:18.48,*Default,NTP,0000,0000,0000,,这张幻灯片有什么关系吗
Dialogue: 0,0:22:18.48,0:22:20.56,*Default,NTP,0000,0000,0000,,期中考试这确实来自过去
Dialogue: 0,0:22:20.56,0:22:24.32,*Default,NTP,0000,0000,0000,,期中考试，所以
Dialogue: 0,0:22:24.32,0:22:26.08,*Default,NTP,0000,0000,0000,,我们不会问这种问题
Dialogue: 0,0:22:26.08,0:22:28.08,*Default,NTP,0000,0000,0000,,因为嗯
Dialogue: 0,0:22:28.08,0:22:29.44,*Default,NTP,0000,0000,0000,,你知道你可以运行它看看
Dialogue: 0,0:22:29.44,0:22:31.44,*Default,NTP,0000,0000,0000,,发生了什么嗯
Dialogue: 0,0:22:31.44,0:22:32.88,*Default,NTP,0000,0000,0000,,我想这个学期我们就要去
Dialogue: 0,0:22:32.88,0:22:35.36,*Default,NTP,0000,0000,0000,,更加专注于把事情做好
Dialogue: 0,0:22:35.36,0:22:37.12,*Default,NTP,0000,0000,0000,,而不是确切地知道
Dialogue: 0,0:22:37.12,0:22:39.44,*Default,NTP,0000,0000,0000,,力学，但正是力学
Dialogue: 0,0:22:39.44,0:22:40.96,*Default,NTP,0000,0000,0000,,对象系统如何像我们一样工作
Dialogue: 0,0:22:40.96,0:22:42.56,*Default,NTP,0000,0000,0000,,描述它是课程的一部分
Dialogue: 0,0:22:42.56,0:22:44.72,*Default,NTP,0000,0000,0000,,所以你应该知道，但是我会
Dialogue: 0,0:22:44.72,0:22:46.32,*Default,NTP,0000,0000,0000,,我猜这个更受关注
Dialogue: 0,0:22:46.32,0:22:47.60,*Default,NTP,0000,0000,0000,,学期就像
Dialogue: 0,0:22:47.60,0:22:49.20,*Default,NTP,0000,0000,0000,,你知道构建东西实施
Dialogue: 0,0:22:49.20,0:22:51.28,*Default,NTP,0000,0000,0000,,事物而不是通过追踪
Dialogue: 0,0:22:51.28,0:22:52.80,*Default,NTP,0000,0000,0000,,复杂的例子
Dialogue: 0,0:22:52.80,0:22:55.52,*Default,NTP,0000,0000,0000,,由于在线格式和
Dialogue: 0,0:22:55.52,0:22:56.56,*Default,NTP,0000,0000,0000,,这很好
Dialogue: 0,0:22:56.56,0:22:58.08,*Default,NTP,0000,0000,0000,,生活也是如此，因为你知道得到
Dialogue: 0,0:22:58.08,0:23:00.08,*Default,NTP,0000,0000,0000,,完成的事情比
Dialogue: 0,0:23:00.08,0:23:00.88,*Default,NTP,0000,0000,0000,,理解
Dialogue: 0,0:23:00.88,0:23:03.92,*Default,NTP,0000,0000,0000,,我的代码非常复杂，但是你知道
Dialogue: 0,0:23:03.92,0:23:05.44,*Default,NTP,0000,0000,0000,,在某些情况下你会发现
Dialogue: 0,0:23:05.44,0:23:06.88,*Default,NTP,0000,0000,0000,,那里有一些复杂的事情
Dialogue: 0,0:23:06.88,0:23:08.40,*Default,NTP,0000,0000,0000,,世界，你必须追踪它们
Dialogue: 0,0:23:08.40,0:23:11.28,*Default,NTP,0000,0000,0000,,所以这是一项需要培养的有用技能
Dialogue: 0,0:23:11.28,0:23:13.12,*Default,NTP,0000,0000,0000,,是的，好问题，那么你如何保持
Dialogue: 0,0:23:13.12,0:23:15.04,*Default,NTP,0000,0000,0000,,跟踪什么是实例属性
Dialogue: 0,0:23:15.04,0:23:16.96,*Default,NTP,0000,0000,0000,,什么是类属性以及哪个
Dialogue: 0,0:23:16.96,0:23:18.24,*Default,NTP,0000,0000,0000,,一个是哪个
Dialogue: 0,0:23:18.24,0:23:20.00,*Default,NTP,0000,0000,0000,,我认为实例属性只是
Dialogue: 0,0:23:20.00,0:23:21.52,*Default,NTP,0000,0000,0000,,一般比较常见
Dialogue: 0,0:23:21.52,0:23:24.80,*Default,NTP,0000,0000,0000,,因为通常当你创建时
Dialogue: 0,0:23:24.80,0:23:28.24,*Default,NTP,0000,0000,0000,,你真正想要关注的对象
Dialogue: 0,0:23:28.24,0:23:30.32,*Default,NTP,0000,0000,0000,,关于这个特定物体的真实情况是什么
Dialogue: 0,0:23:30.32,0:23:32.24,*Default,NTP,0000,0000,0000,,你只需将该状态存储为
Dialogue: 0,0:23:32.24,0:23:35.20,*Default,NTP,0000,0000,0000,,实例属性，但它不像
Dialogue: 0,0:23:35.20,0:23:36.00,*Default,NTP,0000,0000,0000,,类属性
Dialogue: 0,0:23:36.00,0:23:38.08,*Default,NTP,0000,0000,0000,,不要偶尔出现，这样你
Dialogue: 0,0:23:38.08,0:23:39.92,*Default,NTP,0000,0000,0000,,当然必须了解他们
Dialogue: 0,0:23:39.92,0:23:41.60,*Default,NTP,0000,0000,0000,,呃，在这个特殊情况下，
Dialogue: 0,0:23:41.60,0:23:43.52,*Default,NTP,0000,0000,0000,,实例属性和类属性
Dialogue: 0,0:23:43.52,0:23:44.72,*Default,NTP,0000,0000,0000,,分享一个名字
Dialogue: 0,0:23:44.72,0:23:46.40,*Default,NTP,0000,0000,0000,,通常在实践中会出现
Dialogue: 0,0:23:46.40,0:23:48.24,*Default,NTP,0000,0000,0000,,你想找点事做
Dialogue: 0,0:23:48.24,0:23:51.04,*Default,NTP,0000,0000,0000,,与原来不同的行为
Dialogue: 0,0:23:51.04,0:23:52.24,*Default,NTP,0000,0000,0000,,目的是为了让你想要
Dialogue: 0,0:23:52.24,0:23:54.56,*Default,NTP,0000,0000,0000,,就像改变这种特殊的方式
Dialogue: 0,0:23:54.56,0:23:56.08,*Default,NTP,0000,0000,0000,,实例可以正常运行
Dialogue: 0,0:23:56.08,0:23:57.92,*Default,NTP,0000,0000,0000,,不同于
Dialogue: 0,0:23:57.92,0:24:00.80,*Default,NTP,0000,0000,0000,,无论是谁写了这门课，而你
Dialogue: 0,0:24:00.80,0:24:01.60,*Default,NTP,0000,0000,0000,,知道
Dialogue: 0,0:24:01.60,0:24:04.08,*Default,NTP,0000,0000,0000,,尽可能避免这种情况，但是
Dialogue: 0,0:24:04.08,0:24:05.68,*Default,NTP,0000,0000,0000,,有时当你正在构建
Dialogue: 0,0:24:05.68,0:24:06.96,*Default,NTP,0000,0000,0000,,别人的代码你拿不到
Dialogue: 0,0:24:06.96,0:24:08.16,*Default,NTP,0000,0000,0000,,他们要改变它，那么你就必须
Dialogue: 0,0:24:08.16,0:24:10.00,*Default,NTP,0000,0000,0000,,通过添加实例自行更改
Dialogue: 0,0:24:10.00,0:24:11.44,*Default,NTP,0000,0000,0000,,具有相同名称的属性
Dialogue: 0,0:24:11.44,0:24:12.80,*Default,NTP,0000,0000,0000,,他们的阶级属性
Dialogue: 0,0:24:12.80,0:24:14.80,*Default,NTP,0000,0000,0000,,所以这并不是永远不会发生呃
Dialogue: 0,0:24:14.80,0:24:16.24,*Default,NTP,0000,0000,0000,,在实践中但是
Dialogue: 0,0:24:16.24,0:24:18.56,*Default,NTP,0000,0000,0000,,这是三种情况中最罕见的，所以
Dialogue: 0,0:24:18.56,0:24:20.24,*Default,NTP,0000,0000,0000,,最常见的是一切都是实例
Dialogue: 0,0:24:20.24,0:24:21.04,*Default,NTP,0000,0000,0000,,属性
Dialogue: 0,0:24:21.04,0:24:22.88,*Default,NTP,0000,0000,0000,,第二个最常见的是有类
Dialogue: 0,0:24:22.88,0:24:24.08,*Default,NTP,0000,0000,0000,,属性在那里，但他们有
Dialogue: 0,0:24:24.08,0:24:25.36,*Default,NTP,0000,0000,0000,,与实例的名称不同
Dialogue: 0,0:24:25.36,0:24:26.24,*Default,NTP,0000,0000,0000,,属性
Dialogue: 0,0:24:26.24,0:24:27.60,*Default,NTP,0000,0000,0000,,然后第三种情况是
Dialogue: 0,0:24:27.60,0:24:29.20,*Default,NTP,0000,0000,0000,,可能您有名字冲突
Dialogue: 0,0:24:29.20,0:24:31.20,*Default,NTP,0000,0000,0000,,你应该知道会发生什么
Dialogue: 0,0:24:31.20,0:24:32.72,*Default,NTP,0000,0000,0000,,是的，所以问题是关于这个的
Dialogue: 0,0:24:32.72,0:24:34.88,*Default,NTP,0000,0000,0000,,最大子序列问题
Dialogue: 0,0:24:34.88,0:24:38.24,*Default,NTP,0000,0000,0000,,实验室四问题五
Dialogue: 0,0:24:38.24,0:24:41.12,*Default,NTP,0000,0000,0000,,呃，如果你尝试追踪它，你会得到相当
Dialogue: 0,0:24:41.12,0:24:42.72,*Default,NTP,0000,0000,0000,,很困惑，因为有很多
Dialogue: 0,0:24:42.72,0:24:44.40,*Default,NTP,0000,0000,0000,,正在进行的通话以及这一切是如何进行的
Dialogue: 0,0:24:44.40,0:24:46.00,*Default,NTP,0000,0000,0000,,适合在一起
Dialogue: 0,0:24:46.00,0:24:48.16,*Default,NTP,0000,0000,0000,,那么你还能如何理解
Dialogue: 0,0:24:48.16,0:24:49.44,*Default,NTP,0000,0000,0000,,执行
Dialogue: 0,0:24:49.44,0:24:51.28,*Default,NTP,0000,0000,0000,,好吧，我一开始就说它是
Dialogue: 0,0:24:51.28,0:24:53.84,*Default,NTP,0000,0000,0000,,经常出现的情况是追溯
Dialogue: 0,0:24:53.84,0:24:57.12,*Default,NTP,0000,0000,0000,,呃，树递归不是这样的东西
Dialogue: 0,0:24:57.12,0:24:57.76,*Default,NTP,0000,0000,0000,,人类
Dialogue: 0,0:24:57.76,0:25:01.12,*Default,NTP,0000,0000,0000,,可以容忍，就这样
Dialogue: 0,0:25:01.12,0:25:04.64,*Default,NTP,0000,0000,0000,,有时真的很乱，所以是对的
Dialogue: 0,0:25:04.64,0:25:06.08,*Default,NTP,0000,0000,0000,,答案是改变你的方式
Dialogue: 0,0:25:06.08,0:25:07.28,*Default,NTP,0000,0000,0000,,接近理解
Dialogue: 0,0:25:07.28,0:25:09.28,*Default,NTP,0000,0000,0000,,呃实施要远离
Dialogue: 0,0:25:09.28,0:25:11.68,*Default,NTP,0000,0000,0000,,追踪而不是仅仅处理
Dialogue: 0,0:25:11.68,0:25:14.40,*Default,NTP,0000,0000,0000,,递归调用作为抽象
Dialogue: 0,0:25:14.40,0:25:16.00,*Default,NTP,0000,0000,0000,,他们应该做的事情
Dialogue: 0,0:25:16.00,0:25:18.00,*Default,NTP,0000,0000,0000,,但他们如何做不是你的问题
Dialogue: 0,0:25:18.00,0:25:19.52,*Default,NTP,0000,0000,0000,,然后就像你可以把它放在一起
Dialogue: 0,0:25:19.52,0:25:20.64,*Default,NTP,0000,0000,0000,,但这不是
Dialogue: 0,0:25:20.64,0:25:23.52,*Default,NTP,0000,0000,0000,,不像明显或容易所以嗯所以也许
Dialogue: 0,0:25:23.52,0:25:25.12,*Default,NTP,0000,0000,0000,,我们可以通过特定的方式来讨论这个问题
Dialogue: 0,0:25:25.12,0:25:25.92,*Default,NTP,0000,0000,0000,,例子如此
Dialogue: 0,0:25:25.92,0:25:28.32,*Default,NTP,0000,0000,0000,,也许当我读到这篇文章时也许哈尼可以
Dialogue: 0,0:25:28.32,0:25:30.56,*Default,NTP,0000,0000,0000,,呃说这对他来说是否有意义
Dialogue: 0,0:25:30.56,0:25:32.64,*Default,NTP,0000,0000,0000,,我会再添加一件事
Dialogue: 0,0:25:32.64,0:25:34.72,*Default,NTP,0000,0000,0000,,约翰是绝对正确的
Dialogue: 0,0:25:34.72,0:25:37.12,*Default,NTP,0000,0000,0000,,跟踪树递归非常困难
Dialogue: 0,0:25:37.12,0:25:39.76,*Default,NTP,0000,0000,0000,,必须在你的记忆中保留很多东西
Dialogue: 0,0:25:39.76,0:25:42.40,*Default,NTP,0000,0000,0000,,嗯，解决这个问题的一种方法就是像他一样
Dialogue: 0,0:25:42.40,0:25:43.04,*Default,NTP,0000,0000,0000,,刚说
Dialogue: 0,0:25:43.04,0:25:44.96,*Default,NTP,0000,0000,0000,,只是以不同的方式思考它
Dialogue: 0,0:25:44.96,0:25:46.80,*Default,NTP,0000,0000,0000,,这不是关于追踪，而是关于
Dialogue: 0,0:25:46.80,0:25:49.76,*Default,NTP,0000,0000,0000,,思考事物的基本本质
Dialogue: 0,0:25:49.76,0:25:51.04,*Default,NTP,0000,0000,0000,,一
Dialogue: 0,0:25:51.04,0:25:53.52,*Default,NTP,0000,0000,0000,,这些功能，它们只是做什么
Dialogue: 0,0:25:53.52,0:25:55.12,*Default,NTP,0000,0000,0000,,你希望他们做，另一个是
Dialogue: 0,0:25:55.12,0:25:56.72,*Default,NTP,0000,0000,0000,,仅使用玩具示例
Dialogue: 0,0:25:56.72,0:25:58.64,*Default,NTP,0000,0000,0000,,所以如果你的输入非常小
Dialogue: 0,0:25:58.64,0:26:00.72,*Default,NTP,0000,0000,0000,,有时可以保留递归a
Dialogue: 0,0:26:00.72,0:26:02.24,*Default,NTP,0000,0000,0000,,容易一点
Dialogue: 0,0:26:02.24,0:26:03.76,*Default,NTP,0000,0000,0000,,而不是这样的事情
Dialogue: 0,0:26:03.76,0:26:05.76,*Default,NTP,0000,0000,0000,,你知道一个可笑的事吗
Dialogue: 0,0:26:05.76,0:26:09.20,*Default,NTP,0000,0000,0000,,步骤数所以嗯我确实认为它
Dialogue: 0,0:26:09.20,0:26:11.04,*Default,NTP,0000,0000,0000,,确实需要稍微不同的方式
Dialogue: 0,0:26:11.04,0:26:12.48,*Default,NTP,0000,0000,0000,,思考而不是仅仅画图
Dialogue: 0,0:26:12.48,0:26:14.08,*Default,NTP,0000,0000,0000,,环境图和映射一切
Dialogue: 0,0:26:14.08,0:26:14.64,*Default,NTP,0000,0000,0000,,出去
Dialogue: 0,0:26:14.64,0:26:18.00,*Default,NTP,0000,0000,0000,,一行一行 是的
Dialogue: 0,0:26:18.00,0:26:20.96,*Default,NTP,0000,0000,0000,,这实际上是很好的建议就像
Dialogue: 0,0:26:20.96,0:26:21.36,*Default,NTP,0000,0000,0000,,你知道
Dialogue: 0,0:26:21.36,0:26:23.28,*Default,NTP,0000,0000,0000,,考虑可能是两位数或三位数字
Dialogue: 0,0:26:23.28,0:26:25.36,*Default,NTP,0000,0000,0000,,例如如果你想追踪它
Dialogue: 0,0:26:25.36,0:26:27.44,*Default,NTP,0000,0000,0000,,不要追踪五位数字的示例
Dialogue: 0,0:26:27.44,0:26:28.64,*Default,NTP,0000,0000,0000,,将会做某事的某事
Dialogue: 0,0:26:28.64,0:26:29.84,*Default,NTP,0000,0000,0000,,每一个数字都会得到
Dialogue: 0,0:26:29.84,0:26:31.04,*Default,NTP,0000,0000,0000,,太乱了
Dialogue: 0,0:26:31.04,0:26:33.28,*Default,NTP,0000,0000,0000,,那么这将如何返回最大值
Dialogue: 0,0:26:33.28,0:26:35.20,*Default,NTP,0000,0000,0000,,a 的子皇后序列
Dialogue: 0,0:26:35.20,0:26:37.84,*Default,NTP,0000,0000,0000,,最大长度 t 可以在
Dialogue: 0,0:26:37.84,0:26:38.72,*Default,NTP,0000,0000,0000,,给定的数字
Dialogue: 0,0:26:38.72,0:26:40.27,*Default,NTP,0000,0000,0000,,n
Dialogue: 0,0:26:40.27,0:26:41.76,*Default,NTP,0000,0000,0000,,[音乐]
Dialogue: 0,0:26:41.76,0:26:45.44,*Default,NTP,0000,0000,0000,,好吧，如果 t 为零，那么我认为我们只
Dialogue: 0,0:26:45.44,0:26:46.96,*Default,NTP,0000,0000,0000,,有一个选择
Dialogue: 0,0:26:46.96,0:26:48.64,*Default,NTP,0000,0000,0000,,即不采用任何数字
Dialogue: 0,0:26:48.64,0:26:50.56,*Default,NTP,0000,0000,0000,,总共有 n 个
Dialogue: 0,0:26:50.56,0:26:52.32,*Default,NTP,0000,0000,0000,,但接下来我们必须决定我们是否
Dialogue: 0,0:26:52.32,0:26:54.08,*Default,NTP,0000,0000,0000,,保留n的第一位数字
Dialogue: 0,0:26:54.08,0:26:55.60,*Default,NTP,0000,0000,0000,,或者我猜 n 的最后一个边是
Dialogue: 0,0:26:55.60,0:26:56.88,*Default,NTP,0000,0000,0000,,最容易访问的东西，因为我们可以
Dialogue: 0,0:26:56.88,0:26:58.24,*Default,NTP,0000,0000,0000,,像这样访问它我们是否保留
Dialogue: 0,0:26:58.24,0:26:59.68,*Default,NTP,0000,0000,0000,,n 的最后一位数字
Dialogue: 0,0:26:59.68,0:27:04.00,*Default,NTP,0000,0000,0000,,或者不是那么嗯
Dialogue: 0,0:27:04.00,0:27:06.64,*Default,NTP,0000,0000,0000,,我认为选择一个值很有帮助
Dialogue: 0,0:27:06.64,0:27:07.28,*Default,NTP,0000,0000,0000,,n
Dialogue: 0,0:27:07.28,0:27:10.72,*Default,NTP,0000,0000,0000,,假设 n 是一二三
Dialogue: 0,0:27:10.72,0:27:14.96,*Default,NTP,0000,0000,0000,,有两个类似的东西
Dialogue: 0,0:27:14.96,0:27:18.24,*Default,NTP,0000,0000,0000,,百分之十会给你什么
Dialogue: 0,0:27:18.24,0:27:18.96,*Default,NTP,0000,0000,0000,,标记它
Dialogue: 0,0:27:18.96,0:27:20.88,*Default,NTP,0000,0000,0000,,这样会给你三个那部分
Dialogue: 0,0:27:20.88,0:27:22.64,*Default,NTP,0000,0000,0000,,我认为值得追踪
Dialogue: 0,0:27:22.64,0:27:25.36,*Default,NTP,0000,0000,0000,,剩下的除以 10 得出
Dialogue: 0,0:27:25.36,0:27:26.08,*Default,NTP,0000,0000,0000,,你
Dialogue: 0,0:27:26.08,0:27:29.36,*Default,NTP,0000,0000,0000,,12.我想你知道那些片段
Dialogue: 0,0:27:29.36,0:27:32.08,*Default,NTP,0000,0000,0000,,你现在应该明确地追踪做什么
Dialogue: 0,0:27:32.08,0:27:32.96,*Default,NTP,0000,0000,0000,,你做
Dialogue: 0,0:27:32.96,0:27:36.32,*Default,NTP,0000,0000,0000,,好吧，你要么要两个
Dialogue: 0,0:27:36.32,0:27:37.84,*Default,NTP,0000,0000,0000,,12 开始的数字
Dialogue: 0,0:27:37.84,0:27:39.36,*Default,NTP,0000,0000,0000,,或者你要从中取出一位数字
Dialogue: 0,0:27:39.36,0:27:41.36,*Default,NTP,0000,0000,0000,,12 和 3
Dialogue: 0,0:27:41.36,0:27:43.92,*Default,NTP,0000,0000,0000,,最后就像保留一样
Dialogue: 0,0:27:43.92,0:27:44.72,*Default,NTP,0000,0000,0000,,3
Dialogue: 0,0:27:44.72,0:27:46.48,*Default,NTP,0000,0000,0000,,但这样你就会少一位数字
Dialogue: 0,0:27:46.48,0:27:48.08,*Default,NTP,0000,0000,0000,,其余部分或
Dialogue: 0,0:27:48.08,0:27:50.88,*Default,NTP,0000,0000,0000,,你会忘记这三个，但你会保留两个
Dialogue: 0,0:27:50.88,0:27:52.32,*Default,NTP,0000,0000,0000,,现在最后的数字
Dialogue: 0,0:27:52.32,0:27:54.80,*Default,NTP,0000,0000,0000,,你知道你可以提前思考你可以说
Dialogue: 0,0:27:54.80,0:27:56.24,*Default,NTP,0000,0000,0000,,好吧，我应该做的是
Dialogue: 0,0:27:56.24,0:27:58.96,*Default,NTP,0000,0000,0000,,保留三个因为它很大但是
Dialogue: 0,0:27:58.96,0:28:00.88,*Default,NTP,0000,0000,0000,,python 还不知道
Dialogue: 0,0:28:00.88,0:28:03.68,*Default,NTP,0000,0000,0000,,所以要避免解决问题的本能
Dialogue: 0,0:28:03.68,0:28:04.72,*Default,NTP,0000,0000,0000,,问题为
Dialogue: 0,0:28:04.72,0:28:07.68,*Default,NTP,0000,0000,0000,,python 而只是像让
Dialogue: 0,0:28:07.68,0:28:08.32,*Default,NTP,0000,0000,0000,,电脑
Dialogue: 0,0:28:08.32,0:28:10.24,*Default,NTP,0000,0000,0000,,解决细节本身，这样你
Dialogue: 0,0:28:10.24,0:28:11.84,*Default,NTP,0000,0000,0000,,有组件
Dialogue: 0,0:28:11.84,0:28:14.16,*Default,NTP,0000,0000,0000,,现在你的工作就是说好我有两个
Dialogue: 0,0:28:14.16,0:28:15.36,*Default,NTP,0000,0000,0000,,选项
Dialogue: 0,0:28:15.36,0:28:18.48,*Default,NTP,0000,0000,0000,,选项一让我们说像
Dialogue: 0,0:28:18.48,0:28:21.52,*Default,NTP,0000,0000,0000,,保留最后一位数字是选项一
Dialogue: 0,0:28:21.52,0:28:23.84,*Default,NTP,0000,0000,0000,,这意味着三是最后一个
Dialogue: 0,0:28:23.84,0:28:25.12,*Default,NTP,0000,0000,0000,,数字
Dialogue: 0,0:28:25.12,0:28:28.48,*Default,NTP,0000,0000,0000,,这个新号码如何输入
Dialogue: 0,0:28:28.48,0:28:28.88,*Default,NTP,0000,0000,0000,,那里
Dialogue: 0,0:28:28.88,0:28:32.48,*Default,NTP,0000,0000,0000,,你添加它，然后在这里添加这个表达式
Dialogue: 0,0:28:32.48,0:28:36.00,*Default,NTP,0000,0000,0000,,需要是所有其他数字，所以
Dialogue: 0,0:28:36.00,0:28:39.12,*Default,NTP,0000,0000,0000,,它必须有一个 0 代替它的位置
Dialogue: 0,0:28:39.12,0:28:42.32,*Default,NTP,0000,0000,0000,,这就是 times 10 的来源
Dialogue: 0,0:28:42.32,0:28:44.16,*Default,NTP,0000,0000,0000,,以及你如何获得剩下的
Dialogue: 0,0:28:44.16,0:28:45.68,*Default,NTP,0000,0000,0000,,数字很​​好，这就是你做你的地方
Dialogue: 0,0:28:45.68,0:28:47.12,*Default,NTP,0000,0000,0000,,递归调用
Dialogue: 0,0:28:47.12,0:28:50.16,*Default,NTP,0000,0000,0000,,得到其余的最大子序列
Dialogue: 0,0:28:50.16,0:28:52.88,*Default,NTP,0000,0000,0000,,使用 t 减一，因为你已经
Dialogue: 0,0:28:52.88,0:28:53.52,*Default,NTP,0000,0000,0000,,用光
Dialogue: 0,0:28:53.52,0:28:56.48,*Default,NTP,0000,0000,0000,,一个数字是最后一个数字，而你没有
Dialogue: 0,0:28:56.48,0:28:58.08,*Default,NTP,0000,0000,0000,,需要这些括号我只是想
Dialogue: 0,0:28:58.08,0:29:01.44,*Default,NTP,0000,0000,0000,,在我们前进的过程中提供指导
Dialogue: 0,0:29:01.44,0:29:04.80,*Default,NTP,0000,0000,0000,,嗯，我想你可以追踪
Dialogue: 0,0:29:04.80,0:29:06.08,*Default,NTP,0000,0000,0000,,遵循方式
Dialogue: 0,0:29:06.08,0:29:08.40,*Default,NTP,0000,0000,0000,,而不是看max的身体
Dialogue: 0,0:29:08.40,0:29:09.44,*Default,NTP,0000,0000,0000,,子序列
Dialogue: 0,0:29:09.44,0:29:12.80,*Default,NTP,0000,0000,0000,,你应该问问自己我是否通过了12
Dialogue: 0,0:29:12.80,0:29:16.32,*Default,NTP,0000,0000,0000,,1 进入这里我会得到什么
Dialogue: 0,0:29:16.32,0:29:18.32,*Default,NTP,0000,0000,0000,,你知道这个东西的行为
Dialogue: 0,0:29:18.32,0:29:20.40,*Default,NTP,0000,0000,0000,,你知道你会得到 2
Dialogue: 0,0:29:20.40,0:29:22.80,*Default,NTP,0000,0000,0000,,所以 2 乘以 10 加 3 就可以得到
Dialogue: 0,0:29:22.80,0:29:24.40,*Default,NTP,0000,0000,0000,,你 23.
Dialogue: 0,0:29:24.40,0:29:25.68,*Default,NTP,0000,0000,0000,,这就是它的程度
Dialogue: 0,0:29:25.68,0:29:28.08,*Default,NTP,0000,0000,0000,,追踪的意义是假装这
Dialogue: 0,0:29:28.08,0:29:29.84,*Default,NTP,0000,0000,0000,,是一些做它事情的黑匣子
Dialogue: 0,0:29:29.84,0:29:31.44,*Default,NTP,0000,0000,0000,,但你不知道它是如何做到的
Dialogue: 0,0:29:31.44,0:29:33.44,*Default,NTP,0000,0000,0000,,但你知道它的结果是什么
Dialogue: 0,0:29:33.44,0:29:35.84,*Default,NTP,0000,0000,0000,,就像 12 中最大的数字是多少
Dialogue: 0,0:29:35.84,0:29:38.96,*Default,NTP,0000,0000,0000,,好吧，这是两个，然后是另一个选项
Dialogue: 0,0:29:38.96,0:29:43.12,*Default,NTP,0000,0000,0000,,是会离开
Dialogue: 0,0:29:43.12,0:29:47.52,*Default,NTP,0000,0000,0000,,去掉最后一位数字怎么样？
Dialogue: 0,0:29:47.52,0:29:49.68,*Default,NTP,0000,0000,0000,,你不会用最后一个你只是
Dialogue: 0,0:29:49.68,0:29:50.96,*Default,NTP,0000,0000,0000,,休息时会利用一切，除了你
Dialogue: 0,0:29:50.96,0:29:53.60,*Default,NTP,0000,0000,0000,,开始使用 t 位数字
Dialogue: 0,0:29:53.60,0:29:55.04,*Default,NTP,0000,0000,0000,,如果你想返回最大的
Dialogue: 0,0:29:55.04,0:29:56.64,*Default,NTP,0000,0000,0000,,一个然后你就取其中的最大值
Dialogue: 0,0:29:56.64,0:29:58.08,*Default,NTP,0000,0000,0000,,二
Dialogue: 0,0:29:58.08,0:30:00.24,*Default,NTP,0000,0000,0000,,当你追踪这个你
Dialogue: 0,0:30:00.24,0:30:01.92,*Default,NTP,0000,0000,0000,,想说哦，这是怎么回事
Dialogue: 0,0:30:01.92,0:30:02.72,*Default,NTP,0000,0000,0000,,返回
Dialogue: 0,0:30:02.72,0:30:05.04,*Default,NTP,0000,0000,0000,,好吧，这是 12，这是 2，所以这是
Dialogue: 0,0:30:05.04,0:30:07.28,*Default,NTP,0000,0000,0000,,即将返回 12.
Dialogue: 0,0:30:07.28,0:30:09.52,*Default,NTP,0000,0000,0000,,那么呃这会返回什么
Dialogue: 0,0:30:09.52,0:30:12.48,*Default,NTP,0000,0000,0000,,那么 12 和 23 的最大值是 23。所以在
Dialogue: 0,0:30:12.48,0:30:13.92,*Default,NTP,0000,0000,0000,,至少在这个例子中似乎是
Dialogue: 0,0:30:13.92,0:30:15.36,*Default,NTP,0000,0000,0000,,去做正确的事
Dialogue: 0,0:30:15.36,0:30:16.64,*Default,NTP,0000,0000,0000,,这就是我想要的追踪
Dialogue: 0,0:30:16.64,0:30:18.40,*Default,NTP,0000,0000,0000,,在树中做递归问题
Dialogue: 0,0:30:18.40,0:30:20.24,*Default,NTP,0000,0000,0000,,我们意识到我们再也没有回去过
Dialogue: 0,0:30:20.24,0:30:21.76,*Default,NTP,0000,0000,0000,,通过最大子序列的主体
Dialogue: 0,0:30:21.76,0:30:22.40,*Default,NTP,0000,0000,0000,,再次
Dialogue: 0,0:30:22.40,0:30:24.16,*Default,NTP,0000,0000,0000,,相反，我们只是问自己什么是
Dialogue: 0,0:30:24.16,0:30:28.00,*Default,NTP,0000,0000,0000,,这将返回并停在那里
Dialogue: 0,0:30:28.08,0:30:30.40,*Default,NTP,0000,0000,0000,,所以这就是信仰的巨大飞跃
Dialogue: 0,0:30:30.40,0:30:31.36,*Default,NTP,0000,0000,0000,,你必须的地方
Dialogue: 0,0:30:31.36,0:30:33.68,*Default,NTP,0000,0000,0000,,相信你正在做的事情就是在做
Dialogue: 0,0:30:33.68,0:30:34.88,*Default,NTP,0000,0000,0000,,正确的事情，顺便说一句，如果你是
Dialogue: 0,0:30:34.88,0:30:36.56,*Default,NTP,0000,0000,0000,,错误的话代码将无法工作
Dialogue: 0,0:30:36.56,0:30:41.76,*Default,NTP,0000,0000,0000,,就这样，呃等等
Dialogue: 0,0:30:42.00,0:30:45.36,*Default,NTP,0000,0000,0000,,哦，我想还有另外一个是的
Dialogue: 0,0:30:45.36,0:30:48.48,*Default,NTP,0000,0000,0000,,哦，那我们就这样吧
Dialogue: 0,0:30:48.48,0:30:51.60,*Default,NTP,0000,0000,0000,,抱歉，章节不错
Dialogue: 0,0:30:51.84,0:30:54.56,*Default,NTP,0000,0000,0000,,是的，所以无论如何，呃，就是这样
Dialogue: 0,0:30:54.56,0:30:55.12,*Default,NTP,0000,0000,0000,,故事
Dialogue: 0,0:30:55.12,0:30:56.80,*Default,NTP,0000,0000,0000,,就是不要尝试追踪
Dialogue: 0,0:30:56.80,0:30:58.64,*Default,NTP,0000,0000,0000,,下次通话，因为您将要
Dialogue: 0,0:30:58.64,0:30:59.60,*Default,NTP,0000,0000,0000,,困惑了
Dialogue: 0,0:30:59.60,0:31:01.28,*Default,NTP,0000,0000,0000,,如果你想让python画
Dialogue: 0,0:31:01.28,0:31:02.72,*Default,NTP,0000,0000,0000,,为您提供环境图，以便您可以
Dialogue: 0,0:31:02.72,0:31:04.40,*Default,NTP,0000,0000,0000,,看着它发生就好了
Dialogue: 0,0:31:04.40,0:31:06.64,*Default,NTP,0000,0000,0000,,但亲手做确实是真的
