[Script Info]
; Script generated by Bilibili Evolved Danmaku Converter
; https://github.com/the1812/Bilibili-Evolved/
Title: Lecture 10. Q&A - Lecture 10. Q&A
ScriptType: v4.00+
PlayResX: 1152
PlayResY: 720
Timer: 10.0000
WrapStyle: 0
ScaledBorderAndShadow: no

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: TopLeft,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,7,32,32,32,0
Style: TopCenter,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,8,32,32,32,0
Style: TopRight,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,9,32,32,32,0
Style: BottomLeft,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,1,32,32,32,0
Style: BottomCenter,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,2,32,32,32,0
Style: BottomRight,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,3,32,32,32,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.80,0:00:03.12,BottomCenter,,0,0,0,,here's the 61a lecture 10
Dialogue: 0,0:00:03.12,0:00:06.48,BottomCenter,,0,0,0,,q a yeah the question is about what does
Dialogue: 0,0:00:06.48,0:00:07.60,BottomCenter,,0,0,0,,it mean to escape
Dialogue: 0,0:00:07.60,0:00:10.16,BottomCenter,,0,0,0,,a character so typically when you put
Dialogue: 0,0:00:10.16,0:00:10.96,BottomCenter,,0,0,0,,something in
Dialogue: 0,0:00:10.96,0:00:14.88,BottomCenter,,0,0,0,,in quotes for example every character is
Dialogue: 0,0:00:14.88,0:00:17.60,BottomCenter,,0,0,0,,processed or interpreted by python when
Dialogue: 0,0:00:17.60,0:00:19.20,BottomCenter,,0,0,0,,you put a backslash
Dialogue: 0,0:00:19.20,0:00:21.84,BottomCenter,,0,0,0,,the not the division one the other one
Dialogue: 0,0:00:21.84,0:00:22.24,BottomCenter,,0,0,0,,um
Dialogue: 0,0:00:22.24,0:00:24.72,BottomCenter,,0,0,0,,essentially what python does is it takes
Dialogue: 0,0:00:24.72,0:00:26.24,BottomCenter,,0,0,0,,the next character
Dialogue: 0,0:00:26.24,0:00:28.64,BottomCenter,,0,0,0,,and bundles it up with that backslash so
Dialogue: 0,0:00:28.64,0:00:29.52,BottomCenter,,0,0,0,,backslash
Dialogue: 0,0:00:29.52,0:00:31.68,BottomCenter,,0,0,0,,t as john is writing on the screen right
Dialogue: 0,0:00:31.68,0:00:33.68,BottomCenter,,0,0,0,,now is a tab
Dialogue: 0,0:00:33.68,0:00:35.68,BottomCenter,,0,0,0,,so it doesn't treat it as two characters
Dialogue: 0,0:00:35.68,0:00:37.20,BottomCenter,,0,0,0,,backslash t
Dialogue: 0,0:00:37.20,0:00:39.68,BottomCenter,,0,0,0,,it's one character so the escaping of a
Dialogue: 0,0:00:39.68,0:00:40.80,BottomCenter,,0,0,0,,character means
Dialogue: 0,0:00:40.80,0:00:42.40,BottomCenter,,0,0,0,,you're essentially creating a special
Dialogue: 0,0:00:42.40,0:00:44.64,BottomCenter,,0,0,0,,symbol uh there's a tab
Dialogue: 0,0:00:44.64,0:00:46.32,BottomCenter,,0,0,0,,there's a new line and there's a number
Dialogue: 0,0:00:46.32,0:00:49.04,BottomCenter,,0,0,0,,of other of these as well
Dialogue: 0,0:00:49.04,0:00:50.88,BottomCenter,,0,0,0,,so here's a good example that john is
Dialogue: 0,0:00:50.88,0:00:52.16,BottomCenter,,0,0,0,,showing you
Dialogue: 0,0:00:52.16,0:00:54.88,BottomCenter,,0,0,0,,the length of hello there oh by the way
Dialogue: 0,0:00:54.88,0:00:56.40,BottomCenter,,0,0,0,,when you print hello there notice that
Dialogue: 0,0:00:56.40,0:00:58.16,BottomCenter,,0,0,0,,you get that nice tab
Dialogue: 0,0:00:58.16,0:01:00.56,BottomCenter,,0,0,0,,it's replacing slash t that's escaped
Dialogue: 0,0:01:00.56,0:01:01.52,BottomCenter,,0,0,0,,out
Dialogue: 0,0:01:01.52,0:01:03.43,BottomCenter,,0,0,0,,and then the length of that list is the
Dialogue: 0,0:01:03.43,0:01:05.28,BottomCenter,,0,0,0,,length of hello which is five
Dialogue: 0,0:01:05.28,0:01:07.68,BottomCenter,,0,0,0,,the length of there that is five and
Dialogue: 0,0:01:07.68,0:01:09.28,BottomCenter,,0,0,0,,then one more
Dialogue: 0,0:01:09.28,0:01:11.59,BottomCenter,,0,0,0,,which is the tab this works really well
Dialogue: 0,0:01:11.59,0:01:13.12,BottomCenter,,0,0,0,,john when you're you're keeping up with
Dialogue: 0,0:01:13.12,0:01:16.08,BottomCenter,,0,0,0,,the highlighting nicely
Dialogue: 0,0:01:17.43,0:01:18.72,BottomCenter,,0,0,0,,and then the length of the tab which is
Dialogue: 0,0:01:18.72,0:01:21.20,BottomCenter,,0,0,0,,one character not two characters
Dialogue: 0,0:01:21.20,0:01:24.23,BottomCenter,,0,0,0,,so uh so a new line or a line break
Dialogue: 0,0:01:24.23,0:01:26.79,BottomCenter,,0,0,0,,is so if john writes a hello backslash
Dialogue: 0,0:01:26.79,0:01:28.64,BottomCenter,,0,0,0,,and there
Dialogue: 0,0:01:28.64,0:01:31.92,BottomCenter,,0,0,0,,then when you print that while the
Dialogue: 0,0:01:31.92,0:01:33.28,BottomCenter,,0,0,0,,length of that is still 11 of course
Dialogue: 0,0:01:33.28,0:01:34.08,BottomCenter,,0,0,0,,when you print it
Dialogue: 0,0:01:34.08,0:01:37.36,BottomCenter,,0,0,0,,you just have a new line um in the
Dialogue: 0,0:01:37.36,0:01:40.64,BottomCenter,,0,0,0,,in the print you know
Dialogue: 0,0:01:40.64,0:01:42.48,BottomCenter,,0,0,0,,so it's the same thing that backslash
Dialogue: 0,0:01:42.48,0:01:44.48,BottomCenter,,0,0,0,,and is one character and it's a new line
Dialogue: 0,0:01:44.48,0:01:45.59,BottomCenter,,0,0,0,,or a line break
Dialogue: 0,0:01:45.59,0:01:48.64,BottomCenter,,0,0,0,,and it counts as one character the next
Dialogue: 0,0:01:48.64,0:01:49.36,BottomCenter,,0,0,0,,question was
Dialogue: 0,0:01:49.36,0:01:52.56,BottomCenter,,0,0,0,,what is slicing for a string or a list
Dialogue: 0,0:01:52.56,0:01:54.87,BottomCenter,,0,0,0,,and this topic was lightly covered in
Dialogue: 0,0:01:54.87,0:01:56.56,BottomCenter,,0,0,0,,today's lecture but will be covered in
Dialogue: 0,0:01:56.56,0:01:59.92,BottomCenter,,0,0,0,,more depth on friday
Dialogue: 0,0:01:59.92,0:02:03.76,BottomCenter,,0,0,0,,yeah so this is called slicing
Dialogue: 0,0:02:03.76,0:02:07.28,BottomCenter,,0,0,0,,whereas this is called item selection
Dialogue: 0,0:02:07.28,0:02:08.80,BottomCenter,,0,0,0,,slicing is when you have a colon
Dialogue: 0,0:02:08.80,0:02:11.03,BottomCenter,,0,0,0,,somewhere within the square brackets
Dialogue: 0,0:02:11.03,0:02:13.03,BottomCenter,,0,0,0,,but both of these occur after another
Dialogue: 0,0:02:13.03,0:02:14.80,BottomCenter,,0,0,0,,expression and this expression has to
Dialogue: 0,0:02:14.80,0:02:16.31,BottomCenter,,0,0,0,,give you some kind of container
Dialogue: 0,0:02:16.31,0:02:18.24,BottomCenter,,0,0,0,,like a list or strings behaved in the
Dialogue: 0,0:02:18.24,0:02:19.36,BottomCenter,,0,0,0,,same way
Dialogue: 0,0:02:19.36,0:02:21.43,BottomCenter,,0,0,0,,and then this part tells you how to get
Dialogue: 0,0:02:21.43,0:02:24.24,BottomCenter,,0,0,0,,parts of this
Dialogue: 0,0:02:24.31,0:02:26.08,BottomCenter,,0,0,0,,item selection will give you an
Dialogue: 0,0:02:26.08,0:02:28.72,BottomCenter,,0,0,0,,individual element of whatever this is
Dialogue: 0,0:02:28.72,0:02:30.87,BottomCenter,,0,0,0,,and a slice will give you some
Dialogue: 0,0:02:30.87,0:02:32.40,BottomCenter,,0,0,0,,subsequence
Dialogue: 0,0:02:32.40,0:02:35.19,BottomCenter,,0,0,0,,we talk about this in like some amount
Dialogue: 0,0:02:35.19,0:02:37.75,BottomCenter,,0,0,0,,of detail in friday's lecture but uh
Dialogue: 0,0:02:37.75,0:02:39.75,BottomCenter,,0,0,0,,slipped it in here just to give you an
Dialogue: 0,0:02:39.75,0:02:41.36,BottomCenter,,0,0,0,,idea of how it works
Dialogue: 0,0:02:41.36,0:02:44.56,BottomCenter,,0,0,0,,um this says starting at index one
Dialogue: 0,0:02:44.56,0:02:46.87,BottomCenter,,0,0,0,,and going up to but not including index
Dialogue: 0,0:02:46.87,0:02:47.75,BottomCenter,,0,0,0,,three
Dialogue: 0,0:02:47.75,0:02:50.08,BottomCenter,,0,0,0,,counting upwards so that would go one
Dialogue: 0,0:02:50.08,0:02:50.87,BottomCenter,,0,0,0,,two
Dialogue: 0,0:02:50.87,0:02:53.19,BottomCenter,,0,0,0,,and then we're done because we hit three
Dialogue: 0,0:02:53.19,0:02:55.03,BottomCenter,,0,0,0,,get all the elements of s and put them
Dialogue: 0,0:02:55.03,0:02:56.80,BottomCenter,,0,0,0,,into a string so
Dialogue: 0,0:02:56.80,0:02:59.84,BottomCenter,,0,0,0,,uh element zero is h element one is e
Dialogue: 0,0:02:59.84,0:03:01.75,BottomCenter,,0,0,0,,element two is l so that's why you got
Dialogue: 0,0:03:01.75,0:03:05.59,BottomCenter,,0,0,0,,this e and that l in the result
Dialogue: 0,0:03:05.59,0:03:08.56,BottomCenter,,0,0,0,,if we make a list
Dialogue: 0,0:03:09.28,0:03:12.63,BottomCenter,,0,0,0,,well let's use different numbers
Dialogue: 0,0:03:15.12,0:03:19.43,BottomCenter,,0,0,0,,um selecting an element of a list
Dialogue: 0,0:03:19.43,0:03:22.15,BottomCenter,,0,0,0,,will give you just an individual number
Dialogue: 0,0:03:22.15,0:03:24.08,BottomCenter,,0,0,0,,in this case because this is a list full
Dialogue: 0,0:03:24.08,0:03:25.68,BottomCenter,,0,0,0,,of numbers it doesn't give you back a
Dialogue: 0,0:03:25.68,0:03:26.24,BottomCenter,,0,0,0,,list
Dialogue: 0,0:03:26.24,0:03:28.40,BottomCenter,,0,0,0,,full of six that's a different thing so
Dialogue: 0,0:03:28.40,0:03:29.36,BottomCenter,,0,0,0,,six
Dialogue: 0,0:03:29.36,0:03:32.40,BottomCenter,,0,0,0,,and six are different things and this
Dialogue: 0,0:03:32.40,0:03:34.31,BottomCenter,,0,0,0,,syntax this item selection which we've
Dialogue: 0,0:03:34.31,0:03:35.84,BottomCenter,,0,0,0,,used a lot in this lecture just gives
Dialogue: 0,0:03:35.84,0:03:37.84,BottomCenter,,0,0,0,,you one element
Dialogue: 0,0:03:37.84,0:03:39.52,BottomCenter,,0,0,0,,slicing actually gives you back a new
Dialogue: 0,0:03:39.52,0:03:42.24,BottomCenter,,0,0,0,,list with some of the elements but not
Dialogue: 0,0:03:42.24,0:03:43.28,BottomCenter,,0,0,0,,all
Dialogue: 0,0:03:43.28,0:03:46.24,BottomCenter,,0,0,0,,so if i go from 1 to 3 of t this is
Dialogue: 0,0:03:46.24,0:03:48.16,BottomCenter,,0,0,0,,element zero so we're going to skip that
Dialogue: 0,0:03:48.16,0:03:50.16,BottomCenter,,0,0,0,,get element one and element two and it
Dialogue: 0,0:03:50.16,0:03:52.47,BottomCenter,,0,0,0,,will put it into a new list
Dialogue: 0,0:03:52.47,0:03:56.24,BottomCenter,,0,0,0,,um it turns out that it's so common to
Dialogue: 0,0:03:56.24,0:03:57.84,BottomCenter,,0,0,0,,go from the beginning of the list
Dialogue: 0,0:03:57.84,0:04:00.47,BottomCenter,,0,0,0,,up to a point that if you leave out the
Dialogue: 0,0:04:00.47,0:04:03.12,BottomCenter,,0,0,0,,first index then it just starts at zero
Dialogue: 0,0:04:03.12,0:04:05.43,BottomCenter,,0,0,0,,and it's so common to go from somewhere
Dialogue: 0,0:04:05.43,0:04:06.15,BottomCenter,,0,0,0,,to the end
Dialogue: 0,0:04:06.15,0:04:07.75,BottomCenter,,0,0,0,,that if you leave out the second index
Dialogue: 0,0:04:07.75,0:04:09.19,BottomCenter,,0,0,0,,then it just goes to the end of the
Dialogue: 0,0:04:09.19,0:04:10.63,BottomCenter,,0,0,0,,string which would be equivalent to
Dialogue: 0,0:04:10.63,0:04:11.28,BottomCenter,,0,0,0,,saying
Dialogue: 0,0:04:11.28,0:04:14.87,BottomCenter,,0,0,0,,one to the length of t um
Dialogue: 0,0:04:14.87,0:04:16.80,BottomCenter,,0,0,0,,and in fact you could leave out both of
Dialogue: 0,0:04:16.80,0:04:18.80,BottomCenter,,0,0,0,,them though you would just kind of get
Dialogue: 0,0:04:18.80,0:04:22.07,BottomCenter,,0,0,0,,uh equivalent list back so there are
Dialogue: 0,0:04:22.07,0:04:23.43,BottomCenter,,0,0,0,,reasons to do that that we'll talk about
Dialogue: 0,0:04:23.43,0:04:24.87,BottomCenter,,0,0,0,,later in the course
Dialogue: 0,0:04:24.87,0:04:27.83,BottomCenter,,0,0,0,,but uh but so far like if you leave out
Dialogue: 0,0:04:27.83,0:04:29.43,BottomCenter,,0,0,0,,the first and the end then you don't get
Dialogue: 0,0:04:29.43,0:04:30.87,BottomCenter,,0,0,0,,a subsequence you just get the whole
Dialogue: 0,0:04:30.87,0:04:31.92,BottomCenter,,0,0,0,,thing
Dialogue: 0,0:04:31.92,0:04:34.16,BottomCenter,,0,0,0,,so you can think about that the slicing
Dialogue: 0,0:04:34.16,0:04:35.92,BottomCenter,,0,0,0,,is just you know we did the range
Dialogue: 0,0:04:35.92,0:04:38.48,BottomCenter,,0,0,0,,in for loops it's basically specifying a
Dialogue: 0,0:04:38.48,0:04:40.07,BottomCenter,,0,0,0,,range of values
Dialogue: 0,0:04:40.07,0:04:41.92,BottomCenter,,0,0,0,,and you are grabbing that range of
Dialogue: 0,0:04:41.92,0:04:43.12,BottomCenter,,0,0,0,,values from either
Dialogue: 0,0:04:43.12,0:04:46.56,BottomCenter,,0,0,0,,a string or a list
Dialogue: 0,0:04:46.56,0:04:49.60,BottomCenter,,0,0,0,,um and the the bug that will bite you
Dialogue: 0,0:04:49.60,0:04:50.95,BottomCenter,,0,0,0,,over and over again
Dialogue: 0,0:04:50.95,0:04:54.07,BottomCenter,,0,0,0,,is that that last element in the slice
Dialogue: 0,0:04:54.07,0:04:54.87,BottomCenter,,0,0,0,,range is
Dialogue: 0,0:04:54.87,0:04:58.31,BottomCenter,,0,0,0,,not inclusive you go from
Dialogue: 0,0:04:58.31,0:05:00.72,BottomCenter,,0,0,0,,the first element in the slice one up to
Dialogue: 0,0:05:00.72,0:05:02.63,BottomCenter,,0,0,0,,one minus not including the last one and
Dialogue: 0,0:05:02.63,0:05:04.16,BottomCenter,,0,0,0,,that will bite you over
Dialogue: 0,0:05:04.16,0:05:05.92,BottomCenter,,0,0,0,,and over and over again it still bites
Dialogue: 0,0:05:05.92,0:05:08.16,BottomCenter,,0,0,0,,me so just be warned
Dialogue: 0,0:05:08.16,0:05:10.16,BottomCenter,,0,0,0,,yeah so if you say i want the six seven
Dialogue: 0,0:05:10.16,0:05:12.56,BottomCenter,,0,0,0,,eight okay that starts at index one
Dialogue: 0,0:05:12.56,0:05:14.48,BottomCenter,,0,0,0,,and goes up to index three and you try
Dialogue: 0,0:05:14.48,0:05:15.75,BottomCenter,,0,0,0,,to go from one to three
Dialogue: 0,0:05:15.75,0:05:17.68,BottomCenter,,0,0,0,,you won't have the eight that is the
Dialogue: 0,0:05:17.68,0:05:19.75,BottomCenter,,0,0,0,,that's the bug you want to look at
Dialogue: 0,0:05:19.75,0:05:21.04,BottomCenter,,0,0,0,,by the way there's a good reason for
Dialogue: 0,0:05:21.04,0:05:23.68,BottomCenter,,0,0,0,,that um because indices
Dialogue: 0,0:05:23.68,0:05:26.24,BottomCenter,,0,0,0,,because indexing starts on zero when we
Dialogue: 0,0:05:26.24,0:05:26.95,BottomCenter,,0,0,0,,say
Dialogue: 0,0:05:26.95,0:05:29.83,BottomCenter,,0,0,0,,zero to the length of the list the
Dialogue: 0,0:05:29.83,0:05:31.83,BottomCenter,,0,0,0,,length of the list is the index of that
Dialogue: 0,0:05:31.83,0:05:33.68,BottomCenter,,0,0,0,,is one more than the last element so
Dialogue: 0,0:05:33.68,0:05:35.83,BottomCenter,,0,0,0,,that turns out to be pretty convenient
Dialogue: 0,0:05:35.83,0:05:37.60,BottomCenter,,0,0,0,,that i can just say zero to the length
Dialogue: 0,0:05:37.60,0:05:39.51,BottomCenter,,0,0,0,,of the list but when you're sort of
Dialogue: 0,0:05:39.51,0:05:40.95,BottomCenter,,0,0,0,,manually doing these things you got
Dialogue: 0,0:05:40.95,0:05:42.31,BottomCenter,,0,0,0,,by the way this is a classic problem in
Dialogue: 0,0:05:42.31,0:05:43.92,BottomCenter,,0,0,0,,computer science we call it the off by
Dialogue: 0,0:05:43.92,0:05:45.12,BottomCenter,,0,0,0,,one error
Dialogue: 0,0:05:45.12,0:05:46.80,BottomCenter,,0,0,0,,um often you're off in the in the
Dialogue: 0,0:05:46.80,0:05:48.63,BottomCenter,,0,0,0,,beginning or in the end by one it bites
Dialogue: 0,0:05:48.63,0:05:52.31,BottomCenter,,0,0,0,,everybody over and over again
Dialogue: 0,0:05:52.31,0:05:55.04,BottomCenter,,0,0,0,,uh uh somebody's asking in the chat does
Dialogue: 0,0:05:55.04,0:05:56.95,BottomCenter,,0,0,0,,t colin create a new list or
Dialogue: 0,0:05:56.95,0:06:00.31,BottomCenter,,0,0,0,,modify the original list um it
Dialogue: 0,0:06:00.31,0:06:03.92,BottomCenter,,0,0,0,,it i'm not exactly sure i understand the
Dialogue: 0,0:06:03.92,0:06:05.43,BottomCenter,,0,0,0,,question but i think what you're
Dialogue: 0,0:06:05.43,0:06:08.48,BottomCenter,,0,0,0,,asking is if i assign
Dialogue: 0,0:06:08.48,0:06:13.68,BottomCenter,,0,0,0,,something to t colon um what happens
Dialogue: 0,0:06:13.68,0:06:16.07,BottomCenter,,0,0,0,,uh yeah so let's just try it and then
Dialogue: 0,0:06:16.07,0:06:17.75,BottomCenter,,0,0,0,,we'll talk about what's going on
Dialogue: 0,0:06:17.75,0:06:21.12,BottomCenter,,0,0,0,,if i say u equals t and then i slice all
Dialogue: 0,0:06:21.12,0:06:22.80,BottomCenter,,0,0,0,,the way from the beginning to the end
Dialogue: 0,0:06:22.80,0:06:25.36,BottomCenter,,0,0,0,,what do i get it turns out you have two
Dialogue: 0,0:06:25.36,0:06:27.51,BottomCenter,,0,0,0,,lists that contain the same values five
Dialogue: 0,0:06:27.51,0:06:29.19,BottomCenter,,0,0,0,,six seven and eight
Dialogue: 0,0:06:29.19,0:06:30.56,BottomCenter,,0,0,0,,why does it matter that they're
Dialogue: 0,0:06:30.56,0:06:32.39,BottomCenter,,0,0,0,,different well as soon as we start
Dialogue: 0,0:06:32.39,0:06:34.00,BottomCenter,,0,0,0,,changing the contents of lists which
Dialogue: 0,0:06:34.00,0:06:34.95,BottomCenter,,0,0,0,,we'll do
Dialogue: 0,0:06:34.95,0:06:38.72,BottomCenter,,0,0,0,,uh next week i think this will matter
Dialogue: 0,0:06:38.72,0:06:40.63,BottomCenter,,0,0,0,,so far it doesn't really matter at all
Dialogue: 0,0:06:40.63,0:06:42.48,BottomCenter,,0,0,0,,to your life and in fact if you
Dialogue: 0,0:06:42.48,0:06:44.24,BottomCenter,,0,0,0,,do project two just using what we've
Dialogue: 0,0:06:44.24,0:06:45.51,BottomCenter,,0,0,0,,taught you so far
Dialogue: 0,0:06:45.51,0:06:48.24,BottomCenter,,0,0,0,,um this distinction won't matter at all
Dialogue: 0,0:06:48.24,0:06:49.92,BottomCenter,,0,0,0,,but it will start to matter quite a bit
Dialogue: 0,0:06:49.92,0:06:51.68,BottomCenter,,0,0,0,,when we get to project three and and
Dialogue: 0,0:06:51.68,0:06:52.80,BottomCenter,,0,0,0,,stuff starts changing
Dialogue: 0,0:06:52.80,0:06:55.92,BottomCenter,,0,0,0,,so um yeah so this is an important
Dialogue: 0,0:06:55.92,0:06:57.27,BottomCenter,,0,0,0,,distinction eventually
Dialogue: 0,0:06:57.27,0:07:00.80,BottomCenter,,0,0,0,,uh not quite yet the next question was
Dialogue: 0,0:07:00.80,0:07:02.87,BottomCenter,,0,0,0,,whether you could use negative numbers
Dialogue: 0,0:07:02.87,0:07:07.12,BottomCenter,,0,0,0,,in a slice and if so what do they mean
Dialogue: 0,0:07:07.12,0:07:09.51,BottomCenter,,0,0,0,,good excellent question uh the answer is
Dialogue: 0,0:07:09.51,0:07:10.24,BottomCenter,,0,0,0,,yes
Dialogue: 0,0:07:10.24,0:07:13.51,BottomCenter,,0,0,0,,do you want to do an example john yeah
Dialogue: 0,0:07:13.51,0:07:16.72,BottomCenter,,0,0,0,,so actually slicing is
Dialogue: 0,0:07:16.72,0:07:19.60,BottomCenter,,0,0,0,,very flexible but you don't need to know
Dialogue: 0,0:07:19.60,0:07:21.51,BottomCenter,,0,0,0,,every detail for this course like
Dialogue: 0,0:07:21.51,0:07:24.31,BottomCenter,,0,0,0,,we'll focus on just counting up but here
Dialogue: 0,0:07:24.31,0:07:25.60,BottomCenter,,0,0,0,,are some convenient things
Dialogue: 0,0:07:25.60,0:07:30.87,BottomCenter,,0,0,0,,is that for selecting an element
Dialogue: 0,0:07:30.87,0:07:32.63,BottomCenter,,0,0,0,,you can actually put in a negative
Dialogue: 0,0:07:32.63,0:07:34.95,BottomCenter,,0,0,0,,number and that will count from the
Dialogue: 0,0:07:34.95,0:07:38.16,BottomCenter,,0,0,0,,end instead of from the beginning
Dialogue: 0,0:07:38.16,0:07:41.27,BottomCenter,,0,0,0,,so negative 1 means the last element
Dialogue: 0,0:07:41.27,0:07:43.75,BottomCenter,,0,0,0,,and negative 2 means the second to last
Dialogue: 0,0:07:43.75,0:07:44.63,BottomCenter,,0,0,0,,element
Dialogue: 0,0:07:44.63,0:07:47.19,BottomCenter,,0,0,0,,and this fact about using negative
Dialogue: 0,0:07:47.19,0:07:48.07,BottomCenter,,0,0,0,,indices
Dialogue: 0,0:07:48.07,0:07:51.44,BottomCenter,,0,0,0,,also applies to slicing so if i wanted
Dialogue: 0,0:07:51.44,0:07:52.31,BottomCenter,,0,0,0,,to slice
Dialogue: 0,0:07:52.31,0:07:56.56,BottomCenter,,0,0,0,,from element 1 which is here
Dialogue: 0,0:07:56.56,0:08:00.56,BottomCenter,,0,0,0,,up to but not including the last element
Dialogue: 0,0:08:00.56,0:08:02.31,BottomCenter,,0,0,0,,i could write that and get the six seven
Dialogue: 0,0:08:02.31,0:08:03.68,BottomCenter,,0,0,0,,eight
Dialogue: 0,0:08:03.68,0:08:06.07,BottomCenter,,0,0,0,,um and this would be equivalent to
Dialogue: 0,0:08:06.07,0:08:08.48,BottomCenter,,0,0,0,,writing
Dialogue: 0,0:08:09.36,0:08:12.48,BottomCenter,,0,0,0,,that so
Dialogue: 0,0:08:12.48,0:08:15.92,BottomCenter,,0,0,0,,um yeah i i guess that's the story
Dialogue: 0,0:08:15.92,0:08:18.95,BottomCenter,,0,0,0,,with using indices that are negative
Dialogue: 0,0:08:18.95,0:08:21.43,BottomCenter,,0,0,0,,is that they count from the end there's
Dialogue: 0,0:08:21.43,0:08:22.31,BottomCenter,,0,0,0,,also a way to
Dialogue: 0,0:08:22.31,0:08:26.07,BottomCenter,,0,0,0,,count backwards um and
Dialogue: 0,0:08:26.07,0:08:27.83,BottomCenter,,0,0,0,,this like definitely won't show up
Dialogue: 0,0:08:27.83,0:08:29.75,BottomCenter,,0,0,0,,anywhere in the course except for it did
Dialogue: 0,0:08:29.75,0:08:31.51,BottomCenter,,0,0,0,,show up in the first lecture so
Dialogue: 0,0:08:31.51,0:08:34.55,BottomCenter,,0,0,0,,maybe we'll talk about it there um i i
Dialogue: 0,0:08:34.55,0:08:36.79,BottomCenter,,0,0,0,,did some demo of reversing strings
Dialogue: 0,0:08:36.79,0:08:38.32,BottomCenter,,0,0,0,,and it turns out that once you've
Dialogue: 0,0:08:38.32,0:08:40.79,BottomCenter,,0,0,0,,decided
Dialogue: 0,0:08:42.55,0:08:44.32,BottomCenter,,0,0,0,,where you're going to start and where
Dialogue: 0,0:08:44.32,0:08:46.15,BottomCenter,,0,0,0,,you're going to end you can decide
Dialogue: 0,0:08:46.15,0:08:48.32,BottomCenter,,0,0,0,,how to go from one element to the next
Dialogue: 0,0:08:48.32,0:08:50.00,BottomCenter,,0,0,0,,and normally you would go
Dialogue: 0,0:08:50.00,0:08:52.15,BottomCenter,,0,0,0,,by adding one but you could instead go
Dialogue: 0,0:08:52.15,0:08:53.27,BottomCenter,,0,0,0,,by
Dialogue: 0,0:08:53.27,0:08:55.44,BottomCenter,,0,0,0,,subtracting one and then you end up
Dialogue: 0,0:08:55.44,0:08:58.08,BottomCenter,,0,0,0,,working backwards
Dialogue: 0,0:08:58.08,0:09:00.39,BottomCenter,,0,0,0,,so like a less confusing version of this
Dialogue: 0,0:09:00.39,0:09:01.84,BottomCenter,,0,0,0,,would be if i want to go
Dialogue: 0,0:09:01.84,0:09:04.96,BottomCenter,,0,0,0,,from the beginning all the way to the
Dialogue: 0,0:09:04.96,0:09:05.27,BottomCenter,,0,0,0,,end
Dialogue: 0,0:09:05.27,0:09:07.67,BottomCenter,,0,0,0,,and include the last element but i want
Dialogue: 0,0:09:07.67,0:09:08.96,BottomCenter,,0,0,0,,every other element
Dialogue: 0,0:09:08.96,0:09:10.48,BottomCenter,,0,0,0,,then i could add a 2 there and it would
Dialogue: 0,0:09:10.48,0:09:13.27,BottomCenter,,0,0,0,,give me the 5 and the 7 and the 9.
Dialogue: 0,0:09:13.27,0:09:15.44,BottomCenter,,0,0,0,,this says i want to start at the last
Dialogue: 0,0:09:15.44,0:09:17.84,BottomCenter,,0,0,0,,element when i go up 2 but not including
Dialogue: 0,0:09:17.84,0:09:18.32,BottomCenter,,0,0,0,,element
Dialogue: 0,0:09:18.32,0:09:22.08,BottomCenter,,0,0,0,,1 which is 6 um to get
Dialogue: 0,0:09:22.08,0:09:25.84,BottomCenter,,0,0,0,,from nine to whatever's next i subtract
Dialogue: 0,0:09:25.84,0:09:27.60,BottomCenter,,0,0,0,,one instead of adding one
Dialogue: 0,0:09:27.60,0:09:29.67,BottomCenter,,0,0,0,,so yeah that's the full flexibility of
Dialogue: 0,0:09:29.67,0:09:30.79,BottomCenter,,0,0,0,,the slice notation
Dialogue: 0,0:09:30.79,0:09:33.03,BottomCenter,,0,0,0,,is that you're allowed to have negative
Dialogue: 0,0:09:33.03,0:09:34.72,BottomCenter,,0,0,0,,numbers here and there to describe
Dialogue: 0,0:09:34.72,0:09:37.12,BottomCenter,,0,0,0,,things counting from the end and you're
Dialogue: 0,0:09:37.12,0:09:38.79,BottomCenter,,0,0,0,,allowed to have either positive or
Dialogue: 0,0:09:38.79,0:09:40.24,BottomCenter,,0,0,0,,negative numbers here
Dialogue: 0,0:09:40.24,0:09:42.63,BottomCenter,,0,0,0,,to tell you how to advance through the
Dialogue: 0,0:09:42.63,0:09:43.91,BottomCenter,,0,0,0,,list
Dialogue: 0,0:09:43.91,0:09:46.96,BottomCenter,,0,0,0,,so you can think about the the list and
Dialogue: 0,0:09:46.96,0:09:49.20,BottomCenter,,0,0,0,,the string is not living on a line but
Dialogue: 0,0:09:49.20,0:09:51.03,BottomCenter,,0,0,0,,on a circle
Dialogue: 0,0:09:51.03,0:09:54.00,BottomCenter,,0,0,0,,yeah and so when you get to the end like
Dialogue: 0,0:09:54.00,0:09:56.00,BottomCenter,,0,0,0,,the next element is the first element so
Dialogue: 0,0:09:56.00,0:09:58.08,BottomCenter,,0,0,0,,if you just think about it on a circle
Dialogue: 0,0:09:58.08,0:09:59.67,BottomCenter,,0,0,0,,then the negative sort of makes a little
Dialogue: 0,0:09:59.67,0:10:01.60,BottomCenter,,0,0,0,,bit more sense i think it's a little
Dialogue: 0,0:10:01.60,0:10:02.32,BottomCenter,,0,0,0,,weird
Dialogue: 0,0:10:02.32,0:10:05.03,BottomCenter,,0,0,0,,indexing a negative one but it turns out
Dialogue: 0,0:10:05.03,0:10:06.15,BottomCenter,,0,0,0,,to actually be convenient
Dialogue: 0,0:10:06.15,0:10:08.39,BottomCenter,,0,0,0,,algorithmically sometimes
Dialogue: 0,0:10:08.39,0:10:11.75,BottomCenter,,0,0,0,,when you want to move through the list
Dialogue: 0,0:10:12.39,0:10:15.67,BottomCenter,,0,0,0,,good question so the question is for a
Dialogue: 0,0:10:15.67,0:10:16.55,BottomCenter,,0,0,0,,range
Dialogue: 0,0:10:16.55,0:10:19.03,BottomCenter,,0,0,0,,i said it wasn't a list so what is it if
Dialogue: 0,0:10:19.03,0:10:19.84,BottomCenter,,0,0,0,,it's not a list
Dialogue: 0,0:10:19.84,0:10:22.87,BottomCenter,,0,0,0,,and the answer is it's a range uh
Dialogue: 0,0:10:22.87,0:10:26.24,BottomCenter,,0,0,0,,so it's its own thing um you can tell
Dialogue: 0,0:10:26.24,0:10:27.91,BottomCenter,,0,0,0,,it's not a list because it certainly
Dialogue: 0,0:10:27.91,0:10:29.36,BottomCenter,,0,0,0,,doesn't look like a list
Dialogue: 0,0:10:29.36,0:10:31.44,BottomCenter,,0,0,0,,you could even ask python what is this
Dialogue: 0,0:10:31.44,0:10:33.51,BottomCenter,,0,0,0,,thing and we'll say oh it's a range
Dialogue: 0,0:10:33.51,0:10:34.87,BottomCenter,,0,0,0,,which is different than what you get
Dialogue: 0,0:10:34.87,0:10:37.91,BottomCenter,,0,0,0,,when you build a list
Dialogue: 0,0:10:38.00,0:10:41.12,BottomCenter,,0,0,0,,where the type of that is
Dialogue: 0,0:10:41.12,0:10:43.51,BottomCenter,,0,0,0,,a list
Dialogue: 0,0:10:44.87,0:10:47.12,BottomCenter,,0,0,0,,the reason it's different is mostly
Dialogue: 0,0:10:47.12,0:10:48.08,BottomCenter,,0,0,0,,because you can
Dialogue: 0,0:10:48.08,0:10:51.36,BottomCenter,,0,0,0,,represent a range very compactly just by
Dialogue: 0,0:10:51.36,0:10:53.44,BottomCenter,,0,0,0,,memorizing where it starts and where it
Dialogue: 0,0:10:53.44,0:10:54.00,BottomCenter,,0,0,0,,is
Dialogue: 0,0:10:54.00,0:10:55.67,BottomCenter,,0,0,0,,then whenever you wanted you could
Dialogue: 0,0:10:55.67,0:10:58.00,BottomCenter,,0,0,0,,compute stuff in the middle
Dialogue: 0,0:10:58.00,0:11:00.15,BottomCenter,,0,0,0,,which means that i could create a very
Dialogue: 0,0:11:00.15,0:11:01.27,BottomCenter,,0,0,0,,long list if
Dialogue: 0,0:11:01.27,0:11:05.27,BottomCenter,,0,0,0,,i mean a very long range if i wanted to
Dialogue: 0,0:11:05.44,0:11:08.32,BottomCenter,,0,0,0,,and you know python hasn't really done
Dialogue: 0,0:11:08.32,0:11:10.39,BottomCenter,,0,0,0,,any work yet it's just remembered that
Dialogue: 0,0:11:10.39,0:11:12.79,BottomCenter,,0,0,0,,here's the beginning and here's the end
Dialogue: 0,0:11:12.79,0:11:14.00,BottomCenter,,0,0,0,,and if i want to know how long
Dialogue: 0,0:11:14.00,0:11:15.91,BottomCenter,,0,0,0,,it is well that's obvious i just like
Dialogue: 0,0:11:15.91,0:11:17.67,BottomCenter,,0,0,0,,subtract the
Dialogue: 0,0:11:17.67,0:11:19.60,BottomCenter,,0,0,0,,beginning from the end and i know how
Dialogue: 0,0:11:19.60,0:11:21.91,BottomCenter,,0,0,0,,long it is now if i actually wanted to
Dialogue: 0,0:11:21.91,0:11:24.32,BottomCenter,,0,0,0,,compute some particular value
Dialogue: 0,0:11:24.32,0:11:26.00,BottomCenter,,0,0,0,,then python's going to do some like
Dialogue: 0,0:11:26.00,0:11:28.00,BottomCenter,,0,0,0,,clever tricks behind the seats if i want
Dialogue: 0,0:11:28.00,0:11:28.55,BottomCenter,,0,0,0,,the
Dialogue: 0,0:11:28.55,0:11:30.24,BottomCenter,,0,0,0,,thousands value then it will just add
Dialogue: 0,0:11:30.24,0:11:32.55,BottomCenter,,0,0,0,,the number 1000 to the number three
Dialogue: 0,0:11:32.55,0:11:34.60,BottomCenter,,0,0,0,,in order to find out that the result is
Dialogue: 0,0:11:34.60,0:11:35.84,BottomCenter,,0,0,0,,1003
Dialogue: 0,0:11:35.84,0:11:37.84,BottomCenter,,0,0,0,,and it didn't kind of count up from
Dialogue: 0,0:11:37.84,0:11:39.67,BottomCenter,,0,0,0,,three to four to five to six to seven to
Dialogue: 0,0:11:39.67,0:11:40.15,BottomCenter,,0,0,0,,eight
Dialogue: 0,0:11:40.15,0:11:43.20,BottomCenter,,0,0,0,,it just performed addition on the other
Dialogue: 0,0:11:43.20,0:11:44.72,BottomCenter,,0,0,0,,hand if i ever try to take
Dialogue: 0,0:11:44.72,0:11:46.72,BottomCenter,,0,0,0,,all of the elements in this and put them
Dialogue: 0,0:11:46.72,0:11:48.08,BottomCenter,,0,0,0,,into a list
Dialogue: 0,0:11:48.08,0:11:51.03,BottomCenter,,0,0,0,,uh python will crash because lists are
Dialogue: 0,0:11:51.03,0:11:53.20,BottomCenter,,0,0,0,,represented explicitly like all the
Dialogue: 0,0:11:53.20,0:11:54.08,BottomCenter,,0,0,0,,values
Dialogue: 0,0:11:54.08,0:11:57.36,BottomCenter,,0,0,0,,are allocated in memory and uh you have
Dialogue: 0,0:11:57.36,0:11:58.63,BottomCenter,,0,0,0,,to have enough memory
Dialogue: 0,0:11:58.63,0:12:01.51,BottomCenter,,0,0,0,,for all however many there were elements
Dialogue: 0,0:12:01.51,0:12:01.84,BottomCenter,,0,0,0,,and
Dialogue: 0,0:12:01.84,0:12:03.67,BottomCenter,,0,0,0,,my computer apparently does not maybe i
Dialogue: 0,0:12:03.67,0:12:06.00,BottomCenter,,0,0,0,,should upgrade but the point is that the
Dialogue: 0,0:12:06.00,0:12:06.63,BottomCenter,,0,0,0,,list
Dialogue: 0,0:12:06.63,0:12:09.03,BottomCenter,,0,0,0,,is kind of less flexible in the sense
Dialogue: 0,0:12:09.03,0:12:11.12,BottomCenter,,0,0,0,,that it can't represent such a huge
Dialogue: 0,0:12:11.12,0:12:12.08,BottomCenter,,0,0,0,,range
Dialogue: 0,0:12:12.08,0:12:13.91,BottomCenter,,0,0,0,,but much more flexible and that list
Dialogue: 0,0:12:13.91,0:12:16.00,BottomCenter,,0,0,0,,could represent kind of any arbitrary
Dialogue: 0,0:12:16.00,0:12:18.55,BottomCenter,,0,0,0,,collection of values whereas ranges have
Dialogue: 0,0:12:18.55,0:12:21.44,BottomCenter,,0,0,0,,to be some sequential order
Dialogue: 0,0:12:21.44,0:12:22.96,BottomCenter,,0,0,0,,you can think of it as sort of a
Dialogue: 0,0:12:22.96,0:12:25.20,BottomCenter,,0,0,0,,symbolic representation the list is
Dialogue: 0,0:12:25.20,0:12:26.24,BottomCenter,,0,0,0,,explicit
Dialogue: 0,0:12:26.24,0:12:27.91,BottomCenter,,0,0,0,,right you've literally stuck all these
Dialogue: 0,0:12:27.91,0:12:29.60,BottomCenter,,0,0,0,,values in there and they are there in
Dialogue: 0,0:12:29.60,0:12:30.87,BottomCenter,,0,0,0,,memory somewhere
Dialogue: 0,0:12:30.87,0:12:32.79,BottomCenter,,0,0,0,,the range is sort of symbolic it's sort
Dialogue: 0,0:12:32.79,0:12:34.39,BottomCenter,,0,0,0,,of the promise
Dialogue: 0,0:12:34.39,0:12:36.00,BottomCenter,,0,0,0,,when you go to ask for the values i'll
Dialogue: 0,0:12:36.00,0:12:37.44,BottomCenter,,0,0,0,,be able to figure out what they are and
Dialogue: 0,0:12:37.44,0:12:38.87,BottomCenter,,0,0,0,,you can see why that's so much more
Dialogue: 0,0:12:38.87,0:12:39.91,BottomCenter,,0,0,0,,efficient
Dialogue: 0,0:12:39.91,0:12:41.36,BottomCenter,,0,0,0,,it's going to do everything on the fly
Dialogue: 0,0:12:41.36,0:12:43.20,BottomCenter,,0,0,0,,only as needed
Dialogue: 0,0:12:43.20,0:12:44.55,BottomCenter,,0,0,0,,yeah great question so the question was
Dialogue: 0,0:12:44.55,0:12:46.63,BottomCenter,,0,0,0,,about how do you concatenate lists with
Dialogue: 0,0:12:46.63,0:12:47.03,BottomCenter,,0,0,0,,plus
Dialogue: 0,0:12:47.03,0:12:49.03,BottomCenter,,0,0,0,,how do you repeat lists with the times
Dialogue: 0,0:12:49.03,0:12:52.48,BottomCenter,,0,0,0,,operator like what's going on there um
Dialogue: 0,0:12:52.48,0:12:53.91,BottomCenter,,0,0,0,,so maybe we'll just review those
Dialogue: 0,0:12:53.91,0:12:55.91,BottomCenter,,0,0,0,,examples and talk about them a little
Dialogue: 0,0:12:55.91,0:12:56.96,BottomCenter,,0,0,0,,bit
Dialogue: 0,0:12:56.96,0:13:01.12,BottomCenter,,0,0,0,,um so if i have three four five
Dialogue: 0,0:13:01.12,0:13:04.84,BottomCenter,,0,0,0,,and i have uh eight nine
Dialogue: 0,0:13:04.84,0:13:07.84,BottomCenter,,0,0,0,,ten
Dialogue: 0,0:13:09.12,0:13:12.63,BottomCenter,,0,0,0,,and i add those this doesn't do any
Dialogue: 0,0:13:12.63,0:13:13.91,BottomCenter,,0,0,0,,addition
Dialogue: 0,0:13:13.91,0:13:16.72,BottomCenter,,0,0,0,,instead in computer science this is
Dialogue: 0,0:13:16.72,0:13:18.08,BottomCenter,,0,0,0,,called overloading an
Dialogue: 0,0:13:18.08,0:13:20.79,BottomCenter,,0,0,0,,operator so that means it does multiple
Dialogue: 0,0:13:20.79,0:13:21.91,BottomCenter,,0,0,0,,things
Dialogue: 0,0:13:21.91,0:13:24.87,BottomCenter,,0,0,0,,and it does something special in the
Dialogue: 0,0:13:24.87,0:13:26.79,BottomCenter,,0,0,0,,case that this is a list and this is a
Dialogue: 0,0:13:26.79,0:13:28.96,BottomCenter,,0,0,0,,list which is to build a longer list
Dialogue: 0,0:13:28.96,0:13:30.87,BottomCenter,,0,0,0,,that has all the elements of s
Dialogue: 0,0:13:30.87,0:13:33.51,BottomCenter,,0,0,0,,followed by all the elements of t and
Dialogue: 0,0:13:33.51,0:13:35.67,BottomCenter,,0,0,0,,you can still use this operator
Dialogue: 0,0:13:35.67,0:13:38.48,BottomCenter,,0,0,0,,kind of like you would addition with
Dialogue: 0,0:13:38.48,0:13:39.75,BottomCenter,,0,0,0,,numbers like you could
Dialogue: 0,0:13:39.75,0:13:41.91,BottomCenter,,0,0,0,,take the result of this and add
Dialogue: 0,0:13:41.91,0:13:43.03,BottomCenter,,0,0,0,,something else to it
Dialogue: 0,0:13:43.03,0:13:44.63,BottomCenter,,0,0,0,,and then you get an even longer list and
Dialogue: 0,0:13:44.63,0:13:46.32,BottomCenter,,0,0,0,,here we see we've added in t
Dialogue: 0,0:13:46.32,0:13:48.08,BottomCenter,,0,0,0,,twice well actually we have all the
Dialogue: 0,0:13:48.08,0:13:49.84,BottomCenter,,0,0,0,,elements of s and all the elements of t
Dialogue: 0,0:13:49.84,0:13:51.03,BottomCenter,,0,0,0,,and then all the elements of t
Dialogue: 0,0:13:51.03,0:13:54.48,BottomCenter,,0,0,0,,again um
Dialogue: 0,0:13:54.48,0:13:57.67,BottomCenter,,0,0,0,,python designers decided like oh
Dialogue: 0,0:13:57.67,0:14:00.24,BottomCenter,,0,0,0,,if you could add t and t together that's
Dialogue: 0,0:14:00.24,0:14:03.44,BottomCenter,,0,0,0,,kind of like multiplying t by 2.
Dialogue: 0,0:14:03.44,0:14:06.15,BottomCenter,,0,0,0,,so it turns out that if you have a list
Dialogue: 0,0:14:06.15,0:14:08.55,BottomCenter,,0,0,0,,and you multiply it by an integer
Dialogue: 0,0:14:08.55,0:14:11.67,BottomCenter,,0,0,0,,you end up with the elements
Dialogue: 0,0:14:11.67,0:14:15.60,BottomCenter,,0,0,0,,of that list some number of times
Dialogue: 0,0:14:15.60,0:14:18.32,BottomCenter,,0,0,0,,and like do you need to know this well
Dialogue: 0,0:14:18.32,0:14:18.87,BottomCenter,,0,0,0,,um
Dialogue: 0,0:14:18.87,0:14:20.63,BottomCenter,,0,0,0,,i guess we taught it to you so now you
Dialogue: 0,0:14:20.63,0:14:22.55,BottomCenter,,0,0,0,,know it and you might as well know it
Dialogue: 0,0:14:22.55,0:14:25.84,BottomCenter,,0,0,0,,um it actually does show up on occasion
Dialogue: 0,0:14:25.84,0:14:29.27,BottomCenter,,0,0,0,,in um in real programs
Dialogue: 0,0:14:29.27,0:14:33.12,BottomCenter,,0,0,0,,and uh yeah
Dialogue: 0,0:14:33.12,0:14:36.15,BottomCenter,,0,0,0,,not often i find it sort of offensive
Dialogue: 0,0:14:36.15,0:14:38.00,BottomCenter,,0,0,0,,as somebody who's trained in applied
Dialogue: 0,0:14:38.00,0:14:40.15,BottomCenter,,0,0,0,,mathematics because when i see that
Dialogue: 0,0:14:40.15,0:14:42.55,BottomCenter,,0,0,0,,t or s i think of it as a vector and
Dialogue: 0,0:14:42.55,0:14:44.39,BottomCenter,,0,0,0,,when i see a two times up front that
Dialogue: 0,0:14:44.39,0:14:46.24,BottomCenter,,0,0,0,,should be a vector multiplications on
Dialogue: 0,0:14:46.24,0:14:48.39,BottomCenter,,0,0,0,,matlab for example
Dialogue: 0,0:14:48.39,0:14:51.51,BottomCenter,,0,0,0,,which is a numerical
Dialogue: 0,0:14:51.51,0:14:53.36,BottomCenter,,0,0,0,,programming environment two times a
Dialogue: 0,0:14:53.36,0:14:54.55,BottomCenter,,0,0,0,,vector or a list is
Dialogue: 0,0:14:54.55,0:14:56.08,BottomCenter,,0,0,0,,you literally do p point wise
Dialogue: 0,0:14:56.08,0:14:58.00,BottomCenter,,0,0,0,,multiplication so i think this is a
Dialogue: 0,0:14:58.00,0:14:59.27,BottomCenter,,0,0,0,,little weird
Dialogue: 0,0:14:59.27,0:15:02.15,BottomCenter,,0,0,0,,but let me just mention one thing that
Dialogue: 0,0:15:02.15,0:15:03.91,BottomCenter,,0,0,0,,john said is that the plus operator and
Dialogue: 0,0:15:03.91,0:15:04.55,BottomCenter,,0,0,0,,the time dot
Dialogue: 0,0:15:04.55,0:15:06.72,BottomCenter,,0,0,0,,is overloaded and you've now seen three
Dialogue: 0,0:15:06.72,0:15:09.27,BottomCenter,,0,0,0,,operations that can be done numeric
Dialogue: 0,0:15:09.27,0:15:11.12,BottomCenter,,0,0,0,,adding integers or floating point values
Dialogue: 0,0:15:11.12,0:15:12.96,BottomCenter,,0,0,0,,strings you can do string concatenation
Dialogue: 0,0:15:12.96,0:15:14.87,BottomCenter,,0,0,0,,using the addition operator
Dialogue: 0,0:15:14.87,0:15:18.15,BottomCenter,,0,0,0,,and now on lists as well this is one odd
Dialogue: 0,0:15:18.15,0:15:18.55,BottomCenter,,0,0,0,,thing
Dialogue: 0,0:15:18.55,0:15:20.96,BottomCenter,,0,0,0,,about python not being a strongly typed
Dialogue: 0,0:15:20.96,0:15:21.91,BottomCenter,,0,0,0,,language is that
Dialogue: 0,0:15:21.91,0:15:23.67,BottomCenter,,0,0,0,,you know if you just see a line of code
Dialogue: 0,0:15:23.67,0:15:25.75,BottomCenter,,0,0,0,,that says you know s plus t
Dialogue: 0,0:15:25.75,0:15:27.27,BottomCenter,,0,0,0,,you may not know what s and t are you
Dialogue: 0,0:15:27.27,0:15:29.20,BottomCenter,,0,0,0,,don't know if the plus is
Dialogue: 0,0:15:29.20,0:15:32.39,BottomCenter,,0,0,0,,numeric uh edition string concatenation
Dialogue: 0,0:15:32.39,0:15:34.08,BottomCenter,,0,0,0,,or list concatenation so that's sort of
Dialogue: 0,0:15:34.08,0:15:35.67,BottomCenter,,0,0,0,,a quirky little aspect of these
Dialogue: 0,0:15:35.67,0:15:37.20,BottomCenter,,0,0,0,,non-typed languages
Dialogue: 0,0:15:37.20,0:15:40.24,BottomCenter,,0,0,0,,or explicitly type languages so yeah
Dialogue: 0,0:15:40.24,0:15:41.44,BottomCenter,,0,0,0,,good question so
Dialogue: 0,0:15:41.44,0:15:43.36,BottomCenter,,0,0,0,,there are two parts to this question one
Dialogue: 0,0:15:43.36,0:15:44.72,BottomCenter,,0,0,0,,was about the structure of list
Dialogue: 0,0:15:44.72,0:15:46.63,BottomCenter,,0,0,0,,comprehensions and how they work
Dialogue: 0,0:15:46.63,0:15:48.63,BottomCenter,,0,0,0,,and one was about what is meant by a
Dialogue: 0,0:15:48.63,0:15:50.55,BottomCenter,,0,0,0,,literal and does something need to be a
Dialogue: 0,0:15:50.55,0:15:51.91,BottomCenter,,0,0,0,,literal to be part of a
Dialogue: 0,0:15:51.91,0:15:55.27,BottomCenter,,0,0,0,,list comprehension the term literal
Dialogue: 0,0:15:55.27,0:15:58.39,BottomCenter,,0,0,0,,is actually just describing um
Dialogue: 0,0:15:58.39,0:16:01.51,BottomCenter,,0,0,0,,cases in which you build
Dialogue: 0,0:16:01.51,0:16:04.00,BottomCenter,,0,0,0,,something by just writing out its
Dialogue: 0,0:16:04.00,0:16:04.79,BottomCenter,,0,0,0,,contents
Dialogue: 0,0:16:04.79,0:16:07.27,BottomCenter,,0,0,0,,in the code as opposed to building it
Dialogue: 0,0:16:07.27,0:16:08.63,BottomCenter,,0,0,0,,out
Dialogue: 0,0:16:08.63,0:16:10.48,BottomCenter,,0,0,0,,programmatically through iteration or
Dialogue: 0,0:16:10.48,0:16:12.24,BottomCenter,,0,0,0,,something like that so
Dialogue: 0,0:16:12.24,0:16:15.27,BottomCenter,,0,0,0,,a string literal is when you build a
Dialogue: 0,0:16:15.27,0:16:15.84,BottomCenter,,0,0,0,,string
Dialogue: 0,0:16:15.84,0:16:18.08,BottomCenter,,0,0,0,,just by writing quote and then the
Dialogue: 0,0:16:18.08,0:16:19.84,BottomCenter,,0,0,0,,contents of the string and then end
Dialogue: 0,0:16:19.84,0:16:20.48,BottomCenter,,0,0,0,,quote
Dialogue: 0,0:16:20.48,0:16:23.03,BottomCenter,,0,0,0,,and a list literal is when you build a
Dialogue: 0,0:16:23.03,0:16:23.67,BottomCenter,,0,0,0,,list
Dialogue: 0,0:16:23.67,0:16:26.48,BottomCenter,,0,0,0,,by just typing out its elements inside
Dialogue: 0,0:16:26.48,0:16:28.79,BottomCenter,,0,0,0,,of square brackets that's what the term
Dialogue: 0,0:16:28.79,0:16:31.67,BottomCenter,,0,0,0,,literal means and uh there are other
Dialogue: 0,0:16:31.67,0:16:33.20,BottomCenter,,0,0,0,,ways you could build this same string
Dialogue: 0,0:16:33.20,0:16:34.15,BottomCenter,,0,0,0,,like i could
Dialogue: 0,0:16:34.15,0:16:37.27,BottomCenter,,0,0,0,,build it out of uh h e and
Dialogue: 0,0:16:37.27,0:16:40.55,BottomCenter,,0,0,0,,llo and this was not constructed through
Dialogue: 0,0:16:40.55,0:16:42.48,BottomCenter,,0,0,0,,a string literal instead this was
Dialogue: 0,0:16:42.48,0:16:43.75,BottomCenter,,0,0,0,,constructed through a compound
Dialogue: 0,0:16:43.75,0:16:45.36,BottomCenter,,0,0,0,,expression that had two little string
Dialogue: 0,0:16:45.36,0:16:46.32,BottomCenter,,0,0,0,,literals in it
Dialogue: 0,0:16:46.32,0:16:48.87,BottomCenter,,0,0,0,,and an addition operator and likewise
Dialogue: 0,0:16:48.87,0:16:50.08,BottomCenter,,0,0,0,,you could do the same thing
Dialogue: 0,0:16:50.08,0:16:55.51,BottomCenter,,0,0,0,,um here so um a list comprehension
Dialogue: 0,0:16:55.51,0:16:59.84,BottomCenter,,0,0,0,,is a way of
Dialogue: 0,0:16:59.84,0:17:03.03,BottomCenter,,0,0,0,,building up a new list from the elements
Dialogue: 0,0:17:03.03,0:17:04.64,BottomCenter,,0,0,0,,of some other container
Dialogue: 0,0:17:04.64,0:17:07.92,BottomCenter,,0,0,0,,so i could build up a list of uh
Dialogue: 0,0:17:07.92,0:17:12.24,BottomCenter,,0,0,0,,x plus one where i need to come up with
Dialogue: 0,0:17:12.24,0:17:14.40,BottomCenter,,0,0,0,,what what are the values that i'm going
Dialogue: 0,0:17:14.40,0:17:16.07,BottomCenter,,0,0,0,,to add one to
Dialogue: 0,0:17:16.07,0:17:18.48,BottomCenter,,0,0,0,,and then x gives you a name for each
Dialogue: 0,0:17:18.48,0:17:19.35,BottomCenter,,0,0,0,,element
Dialogue: 0,0:17:19.35,0:17:21.83,BottomCenter,,0,0,0,,and the result is x plus one for every
Dialogue: 0,0:17:21.83,0:17:22.40,BottomCenter,,0,0,0,,element
Dialogue: 0,0:17:22.40,0:17:24.72,BottomCenter,,0,0,0,,in well something and here i could write
Dialogue: 0,0:17:24.72,0:17:25.59,BottomCenter,,0,0,0,,any expression
Dialogue: 0,0:17:25.59,0:17:27.11,BottomCenter,,0,0,0,,so it doesn't have to be a literal it
Dialogue: 0,0:17:27.11,0:17:28.88,BottomCenter,,0,0,0,,could be anything uh
Dialogue: 0,0:17:28.88,0:17:32.07,BottomCenter,,0,0,0,,but it does have to have elements so
Dialogue: 0,0:17:32.07,0:17:35.68,BottomCenter,,0,0,0,,i could write a list literal to do it
Dialogue: 0,0:17:35.68,0:17:38.72,BottomCenter,,0,0,0,,at which point i would have bound x to 3
Dialogue: 0,0:17:38.72,0:17:41.35,BottomCenter,,0,0,0,,computed x plus 1 is 4 and put that into
Dialogue: 0,0:17:41.35,0:17:42.64,BottomCenter,,0,0,0,,the result
Dialogue: 0,0:17:42.64,0:17:45.44,BottomCenter,,0,0,0,,or i could have used a name if i already
Dialogue: 0,0:17:45.44,0:17:48.00,BottomCenter,,0,0,0,,had 345 in a name i could have written
Dialogue: 0,0:17:48.00,0:17:51.03,BottomCenter,,0,0,0,,x plus 1 for x in t and t
Dialogue: 0,0:17:51.03,0:17:53.03,BottomCenter,,0,0,0,,actually isn't a literal it's a name
Dialogue: 0,0:17:53.03,0:17:54.88,BottomCenter,,0,0,0,,it's like a variable name referring to
Dialogue: 0,0:17:54.88,0:17:57.44,BottomCenter,,0,0,0,,some list that already exists
Dialogue: 0,0:17:57.44,0:18:00.24,BottomCenter,,0,0,0,,so in that sense there's no restrictions
Dialogue: 0,0:18:00.24,0:18:03.11,BottomCenter,,0,0,0,,on what expression you put here
Dialogue: 0,0:18:03.11,0:18:05.35,BottomCenter,,0,0,0,,there is a restriction on the value of
Dialogue: 0,0:18:05.35,0:18:07.03,BottomCenter,,0,0,0,,that expression which is that it has to
Dialogue: 0,0:18:07.03,0:18:09.03,BottomCenter,,0,0,0,,be something that you can iterate over
Dialogue: 0,0:18:09.03,0:18:10.07,BottomCenter,,0,0,0,,so if i just put
Dialogue: 0,0:18:10.07,0:18:13.03,BottomCenter,,0,0,0,,5 in here i'll get an error because it's
Dialogue: 0,0:18:13.03,0:18:14.31,BottomCenter,,0,0,0,,going to try to assign
Dialogue: 0,0:18:14.31,0:18:17.27,BottomCenter,,0,0,0,,x to every element in 5 but 5 isn't a
Dialogue: 0,0:18:17.27,0:18:19.35,BottomCenter,,0,0,0,,container it doesn't have any elements
Dialogue: 0,0:18:19.35,0:18:21.92,BottomCenter,,0,0,0,,and so that's what this means int object
Dialogue: 0,0:18:21.92,0:18:22.96,BottomCenter,,0,0,0,,is not iterable
Dialogue: 0,0:18:22.96,0:18:25.51,BottomCenter,,0,0,0,,the int object is referring to the 5 and
Dialogue: 0,0:18:25.51,0:18:27.11,BottomCenter,,0,0,0,,it's not something that you can
Dialogue: 0,0:18:27.11,0:18:30.55,BottomCenter,,0,0,0,,have as the value of this expression
Dialogue: 0,0:18:30.55,0:18:34.88,BottomCenter,,0,0,0,,um yeah that's that's really the only
Dialogue: 0,0:18:34.88,0:18:38.00,BottomCenter,,0,0,0,,uh restriction you can put any
Dialogue: 0,0:18:38.00,0:18:39.59,BottomCenter,,0,0,0,,expression you want here there's no
Dialogue: 0,0:18:39.59,0:18:41.11,BottomCenter,,0,0,0,,restriction on that
Dialogue: 0,0:18:41.11,0:18:43.59,BottomCenter,,0,0,0,,here you just put names so this is not a
Dialogue: 0,0:18:43.59,0:18:44.96,BottomCenter,,0,0,0,,place where you would put larger
Dialogue: 0,0:18:44.96,0:18:45.92,BottomCenter,,0,0,0,,expressions
Dialogue: 0,0:18:45.92,0:18:48.16,BottomCenter,,0,0,0,,but instead it's just saying here's the
Dialogue: 0,0:18:48.16,0:18:50.07,BottomCenter,,0,0,0,,name i'm going to use to refer to an
Dialogue: 0,0:18:50.07,0:18:52.07,BottomCenter,,0,0,0,,element in whatever's here and then here
Dialogue: 0,0:18:52.07,0:18:53.83,BottomCenter,,0,0,0,,you can put any expression you want
Dialogue: 0,0:18:53.83,0:18:56.16,BottomCenter,,0,0,0,,as long as it evaluates to something
Dialogue: 0,0:18:56.16,0:18:58.64,BottomCenter,,0,0,0,,that you can iterate over
Dialogue: 0,0:18:58.64,0:19:00.96,BottomCenter,,0,0,0,,and let me state the obvious here that i
Dialogue: 0,0:19:00.96,0:19:02.31,BottomCenter,,0,0,0,,mean this is just a shortcut
Dialogue: 0,0:19:02.31,0:19:04.55,BottomCenter,,0,0,0,,you could have written explicitly your
Dialogue: 0,0:19:04.55,0:19:06.55,BottomCenter,,0,0,0,,own for loop to do this
Dialogue: 0,0:19:06.55,0:19:08.40,BottomCenter,,0,0,0,,right you could have said four acts in
Dialogue: 0,0:19:08.40,0:19:10.64,BottomCenter,,0,0,0,,the list create a new list where every
Dialogue: 0,0:19:10.64,0:19:12.24,BottomCenter,,0,0,0,,element of that list is
Dialogue: 0,0:19:12.24,0:19:14.31,BottomCenter,,0,0,0,,one plus the element in the previous
Dialogue: 0,0:19:14.31,0:19:15.83,BottomCenter,,0,0,0,,list so just this is just shorthand
Dialogue: 0,0:19:15.83,0:19:17.35,BottomCenter,,0,0,0,,because it's sort of a common thing that
Dialogue: 0,0:19:17.35,0:19:18.72,BottomCenter,,0,0,0,,we do on lists but
Dialogue: 0,0:19:18.72,0:19:19.83,BottomCenter,,0,0,0,,it's you know you could have written out
Dialogue: 0,0:19:19.83,0:19:21.83,BottomCenter,,0,0,0,,the for loop all by all by yourself the
Dialogue: 0,0:19:21.83,0:19:23.11,BottomCenter,,0,0,0,,python creator side
Dialogue: 0,0:19:23.11,0:19:24.88,BottomCenter,,0,0,0,,this is such a common thing let's make
Dialogue: 0,0:19:24.88,0:19:26.55,BottomCenter,,0,0,0,,it a little bit easy to
Dialogue: 0,0:19:26.55,0:19:30.24,BottomCenter,,0,0,0,,do yeah that's exactly right it's also
Dialogue: 0,0:19:30.24,0:19:32.24,BottomCenter,,0,0,0,,wonderful for bug prevention because
Dialogue: 0,0:19:32.24,0:19:32.88,BottomCenter,,0,0,0,,there's no
Dialogue: 0,0:19:32.88,0:19:35.44,BottomCenter,,0,0,0,,like manipulating of some list that
Dialogue: 0,0:19:35.44,0:19:37.44,BottomCenter,,0,0,0,,might already exist or whatever you just
Dialogue: 0,0:19:37.44,0:19:38.24,BottomCenter,,0,0,0,,like say oh
Dialogue: 0,0:19:38.24,0:19:41.03,BottomCenter,,0,0,0,,here's something that exists and then
Dialogue: 0,0:19:41.03,0:19:42.64,BottomCenter,,0,0,0,,all in one go you just build something
Dialogue: 0,0:19:42.64,0:19:44.88,BottomCenter,,0,0,0,,new
Dialogue: 0,0:19:46.00,0:19:47.44,BottomCenter,,0,0,0,,yeah so the question is what's a
Dialogue: 0,0:19:47.44,0:19:50.31,BottomCenter,,0,0,0,,container what does that mean
Dialogue: 0,0:19:50.31,0:19:52.64,BottomCenter,,0,0,0,,and are there other containers as well
Dialogue: 0,0:19:52.64,0:19:54.79,BottomCenter,,0,0,0,,so we try to give you some examples
Dialogue: 0,0:19:54.79,0:19:57.20,BottomCenter,,0,0,0,,like a range is also a container it's
Dialogue: 0,0:19:57.20,0:19:58.07,BottomCenter,,0,0,0,,not a list
Dialogue: 0,0:19:58.07,0:20:00.00,BottomCenter,,0,0,0,,but it's got a bunch of elements in it
Dialogue: 0,0:20:00.00,0:20:01.68,BottomCenter,,0,0,0,,you can iterate over those elements
Dialogue: 0,0:20:01.68,0:20:03.35,BottomCenter,,0,0,0,,you can figure out whether some element
Dialogue: 0,0:20:03.35,0:20:04.96,BottomCenter,,0,0,0,,is in there so
Dialogue: 0,0:20:04.96,0:20:08.07,BottomCenter,,0,0,0,,um if i have r which is a range from
Dialogue: 0,0:20:08.07,0:20:09.75,BottomCenter,,0,0,0,,three to six
Dialogue: 0,0:20:09.75,0:20:12.79,BottomCenter,,0,0,0,,and then i have s which is three
Dialogue: 0,0:20:12.79,0:20:15.68,BottomCenter,,0,0,0,,four and five
Dialogue: 0,0:20:15.92,0:20:18.31,BottomCenter,,0,0,0,,for the rest of the code it actually
Dialogue: 0,0:20:18.31,0:20:19.68,BottomCenter,,0,0,0,,kind of doesn't matter
Dialogue: 0,0:20:19.68,0:20:22.31,BottomCenter,,0,0,0,,that this is a range and this is a list
Dialogue: 0,0:20:22.31,0:20:24.40,BottomCenter,,0,0,0,,i write the same thing either way i can
Dialogue: 0,0:20:24.40,0:20:28.00,BottomCenter,,0,0,0,,say 4 and r just like in say 4 and s
Dialogue: 0,0:20:28.00,0:20:32.00,BottomCenter,,0,0,0,,i can get the element at index 1.
Dialogue: 0,0:20:32.00,0:20:34.55,BottomCenter,,0,0,0,,come on the element at index one of r
Dialogue: 0,0:20:34.55,0:20:36.24,BottomCenter,,0,0,0,,just like i can get the element of index
Dialogue: 0,0:20:36.24,0:20:37.44,BottomCenter,,0,0,0,,one at s
Dialogue: 0,0:20:37.44,0:20:39.92,BottomCenter,,0,0,0,,so when we use the term container in
Dialogue: 0,0:20:39.92,0:20:41.51,BottomCenter,,0,0,0,,this course we're describing
Dialogue: 0,0:20:41.51,0:20:44.55,BottomCenter,,0,0,0,,things that can be manipulated
Dialogue: 0,0:20:44.55,0:20:47.59,BottomCenter,,0,0,0,,in this way using item selection using
Dialogue: 0,0:20:47.59,0:20:49.59,BottomCenter,,0,0,0,,this in operator to figure out whether
Dialogue: 0,0:20:49.59,0:20:51.35,BottomCenter,,0,0,0,,something's in there
Dialogue: 0,0:20:51.35,0:20:53.20,BottomCenter,,0,0,0,,and it doesn't actually matter whether
Dialogue: 0,0:20:53.20,0:20:55.44,BottomCenter,,0,0,0,,something's a list or a range
Dialogue: 0,0:20:55.44,0:20:56.79,BottomCenter,,0,0,0,,or pretty soon we'll talk about
Dialogue: 0,0:20:56.79,0:20:58.88,BottomCenter,,0,0,0,,something else called the tuple
Dialogue: 0,0:20:58.88,0:21:00.48,BottomCenter,,0,0,0,,we'll talk about something on wednesday
Dialogue: 0,0:21:00.48,0:21:02.72,BottomCenter,,0,0,0,,called the dictionary and all of these
Dialogue: 0,0:21:02.72,0:21:04.72,BottomCenter,,0,0,0,,are kind of just ways of containing
Dialogue: 0,0:21:04.72,0:21:06.40,BottomCenter,,0,0,0,,values so
Dialogue: 0,0:21:06.40,0:21:08.72,BottomCenter,,0,0,0,,i guess that's the short answer is that
Dialogue: 0,0:21:08.72,0:21:10.07,BottomCenter,,0,0,0,,a container isn't like
Dialogue: 0,0:21:10.07,0:21:13.51,BottomCenter,,0,0,0,,something that is
Dialogue: 0,0:21:13.68,0:21:16.72,BottomCenter,,0,0,0,,a particular type but instead it
Dialogue: 0,0:21:16.72,0:21:17.83,BottomCenter,,0,0,0,,describes
Dialogue: 0,0:21:17.83,0:21:20.79,BottomCenter,,0,0,0,,all the types that can be used in for
Dialogue: 0,0:21:20.79,0:21:21.27,BottomCenter,,0,0,0,,loops
Dialogue: 0,0:21:21.27,0:21:24.96,BottomCenter,,0,0,0,,used within use with element selection
Dialogue: 0,0:21:24.96,0:21:28.16,BottomCenter,,0,0,0,,and in python the technical term for
Dialogue: 0,0:21:28.16,0:21:29.03,BottomCenter,,0,0,0,,these
Dialogue: 0,0:21:29.03,0:21:30.88,BottomCenter,,0,0,0,,uh varies a little bit depending on
Dialogue: 0,0:21:30.88,0:21:32.16,BottomCenter,,0,0,0,,exactly which of these
Dialogue: 0,0:21:32.16,0:21:35.20,BottomCenter,,0,0,0,,operations you can use um but the most
Dialogue: 0,0:21:35.20,0:21:35.92,BottomCenter,,0,0,0,,common term
Dialogue: 0,0:21:35.92,0:21:37.68,BottomCenter,,0,0,0,,is that these are iterable values
Dialogue: 0,0:21:37.68,0:21:39.35,BottomCenter,,0,0,0,,meaning you can kind of uh
Dialogue: 0,0:21:39.35,0:21:42.24,BottomCenter,,0,0,0,,iterate through them using a four state
Dialogue: 0,0:21:42.24,0:21:43.44,BottomCenter,,0,0,0,,and you know i just want to sort of
Dialogue: 0,0:21:43.44,0:21:44.31,BottomCenter,,0,0,0,,re-emphasize
Dialogue: 0,0:21:44.31,0:21:46.31,BottomCenter,,0,0,0,,the power of abstraction here the fact
Dialogue: 0,0:21:46.31,0:21:47.92,BottomCenter,,0,0,0,,that these things are implemented behind
Dialogue: 0,0:21:47.92,0:21:49.03,BottomCenter,,0,0,0,,the scenes differently
Dialogue: 0,0:21:49.03,0:21:50.72,BottomCenter,,0,0,0,,from your perspective you don't really
Dialogue: 0,0:21:50.72,0:21:52.96,BottomCenter,,0,0,0,,care um and now you make here
Dialogue: 0,0:21:52.96,0:21:54.72,BottomCenter,,0,0,0,,computationally and for other reasons
Dialogue: 0,0:21:54.72,0:21:56.31,BottomCenter,,0,0,0,,but from the from the programmatic point
Dialogue: 0,0:21:56.31,0:21:57.27,BottomCenter,,0,0,0,,of view
Dialogue: 0,0:21:57.27,0:21:59.11,BottomCenter,,0,0,0,,you index you slice you do everything
Dialogue: 0,0:21:59.11,0:22:01.11,BottomCenter,,0,0,0,,exactly the same that's nice that's nice
Dialogue: 0,0:22:01.11,0:22:02.40,BottomCenter,,0,0,0,,that you don't have to have a different
Dialogue: 0,0:22:02.40,0:22:03.83,BottomCenter,,0,0,0,,syntax for everything that'd be sort of
Dialogue: 0,0:22:03.83,0:22:05.68,BottomCenter,,0,0,0,,a drag
Dialogue: 0,0:22:05.68,0:22:07.11,BottomCenter,,0,0,0,,oh there was a follow-up question of
Dialogue: 0,0:22:07.11,0:22:09.68,BottomCenter,,0,0,0,,this which is
Dialogue: 0,0:22:09.68,0:22:13.11,BottomCenter,,0,0,0,,uh is a string a container yeah strings
Dialogue: 0,0:22:13.11,0:22:15.20,BottomCenter,,0,0,0,,strings are a lot like lists they don't
Dialogue: 0,0:22:15.20,0:22:17.44,BottomCenter,,0,0,0,,behave exactly the same
Dialogue: 0,0:22:17.44,0:22:19.11,BottomCenter,,0,0,0,,but the best way to think about it is
Dialogue: 0,0:22:19.11,0:22:20.64,BottomCenter,,0,0,0,,that it's a container of the letters
Dialogue: 0,0:22:20.64,0:22:22.96,BottomCenter,,0,0,0,,that are in the string
Dialogue: 0,0:22:22.96,0:22:24.96,BottomCenter,,0,0,0,,the quirky thing about strings is that
Dialogue: 0,0:22:24.96,0:22:26.48,BottomCenter,,0,0,0,,when you have a string
Dialogue: 0,0:22:26.48,0:22:29.03,BottomCenter,,0,0,0,,and you get an element out of it you get
Dialogue: 0,0:22:29.03,0:22:30.16,BottomCenter,,0,0,0,,a string back
Dialogue: 0,0:22:30.16,0:22:32.16,BottomCenter,,0,0,0,,and you could get an element out of that
Dialogue: 0,0:22:32.16,0:22:33.75,BottomCenter,,0,0,0,,and you get an element out of that
Dialogue: 0,0:22:33.75,0:22:35.35,BottomCenter,,0,0,0,,and like lists typically don't work this
Dialogue: 0,0:22:35.35,0:22:36.88,BottomCenter,,0,0,0,,way so so strings are a little bit
Dialogue: 0,0:22:36.88,0:22:38.31,BottomCenter,,0,0,0,,different than everything else but yes
Dialogue: 0,0:22:38.31,0:22:40.79,BottomCenter,,0,0,0,,there's still a container
Dialogue: 0,0:22:40.79,0:22:42.07,BottomCenter,,0,0,0,,yeah i think i understand the question
Dialogue: 0,0:22:42.07,0:22:44.16,BottomCenter,,0,0,0,,so let me try to rephrase it
Dialogue: 0,0:22:44.16,0:22:46.55,BottomCenter,,0,0,0,,so you're asking i can compute n
Dialogue: 0,0:22:46.55,0:22:47.44,BottomCenter,,0,0,0,,factorial
Dialogue: 0,0:22:47.44,0:22:50.16,BottomCenter,,0,0,0,,as n times n minus one times n minus two
Dialogue: 0,0:22:50.16,0:22:51.75,BottomCenter,,0,0,0,,all the way down to one i can write that
Dialogue: 0,0:22:51.75,0:22:52.96,BottomCenter,,0,0,0,,expression out
Dialogue: 0,0:22:52.96,0:22:56.24,BottomCenter,,0,0,0,,or i can write it as 1 times 2 times 3
Dialogue: 0,0:22:56.24,0:22:58.24,BottomCenter,,0,0,0,,up to n and you're asking is there one
Dialogue: 0,0:22:58.24,0:23:00.72,BottomCenter,,0,0,0,,that is preferred over the other
Dialogue: 0,0:23:00.72,0:23:03.68,BottomCenter,,0,0,0,,um i'd have to think through all that i
Dialogue: 0,0:23:03.68,0:23:05.11,BottomCenter,,0,0,0,,don't see a reason why
Dialogue: 0,0:23:05.11,0:23:06.40,BottomCenter,,0,0,0,,first of all let's agree that the answer
Dialogue: 0,0:23:06.40,0:23:08.00,BottomCenter,,0,0,0,,is exactly the same the order in which
Dialogue: 0,0:23:08.00,0:23:09.20,BottomCenter,,0,0,0,,you do the multiplication
Dialogue: 0,0:23:09.20,0:23:11.20,BottomCenter,,0,0,0,,or if we were doing something else with
Dialogue: 0,0:23:11.20,0:23:13.20,BottomCenter,,0,0,0,,addition absolutely doesn't matter
Dialogue: 0,0:23:13.20,0:23:15.51,BottomCenter,,0,0,0,,so numerically mathematically there's no
Dialogue: 0,0:23:15.51,0:23:17.35,BottomCenter,,0,0,0,,difference computation i don't believe
Dialogue: 0,0:23:17.35,0:23:19.27,BottomCenter,,0,0,0,,there's a difference
Dialogue: 0,0:23:19.27,0:23:21.44,BottomCenter,,0,0,0,,um john do you see a difference between
Dialogue: 0,0:23:21.44,0:23:24.31,BottomCenter,,0,0,0,,the order in which you go
Dialogue: 0,0:23:24.31,0:23:27.68,BottomCenter,,0,0,0,,um for factorial it really kind of
Dialogue: 0,0:23:27.68,0:23:28.88,BottomCenter,,0,0,0,,doesn't matter
Dialogue: 0,0:23:28.88,0:23:32.31,BottomCenter,,0,0,0,,what order you go in yeah but
Dialogue: 0,0:23:32.31,0:23:35.51,BottomCenter,,0,0,0,,for other problems it can so and in
Dialogue: 0,0:23:35.51,0:23:36.07,BottomCenter,,0,0,0,,particular
Dialogue: 0,0:23:36.07,0:23:38.55,BottomCenter,,0,0,0,,this homework problem called ping pong
Dialogue: 0,0:23:38.55,0:23:40.00,BottomCenter,,0,0,0,,it's easy to figure out what the next
Dialogue: 0,0:23:40.00,0:23:42.24,BottomCenter,,0,0,0,,number is if you know where you are
Dialogue: 0,0:23:42.24,0:23:44.16,BottomCenter,,0,0,0,,it's hard to know like what the previous
Dialogue: 0,0:23:44.16,0:23:45.68,BottomCenter,,0,0,0,,number was
Dialogue: 0,0:23:45.68,0:23:47.75,BottomCenter,,0,0,0,,that's more complicated whereas with
Dialogue: 0,0:23:47.75,0:23:50.00,BottomCenter,,0,0,0,,factorial you know counting up is no
Dialogue: 0,0:23:50.00,0:23:52.96,BottomCenter,,0,0,0,,harder easier than counting down but let
Dialogue: 0,0:23:52.96,0:23:54.07,BottomCenter,,0,0,0,,me just show you what
Dialogue: 0,0:23:54.07,0:23:55.75,BottomCenter,,0,0,0,,factorial would look like if you were
Dialogue: 0,0:23:55.75,0:23:58.55,BottomCenter,,0,0,0,,counting up and using recursion
Dialogue: 0,0:23:58.55,0:24:02.16,BottomCenter,,0,0,0,,and then you know how to do it
Dialogue: 0,0:24:02.16,0:24:04.72,BottomCenter,,0,0,0,,so first of all the version where you
Dialogue: 0,0:24:04.72,0:24:07.27,BottomCenter,,0,0,0,,count down
Dialogue: 0,0:24:15.35,0:24:19.59,BottomCenter,,0,0,0,,has this um nice property which is that
Dialogue: 0,0:24:19.59,0:24:21.68,BottomCenter,,0,0,0,,you kind of know when you're done
Dialogue: 0,0:24:21.68,0:24:24.79,BottomCenter,,0,0,0,,just by this special value zero when
Dialogue: 0,0:24:24.79,0:24:26.00,BottomCenter,,0,0,0,,you're counting up
Dialogue: 0,0:24:26.00,0:24:28.31,BottomCenter,,0,0,0,,that's not really true you have to know
Dialogue: 0,0:24:28.31,0:24:29.68,BottomCenter,,0,0,0,,where you are
Dialogue: 0,0:24:29.68,0:24:33.51,BottomCenter,,0,0,0,,and you have to know whether you're done
Dialogue: 0,0:24:33.51,0:24:38.48,BottomCenter,,0,0,0,,so for this reason if you're computing a
Dialogue: 0,0:24:39.35,0:24:42.40,BottomCenter,,0,0,0,,factorial kind of working your way up
Dialogue: 0,0:24:42.40,0:24:46.07,BottomCenter,,0,0,0,,then you have to know where you are um
Dialogue: 0,0:24:46.07,0:24:48.79,BottomCenter,,0,0,0,,so you have to know that you're going
Dialogue: 0,0:24:48.79,0:24:50.79,BottomCenter,,0,0,0,,we're computing the factorial of n
Dialogue: 0,0:24:50.79,0:24:54.16,BottomCenter,,0,0,0,,and right now you're at k
Dialogue: 0,0:24:54.16,0:24:57.51,BottomCenter,,0,0,0,,and if it happens to be that n equals k
Dialogue: 0,0:24:57.51,0:24:59.11,BottomCenter,,0,0,0,,well then you've kind of hit the end
Dialogue: 0,0:24:59.11,0:25:00.72,BottomCenter,,0,0,0,,right so
Dialogue: 0,0:25:00.72,0:25:03.68,BottomCenter,,0,0,0,,in this case you could return in but
Dialogue: 0,0:25:03.68,0:25:04.64,BottomCenter,,0,0,0,,otherwise
Dialogue: 0,0:25:04.64,0:25:07.83,BottomCenter,,0,0,0,,you would want to return well
Dialogue: 0,0:25:07.83,0:25:09.92,BottomCenter,,0,0,0,,maybe we'll just do k you'd want to
Dialogue: 0,0:25:09.92,0:25:12.96,BottomCenter,,0,0,0,,return k times the result of calling
Dialogue: 0,0:25:12.96,0:25:14.07,BottomCenter,,0,0,0,,fact helper
Dialogue: 0,0:25:14.07,0:25:17.27,BottomCenter,,0,0,0,,on n and k plus 1.
Dialogue: 0,0:25:17.27,0:25:20.64,BottomCenter,,0,0,0,,so now we're kind of counting up with k
Dialogue: 0,0:25:20.64,0:25:22.55,BottomCenter,,0,0,0,,but this has the wrong signature this
Dialogue: 0,0:25:22.55,0:25:24.40,BottomCenter,,0,0,0,,says uh
Dialogue: 0,0:25:24.40,0:25:27.75,BottomCenter,,0,0,0,,compute the factorial of n starting at k
Dialogue: 0,0:25:27.75,0:25:30.96,BottomCenter,,0,0,0,,so what does this actually do this
Dialogue: 0,0:25:30.96,0:25:32.64,BottomCenter,,0,0,0,,computes
Dialogue: 0,0:25:32.64,0:25:36.88,BottomCenter,,0,0,0,,k times k plus 1
Dialogue: 0,0:25:37.20,0:25:40.55,BottomCenter,,0,0,0,,times k plus 2
Dialogue: 0,0:25:40.55,0:25:43.27,BottomCenter,,0,0,0,,all the way up to n okay i should have
Dialogue: 0,0:25:43.27,0:25:44.79,BottomCenter,,0,0,0,,called this n in the first case
Dialogue: 0,0:25:44.79,0:25:46.48,BottomCenter,,0,0,0,,it doesn't matter because k or n they're
Dialogue: 0,0:25:46.48,0:25:47.92,BottomCenter,,0,0,0,,the same so
Dialogue: 0,0:25:47.92,0:25:50.00,BottomCenter,,0,0,0,,um if that's what this does then the
Dialogue: 0,0:25:50.00,0:25:51.59,BottomCenter,,0,0,0,,definition of factorial
Dialogue: 0,0:25:51.59,0:25:54.64,BottomCenter,,0,0,0,,is actually not this anymore
Dialogue: 0,0:25:54.64,0:25:58.00,BottomCenter,,0,0,0,,but it's call return the result
Dialogue: 0,0:25:58.00,0:26:01.44,BottomCenter,,0,0,0,,of calling fact helper on n starting at
Dialogue: 0,0:26:01.44,0:26:04.16,BottomCenter,,0,0,0,,the number one
Dialogue: 0,0:26:09.03,0:26:11.83,BottomCenter,,0,0,0,,and then we can compute factorial 4 is 1
Dialogue: 0,0:26:11.83,0:26:14.16,BottomCenter,,0,0,0,,times 2 times 3 times 4.
Dialogue: 0,0:26:14.16,0:26:16.40,BottomCenter,,0,0,0,,so that's one way to do it there's
Dialogue: 0,0:26:16.40,0:26:18.00,BottomCenter,,0,0,0,,actually a third way
Dialogue: 0,0:26:18.00,0:26:21.75,BottomCenter,,0,0,0,,to count up and accumulate as you go
Dialogue: 0,0:26:21.75,0:26:23.68,BottomCenter,,0,0,0,,that i think we should talk about just
Dialogue: 0,0:26:23.68,0:26:25.44,BottomCenter,,0,0,0,,so you know the full flexibility of what
Dialogue: 0,0:26:25.44,0:26:26.07,BottomCenter,,0,0,0,,you could do
Dialogue: 0,0:26:26.07,0:26:31.03,BottomCenter,,0,0,0,,with recursion is you could say um
Dialogue: 0,0:26:33.83,0:26:37.59,BottomCenter,,0,0,0,,that this computes this result
Dialogue: 0,0:26:37.59,0:26:42.55,BottomCenter,,0,0,0,,by accumulating the result in
Dialogue: 0,0:26:43.03,0:26:46.16,BottomCenter,,0,0,0,,result well
Dialogue: 0,0:26:46.16,0:26:49.51,BottomCenter,,0,0,0,,it's too much where
Dialogue: 0,0:26:49.51,0:26:51.83,BottomCenter,,0,0,0,,we add in a third argument the result
Dialogue: 0,0:26:51.83,0:26:53.59,BottomCenter,,0,0,0,,and if we hit the end
Dialogue: 0,0:26:53.59,0:26:56.64,BottomCenter,,0,0,0,,meaning we've reached the end
Dialogue: 0,0:26:56.64,0:26:59.75,BottomCenter,,0,0,0,,then we need to put and
Dialogue: 0,0:26:59.75,0:27:01.83,BottomCenter,,0,0,0,,put this final k into the result but the
Dialogue: 0,0:27:01.83,0:27:03.83,BottomCenter,,0,0,0,,result has everything else multiplied
Dialogue: 0,0:27:03.83,0:27:06.55,BottomCenter,,0,0,0,,into it already
Dialogue: 0,0:27:06.55,0:27:10.07,BottomCenter,,0,0,0,,and what this will do
Dialogue: 0,0:27:10.07,0:27:13.20,BottomCenter,,0,0,0,,is call fact helper on n on k
Dialogue: 0,0:27:13.20,0:27:16.55,BottomCenter,,0,0,0,,plus 1 and multiply k into whatever the
Dialogue: 0,0:27:16.55,0:27:19.51,BottomCenter,,0,0,0,,result was so far
Dialogue: 0,0:27:19.51,0:27:21.35,BottomCenter,,0,0,0,,let me make sure this works and then i
Dialogue: 0,0:27:21.35,0:27:25.51,BottomCenter,,0,0,0,,will try to describe what just happened
Dialogue: 0,0:27:25.59,0:27:29.20,BottomCenter,,0,0,0,,oh good it does so what this says is
Dialogue: 0,0:27:29.20,0:27:31.68,BottomCenter,,0,0,0,,call factorial helper we're going to
Dialogue: 0,0:27:31.68,0:27:33.11,BottomCenter,,0,0,0,,compute the factorial of
Dialogue: 0,0:27:33.11,0:27:35.03,BottomCenter,,0,0,0,,n k is going to start at 1 and then
Dialogue: 0,0:27:35.03,0:27:36.64,BottomCenter,,0,0,0,,we're going to work our way up
Dialogue: 0,0:27:36.64,0:27:40.07,BottomCenter,,0,0,0,,and the result the whole factorial is
Dialogue: 0,0:27:40.07,0:27:42.31,BottomCenter,,0,0,0,,going to start at 1 because we haven't
Dialogue: 0,0:27:42.31,0:27:45.11,BottomCenter,,0,0,0,,multiplied anything into it yet
Dialogue: 0,0:27:45.11,0:27:49.03,BottomCenter,,0,0,0,,then if we kind of reach the end
Dialogue: 0,0:27:49.03,0:27:51.44,BottomCenter,,0,0,0,,then we need to multiply the k in but
Dialogue: 0,0:27:51.44,0:27:52.72,BottomCenter,,0,0,0,,then we're done
Dialogue: 0,0:27:52.72,0:27:56.07,BottomCenter,,0,0,0,,um otherwise
Dialogue: 0,0:27:56.07,0:27:58.79,BottomCenter,,0,0,0,,we're going to make the result bigger
Dialogue: 0,0:27:58.79,0:28:00.31,BottomCenter,,0,0,0,,and pass that bigger thing
Dialogue: 0,0:28:00.31,0:28:03.75,BottomCenter,,0,0,0,,into the recursive call so that k gets
Dialogue: 0,0:28:03.75,0:28:05.20,BottomCenter,,0,0,0,,multiplied in there
Dialogue: 0,0:28:05.20,0:28:06.64,BottomCenter,,0,0,0,,this is really just to keep track of
Dialogue: 0,0:28:06.64,0:28:09.20,BottomCenter,,0,0,0,,where we are and this is to
Dialogue: 0,0:28:09.20,0:28:12.31,BottomCenter,,0,0,0,,um know when when we're done and in fact
Dialogue: 0,0:28:12.31,0:28:13.75,BottomCenter,,0,0,0,,we can get the same result
Dialogue: 0,0:28:13.75,0:28:15.75,BottomCenter,,0,0,0,,if we really wanted to be fancy by
Dialogue: 0,0:28:15.75,0:28:17.27,BottomCenter,,0,0,0,,saying if k is bigger than
Dialogue: 0,0:28:17.27,0:28:21.51,BottomCenter,,0,0,0,,n then we've multiplied in everything
Dialogue: 0,0:28:21.92,0:28:25.03,BottomCenter,,0,0,0,,that's one more way to compute factorial
Dialogue: 0,0:28:25.03,0:28:29.20,BottomCenter,,0,0,0,,so um yeah i guess the the ping pong
Dialogue: 0,0:28:29.20,0:28:30.16,BottomCenter,,0,0,0,,example
Dialogue: 0,0:28:30.16,0:28:33.51,BottomCenter,,0,0,0,,from homework kind of pushes you to
Dialogue: 0,0:28:33.51,0:28:35.44,BottomCenter,,0,0,0,,explore some of these different ways
Dialogue: 0,0:28:35.44,0:28:37.11,BottomCenter,,0,0,0,,in which you can track the result it's
Dialogue: 0,0:28:37.11,0:28:38.64,BottomCenter,,0,0,0,,not always the case
Dialogue: 0,0:28:38.64,0:28:41.92,BottomCenter,,0,0,0,,that you want to compute the result of
Dialogue: 0,0:28:41.92,0:28:44.72,BottomCenter,,0,0,0,,the recursive call and then multiply
Dialogue: 0,0:28:44.72,0:28:45.75,BottomCenter,,0,0,0,,something into it
Dialogue: 0,0:28:45.75,0:28:47.92,BottomCenter,,0,0,0,,maybe you could just multiply in first
Dialogue: 0,0:28:47.92,0:28:49.75,BottomCenter,,0,0,0,,since multiplication is commutative
Dialogue: 0,0:28:49.75,0:28:52.79,BottomCenter,,0,0,0,,it doesn't really matter how you do it
Dialogue: 0,0:28:52.79,0:28:54.40,BottomCenter,,0,0,0,,you can get the same result either way
Dialogue: 0,0:28:54.40,0:28:56.55,BottomCenter,,0,0,0,,with factorial but in other problems
Dialogue: 0,0:28:56.55,0:28:58.16,BottomCenter,,0,0,0,,sometimes it's hard to do it one way and
Dialogue: 0,0:28:58.16,0:29:00.64,BottomCenter,,0,0,0,,it's easier to do another
Dialogue: 0,0:29:00.64,0:29:02.24,BottomCenter,,0,0,0,,and by the way this is a lot like
Dialogue: 0,0:29:02.24,0:29:03.75,BottomCenter,,0,0,0,,assignment statements like you said
Dialogue: 0,0:29:03.75,0:29:06.88,BottomCenter,,0,0,0,,n equal to four k equal to one
Dialogue: 0,0:29:06.88,0:29:10.07,BottomCenter,,0,0,0,,result equal to one uh you know it's
Dialogue: 0,0:29:10.07,0:29:10.83,BottomCenter,,0,0,0,,like
Dialogue: 0,0:29:10.83,0:29:15.20,BottomCenter,,0,0,0,,while k is less than or equal to n
Dialogue: 0,0:29:15.20,0:29:18.79,BottomCenter,,0,0,0,,we're going to uh not change in
Dialogue: 0,0:29:18.79,0:29:21.03,BottomCenter,,0,0,0,,but we are going to increment k and
Dialogue: 0,0:29:21.03,0:29:22.72,BottomCenter,,0,0,0,,we're going to say result equals k
Dialogue: 0,0:29:22.72,0:29:26.07,BottomCenter,,0,0,0,,times result so like this
Dialogue: 0,0:29:26.07,0:29:29.68,BottomCenter,,0,0,0,,version looks an awful lot like
Dialogue: 0,0:29:29.68,0:29:32.96,BottomCenter,,0,0,0,,uh setting k to one
Dialogue: 0,0:29:32.96,0:29:36.24,BottomCenter,,0,0,0,,setting result to one while uh k
Dialogue: 0,0:29:36.24,0:29:38.55,BottomCenter,,0,0,0,,less than or equal to n or maybe we'll
Dialogue: 0,0:29:38.55,0:29:40.72,BottomCenter,,0,0,0,,make it as explicit as possible well not
Dialogue: 0,0:29:40.72,0:29:43.51,BottomCenter,,0,0,0,,k greater than n which is the expression
Dialogue: 0,0:29:43.51,0:29:45.03,BottomCenter,,0,0,0,,that we wrote there
Dialogue: 0,0:29:45.03,0:29:48.16,BottomCenter,,0,0,0,,then we could uh reassign
Dialogue: 0,0:29:48.16,0:29:51.27,BottomCenter,,0,0,0,,k and result to k plus 1 and k times
Dialogue: 0,0:29:51.27,0:29:52.00,BottomCenter,,0,0,0,,result
Dialogue: 0,0:29:52.00,0:29:54.96,BottomCenter,,0,0,0,,and then eventually return the result
Dialogue: 0,0:29:54.96,0:29:55.35,BottomCenter,,0,0,0,,like
Dialogue: 0,0:29:55.35,0:29:59.83,BottomCenter,,0,0,0,,that's uh this recursive version
Dialogue: 0,0:29:59.83,0:30:03.03,BottomCenter,,0,0,0,,is basically this code just uh
Dialogue: 0,0:30:03.03,0:30:05.11,BottomCenter,,0,0,0,,avoiding assignment statements by using
Dialogue: 0,0:30:05.11,0:30:08.24,BottomCenter,,0,0,0,,uh function calls instead
Dialogue: 0,0:30:08.24,0:30:09.92,BottomCenter,,0,0,0,,i'll add one last thing although it's i
Dialogue: 0,0:30:09.92,0:30:11.35,BottomCenter,,0,0,0,,don't think it's particularly important
Dialogue: 0,0:30:11.35,0:30:13.20,BottomCenter,,0,0,0,,to this class is that the order of
Dialogue: 0,0:30:13.20,0:30:14.16,BottomCenter,,0,0,0,,operation can
Dialogue: 0,0:30:14.16,0:30:16.79,BottomCenter,,0,0,0,,matter numerically when for example
Dialogue: 0,0:30:16.79,0:30:18.40,BottomCenter,,0,0,0,,you're dealing with very very large
Dialogue: 0,0:30:18.40,0:30:19.20,BottomCenter,,0,0,0,,numbers or
Dialogue: 0,0:30:19.20,0:30:21.59,BottomCenter,,0,0,0,,very very small numbers the order in
Dialogue: 0,0:30:21.59,0:30:23.59,BottomCenter,,0,0,0,,which you do things can create numerical
Dialogue: 0,0:30:23.59,0:30:25.92,BottomCenter,,0,0,0,,instability so for example if you
Dialogue: 0,0:30:25.92,0:30:27.44,BottomCenter,,0,0,0,,multiply a whole bunch of small numbers
Dialogue: 0,0:30:27.44,0:30:28.79,BottomCenter,,0,0,0,,together at the very beginning you'll
Dialogue: 0,0:30:28.79,0:30:30.31,BottomCenter,,0,0,0,,get these nasty little rounding
Dialogue: 0,0:30:30.31,0:30:31.35,BottomCenter,,0,0,0,,artifacts
Dialogue: 0,0:30:31.35,0:30:32.79,BottomCenter,,0,0,0,,so sometimes you have to think about
Dialogue: 0,0:30:32.79,0:30:34.64,BottomCenter,,0,0,0,,that in these very complex numeric
Dialogue: 0,0:30:34.64,0:30:35.03,BottomCenter,,0,0,0,,things
Dialogue: 0,0:30:35.03,0:30:36.55,BottomCenter,,0,0,0,,for what we're doing here it won't
Dialogue: 0,0:30:36.55,0:30:38.55,BottomCenter,,0,0,0,,really matter
Dialogue: 0,0:30:38.55,0:30:40.31,BottomCenter,,0,0,0,,that's a good question so i think the
Dialogue: 0,0:30:40.31,0:30:41.59,BottomCenter,,0,0,0,,question is the difference between a
Dialogue: 0,0:30:41.59,0:30:43.35,BottomCenter,,0,0,0,,helper function and a mutual recurrence
Dialogue: 0,0:30:43.35,0:30:45.03,BottomCenter,,0,0,0,,so let's look at what john has on the
Dialogue: 0,0:30:45.03,0:30:46.64,BottomCenter,,0,0,0,,screen right here
Dialogue: 0,0:30:46.64,0:30:48.88,BottomCenter,,0,0,0,,so this is not an example of mutual
Dialogue: 0,0:30:48.88,0:30:51.83,BottomCenter,,0,0,0,,recursion this is just recursion
Dialogue: 0,0:30:51.83,0:30:53.44,BottomCenter,,0,0,0,,and the only thing that the helper
Dialogue: 0,0:30:53.44,0:30:55.27,BottomCenter,,0,0,0,,function is doing
Dialogue: 0,0:30:55.27,0:30:57.44,BottomCenter,,0,0,0,,is sort of hiding the fact that the
Dialogue: 0,0:30:57.44,0:30:58.31,BottomCenter,,0,0,0,,recursive
Dialogue: 0,0:30:58.31,0:31:01.75,BottomCenter,,0,0,0,,call needs three parameters whereas
Dialogue: 0,0:31:01.75,0:31:04.00,BottomCenter,,0,0,0,,the the sort of the signature of calling
Dialogue: 0,0:31:04.00,0:31:06.55,BottomCenter,,0,0,0,,factorial only requires one parameter
Dialogue: 0,0:31:06.55,0:31:07.83,BottomCenter,,0,0,0,,i mean for example we could have just
Dialogue: 0,0:31:07.83,0:31:09.68,BottomCenter,,0,0,0,,said look if you want to call recursive
Dialogue: 0,0:31:09.68,0:31:10.64,BottomCenter,,0,0,0,,factorial
Dialogue: 0,0:31:10.64,0:31:12.55,BottomCenter,,0,0,0,,you have to initialize it with a one and
Dialogue: 0,0:31:12.55,0:31:14.40,BottomCenter,,0,0,0,,a one for these other things but that's
Dialogue: 0,0:31:14.40,0:31:16.16,BottomCenter,,0,0,0,,that's not nice to the user
Dialogue: 0,0:31:16.16,0:31:17.75,BottomCenter,,0,0,0,,and so we want to sort of hide that
Dialogue: 0,0:31:17.75,0:31:19.44,BottomCenter,,0,0,0,,implementation detail
Dialogue: 0,0:31:19.44,0:31:21.83,BottomCenter,,0,0,0,,and so we create this sort of this this
Dialogue: 0,0:31:21.83,0:31:23.35,BottomCenter,,0,0,0,,facade a little bit
Dialogue: 0,0:31:23.35,0:31:25.59,BottomCenter,,0,0,0,,right call fact with n and then all
Dialogue: 0,0:31:25.59,0:31:26.88,BottomCenter,,0,0,0,,that's going to do is call another
Dialogue: 0,0:31:26.88,0:31:28.88,BottomCenter,,0,0,0,,function which itself is recursive
Dialogue: 0,0:31:28.88,0:31:30.40,BottomCenter,,0,0,0,,right so if you look at the recursive
Dialogue: 0,0:31:30.40,0:31:32.24,BottomCenter,,0,0,0,,call down here in fact helper
Dialogue: 0,0:31:32.24,0:31:33.68,BottomCenter,,0,0,0,,i'm using my mouse to point to the
Dialogue: 0,0:31:33.68,0:31:35.11,BottomCenter,,0,0,0,,screen by the way which doesn't work it
Dialogue: 0,0:31:35.11,0:31:36.00,BottomCenter,,0,0,0,,turns out
Dialogue: 0,0:31:36.00,0:31:38.96,BottomCenter,,0,0,0,,um thank you john then that is itself
Dialogue: 0,0:31:38.96,0:31:39.75,BottomCenter,,0,0,0,,recursive
Dialogue: 0,0:31:39.75,0:31:42.88,BottomCenter,,0,0,0,,yeah a mutually recursive was i forgot
Dialogue: 0,0:31:42.88,0:31:44.79,BottomCenter,,0,0,0,,the example i think it was the credit
Dialogue: 0,0:31:44.79,0:31:46.16,BottomCenter,,0,0,0,,card example where
Dialogue: 0,0:31:46.16,0:31:48.55,BottomCenter,,0,0,0,,one function calls another function
Dialogue: 0,0:31:48.55,0:31:50.72,BottomCenter,,0,0,0,,which and that function calls the
Dialogue: 0,0:31:50.72,0:31:52.55,BottomCenter,,0,0,0,,previous function so a fact helper for
Dialogue: 0,0:31:52.55,0:31:54.40,BottomCenter,,0,0,0,,some reason called fact
Dialogue: 0,0:31:54.40,0:31:56.31,BottomCenter,,0,0,0,,then that would be mutually recursive
Dialogue: 0,0:31:56.31,0:31:57.92,BottomCenter,,0,0,0,,this is just recursive
Dialogue: 0,0:31:57.92,0:31:59.92,BottomCenter,,0,0,0,,with a little bit of sugar coating on
Dialogue: 0,0:31:59.92,0:32:03.83,BottomCenter,,0,0,0,,top to hide the implementation details
Dialogue: 0,0:32:04.64,0:32:07.03,BottomCenter,,0,0,0,,now that's exactly right and and this is
Dialogue: 0,0:32:07.03,0:32:08.00,BottomCenter,,0,0,0,,unrelated but
Dialogue: 0,0:32:08.00,0:32:10.24,BottomCenter,,0,0,0,,also might be relevant because it's a
Dialogue: 0,0:32:10.24,0:32:11.51,BottomCenter,,0,0,0,,source of confusion
Dialogue: 0,0:32:11.51,0:32:13.59,BottomCenter,,0,0,0,,sometimes instead of defining a new
Dialogue: 0,0:32:13.59,0:32:14.79,BottomCenter,,0,0,0,,function
Dialogue: 0,0:32:14.79,0:32:17.75,BottomCenter,,0,0,0,,and writing fact helper and passing in
Dialogue: 0,0:32:17.75,0:32:18.48,BottomCenter,,0,0,0,,the
Dialogue: 0,0:32:18.48,0:32:20.55,BottomCenter,,0,0,0,,initial values which i think is fine
Dialogue: 0,0:32:20.55,0:32:21.59,BottomCenter,,0,0,0,,practice
Dialogue: 0,0:32:21.59,0:32:23.35,BottomCenter,,0,0,0,,sometimes what you'll see is that people
Dialogue: 0,0:32:23.35,0:32:26.16,BottomCenter,,0,0,0,,will provide default values
Dialogue: 0,0:32:26.16,0:32:29.92,BottomCenter,,0,0,0,,for this and then
Dialogue: 0,0:32:29.92,0:32:33.11,BottomCenter,,0,0,0,,call this thing fact
Dialogue: 0,0:32:33.11,0:32:36.16,BottomCenter,,0,0,0,,and get rid of this entirely uh now
Dialogue: 0,0:32:36.16,0:32:39.44,BottomCenter,,0,0,0,,this will still work will not work uh
Dialogue: 0,0:32:39.44,0:32:40.00,BottomCenter,,0,0,0,,because we
Dialogue: 0,0:32:40.00,0:32:43.83,BottomCenter,,0,0,0,,called this okay uh this will still work
Dialogue: 0,0:32:43.83,0:32:46.79,BottomCenter,,0,0,0,,and what's going on here is that these
Dialogue: 0,0:32:46.79,0:32:48.07,BottomCenter,,0,0,0,,numbers one and one
Dialogue: 0,0:32:48.07,0:32:50.64,BottomCenter,,0,0,0,,only matter when you call fact with one
Dialogue: 0,0:32:50.64,0:32:51.27,BottomCenter,,0,0,0,,argument
Dialogue: 0,0:32:51.27,0:32:52.88,BottomCenter,,0,0,0,,as soon as you make a recursive call
Dialogue: 0,0:32:52.88,0:32:54.40,BottomCenter,,0,0,0,,we're passing in two different arguments
Dialogue: 0,0:32:54.40,0:32:54.88,BottomCenter,,0,0,0,,which means
Dialogue: 0,0:32:54.88,0:32:57.20,BottomCenter,,0,0,0,,ignore the default values and use these
Dialogue: 0,0:32:57.20,0:32:58.72,BottomCenter,,0,0,0,,values instead
Dialogue: 0,0:32:58.72,0:33:01.03,BottomCenter,,0,0,0,,um and and therefore we've got a
Dialogue: 0,0:33:01.03,0:33:03.03,BottomCenter,,0,0,0,,function that kind of works
Dialogue: 0,0:33:03.03,0:33:06.96,BottomCenter,,0,0,0,,uh this is okay but the old version was
Dialogue: 0,0:33:06.96,0:33:07.68,BottomCenter,,0,0,0,,better
Dialogue: 0,0:33:07.68,0:33:09.92,BottomCenter,,0,0,0,,because the old version said you know
Dialogue: 0,0:33:09.92,0:33:10.96,BottomCenter,,0,0,0,,this is what you call
Dialogue: 0,0:33:10.96,0:33:12.24,BottomCenter,,0,0,0,,and you only have to pass in one
Dialogue: 0,0:33:12.24,0:33:13.44,BottomCenter,,0,0,0,,argument and you don't even have to
Dialogue: 0,0:33:13.44,0:33:15.44,BottomCenter,,0,0,0,,think about what k and result are those
Dialogue: 0,0:33:15.44,0:33:16.31,BottomCenter,,0,0,0,,are like
Dialogue: 0,0:33:16.31,0:33:18.00,BottomCenter,,0,0,0,,deep buried and some helper functions
Dialogue: 0,0:33:18.00,0:33:20.07,BottomCenter,,0,0,0,,that you should never call so i i kind
Dialogue: 0,0:33:20.07,0:33:21.03,BottomCenter,,0,0,0,,of like this version
Dialogue: 0,0:33:21.03,0:33:23.35,BottomCenter,,0,0,0,,oh sorry i i agree with god i like that
Dialogue: 0,0:33:23.35,0:33:24.55,BottomCenter,,0,0,0,,version too and also
Dialogue: 0,0:33:24.55,0:33:26.07,BottomCenter,,0,0,0,,the other version where there's the
Dialogue: 0,0:33:26.07,0:33:27.59,BottomCenter,,0,0,0,,default parameters
Dialogue: 0,0:33:27.59,0:33:30.31,BottomCenter,,0,0,0,,the user could mistakenly call fact four
Dialogue: 0,0:33:30.31,0:33:30.64,BottomCenter,,0,0,0,,was
Dialogue: 0,0:33:30.64,0:33:32.72,BottomCenter,,0,0,0,,you know two and three and now you're
Dialogue: 0,0:33:32.72,0:33:33.83,BottomCenter,,0,0,0,,off to the races
Dialogue: 0,0:33:33.83,0:33:35.44,BottomCenter,,0,0,0,,so you don't even you don't even open
Dialogue: 0,0:33:35.44,0:33:37.68,BottomCenter,,0,0,0,,the door to the to the ability
Dialogue: 0,0:33:37.68,0:33:41.03,BottomCenter,,0,0,0,,to miscall the core function of facts i
Dialogue: 0,0:33:41.03,0:33:42.40,BottomCenter,,0,0,0,,i do like this even though it does
Dialogue: 0,0:33:42.40,0:33:45.59,BottomCenter,,0,0,0,,require a little bit more code
Dialogue: 0,0:33:45.59,0:33:47.27,BottomCenter,,0,0,0,,the next question was what's a helper
Dialogue: 0,0:33:47.27,0:33:48.96,BottomCenter,,0,0,0,,function
Dialogue: 0,0:33:48.96,0:33:50.96,BottomCenter,,0,0,0,,a great question so this term helper
Dialogue: 0,0:33:50.96,0:33:52.07,BottomCenter,,0,0,0,,function
Dialogue: 0,0:33:52.07,0:33:56.88,BottomCenter,,0,0,0,,is used to describe a function that
Dialogue: 0,0:33:57.03,0:33:59.68,BottomCenter,,0,0,0,,isn't really useful on its own instead
Dialogue: 0,0:33:59.68,0:34:01.92,BottomCenter,,0,0,0,,it's part of the implementation of
Dialogue: 0,0:34:01.92,0:34:03.92,BottomCenter,,0,0,0,,another function
Dialogue: 0,0:34:03.92,0:34:07.11,BottomCenter,,0,0,0,,and whether something is a helper or not
Dialogue: 0,0:34:07.11,0:34:09.67,BottomCenter,,0,0,0,,is really kind of up to interpretation
Dialogue: 0,0:34:09.67,0:34:10.48,BottomCenter,,0,0,0,,so
Dialogue: 0,0:34:10.48,0:34:12.71,BottomCenter,,0,0,0,,in your hog project i think i would have
Dialogue: 0,0:34:12.71,0:34:13.92,BottomCenter,,0,0,0,,described
Dialogue: 0,0:34:13.92,0:34:16.55,BottomCenter,,0,0,0,,uh take turn as a helper function for
Dialogue: 0,0:34:16.55,0:34:17.76,BottomCenter,,0,0,0,,the play function
Dialogue: 0,0:34:17.76,0:34:19.59,BottomCenter,,0,0,0,,meaning it's something that helps you
Dialogue: 0,0:34:19.59,0:34:21.51,BottomCenter,,0,0,0,,implement the play function
Dialogue: 0,0:34:21.51,0:34:24.40,BottomCenter,,0,0,0,,uh by describing some piece of logic
Dialogue: 0,0:34:24.40,0:34:25.67,BottomCenter,,0,0,0,,within it
Dialogue: 0,0:34:25.67,0:34:27.36,BottomCenter,,0,0,0,,but then again take turn is kind of
Dialogue: 0,0:34:27.36,0:34:29.03,BottomCenter,,0,0,0,,useful on its own because we did some
Dialogue: 0,0:34:29.03,0:34:30.48,BottomCenter,,0,0,0,,various like analysis
Dialogue: 0,0:34:30.48,0:34:32.71,BottomCenter,,0,0,0,,of like which number of dice gives you
Dialogue: 0,0:34:32.71,0:34:34.40,BottomCenter,,0,0,0,,the highest turn score
Dialogue: 0,0:34:34.40,0:34:36.23,BottomCenter,,0,0,0,,so in that sense it wasn't really just a
Dialogue: 0,0:34:36.23,0:34:38.07,BottomCenter,,0,0,0,,helper function it was useful
Dialogue: 0,0:34:38.07,0:34:41.03,BottomCenter,,0,0,0,,for other stuff too so that's the kind
Dialogue: 0,0:34:41.03,0:34:42.71,BottomCenter,,0,0,0,,of matter of interpretation part but in
Dialogue: 0,0:34:42.71,0:34:43.92,BottomCenter,,0,0,0,,general what it means
Dialogue: 0,0:34:43.92,0:34:45.59,BottomCenter,,0,0,0,,the reason i called this fact helper and
Dialogue: 0,0:34:45.59,0:34:47.28,BottomCenter,,0,0,0,,described it as a helper function
Dialogue: 0,0:34:47.28,0:34:49.19,BottomCenter,,0,0,0,,is that the only reason i wrote it was
Dialogue: 0,0:34:49.19,0:34:50.63,BottomCenter,,0,0,0,,to help implement fact
Dialogue: 0,0:34:50.63,0:34:52.71,BottomCenter,,0,0,0,,in fact was the main event and this was
Dialogue: 0,0:34:52.71,0:34:56.15,BottomCenter,,0,0,0,,just uh there to help it along
Dialogue: 0,0:34:56.15,0:34:57.92,BottomCenter,,0,0,0,,yeah that's how i would define it too
Dialogue: 0,0:34:57.92,0:34:59.28,BottomCenter,,0,0,0,,the way i think about these things is
Dialogue: 0,0:34:59.28,0:35:00.15,BottomCenter,,0,0,0,,there's sort of
Dialogue: 0,0:35:00.15,0:35:02.48,BottomCenter,,0,0,0,,an inward facing and an outward facing
Dialogue: 0,0:35:02.48,0:35:03.44,BottomCenter,,0,0,0,,functionality
Dialogue: 0,0:35:03.44,0:35:04.96,BottomCenter,,0,0,0,,right we create a library of
Dialogue: 0,0:35:04.96,0:35:06.96,BottomCenter,,0,0,0,,mathematical routines for computing sine
Dialogue: 0,0:35:06.96,0:35:08.63,BottomCenter,,0,0,0,,cosine factorial
Dialogue: 0,0:35:08.63,0:35:10.32,BottomCenter,,0,0,0,,tangent square root and all those things
Dialogue: 0,0:35:10.32,0:35:12.00,BottomCenter,,0,0,0,,and i want users to be able to call
Dialogue: 0,0:35:12.00,0:35:13.51,BottomCenter,,0,0,0,,those functions
Dialogue: 0,0:35:13.51,0:35:15.11,BottomCenter,,0,0,0,,in order for me to be able to implement
Dialogue: 0,0:35:15.11,0:35:16.96,BottomCenter,,0,0,0,,those i may need to do some gnarly
Dialogue: 0,0:35:16.96,0:35:18.96,BottomCenter,,0,0,0,,mathematical operations
Dialogue: 0,0:35:18.96,0:35:20.32,BottomCenter,,0,0,0,,the user doesn't need to know about
Dialogue: 0,0:35:20.32,0:35:21.76,BottomCenter,,0,0,0,,those so those i'm going to call
Dialogue: 0,0:35:21.76,0:35:24.07,BottomCenter,,0,0,0,,auxiliary or helper functions that are
Dialogue: 0,0:35:24.07,0:35:24.71,BottomCenter,,0,0,0,,sort of
Dialogue: 0,0:35:24.71,0:35:26.71,BottomCenter,,0,0,0,,hidden away they're for the internal
Dialogue: 0,0:35:26.71,0:35:29.03,BottomCenter,,0,0,0,,workings but the external
Dialogue: 0,0:35:29.03,0:35:30.32,BottomCenter,,0,0,0,,you know what are the functions that are
Dialogue: 0,0:35:30.32,0:35:32.23,BottomCenter,,0,0,0,,being called that's the fact
Dialogue: 0,0:35:32.23,0:35:35.59,BottomCenter,,0,0,0,,yeah yeah that's a great question so
Dialogue: 0,0:35:35.59,0:35:37.03,BottomCenter,,0,0,0,,like when would you use recursion
Dialogue: 0,0:35:37.03,0:35:38.32,BottomCenter,,0,0,0,,instead of iteration
Dialogue: 0,0:35:38.32,0:35:39.92,BottomCenter,,0,0,0,,if there's a straightforward iterative
Dialogue: 0,0:35:39.92,0:35:41.44,BottomCenter,,0,0,0,,approach then it's usually the right
Dialogue: 0,0:35:41.44,0:35:42.55,BottomCenter,,0,0,0,,thing to use
Dialogue: 0,0:35:42.55,0:35:44.48,BottomCenter,,0,0,0,,the only obvious advantage of recursion
Dialogue: 0,0:35:44.48,0:35:45.92,BottomCenter,,0,0,0,,is that if you're trying to track how
Dialogue: 0,0:35:45.92,0:35:47.84,BottomCenter,,0,0,0,,many times something happens
Dialogue: 0,0:35:47.84,0:35:51.51,BottomCenter,,0,0,0,,or um uh you want to
Dialogue: 0,0:35:51.51,0:35:53.44,BottomCenter,,0,0,0,,somehow set it up such that in every
Dialogue: 0,0:35:53.44,0:35:55.11,BottomCenter,,0,0,0,,iteration like some other
Dialogue: 0,0:35:55.11,0:35:56.80,BottomCenter,,0,0,0,,side effect happens like something gets
Dialogue: 0,0:35:56.80,0:35:58.80,BottomCenter,,0,0,0,,written to a log or something like that
Dialogue: 0,0:35:58.80,0:36:00.15,BottomCenter,,0,0,0,,then it can be convenient to do it
Dialogue: 0,0:36:00.15,0:36:01.84,BottomCenter,,0,0,0,,recursively because then you can just
Dialogue: 0,0:36:01.84,0:36:03.36,BottomCenter,,0,0,0,,decorate the function and every time it
Dialogue: 0,0:36:03.36,0:36:04.15,BottomCenter,,0,0,0,,gets called
Dialogue: 0,0:36:04.15,0:36:06.88,BottomCenter,,0,0,0,,like that information is uh captured
Dialogue: 0,0:36:06.88,0:36:08.15,BottomCenter,,0,0,0,,somewhere
Dialogue: 0,0:36:08.15,0:36:09.92,BottomCenter,,0,0,0,,so you know that's the main advantage of
Dialogue: 0,0:36:09.92,0:36:11.36,BottomCenter,,0,0,0,,doing something recursively that you
Dialogue: 0,0:36:11.36,0:36:12.71,BottomCenter,,0,0,0,,could do iteratively
Dialogue: 0,0:36:12.71,0:36:14.71,BottomCenter,,0,0,0,,but that's a pretty thin advantage so
Dialogue: 0,0:36:14.71,0:36:16.32,BottomCenter,,0,0,0,,most of the time you just want to write
Dialogue: 0,0:36:16.32,0:36:18.32,BottomCenter,,0,0,0,,things iteratively if you can
Dialogue: 0,0:36:18.32,0:36:20.23,BottomCenter,,0,0,0,,now the tree recursion examples that
Dialogue: 0,0:36:20.23,0:36:21.84,BottomCenter,,0,0,0,,we've talked about really
Dialogue: 0,0:36:21.84,0:36:23.92,BottomCenter,,0,0,0,,are quite a bit simpler if you write
Dialogue: 0,0:36:23.92,0:36:25.51,BottomCenter,,0,0,0,,them
Dialogue: 0,0:36:25.51,0:36:27.76,BottomCenter,,0,0,0,,recursively rather than iteratively if
Dialogue: 0,0:36:27.76,0:36:29.44,BottomCenter,,0,0,0,,you want to write them iteratively then
Dialogue: 0,0:36:29.44,0:36:30.63,BottomCenter,,0,0,0,,you kind of have to keep track
Dialogue: 0,0:36:30.63,0:36:32.55,BottomCenter,,0,0,0,,of where you are and the computation in
Dialogue: 0,0:36:32.55,0:36:34.63,BottomCenter,,0,0,0,,a way that the interpreter will do for
Dialogue: 0,0:36:34.63,0:36:35.76,BottomCenter,,0,0,0,,you if you just write
Dialogue: 0,0:36:35.76,0:36:37.11,BottomCenter,,0,0,0,,pre-recursion so this is like
Dialogue: 0,0:36:37.11,0:36:39.51,BottomCenter,,0,0,0,,competitions or the towers of hanoi
Dialogue: 0,0:36:39.51,0:36:41.03,BottomCenter,,0,0,0,,example
Dialogue: 0,0:36:41.03,0:36:42.48,BottomCenter,,0,0,0,,those are cases where i think the
Dialogue: 0,0:36:42.48,0:36:44.40,BottomCenter,,0,0,0,,recursive version is often
Dialogue: 0,0:36:44.40,0:36:46.15,BottomCenter,,0,0,0,,just preferred because it's so much
Dialogue: 0,0:36:46.15,0:36:48.55,BottomCenter,,0,0,0,,simpler
Dialogue: 0,0:36:50.07,0:36:51.51,BottomCenter,,0,0,0,,yeah the only thing i would add to that
Dialogue: 0,0:36:51.51,0:36:53.92,BottomCenter,,0,0,0,,is i've definitely stumbled upon a few
Dialogue: 0,0:36:53.92,0:36:56.07,BottomCenter,,0,0,0,,problems in my life where
Dialogue: 0,0:36:56.07,0:36:58.00,BottomCenter,,0,0,0,,just the iterative ones were just a bear
Dialogue: 0,0:36:58.00,0:36:59.84,BottomCenter,,0,0,0,,to implement and the recursive ones were
Dialogue: 0,0:36:59.84,0:37:00.71,BottomCenter,,0,0,0,,just so
Dialogue: 0,0:37:00.71,0:37:03.44,BottomCenter,,0,0,0,,sort of elegant and beautiful but for
Dialogue: 0,0:37:03.44,0:37:04.96,BottomCenter,,0,0,0,,the most part i think i think john's
Dialogue: 0,0:37:04.96,0:37:06.23,BottomCenter,,0,0,0,,right is that the iterative ones are
Dialogue: 0,0:37:06.23,0:37:07.67,BottomCenter,,0,0,0,,probably the way to go in terms of
Dialogue: 0,0:37:07.67,0:37:11.36,BottomCenter,,0,0,0,,efficiency and ease of implementation
Dialogue: 0,0:37:11.36,0:37:13.19,BottomCenter,,0,0,0,,the question was do you want to put the
Dialogue: 0,0:37:13.19,0:37:14.40,BottomCenter,,0,0,0,,helper function
Dialogue: 0,0:37:14.40,0:37:18.07,BottomCenter,,0,0,0,,inside the body of the main function
Dialogue: 0,0:37:18.07,0:37:21.19,BottomCenter,,0,0,0,,or afterwards yeah you could have done
Dialogue: 0,0:37:21.19,0:37:22.55,BottomCenter,,0,0,0,,it either way you could have made that a
Dialogue: 0,0:37:22.55,0:37:23.84,BottomCenter,,0,0,0,,local function
Dialogue: 0,0:37:23.84,0:37:27.28,BottomCenter,,0,0,0,,uh that um
Dialogue: 0,0:37:27.28,0:37:31.44,BottomCenter,,0,0,0,,uh that had scope only within the fact
Dialogue: 0,0:37:31.44,0:37:32.96,BottomCenter,,0,0,0,,yeah there were actually like there was
Dialogue: 0,0:37:32.96,0:37:35.28,BottomCenter,,0,0,0,,a related question in chats maybe i can
Dialogue: 0,0:37:35.28,0:37:36.23,BottomCenter,,0,0,0,,answer them both
Dialogue: 0,0:37:36.23,0:37:39.28,BottomCenter,,0,0,0,,the question is like uh
Dialogue: 0,0:37:39.28,0:37:41.28,BottomCenter,,0,0,0,,why is this its own function as opposed
Dialogue: 0,0:37:41.28,0:37:43.44,BottomCenter,,0,0,0,,to being defined within fact
Dialogue: 0,0:37:43.44,0:37:46.32,BottomCenter,,0,0,0,,and do you always need a helper function
Dialogue: 0,0:37:46.32,0:37:47.51,BottomCenter,,0,0,0,,when do you know whether you need a
Dialogue: 0,0:37:47.51,0:37:49.19,BottomCenter,,0,0,0,,helper function or not
Dialogue: 0,0:37:49.19,0:37:52.00,BottomCenter,,0,0,0,,um and recursion in particular the way
Dialogue: 0,0:37:52.00,0:37:53.76,BottomCenter,,0,0,0,,to know that you need a helper function
Dialogue: 0,0:37:53.76,0:37:55.51,BottomCenter,,0,0,0,,is that you want to track more things
Dialogue: 0,0:37:55.51,0:37:57.59,BottomCenter,,0,0,0,,than you have arguments for so if you
Dialogue: 0,0:37:57.59,0:37:58.71,BottomCenter,,0,0,0,,want to track
Dialogue: 0,0:37:58.71,0:38:01.67,BottomCenter,,0,0,0,,n and k and the result then you need n
Dialogue: 0,0:38:01.67,0:38:02.07,BottomCenter,,0,0,0,,and k
Dialogue: 0,0:38:02.07,0:38:04.48,BottomCenter,,0,0,0,,and result in the signature and if
Dialogue: 0,0:38:04.48,0:38:05.36,BottomCenter,,0,0,0,,they're not there
Dialogue: 0,0:38:05.36,0:38:07.67,BottomCenter,,0,0,0,,then you need to write a helper function
Dialogue: 0,0:38:07.67,0:38:09.28,BottomCenter,,0,0,0,,should this be
Dialogue: 0,0:38:09.28,0:38:13.76,BottomCenter,,0,0,0,,in here instead uh there is a tiny tiny
Dialogue: 0,0:38:13.76,0:38:15.11,BottomCenter,,0,0,0,,tiny little advantage
Dialogue: 0,0:38:15.11,0:38:17.44,BottomCenter,,0,0,0,,maybe not that tiny which is that we
Dialogue: 0,0:38:17.44,0:38:18.96,BottomCenter,,0,0,0,,don't need to track in
Dialogue: 0,0:38:18.96,0:38:22.32,BottomCenter,,0,0,0,,in this case so
Dialogue: 0,0:38:22.32,0:38:24.23,BottomCenter,,0,0,0,,our code got a little simpler when we
Dialogue: 0,0:38:24.23,0:38:26.15,BottomCenter,,0,0,0,,wrote it as an inner function
Dialogue: 0,0:38:26.15,0:38:27.84,BottomCenter,,0,0,0,,that would be one motivation to do it
Dialogue: 0,0:38:27.84,0:38:29.51,BottomCenter,,0,0,0,,this way um
Dialogue: 0,0:38:29.51,0:38:31.76,BottomCenter,,0,0,0,,because this end never changed and it
Dialogue: 0,0:38:31.76,0:38:33.67,BottomCenter,,0,0,0,,could always refer to that
Dialogue: 0,0:38:33.67,0:38:34.80,BottomCenter,,0,0,0,,you have to get rid of it you have to
Dialogue: 0,0:38:34.80,0:38:36.55,BottomCenter,,0,0,0,,get rid of that n2 right there yeah get
Dialogue: 0,0:38:36.55,0:38:38.00,BottomCenter,,0,0,0,,rid of that
Dialogue: 0,0:38:38.00,0:38:40.32,BottomCenter,,0,0,0,,um
Dialogue: 0,0:38:41.03,0:38:43.03,BottomCenter,,0,0,0,,the other advantage of this is that no
Dialogue: 0,0:38:43.03,0:38:44.55,BottomCenter,,0,0,0,,one could ever call
Dialogue: 0,0:38:44.55,0:38:46.88,BottomCenter,,0,0,0,,fact helper because it's not available
Dialogue: 0,0:38:46.88,0:38:48.48,BottomCenter,,0,0,0,,anymore so that's another reason that
Dialogue: 0,0:38:48.48,0:38:50.48,BottomCenter,,0,0,0,,sometimes people write inner functions
Dialogue: 0,0:38:50.48,0:38:52.15,BottomCenter,,0,0,0,,this is like extremely common in
Dialogue: 0,0:38:52.15,0:38:54.07,BottomCenter,,0,0,0,,javascript for some reason is that like
Dialogue: 0,0:38:54.07,0:38:55.44,BottomCenter,,0,0,0,,all functions are hidden within other
Dialogue: 0,0:38:55.44,0:38:56.55,BottomCenter,,0,0,0,,functions just
Dialogue: 0,0:38:56.55,0:38:58.40,BottomCenter,,0,0,0,,as a way of making sure that the wrong
Dialogue: 0,0:38:58.40,0:39:00.23,BottomCenter,,0,0,0,,person doesn't ever call them
Dialogue: 0,0:39:00.23,0:39:02.00,BottomCenter,,0,0,0,,um and it shows up every once in a while
Dialogue: 0,0:39:02.00,0:39:03.92,BottomCenter,,0,0,0,,in a python code base though i think uh
Dialogue: 0,0:39:03.92,0:39:04.96,BottomCenter,,0,0,0,,more rarely
Dialogue: 0,0:39:04.96,0:39:07.11,BottomCenter,,0,0,0,,yeah so yeah so that's basically the
Dialogue: 0,0:39:07.11,0:39:08.32,BottomCenter,,0,0,0,,story it's like if you're gonna share
Dialogue: 0,0:39:08.32,0:39:10.23,BottomCenter,,0,0,0,,names then it can be convenient but also
Dialogue: 0,0:39:10.23,0:39:11.11,BottomCenter,,0,0,0,,it hides
Dialogue: 0,0:39:11.11,0:39:12.88,BottomCenter,,0,0,0,,hides the helper function so that no one
Dialogue: 0,0:39:12.88,0:39:14.15,BottomCenter,,0,0,0,,calls the next note
Dialogue: 0,0:39:14.15,0:39:15.59,BottomCenter,,0,0,0,,that's what i would have done i would
Dialogue: 0,0:39:15.59,0:39:17.59,BottomCenter,,0,0,0,,have embedded in there maybe if i i
Dialogue: 0,0:39:17.59,0:39:19.11,BottomCenter,,0,0,0,,don't want anybody else calling it i
Dialogue: 0,0:39:19.11,0:39:20.88,BottomCenter,,0,0,0,,don't want it polluting the name space
Dialogue: 0,0:39:20.88,0:39:21.84,BottomCenter,,0,0,0,,and so i i would
Dialogue: 0,0:39:21.84,0:39:23.76,BottomCenter,,0,0,0,,i would have left it out but i mean they