[Script Info]
Title: Lecture 24. Data Example_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1s3411G7yM?p=58&vd_source=6ffca0aa1006734a4fba52f389036611
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.53,0:00:03.93,*Default,NTP,0000,0000,0000,,61 选举第 24 号公告
Dialogue: 0,0:00:04.53,0:00:05.80,*Default,NTP,0000,0000,0000,,周五答案
Dialogue: 0,0:00:05.80,0:00:08.67,*Default,NTP,0000,0000,0000,,周四之前提交，可获得提前提交奖励积分
Dialogue: 0,0:00:08.67,0:00:12.67,*Default,NTP,0000,0000,0000,,周四 我很高兴地告诉大家，办公时间 q
Dialogue: 0,0:00:12.67,0:00:13.97,*Default,NTP,0000,0000,0000,,很短
Dialogue: 0,0:00:14.13,0:00:14.97,*Default,NTP,0000,0000,0000,,如果您需要帮助
Dialogue: 0,0:00:14.97,0:00:17.27,*Default,NTP,0000,0000,0000,,我们会帮助你完成作业
Dialogue: 0,0:00:17.90,0:00:19.73,*Default,NTP,0000,0000,0000,,作业五周一交
Dialogue: 0,0:00:19.87,0:00:21.50,*Default,NTP,0000,0000,0000,,你可以在
Dialogue: 0,0:00:21.50,0:00:22.80,*Default,NTP,0000,0000,0000,,完成。
Dialogue: 0,0:00:22.97,0:00:24.17,*Default,NTP,0000,0000,0000,,完成实验
Dialogue: 0,0:00:24.33,0:00:26.33,*Default,NTP,0000,0000,0000,,因为实验
Dialogue: 0,0:00:26.33,0:00:28.07,*Default,NTP,0000,0000,0000,,九的唯一要求就是完成作业
Dialogue: 0,0:00:28.37,0:00:30.67,*Default,NTP,0000,0000,0000,,实验九还有一些选做题
Dialogue: 0,0:00:30.70,0:00:33.10,*Default,NTP,0000,0000,0000,,因此仍然会有一个实验指导
Dialogue: 0,0:00:33.17,0:00:34.10,*Default,NTP,0000,0000,0000,,以便您能
Dialogue: 0,0:00:34.17,0:00:35.73,*Default,NTP,0000,0000,0000,,学习如何解决这些问题
Dialogue: 0,0:00:35.73,0:00:38.50,*Default,NTP,0000,0000,0000,,这些问题将有助于在学期中进行练习
Dialogue: 0,0:00:38.67,0:00:41.13,*Default,NTP,0000,0000,0000,,但实验九将会公布解题方法
Dialogue: 0,0:00:41.13,0:00:42.90,*Default,NTP,0000,0000,0000,,所以它只是一种学习辅助工具
Dialogue: 0,0:00:42.90,0:00:44.77,*Default,NTP,0000,0000,0000,,而不是你必须做的事情
Dialogue: 0,0:00:45.57,0:00:46.97,*Default,NTP,0000,0000,0000,,期中考试二即将到来
Dialogue: 0,0:00:47.27,0:00:49.50,*Default,NTP,0000,0000,0000,,有一些预习选项
Dialogue: 0,0:00:49.50,0:00:52.17,*Default,NTP,0000,0000,0000,,当然，你也可以回去看讲座
Dialogue: 0,0:00:52.37,0:00:53.40,*Default,NTP,0000,0000,0000,,最好的办法之一
Dialogue: 0,0:00:53.40,0:00:54.30,*Default,NTP,0000,0000,0000,,就是做一些
Dialogue: 0,0:00:54.30,0:00:56.73,*Default,NTP,0000,0000,0000,,选做题
Dialogue: 0,0:00:56.97,0:00:58.40,*Default,NTP,0000,0000,0000,,以下是一些活动
Dialogue: 0,0:00:58.57,0:01:01.67,*Default,NTP,0000,0000,0000,,周五我们照常举行考试准备会
Dialogue: 0,0:01:02.17,0:01:03.17,*Default,NTP,0000,0000,0000,,学生团体
Dialogue: 0,0:01:03.17,0:01:06.17,*Default,NTP,0000,0000,0000,,将在周六举行两场复习课。
Dialogue: 0,0:01:06.17,0:01:09.07,*Default,NTP,0000,0000,0000,,一次在中午，一次在六点
Dialogue: 0,0:01:09.97,0:01:10.87,*Default,NTP,0000,0000,0000,,另一个学生团体
Dialogue: 0,0:01:10.87,0:01:13.73,*Default,NTP,0000,0000,0000,,hkn 将在周日举行复习课
Dialogue: 0,0:01:13.87,0:01:17.17,*Default,NTP,0000,0000,0000,,这两节课都将被录制下来
Dialogue: 0,0:01:18.27,0:01:21.33,*Default,NTP,0000,0000,0000,,工作人员将组织一次模拟考试
Dialogue: 0,0:01:21.67,0:01:23.47,*Default,NTP,0000,0000,0000,,周一上午 11:00 开始
Dialogue: 0,0:01:23.50,0:01:26.40,*Default,NTP,0000,0000,0000,,您可以随时参加考试
Dialogue: 0,0:01:26.80,0:01:30.77,*Default,NTP,0000,0000,0000,,他们所做的就是把20年春季期中考试第二题
Dialogue: 0,0:01:30.97,0:01:34.40,*Default,NTP,0000,0000,0000,,把它改成我们考试的格式
Dialogue: 0,0:01:34.80,0:01:37.77,*Default,NTP,0000,0000,0000,,所以如果你已经读过20 20年春季期中考试第二题
Dialogue: 0,0:01:37.93,0:01:39.80,*Default,NTP,0000,0000,0000,,就不会有任何新问题
Dialogue: 0,0:01:40.07,0:01:42.33,*Default,NTP,0000,0000,0000,,模拟考试会很简单
Dialogue: 0,0:01:42.67,0:01:44.30,*Default,NTP,0000,0000,0000,,但如果你还没看过
Dialogue: 0,0:01:44.47,0:01:46.07,*Default,NTP,0000,0000,0000,,你可能想保存它
Dialogue: 0,0:01:46.20,0:01:48.67,*Default,NTP,0000,0000,0000,,但如果你还没有看过，你可能想把它保存起来，而去参加模拟考试，这样你就可以
Dialogue: 0,0:01:48.67,0:01:50.87,*Default,NTP,0000,0000,0000,,感受一下在类似考试的条件下解决这些问题的感觉
Dialogue: 0,0:01:50.93,0:01:53.17,*Default,NTP,0000,0000,0000,,在类似考试的条件下
Dialogue: 0,0:01:53.50,0:01:55.97,*Default,NTP,0000,0000,0000,,我非常推荐你参加模拟考试
Dialogue: 0,0:01:56.17,0:01:58.17,*Default,NTP,0000,0000,0000,,无论是在 11 点还是在自己的时间
Dialogue: 0,0:01:58.40,0:02:00.40,*Default,NTP,0000,0000,0000,,以确保您熟悉
Dialogue: 0,0:02:00.47,0:02:02.33,*Default,NTP,0000,0000,0000,,熟悉考试软件
Dialogue: 0,0:02:02.40,0:02:04.07,*Default,NTP,0000,0000,0000,,它和期中考试一样
Dialogue: 0,0:02:04.07,0:02:06.07,*Default,NTP,0000,0000,0000,,但这对你的记忆力总是有好处的。
Dialogue: 0,0:02:06.93,0:02:08.33,*Default,NTP,0000,0000,0000,,我在广场上发了一个帖子
Dialogue: 0,0:02:08.33,0:02:11.20,*Default,NTP,0000,0000,0000,,上讨论过的一些考试问题。
Dialogue: 0,0:02:11.20,0:02:12.20,*Default,NTP,0000,0000,0000,,讲座问答
Dialogue: 0,0:02:12.47,0:02:14.13,*Default,NTP,0000,0000,0000,,上讨论过的问题
Dialogue: 0,0:02:14.30,0:02:16.93,*Default,NTP,0000,0000,0000,,所以如果你看一下，你会看到链接
Dialogue: 0,0:02:16.93,0:02:19.33,*Default,NTP,0000,0000,0000,,两个 YouTube 视频
Dialogue: 0,0:02:19.47,0:02:21.20,*Default,NTP,0000,0000,0000,,听听
Dialogue: 0,0:02:21.73,0:02:23.30,*Default,NTP,0000,0000,0000,,教授和我是如何
Dialogue: 0,0:02:23.30,0:02:25.97,*Default,NTP,0000,0000,0000,,如何解决过去考试中的一些问题
Dialogue: 0,0:02:26.33,0:02:28.07,*Default,NTP,0000,0000,0000,,还有期中考试二的学习指南
Dialogue: 0,0:02:28.40,0:02:29.90,*Default,NTP,0000,0000,0000,,我建议您阅读
Dialogue: 0,0:02:30.37,0:02:32.17,*Default,NTP,0000,0000,0000,,工作人员还整理了
Dialogue: 0,0:02:32.27,0:02:34.07,*Default,NTP,0000,0000,0000,,如何准备考试的文件
Dialogue: 0,0:02:34.60,0:02:37.00,*Default,NTP,0000,0000,0000,,我在之前的一些
Dialogue: 0,0:02:37.10,0:02:38.50,*Default,NTP,0000,0000,0000,,公告视频
Dialogue: 0,0:02:38.57,0:02:40.87,*Default,NTP,0000,0000,0000,,但我只想提醒大家，文件在这里
Dialogue: 0,0:02:41.77,0:02:44.53,*Default,NTP,0000,0000,0000,,关于期中考试二，我没有什么新消息要告诉大家
Dialogue: 0,0:02:44.80,0:02:45.30,*Default,NTP,0000,0000,0000,,这是
Dialogue: 0,0:02:45.30,0:02:48.37,*Default,NTP,0000,0000,0000,,和上一堂课的通知一样
Dialogue: 0,0:02:48.80,0:02:51.60,*Default,NTP,0000,0000,0000,,记住，我们将通过视频监考
Dialogue: 0,0:02:51.70,0:02:53.90,*Default,NTP,0000,0000,0000,,你们需要将头部
Dialogue: 0,0:02:53.97,0:02:56.10,*Default,NTP,0000,0000,0000,,和你的屏幕
Dialogue: 0,0:02:56.53,0:02:59.10,*Default,NTP,0000,0000,0000,,如果您想申请豁免此政策
Dialogue: 0,0:02:59.17,0:03:01.40,*Default,NTP,0000,0000,0000,,请在周日之前填写此表
Dialogue: 0,0:03:02.50,0:03:06.53,*Default,NTP,0000,0000,0000,,考试于下周三（28 日）晚上 7 点开始
Dialogue: 0,0:03:07.07,0:03:09.37,*Default,NTP,0000,0000,0000,,如果您想在其他时间参加考试
Dialogue: 0,0:03:09.47,0:03:11.97,*Default,NTP,0000,0000,0000,,请填写备用时间申请表
Dialogue: 0,0:03:13.07,0:03:15.90,*Default,NTP,0000,0000,0000,,以下是考试的各种规则
Dialogue: 0,0:03:16.37,0:03:19.30,*Default,NTP,0000,0000,0000,,今天的讲座不会很长
Dialogue: 0,0:03:19.30,0:03:22.13,*Default,NTP,0000,0000,0000,,里面只是有一些例题
Dialogue: 0,0:03:22.57,0:03:25.10,*Default,NTP,0000,0000,0000,,我想这可能会帮助你恢复记忆
Dialogue: 0,0:03:25.10,0:03:26.57,*Default,NTP,0000,0000,0000,,一些细节
Dialogue: 0,0:03:26.60,0:03:28.47,*Default,NTP,0000,0000,0000,,的一些细节
Dialogue: 0,0:03:28.90,0:03:32.20,*Default,NTP,0000,0000,0000,,并帮助你为解决期中考试问题做好准备
Dialogue: 0,0:03:33.07,0:03:33.53,*Default,NTP,0000,0000,0000,,最后
Dialogue: 0,0:03:33.53,0:03:36.80,*Default,NTP,0000,0000,0000,,我想提醒你们一些课程安排上的变化
Dialogue: 0,0:03:36.80,0:03:37.80,*Default,NTP,0000,0000,0000,,课程的时间安排
Dialogue: 0,0:03:38.33,0:03:41.33,*Default,NTP,0000,0000,0000,,我读了你们对课程进展的反馈意见
Dialogue: 0,0:03:41.50,0:03:44.93,*Default,NTP,0000,0000,0000,,听起来有不少学生
Dialogue: 0,0:03:45.17,0:03:47.67,*Default,NTP,0000,0000,0000,,对远程学习环境
Dialogue: 0,0:03:47.67,0:03:49.57,*Default,NTP,0000,0000,0000,,远程学习环境
Dialogue: 0,0:03:49.57,0:03:51.13,*Default,NTP,0000,0000,0000,,以及世界上发生的所有事情
Dialogue: 0,0:03:51.33,0:03:52.77,*Default,NTP,0000,0000,0000,,我完全理解
Dialogue: 0,0:03:53.37,0:03:55.20,*Default,NTP,0000,0000,0000,,我们试图预见到这一点
Dialogue: 0,0:03:55.33,0:03:57.73,*Default,NTP,0000,0000,0000,,增加了一些可选内容
Dialogue: 0,0:03:57.93,0:03:59.13,*Default,NTP,0000,0000,0000,,因此，我们在本学期早些时候介绍了二进制
Dialogue: 0,0:03:59.13,0:04:01.57,*Default,NTP,0000,0000,0000,,二进制数和电路
Dialogue: 0,0:04:01.67,0:04:04.70,*Default,NTP,0000,0000,0000,,但我们决定不在考试中要求这些内容
Dialogue: 0,0:04:04.80,0:04:06.07,*Default,NTP,0000,0000,0000,,这样我们就可以
Dialogue: 0,0:04:06.20,0:04:08.13,*Default,NTP,0000,0000,0000,,在课程表中留出一些空间
Dialogue: 0,0:04:08.27,0:04:10.27,*Default,NTP,0000,0000,0000,,给你们一些有趣的内容
Dialogue: 0,0:04:10.33,0:04:12.80,*Default,NTP,0000,0000,0000,,而不是给你们更多必须学习的东西
Dialogue: 0,0:04:13.13,0:04:14.80,*Default,NTP,0000,0000,0000,,我们将继续这样做
Dialogue: 0,0:04:15.13,0:04:15.93,*Default,NTP,0000,0000,0000,,所以
Dialogue: 0,0:04:16.67,0:04:19.27,*Default,NTP,0000,0000,0000,,已经发生的效率，可有可无
Dialogue: 0,0:04:19.67,0:04:21.93,*Default,NTP,0000,0000,0000,,下周我们将有
Dialogue: 0,0:04:21.93,0:04:24.87,*Default,NTP,0000,0000,0000,,周一和周五有两场选修课
Dialogue: 0,0:04:25.07,0:04:26.57,*Default,NTP,0000,0000,0000,,所以
Dialogue: 0,0:04:26.60,0:04:28.10,*Default,NTP,0000,0000,0000,,你唯一要担心的
Dialogue: 0,0:04:28.10,0:04:31.27,*Default,NTP,0000,0000,0000,,就是完成第五次作业和期中考试
Dialogue: 0,0:04:31.30,0:04:32.87,*Default,NTP,0000,0000,0000,,期中考试结束后
Dialogue: 0,0:04:32.87,0:04:34.77,*Default,NTP,0000,0000,0000,,我们不会介绍新材料
Dialogue: 0,0:04:35.47,0:04:37.57,*Default,NTP,0000,0000,0000,,我们会把作业做得很短
Dialogue: 0,0:04:38.37,0:04:40.33,*Default,NTP,0000,0000,0000,,我想我们会在周一布置作业
Dialogue: 0,0:04:41.53,0:04:43.90,*Default,NTP,0000,0000,0000,,好的，我把它移到了周一
Dialogue: 0,0:04:45.50,0:04:46.60,*Default,NTP,0000,0000,0000,,然后让我们看看
Dialogue: 0,0:04:46.60,0:04:47.67,*Default,NTP,0000,0000,0000,,在课程的后面
Dialogue: 0,0:04:47.67,0:04:50.10,*Default,NTP,0000,0000,0000,,我们选了一些题目作为选修课
Dialogue: 0,0:04:50.60,0:04:52.30,*Default,NTP,0000,0000,0000,,我们还是会有相关的讲座
Dialogue: 0,0:04:52.60,0:04:55.57,*Default,NTP,0000,0000,0000,,但考试时不需要这些内容
Dialogue: 0,0:04:55.57,0:04:58.93,*Default,NTP,0000,0000,0000,,这就是宏和尾部调用讲座
Dialogue: 0,0:04:58.97,0:05:01.07,*Default,NTP,0000,0000,0000,,以及数据库讲座
Dialogue: 0,0:05:01.20,0:05:03.20,*Default,NTP,0000,0000,0000,,我们当然欢迎你学习这些内容
Dialogue: 0,0:05:04.10,0:05:07.60,*Default,NTP,0000,0000,0000,,但这不会出现在期末考试或任何作业中
Dialogue: 0,0:05:08.33,0:05:10.00,*Default,NTP,0000,0000,0000,,所以请坚持学习
Dialogue: 0,0:05:10.07,0:05:11.30,*Default,NTP,0000,0000,0000,,学完蚂蚁
Dialogue: 0,0:05:11.37,0:05:12.53,*Default,NTP,0000,0000,0000,,通过本周
Dialogue: 0,0:05:13.07,0:05:14.30,*Default,NTP,0000,0000,0000,,熬过下周
Dialogue: 0,0:05:14.30,0:05:15.47,*Default,NTP,0000,0000,0000,,参加期中考试
Dialogue: 0,0:05:15.93,0:05:17.47,*Default,NTP,0000,0000,0000,,还有更多的事情要做
Dialogue: 0,0:05:17.60,0:05:18.93,*Default,NTP,0000,0000,0000,,但没有那么多
Dialogue: 0,0:05:19.10,0:05:19.73,*Default,NTP,0000,0000,0000,,希望
Dialogue: 0,0:05:19.73,0:05:21.80,*Default,NTP,0000,0000,0000,,这将使本学期的学习变得更加轻松愉快
Dialogue: 0,0:05:24.07,0:05:27.13,*Default,NTP,0000,0000,0000,,我们来看一个使用对象系统的例子
Dialogue: 0,0:05:29.47,0:05:30.97,*Default,NTP,0000,0000,0000,,这里有一些需要记住的东西
Dialogue: 0,0:05:31.50,0:05:34.93,*Default,NTP,0000,0000,0000,,通过名称查找实例属性时
Dialogue: 0,0:05:35.90,0:05:38.07,*Default,NTP,0000,0000,0000,,先找到实例属性，再找到
Dialogue: 0,0:05:38.07,0:05:39.27,*Default,NTP,0000,0000,0000,,类属性
Dialogue: 0,0:05:40.07,0:05:42.60,*Default,NTP,0000,0000,0000,,如果在实例中找不到属性
Dialogue: 0,0:05:42.60,0:05:43.70,*Default,NTP,0000,0000,0000,,就在类中查找
Dialogue: 0,0:05:43.70,0:05:45.50,*Default,NTP,0000,0000,0000,,如果在类中找不到属性
Dialogue: 0,0:05:45.50,0:05:47.73,*Default,NTP,0000,0000,0000,,则在低音类中查找
Dialogue: 0,0:05:47.77,0:05:50.53,*Default,NTP,0000,0000,0000,,这样，类的属性就被继承了
Dialogue: 0,0:05:52.20,0:05:53.17,*Default,NTP,0000,0000,0000,,下面是一个例子
Dialogue: 0,0:05:53.17,0:05:55.20,*Default,NTP,0000,0000,0000,,假设我们有一个工人类
Dialogue: 0,0:05:55.60,0:05:57.80,*Default,NTP,0000,0000,0000,,工人称呼别人为先生
Dialogue: 0,0:05:58.47,0:05:59.80,*Default,NTP,0000,0000,0000,,有一个构造函数
Dialogue: 0,0:06:00.07,0:06:02.77,*Default,NTP,0000,0000,0000,,会为类设置一个属性 elf
Dialogue: 0,0:06:02.77,0:06:03.57,*Default,NTP,0000,0000,0000,,类
Dialogue: 0,0:06:04.40,0:06:05.73,*Default,NTP,0000,0000,0000,,有一个方法 work
Dialogue: 0,0:06:06.13,0:06:08.37,*Default,NTP,0000,0000,0000,,方法返回
Dialogue: 0,0:06:08.47,0:06:11.17,*Default,NTP,0000,0000,0000,,的问候语
Dialogue: 0,0:06:11.80,0:06:14.93,*Default,NTP,0000,0000,0000,,加上 I work，最后
Dialogue: 0,0:06:15.73,0:06:18.10,*Default,NTP,0000,0000,0000,,有一个特殊方法 repper
Dialogue: 0,0:06:18.30,0:06:21.27,*Default,NTP,0000,0000,0000,,这个 repper 方法用于显示
Dialogue: 0,0:06:21.27,0:06:22.73,*Default,NTP,0000,0000,0000,,工作者实例
Dialogue: 0,0:06:23.10,0:06:26.87,*Default,NTP,0000,0000,0000,,在运行交互会话时的样子
Dialogue: 0,0:06:27.60,0:06:29.57,*Default,NTP,0000,0000,0000,,现在这个 repper 字符串非常奇怪
Dialogue: 0,0:06:30.13,0:06:32.20,*Default,NTP,0000,0000,0000,,它根本不对 self 做任何事情
Dialogue: 0,0:06:32.47,0:06:35.70,*Default,NTP,0000,0000,0000,,它使用资产阶级 V 并返回其问候语
Dialogue: 0,0:06:36.80,0:06:39.53,*Default,NTP,0000,0000,0000,,资产阶级是土地所有者
Dialogue: 0,0:06:39.77,0:06:42.10,*Default,NTP,0000,0000,0000,,他们拥有生产资料
Dialogue: 0,0:06:42.60,0:06:45.80,*Default,NTP,0000,0000,0000,,他们自己不工作
Dialogue: 0,0:06:45.87,0:06:49.73,*Default,NTP,0000,0000,0000,,他们通过雇佣农民来获得财富
Dialogue: 0,0:06:51.07,0:06:52.77,*Default,NTP,0000,0000,0000,,他们说
Dialogue: 0,0:06:53.07,0:06:54.33,*Default,NTP,0000,0000,0000,,我收集财富
Dialogue: 0,0:06:56.60,0:06:57.97,*Default,NTP,0000,0000,0000,,杰克是工人
Dialogue: 0,0:06:58.07,0:06:59.93,*Default,NTP,0000,0000,0000,,约翰是资产阶级
Dialogue: 0,0:07:00.50,0:07:05.00,*Default,NTP,0000,0000,0000,,在这里，我们赋予了杰克打招呼的属性
Dialogue: 0,0:07:05.07,0:07:06.10,*Default,NTP,0000,0000,0000,,是女士
Dialogue: 0,0:07:08.73,0:07:10.93,*Default,NTP,0000,0000,0000,,如果你想自己解决这个问题
Dialogue: 0,0:07:11.33,0:07:14.37,*Default,NTP,0000,0000,0000,,从 2014 年秋季第二学期期中考试开始
Dialogue: 0,0:07:14.77,0:07:16.47,*Default,NTP,0000,0000,0000,,这里有一些提示
Dialogue: 0,0:07:17.73,0:07:18.80,*Default,NTP,0000,0000,0000,,让我们来看看
Dialogue: 0,0:07:18.87,0:07:22.37,*Default,NTP,0000,0000,0000,,当我们穿上这些外衣时，到底会发生什么？
Dialogue: 0,0:07:22.97,0:07:24.70,*Default,NTP,0000,0000,0000,,首先，当我们
Dialogue: 0,0:07:25.07,0:07:26.20,*Default,NTP,0000,0000,0000,,有一个类语句
Dialogue: 0,0:07:26.20,0:07:28.57,*Default,NTP,0000,0000,0000,,它的主体会立即被执行
Dialogue: 0,0:07:28.57,0:07:31.00,*Default,NTP,0000,0000,0000,,因此会创建一个名为 worker 的新类
Dialogue: 0,0:07:31.90,0:07:34.37,*Default,NTP,0000,0000,0000,,类的属性
Dialogue: 0,0:07:34.47,0:07:36.47,*Default,NTP,0000,0000,0000,,的值为 sir
Dialogue: 0,0:07:36.93,0:07:38.73,*Default,NTP,0000,0000,0000,,这不是环境图
Dialogue: 0,0:07:38.73,0:07:40.97,*Default,NTP,0000,0000,0000,,这只是一个简图
Dialogue: 0,0:07:42.30,0:07:44.17,*Default,NTP,0000,0000,0000,,资产阶级类
Dialogue: 0,0:07:44.20,0:07:47.90,*Default,NTP,0000,0000,0000,,继承自工人，并有自己的问候语 peon
Dialogue: 0,0:07:48.80,0:07:49.53,*Default,NTP,0000,0000,0000,,在这种情况下
Dialogue: 0,0:07:49.53,0:07:51.60,*Default,NTP,0000,0000,0000,,你不会改变工人的问候语
Dialogue: 0,0:07:52.10,0:07:54.00,*Default,NTP,0000,0000,0000,,只是，如果我们查找资产阶级实例的问候语
Dialogue: 0,0:07:54.00,0:07:55.70,*Default,NTP,0000,0000,0000,,的问候语
Dialogue: 0,0:07:55.90,0:07:58.33,*Default,NTP,0000,0000,0000,,会先找到这个，然后再找到那个
Dialogue: 0,0:07:59.73,0:08:00.97,*Default,NTP,0000,0000,0000,,然后这两行
Dialogue: 0,0:08:00.97,0:08:04.53,*Default,NTP,0000,0000,0000,,创建一个工人实例和一个资产阶级实例
Dialogue: 0,0:08:05.47,0:08:07.37,*Default,NTP,0000,0000,0000,,创建工人实例
Dialogue: 0,0:08:07.37,0:08:10.20,*Default,NTP,0000,0000,0000,,然后立即传入构造函数
Dialogue: 0,0:08:10.40,0:08:12.53,*Default,NTP,0000,0000,0000,,中，它获得了一个属性 elf
Dialogue: 0,0:08:12.77,0:08:15.90,*Default,NTP,0000,0000,0000,,属性，该属性与 Worker 的名称绑定
Dialogue: 0,0:08:16.33,0:08:19.00,*Default,NTP,0000,0000,0000,,worker 是工人类的名称
Dialogue: 0,0:08:19.77,0:08:23.00,*Default,NTP,0000,0000,0000,,所以 elf 的值就是整个
Dialogue: 0,0:08:23.00,0:08:24.27,*Default,NTP,0000,0000,0000,,工人类
Dialogue: 0,0:08:26.70,0:08:27.97,*Default,NTP,0000,0000,0000,,约翰被创建
Dialogue: 0,0:08:27.97,0:08:31.33,*Default,NTP,0000,0000,0000,,因为 bourgeoisie 没有 in it 方法
Dialogue: 0,0:08:31.47,0:08:34.10,*Default,NTP,0000,0000,0000,,它继承了 worker 的 in it 方法
Dialogue: 0,0:08:34.67,0:08:37.57,*Default,NTP,0000,0000,0000,,所以我们要查找资产阶级是否有一个 in it 方法
Dialogue: 0,0:08:37.57,0:08:38.33,*Default,NTP,0000,0000,0000,,没有
Dialogue: 0,0:08:38.33,0:08:41.33,*Default,NTP,0000,0000,0000,,所以我们查看基类，然后应用这个方法
Dialogue: 0,0:08:41.33,0:08:42.80,*Default,NTP,0000,0000,0000,,具有相同的效果
Dialogue: 0,0:08:44.30,0:08:46.77,*Default,NTP,0000,0000,0000,,这样，杰克和约翰就有了相同的小精灵
Dialogue: 0,0:08:47.50,0:08:50.93,*Default,NTP,0000,0000,0000,,最后，我们就有了 "杰克打招呼等于男人 "这句话。
Dialogue: 0,0:08:51.37,0:08:52.97,*Default,NTP,0000,0000,0000,,如果我们只查找杰克
Dialogue: 0,0:08:53.07,0:08:55.53,*Default,NTP,0000,0000,0000,,问候语，我们会发现这里没有问候语
Dialogue: 0,0:08:55.53,0:08:56.87,*Default,NTP,0000,0000,0000,,所以我们可以在班级里查找
Dialogue: 0,0:08:56.87,0:08:58.50,*Default,NTP,0000,0000,0000,,答案就是先生
Dialogue: 0,0:08:59.40,0:09:01.53,*Default,NTP,0000,0000,0000,,但是属性赋值
Dialogue: 0,0:09:01.73,0:09:02.87,*Default,NTP,0000,0000,0000,,的规则是
Dialogue: 0,0:09:02.87,0:09:04.87,*Default,NTP,0000,0000,0000,,总是立即赋值给
Dialogue: 0,0:09:04.87,0:09:06.77,*Default,NTP,0000,0000,0000,,点左边的对象
Dialogue: 0,0:09:07.20,0:09:09.33,*Default,NTP,0000,0000,0000,,因此，插孔点问候语的效果是
Dialogue: 0,0:09:09.37,0:09:10.37,*Default,NTP,0000,0000,0000,,的效果是，现在
Dialogue: 0,0:09:10.40,0:09:13.70,*Default,NTP,0000,0000,0000,,jack 将有自己的实例属性 greeting
Dialogue: 0,0:09:13.90,0:09:15.17,*Default,NTP,0000,0000,0000,,绑定到 man
Dialogue: 0,0:09:16.53,0:09:19.13,*Default,NTP,0000,0000,0000,,千斤顶会以女士的身份问候他人
Dialogue: 0,0:09:19.20,0:09:22.27,*Default,NTP,0000,0000,0000,,任何其他员工都会以先生的身份问候他人
Dialogue: 0,0:09:23.30,0:09:25.30,*Default,NTP,0000,0000,0000,,现在我们来看看这些示例
Dialogue: 0,0:09:26.70,0:09:27.50,*Default,NTP,0000,0000,0000,,工作者
Dialogue: 0,0:09:27.87,0:09:31.90,*Default,NTP,0000,0000,0000,,后的括号创建了一个新的 Worker 实例
Dialogue: 0,0:09:32.73,0:09:35.30,*Default,NTP,0000,0000,0000,,在此我们调用它的 work 方法
Dialogue: 0,0:09:36.20,0:09:37.93,*Default,NTP,0000,0000,0000,,获取
Dialogue: 0,0:09:38.57,0:09:42.07,*Default,NTP,0000,0000,0000,,新创建的 Worker 的
Dialogue: 0,0:09:42.47,0:09:45.17,*Default,NTP,0000,0000,0000,,Worker 没有问候语实例属性
Dialogue: 0,0:09:45.17,0:09:47.50,*Default,NTP,0000,0000,0000,,所以我们在类中找到了 sir
Dialogue: 0,0:09:48.07,0:09:51.53,*Default,NTP,0000,0000,0000,,将 sir 添加到 I work 返回 sir I work
Dialogue: 0,0:09:54.30,0:09:56.27,*Default,NTP,0000,0000,0000,,好的，杰克
Dialogue: 0,0:09:56.67,0:09:57.87,*Default,NTP,0000,0000,0000,,是一个 Worker
Dialogue: 0,0:09:58.90,0:10:00.00,*Default,NTP,0000,0000,0000,,当我写下
Dialogue: 0,0:10:00.00,0:10:01.97,*Default,NTP,0000,0000,0000,,然后对表达式
Dialogue: 0,0:10:01.97,0:10:05.13,*Default,NTP,0000,0000,0000,,就会求值到这个工人实例
Dialogue: 0,0:10:06.17,0:10:06.53,*Default,NTP,0000,0000,0000,,但是
Dialogue: 0,0:10:06.53,0:10:09.53,*Default,NTP,0000,0000,0000,,我们希望能将其显示为一行文本
Dialogue: 0,0:10:09.53,0:10:11.70,*Default,NTP,0000,0000,0000,,这就是交互式会话的工作方式
Dialogue: 0,0:10:12.37,0:10:16.17,*Default,NTP,0000,0000,0000,,交互式会话的工作方式就是计算对象的重写字符串
Dialogue: 0,0:10:16.37,0:10:17.50,*Default,NTP,0000,0000,0000,,对象的
Dialogue: 0,0:10:17.50,0:10:19.40,*Default,NTP,0000,0000,0000,,这就是表达式的值
Dialogue: 0,0:10:20.20,0:10:22.30,*Default,NTP,0000,0000,0000,,那么，杰克的重写字符串是什么？
Dialogue: 0,0:10:22.60,0:10:23.40,*Default,NTP,0000,0000,0000,,插孔
Dialogue: 0,0:10:24.20,0:10:25.67,*Default,NTP,0000,0000,0000,,是一个 Worker 类
Dialogue: 0,0:10:25.87,0:10:28.17,*Default,NTP,0000,0000,0000,,worker 有一个名为 repper 的特殊方法
Dialogue: 0,0:10:28.17,0:10:30.30,*Default,NTP,0000,0000,0000,,这正是
Dialogue: 0,0:10:30.47,0:10:32.33,*Default,NTP,0000,0000,0000,,每次要显示
Dialogue: 0,0:10:32.93,0:10:33.93,*Default,NTP,0000,0000,0000,,对象时
Dialogue: 0,0:10:35.00,0:10:36.27,*Default,NTP,0000,0000,0000,,那么它会返回什么呢？
Dialogue: 0,0:10:36.27,0:10:38.73,*Default,NTP,0000,0000,0000,,它会返回资产阶级问候语
Dialogue: 0,0:10:38.73,0:10:40.60,*Default,NTP,0000,0000,0000,,这里是资产阶级阶级
Dialogue: 0,0:10:40.60,0:10:42.20,*Default,NTP,0000,0000,0000,,它的问候语是 peon
Dialogue: 0,0:10:42.30,0:10:45.40,*Default,NTP,0000,0000,0000,,所以我们在这里看到的杰克是peon
Dialogue: 0,0:10:48.13,0:10:50.27,*Default,NTP,0000,0000,0000,,杰克是工人
Dialogue: 0,0:10:51.13,0:10:52.67,*Default,NTP,0000,0000,0000,,杰克是工人
Dialogue: 0,0:10:52.80,0:10:57.77,*Default,NTP,0000,0000,0000,,工作方法返回 self dot greeting 加上 I work
Dialogue: 0,0:10:57.97,0:10:59.93,*Default,NTP,0000,0000,0000,,或者说，self 与 jack 绑定
Dialogue: 0,0:11:00.73,0:11:03.60,*Default,NTP,0000,0000,0000,,杰克的自我问候很专业
Dialogue: 0,0:11:03.73,0:11:06.30,*Default,NTP,0000,0000,0000,,是 man，所以我们得到的结果是
Dialogue: 0,0:11:06.30,0:11:08.53,*Default,NTP,0000,0000,0000,,自我点问候语的值是 mam
Dialogue: 0,0:11:08.53,0:11:11.67,*Default,NTP,0000,0000,0000,,把它加到 "我在工作 "中，就得到了 "妈妈，我在工作"。
Dialogue: 0,0:11:13.77,0:11:15.40,*Default,NTP,0000,0000,0000,,那么约翰网络呢？
Dialogue: 0,0:11:16.20,0:11:20.47,*Default,NTP,0000,0000,0000,,我们可以查找 john 的工作方法
Dialogue: 0,0:11:20.73,0:11:22.30,*Default,NTP,0000,0000,0000,,这个实例没有工作方法
Dialogue: 0,0:11:22.30,0:11:25.13,*Default,NTP,0000,0000,0000,,但资产阶级类有一个工作方法
Dialogue: 0,0:11:25.93,0:11:28.17,*Default,NTP,0000,0000,0000,,它的作用是打印
Dialogue: 0,0:11:28.17,0:11:31.67,*Default,NTP,0000,0000,0000,,调用 worker 的工作方法的结果
Dialogue: 0,0:11:32.30,0:11:35.20,*Default,NTP,0000,0000,0000,,self 是约翰
Dialogue: 0,0:11:36.27,0:11:39.93,*Default,NTP,0000,0000,0000,,好了，worker 的工作方法就是这个 work
Dialogue: 0,0:11:40.87,0:11:43.73,*Default,NTP,0000,0000,0000,,所以我们要打印出约翰的问候语
Dialogue: 0,0:11:43.90,0:11:47.37,*Default,NTP,0000,0000,0000,,现在约翰的问候语是什么？
Dialogue: 0,0:11:48.00,0:11:51.13,*Default,NTP,0000,0000,0000,,约翰没有问候语实例属性
Dialogue: 0,0:11:51.13,0:11:52.33,*Default,NTP,0000,0000,0000,,但它的类有
Dialogue: 0,0:11:52.33,0:11:53.70,*Default,NTP,0000,0000,0000,,而这个类有
Dialogue: 0,0:11:53.93,0:11:55.53,*Default,NTP,0000,0000,0000,,问候属性 pian
Dialogue: 0,0:11:55.90,0:11:57.97,*Default,NTP,0000,0000,0000,,所以我们打印出 pian I work
Dialogue: 0,0:11:59.53,0:12:01.60,*Default,NTP,0000,0000,0000,,打印完毕后
Dialogue: 0,0:12:01.60,0:12:03.90,*Default,NTP,0000,0000,0000,,this 返回 I gather wealth
Dialogue: 0,0:12:04.73,0:12:08.13,*Default,NTP,0000,0000,0000,,所以我们看到的是 pni work I gather wealth
Dialogue: 0,0:12:08.73,0:12:09.87,*Default,NTP,0000,0000,0000,,现在这个
Dialogue: 0,0:12:09.97,0:12:12.90,*Default,NTP,0000,0000,0000,,周围有引号，因为它是一个返回值
Dialogue: 0,0:12:13.00,0:12:15.60,*Default,NTP,0000,0000,0000,,所以我们要写一个重写表达式
Dialogue: 0,0:12:15.90,0:12:19.33,*Default,NTP,0000,0000,0000,,因此，我们正试图编写一个重写表达式，其值与返回的字符串相同
Dialogue: 0,0:12:20.60,0:12:21.80,*Default,NTP,0000,0000,0000,,pian I work
Dialogue: 0,0:12:21.80,0:12:24.57,*Default,NTP,0000,0000,0000,,没有引号是因为它被打印出来了
Dialogue: 0,0:12:25.07,0:12:26.77,*Default,NTP,0000,0000,0000,,打印字符串时不会打印
Dialogue: 0,0:12:26.77,0:12:27.87,*Default,NTP,0000,0000,0000,,字符串的引号
Dialogue: 0,0:12:27.87,0:12:30.17,*Default,NTP,0000,0000,0000,,它只是打印字符串的内容
Dialogue: 0,0:12:33.47,0:12:34.80,*Default,NTP,0000,0000,0000,,最后是约翰
Dialogue: 0,0:12:35.80,0:12:38.07,*Default,NTP,0000,0000,0000,,约翰，这是怎么回事？
Dialogue: 0,0:12:38.60,0:12:41.07,*Default,NTP,0000,0000,0000,,我们看看约翰的精灵属性
Dialogue: 0,0:12:41.07,0:12:43.17,*Default,NTP,0000,0000,0000,,也就是 Worker 类
Dialogue: 0,0:12:43.20,0:12:45.87,*Default,NTP,0000,0000,0000,,Worker 类有一个函数 work
Dialogue: 0,0:12:45.97,0:12:47.80,*Default,NTP,0000,0000,0000,,所以我们要调用
Dialogue: 0,0:12:47.93,0:12:49.67,*Default,NTP,0000,0000,0000,,我们在约翰身上调用它
Dialogue: 0,0:12:50.07,0:12:52.57,*Default,NTP,0000,0000,0000,,所以我们必须查找约翰的问候语，也就是 pian
Dialogue: 0,0:12:52.57,0:12:53.80,*Default,NTP,0000,0000,0000,,我们已经看过了
Dialogue: 0,0:12:53.93,0:12:57.93,*Default,NTP,0000,0000,0000,,将其添加到 I work 中，我们就得到了字符串 pian I work
Dialogue: 0,0:12:57.93,0:12:59.37,*Default,NTP,0000,0000,0000,,当你返回一个字符串时
Dialogue: 0,0:12:59.37,0:13:01.17,*Default,NTP,0000,0000,0000,,你会看到它周围有引号
Dialogue: 0,0:13:01.30,0:13:03.97,*Default,NTP,0000,0000,0000,,这就是字符串的表示
Dialogue: 0,0:13:03.97,0:13:05.93,*Default,NTP,0000,0000,0000,,的表示形式。
Dialogue: 0,0:13:09.33,0:13:10.07,*Default,NTP,0000,0000,0000,,让我们看看
Dialogue: 0,0:13:10.07,0:13:14.27,*Default,NTP,0000,0000,0000,,一些操作迭代表和迭代器的示例
Dialogue: 0,0:13:14.97,0:13:16.60,*Default,NTP,0000,0000,0000,,的一些示例，重点是
Dialogue: 0,0:13:16.60,0:13:18.33,*Default,NTP,0000,0000,0000,,使用内置函数
Dialogue: 0,0:13:18.33,0:13:21.70,*Default,NTP,0000,0000,0000,,以及列表理解和字典理解
Dialogue: 0,0:13:21.93,0:13:23.67,*Default,NTP,0000,0000,0000,,来执行一些
Dialogue: 0,0:13:23.67,0:13:26.80,*Default,NTP,0000,0000,0000,,中度复杂的数据处理
Dialogue: 0,0:13:27.40,0:13:29.53,*Default,NTP,0000,0000,0000,,这些操作只需一两行就能完成
Dialogue: 0,0:13:29.67,0:13:31.53,*Default,NTP,0000,0000,0000,,只要你正确使用工具
Dialogue: 0,0:13:32.10,0:13:33.57,*Default,NTP,0000,0000,0000,,这样的操作
Dialogue: 0,0:13:33.57,0:13:35.77,*Default,NTP,0000,0000,0000,,往往是某些更大问题的核心部分
Dialogue: 0,0:13:35.97,0:13:37.90,*Default,NTP,0000,0000,0000,,的核心部分
Dialogue: 0,0:13:38.27,0:13:40.37,*Default,NTP,0000,0000,0000,,因此，我将在这里做一些介绍
Dialogue: 0,0:13:40.37,0:13:42.13,*Default,NTP,0000,0000,0000,,然后我建议你暂停一下
Dialogue: 0,0:13:42.13,0:13:43.60,*Default,NTP,0000,0000,0000,,自己试一试
Dialogue: 0,0:13:43.67,0:13:45.73,*Default,NTP,0000,0000,0000,,然后我们将一起逐一解决它们
Dialogue: 0,0:13:46.80,0:13:48.07,*Default,NTP,0000,0000,0000,,下面是一个例子
Dialogue: 0,0:13:48.20,0:13:51.90,*Default,NTP,0000,0000,0000,,列表 s 中所有元素的索引是什么？
Dialogue: 0,0:13:52.13,0:13:54.33,*Default,NTP,0000,0000,0000,,绝对值最小的元素的索引是什么？
Dialogue: 0,0:13:55.30,0:13:57.07,*Default,NTP,0000,0000,0000,,所以，如果我有一个列表 s
Dialogue: 0,0:13:57.30,0:13:59.90,*Default,NTP,0000,0000,0000,,绝对值最小的元素是
Dialogue: 0,0:13:59.90,0:14:01.40,*Default,NTP,0000,0000,0000,,负 2 和 2
Dialogue: 0,0:14:01.73,0:14:03.93,*Default,NTP,0000,0000,0000,,但我们需要它们的索引
Dialogue: 0,0:14:04.10,0:14:08.60,*Default,NTP,0000,0000,0000,,列表中的指数从 0 0 1 2 3 4 5 开始
Dialogue: 0,0:14:08.87,0:14:11.93,*Default,NTP,0000,0000,0000,,以下是绝对值最小的元素
Dialogue: 0,0:14:11.93,0:14:14.20,*Default,NTP,0000,0000,0000,,它们的指数是 2 和 4
Dialogue: 0,0:14:15.70,0:14:17.90,*Default,NTP,0000,0000,0000,,那么我们如何将这个列表作为输入
Dialogue: 0,0:14:17.93,0:14:19.97,*Default,NTP,0000,0000,0000,,并将此列表作为输出
Dialogue: 0,0:14:20.47,0:14:22.47,*Default,NTP,0000,0000,0000,,或者如果这个列表是输入
Dialogue: 0,0:14:22.50,0:14:25.00,*Default,NTP,0000,0000,0000,,绝对值最小的元素是
Dialogue: 0,0:14:25.00,0:14:26.57,*Default,NTP,0000,0000,0000,,索引为 1 的元素
Dialogue: 0,0:14:26.87,0:14:29.47,*Default,NTP,0000,0000,0000,,我们试图列出所有索引
Dialogue: 0,0:14:29.67,0:14:31.73,*Default,NTP,0000,0000,0000,,对应的最小元素
Dialogue: 0,0:14:31.73,0:14:32.97,*Default,NTP,0000,0000,0000,,对应的所有索引
Dialogue: 0,0:14:33.00,0:14:34.73,*Default,NTP,0000,0000,0000,,所以我们得到的列表中包含 0
Dialogue: 0,0:14:35.27,0:14:36.60,*Default,NTP,0000,0000,0000,,这是第一个练习
Dialogue: 0,0:14:36.80,0:14:38.07,*Default,NTP,0000,0000,0000,,我将一一解答
Dialogue: 0,0:14:38.70,0:14:40.33,*Default,NTP,0000,0000,0000,,列表中相邻两个元素的最大和是多少？
Dialogue: 0,0:14:40.33,0:14:42.47,*Default,NTP,0000,0000,0000,,列表中相邻两个元素的最大和是多少？
Dialogue: 0,0:14:42.53,0:14:44.10,*Default,NTP,0000,0000,0000,,假设列表的长度
Dialogue: 0,0:14:44.10,0:14:45.13,*Default,NTP,0000,0000,0000,,大于 1
Dialogue: 0,0:14:45.87,0:14:47.13,*Default,NTP,0000,0000,0000,,下面是一个列表
Dialogue: 0,0:14:47.33,0:14:49.87,*Default,NTP,0000,0000,0000,,如果我把这两个元素相加，得到 -5
Dialogue: 0,0:14:49.87,0:14:50.93,*Default,NTP,0000,0000,0000,,这不是很大
Dialogue: 0,0:14:51.10,0:14:52.57,*Default,NTP,0000,0000,0000,,Some these two I get one
Dialogue: 0,0:14:52.57,0:14:54.40,*Default,NTP,0000,0000,0000,,如果我把这两个元素相加，得到 6
Dialogue: 0,0:14:54.40,0:14:55.57,*Default,NTP,0000,0000,0000,,所以答案是
Dialogue: 0,0:14:55.57,0:14:58.77,*Default,NTP,0000,0000,0000,,6是相邻两个元素的最大和
Dialogue: 0,0:14:59.67,0:15:00.70,*Default,NTP,0000,0000,0000,,下面是一个类似的列表
Dialogue: 0,0:15:00.70,0:15:02.73,*Default,NTP,0000,0000,0000,,但我把负号去掉了
Dialogue: 0,0:15:03.50,0:15:05.47,*Default,NTP,0000,0000,0000,,在这种情况下，我们得不到 6
Dialogue: 0,0:15:05.47,0:15:06.70,*Default,NTP,0000,0000,0000,,我们得到的是-2
Dialogue: 0,0:15:06.70,0:15:07.87,*Default,NTP,0000,0000,0000,,这不是我们想要的
Dialogue: 0,0:15:08.53,0:15:10.73,*Default,NTP,0000,0000,0000,,我们可以得到正数 1
Dialogue: 0,0:15:10.73,0:15:13.20,*Default,NTP,0000,0000,0000,,将 3 和 -2 相加
Dialogue: 0,0:15:13.30,0:15:15.20,*Default,NTP,0000,0000,0000,,这就是我们能得到的最大值
Dialogue: 0,0:15:15.37,0:15:17.90,*Default,NTP,0000,0000,0000,,将列表中相邻的两个元素相加
Dialogue: 0,0:15:18.70,0:15:20.00,*Default,NTP,0000,0000,0000,,好吧，再来一个
Dialogue: 0,0:15:20.37,0:15:23.20,*Default,NTP,0000,0000,0000,,创建一个字典，将每个数字 d
Dialogue: 0,0:15:23.70,0:15:26.87,*Default,NTP,0000,0000,0000,,到 s 中以 d 结尾的元素列表
Dialogue: 0,0:15:26.90,0:15:28.97,*Default,NTP,0000,0000,0000,,或者说 d 是一个单独的数字
Dialogue: 0,0:15:29.67,0:15:32.57,*Default,NTP,0000,0000,0000,,因此，如果我有这个整数列表
Dialogue: 0,0:15:32.80,0:15:35.00,*Default,NTP,0000,0000,0000,,我应该创建一个字典
Dialogue: 0,0:15:35.20,0:15:38.47,*Default,NTP,0000,0000,0000,,其中包含所有以 1 结尾的元素
Dialogue: 0,0:15:38.87,0:15:40.53,*Default,NTP,0000,0000,0000,,这里是以 3 结尾的元素
Dialogue: 0,0:15:40.77,0:15:42.53,*Default,NTP,0000,0000,0000,,这里是以 4 结尾的元素
Dialogue: 0,0:15:42.80,0:15:44.87,*Default,NTP,0000,0000,0000,,这里是以 5 结尾的元素
Dialogue: 0,0:15:44.87,0:15:47.37,*Default,NTP,0000,0000,0000,,注意，其中有两个五和五十五
Dialogue: 0,0:15:47.57,0:15:49.60,*Default,NTP,0000,0000,0000,,只有一个是八，一个是九
Dialogue: 0,0:15:50.97,0:15:51.67,*Default,NTP,0000,0000,0000,,最后
Dialogue: 0,0:15:51.67,0:15:55.00,*Default,NTP,0000,0000,0000,,是否每个元素都等于 s 中的其他元素
Dialogue: 0,0:15:55.07,0:15:56.73,*Default,NTP,0000,0000,0000,,所以给定一个列表
Dialogue: 0,0:15:56.87,0:15:58.77,*Default,NTP,0000,0000,0000,,是否每个元素都等于
Dialogue: 0,0:15:58.77,0:15:59.30,*Default,NTP,0000,0000,0000,,其他元素
Dialogue: 0,0:15:59.30,0:16:02.07,*Default,NTP,0000,0000,0000,,那么 -4 只出现了一个，所以是假的
Dialogue: 0,0:16:02.13,0:16:05.37,*Default,NTP,0000,0000,0000,,但这里 4 出现了两次，3 出现了两次
Dialogue: 0,0:16:05.37,0:16:06.73,*Default,NTP,0000,0000,0000,,2出现两次
Dialogue: 0,0:16:06.73,0:16:10.17,*Default,NTP,0000,0000,0000,,所以每个元素至少等于一个其他元素
Dialogue: 0,0:16:10.30,0:16:11.60,*Default,NTP,0000,0000,0000,,所以这就是真值
Dialogue: 0,0:16:12.17,0:16:13.70,*Default,NTP,0000,0000,0000,,所以如果你想暂停视频
Dialogue: 0,0:16:13.70,0:16:14.67,*Default,NTP,0000,0000,0000,,并研究其中一些
Dialogue: 0,0:16:14.67,0:16:15.73,*Default,NTP,0000,0000,0000,,我建议
Dialogue: 0,0:16:15.97,0:16:18.40,*Default,NTP,0000,0000,0000,,现在我们来解决它们
Dialogue: 0,0:16:19.40,0:16:21.27,*Default,NTP,0000,0000,0000,,第一个问题
Dialogue: 0,0:16:21.33,0:16:22.93,*Default,NTP,0000,0000,0000,,列表 s 中
Dialogue: 0,0:16:22.93,0:16:25.70,*Default,NTP,0000,0000,0000,,绝对值最小的元素的索引是什么？
Dialogue: 0,0:16:26.80,0:16:28.47,*Default,NTP,0000,0000,0000,,我们从这个例子开始
Dialogue: 0,0:16:28.50,0:16:29.70,*Default,NTP,0000,0000,0000,,试着解决它
Dialogue: 0,0:16:30.33,0:16:33.60,*Default,NTP,0000,0000,0000,,这里的最小绝对值
Dialogue: 0,0:16:34.40,0:16:36.00,*Default,NTP,0000,0000,0000,,不是 s
Dialogue: 0,0:16:36.33,0:16:37.93,*Default,NTP,0000,0000,0000,,但实际上也不是
Dialogue: 0,0:16:38.20,0:16:41.87,*Default,NTP,0000,0000,0000,,使用 key equals abs 也不是 s 的 men
Dialogue: 0,0:16:41.90,0:16:42.80,*Default,NTP,0000,0000,0000,,会得到
Dialogue: 0,0:16:42.80,0:16:44.00,*Default,NTP,0000,0000,0000,,中的元素
Dialogue: 0,0:16:44.00,0:16:46.50,*Default,NTP,0000,0000,0000,,中绝对值最小的元素
Dialogue: 0,0:16:46.67,0:16:49.93,*Default,NTP,0000,0000,0000,,它不会给我最小的绝对值
Dialogue: 0,0:16:50.37,0:16:51.67,*Default,NTP,0000,0000,0000,,所以如果我的目标是
Dialogue: 0,0:16:51.67,0:16:53.50,*Default,NTP,0000,0000,0000,,得到最小绝对值
Dialogue: 0,0:16:53.50,0:16:56.40,*Default,NTP,0000,0000,0000,,我就需要首先调用每个元素的绝对值
Dialogue: 0,0:16:56.40,0:16:57.80,*Default,NTP,0000,0000,0000,,然后在
Dialogue: 0,0:16:57.90,0:17:00.80,*Default,NTP,0000,0000,0000,,我可以通过将 abs 映射到 s 来实现这一点。
Dialogue: 0,0:17:01.90,0:17:04.40,*Default,NTP,0000,0000,0000,,现在我得到了最小绝对值
Dialogue: 0,0:17:05.30,0:17:06.53,*Default,NTP,0000,0000,0000,,我能用它做什么呢？
Dialogue: 0,0:17:06.93,0:17:08.93,*Default,NTP,0000,0000,0000,,我可以找到所有的索引
Dialogue: 0,0:17:09.27,0:17:12.07,*Default,NTP,0000,0000,0000,,的绝对值等于这个最小 abs 值。
Dialogue: 0,0:17:12.37,0:17:16.10,*Default,NTP,0000,0000,0000,,的所有索引。
Dialogue: 0,0:17:16.77,0:17:18.87,*Default,NTP,0000,0000,0000,,这与查找所有具有
Dialogue: 0,0:17:18.87,0:17:20.17,*Default,NTP,0000,0000,0000,,绝对值的所有元素
Dialogue: 0,0:17:20.33,0:17:22.67,*Default,NTP,0000,0000,0000,,我可以通过列表理解来实现
Dialogue: 0,0:17:22.87,0:17:26.57,*Default,NTP,0000,0000,0000,,如果我想知道 x 和 s 的所有元素 x
Dialogue: 0,0:17:26.57,0:17:29.77,*Default,NTP,0000,0000,0000,,如果 x 的绝对值等于主 abs
Dialogue: 0,0:17:29.77,0:17:32.73,*Default,NTP,0000,0000,0000,,我就能得到两个元素和-2
Dialogue: 0,0:17:33.30,0:17:34.60,*Default,NTP,0000,0000,0000,,但这不是我的目标
Dialogue: 0,0:17:34.67,0:17:36.70,*Default,NTP,0000,0000,0000,,我的目标是找到指数
Dialogue: 0,0:17:36.87,0:17:38.97,*Default,NTP,0000,0000,0000,,为此，我需要通过
Dialogue: 0,0:17:39.90,0:17:42.87,*Default,NTP,0000,0000,0000,,for I in not s
Dialogue: 0,0:17:42.97,0:17:45.87,*Default,NTP,0000,0000,0000,,的范围
Dialogue: 0,0:17:45.87,0:17:48.90,*Default,NTP,0000,0000,0000,,的所有索引值。
Dialogue: 0,0:17:49.70,0:17:51.93,*Default,NTP,0000,0000,0000,,我们可以相应地调整这个表达式
Dialogue: 0,0:17:51.93,0:17:54.33,*Default,NTP,0000,0000,0000,,实际上，我们只需要索引值
Dialogue: 0,0:17:54.57,0:17:55.60,*Default,NTP,0000,0000,0000,,我们必须
Dialogue: 0,0:17:55.67,0:17:58.33,*Default,NTP,0000,0000,0000,,也要相应调整这个表达式
Dialogue: 0,0:17:58.33,0:18:00.50,*Default,NTP,0000,0000,0000,,我们想知道
Dialogue: 0,0:18:00.73,0:18:02.50,*Default,NTP,0000,0000,0000,,的绝对值是否等于最小应用
Dialogue: 0,0:18:03.27,0:18:05.37,*Default,NTP,0000,0000,0000,,这将给出数字 2 和 4
Dialogue: 0,0:18:06.17,0:18:08.47,*Default,NTP,0000,0000,0000,,因此，这个问题可以用两行来解决
Dialogue: 0,0:18:09.90,0:18:12.13,*Default,NTP,0000,0000,0000,,每当我使用列表理解时
Dialogue: 0,0:18:12.13,0:18:15.73,*Default,NTP,0000,0000,0000,,我还可以使用内置的 map 和 filter 函数
Dialogue: 0,0:18:16.37,0:18:18.30,*Default,NTP,0000,0000,0000,,所以我可以重写
Dialogue: 0,0:18:19.13,0:18:22.70,*Default,NTP,0000,0000,0000,,首先定义一个过滤函数
Dialogue: 0,0:18:23.07,0:18:24.70,*Default,NTP,0000,0000,0000,,接收某个索引
Dialogue: 0,0:18:24.70,0:18:26.40,*Default,NTP,0000,0000,0000,,并告诉我它是否是我想保留的索引之一
Dialogue: 0,0:18:26.40,0:18:27.47,*Default,NTP,0000,0000,0000,,中的一个
Dialogue: 0,0:18:28.20,0:18:32.50,*Default,NTP,0000,0000,0000,,然后，如果我把这个相同范围的病例
Dialogue: 0,0:18:32.67,0:18:34.67,*Default,NTP,0000,0000,0000,,并使用 f
Dialogue: 0,0:18:35.33,0:18:38.60,*Default,NTP,0000,0000,0000,,我几乎就能得到我想要的结果，但这只是一个过滤对象
Dialogue: 0,0:18:38.60,0:18:40.27,*Default,NTP,0000,0000,0000,,如果我真正想要的是一个列表
Dialogue: 0,0:18:40.27,0:18:41.67,*Default,NTP,0000,0000,0000,,那么我就会调用一个列表
Dialogue: 0,0:18:41.70,0:18:43.67,*Default,NTP,0000,0000,0000,,就会得到同样正确的结果
Dialogue: 0,0:18:44.60,0:18:46.77,*Default,NTP,0000,0000,0000,,所以我可以用这个表达式替换
Dialogue: 0,0:18:46.87,0:18:49.77,*Default,NTP,0000,0000,0000,,就能得到同样的结果
Dialogue: 0,0:18:50.40,0:18:52.40,*Default,NTP,0000,0000,0000,,好，我们继续下一个问题
Dialogue: 0,0:18:52.40,0:18:53.80,*Default,NTP,0000,0000,0000,,列表中相邻两个
Dialogue: 0,0:18:53.80,0:18:55.93,*Default,NTP,0000,0000,0000,,的最大和是多少？
Dialogue: 0,0:18:56.87,0:18:59.37,*Default,NTP,0000,0000,0000,,这里我们使用的是之前的 s
Dialogue: 0,0:18:59.57,0:19:00.97,*Default,NTP,0000,0000,0000,,我们要得到 6
Dialogue: 0,0:19:01.47,0:19:03.57,*Default,NTP,0000,0000,0000,,有两种合理的方法
Dialogue: 0,0:19:04.00,0:19:06.17,*Default,NTP,0000,0000,0000,,一种是考虑指数
Dialogue: 0,0:19:06.90,0:19:09.73,*Default,NTP,0000,0000,0000,,range len s 将给出所有的索引
Dialogue: 0,0:19:09.93,0:19:12.67,*Default,NTP,0000,0000,0000,,但是范围 len s 减一可以得到
Dialogue: 0,0:19:12.67,0:19:14.37,*Default,NTP,0000,0000,0000,,几乎所有的指数
Dialogue: 0,0:19:14.57,0:19:16.30,*Default,NTP,0000,0000,0000,,这里是一个范围
Dialogue: 0,0:19:16.97,0:19:19.00,*Default,NTP,0000,0000,0000,,如果我通过几乎所有的疾病
Dialogue: 0,0:19:19.00,0:19:20.77,*Default,NTP,0000,0000,0000,,只留下最后一个
Dialogue: 0,0:19:21.27,0:19:25.07,*Default,NTP,0000,0000,0000,,然后计算 s I 加 s I 加 1
Dialogue: 0,0:19:25.60,0:19:28.30,*Default,NTP,0000,0000,0000,,然后将相邻元素相加
Dialogue: 0,0:19:28.30,0:19:30.57,*Default,NTP,0000,0000,0000,,每一对相邻元素
Dialogue: 0,0:19:30.80,0:19:32.30,*Default,NTP,0000,0000,0000,,而我忽略了最后一个
Dialogue: 0,0:19:32.30,0:19:33.93,*Default,NTP,0000,0000,0000,,因为最后一个元素没有
Dialogue: 0,0:19:34.10,0:19:35.47,*Default,NTP,0000,0000,0000,,最后一个元素
Dialogue: 0,0:19:35.47,0:19:38.10,*Default,NTP,0000,0000,0000,,所以我使用了这个缩短的范围
Dialogue: 0,0:19:38.60,0:19:40.67,*Default,NTP,0000,0000,0000,,好了，这只是给出了
Dialogue: 0,0:19:40.67,0:19:42.27,*Default,NTP,0000,0000,0000,,相邻元素的总和
Dialogue: 0,0:19:42.40,0:19:43.93,*Default,NTP,0000,0000,0000,,如果我想知道最大的一个
Dialogue: 0,0:19:43.93,0:19:45.80,*Default,NTP,0000,0000,0000,,那么我应该调用最大值
Dialogue: 0,0:19:45.80,0:19:49.07,*Default,NTP,0000,0000,0000,,这就是聚合函数的另一个用途
Dialogue: 0,0:19:49.17,0:19:50.37,*Default,NTP,0000,0000,0000,,来完成工作
Dialogue: 0,0:19:50.77,0:19:52.30,*Default,NTP,0000,0000,0000,,好了，我们的工作完成了
Dialogue: 0,0:19:52.47,0:19:54.57,*Default,NTP,0000,0000,0000,,你可以把它复制到这里，然后就可以收工了
Dialogue: 0,0:19:55.50,0:19:57.90,*Default,NTP,0000,0000,0000,,解决相同问题的另一种方法是使用
Dialogue: 0,0:19:57.93,0:20:02.40,*Default,NTP,0000,0000,0000,,zip 所以，如果我把 s 和 s 压缩在一起，就会得到一个 zip 对象
Dialogue: 0,0:20:02.40,0:20:05.13,*Default,NTP,0000,0000,0000,,这个 zip 迭代器的元素是什么呢？
Dialogue: 0,0:20:05.13,0:20:06.53,*Default,NTP,0000,0000,0000,,让我们把它们列出来
Dialogue: 0,0:20:07.17,0:20:08.13,*Default,NTP,0000,0000,0000,,它们给我
Dialogue: 0,0:20:08.13,0:20:11.50,*Default,NTP,0000,0000,0000,,一个来自 s 的元素和一个来自 s 的元素
Dialogue: 0,0:20:12.27,0:20:13.67,*Default,NTP,0000,0000,0000,,这些元素并不相邻
Dialogue: 0,0:20:13.67,0:20:15.33,*Default,NTP,0000,0000,0000,,它们只是相同的元素
Dialogue: 0,0:20:15.80,0:20:18.00,*Default,NTP,0000,0000,0000,,但如果我把
Dialogue: 0,0:20:18.40,0:20:22.60,*Default,NTP,0000,0000,0000,,除了 s 的最后一个元素之外的所有元素
Dialogue: 0,0:20:22.87,0:20:26.13,*Default,NTP,0000,0000,0000,,的第一个元素之外的所有元素
Dialogue: 0,0:20:26.60,0:20:30.80,*Default,NTP,0000,0000,0000,,现在这里有五个元素，这里有五个元素
Dialogue: 0,0:20:30.90,0:20:32.20,*Default,NTP,0000,0000,0000,,当我把它们压缩在一起时
Dialogue: 0,0:20:32.20,0:20:35.67,*Default,NTP,0000,0000,0000,,我看到了所有相邻元素对
Dialogue: 0,0:20:37.13,0:20:38.67,*Default,NTP,0000,0000,0000,,所以我建立了两个序列
Dialogue: 0,0:20:38.67,0:20:41.00,*Default,NTP,0000,0000,0000,,负 4 负 3 负 2 3 2
Dialogue: 0,0:20:41.13,0:20:44.10,*Default,NTP,0000,0000,0000,,和负三 负二三 二四
Dialogue: 0,0:20:44.37,0:20:47.97,*Default,NTP,0000,0000,0000,,将它们压缩在一起后，我就得到了一个元素对列表
Dialogue: 0,0:20:48.97,0:20:52.33,*Default,NTP,0000,0000,0000,,如果不列出内容
Dialogue: 0,0:20:52.37,0:20:55.37,*Default,NTP,0000,0000,0000,,将每对序列中的元素相加
Dialogue: 0,0:20:55.67,0:20:59.27,*Default,NTP,0000,0000,0000,,a 加 v，表示 zip 中的 a kma b
Dialogue: 0,0:20:59.60,0:21:04.10,*Default,NTP,0000,0000,0000,,我将得到相同的和，其中最大值为 6
Dialogue: 0,0:21:06.77,0:21:08.97,*Default,NTP,0000,0000,0000,,所以还有另一种方法来解决同样的问题
Dialogue: 0,0:21:10.27,0:21:11.77,*Default,NTP,0000,0000,0000,,好吧，让我们再试一次
Dialogue: 0,0:21:12.73,0:21:16.60,*Default,NTP,0000,0000,0000,,将每个数字 d 映射到 s 中以 d 结尾的元素列表中
Dialogue: 0,0:21:16.60,0:21:17.93,*Default,NTP,0000,0000,0000,,中以 d 结尾的元素列表
Dialogue: 0,0:21:19.17,0:21:21.13,*Default,NTP,0000,0000,0000,,结果就是一个字典
Dialogue: 0,0:21:21.33,0:21:24.53,*Default,NTP,0000,0000,0000,,所以我们要使用字典理解
Dialogue: 0,0:21:24.77,0:21:26.47,*Default,NTP,0000,0000,0000,,这个会有点长
Dialogue: 0,0:21:26.47,0:21:27.87,*Default,NTP,0000,0000,0000,,所以我留出了一些空间
Dialogue: 0,0:21:28.60,0:21:29.77,*Default,NTP,0000,0000,0000,,这是一个字典
Dialogue: 0,0:21:29.77,0:21:33.37,*Default,NTP,0000,0000,0000,,其中键是一个数字，值是一个列表
Dialogue: 0,0:21:33.37,0:21:37.17,*Default,NTP,0000,0000,0000,,列表包含 s 的所有元素
Dialogue: 0,0:21:37.70,0:21:39.50,*Default,NTP,0000,0000,0000,,的所有元素
Dialogue: 0,0:21:39.57,0:21:41.13,*Default,NTP,0000,0000,0000,,所以我们看 x
Dialogue: 0,0:21:41.40,0:21:44.93,*Default,NTP,0000,0000,0000,,找出它的最后一位数，看它是否等于 d
Dialogue: 0,0:21:46.30,0:21:49.13,*Default,NTP,0000,0000,0000,,这就是字典中的键值对
Dialogue: 0,0:21:49.17,0:21:51.70,*Default,NTP,0000,0000,0000,,我们希望每个数字都有一个这样的对
Dialogue: 0,0:21:52.20,0:21:55.67,*Default,NTP,0000,0000,0000,,如果 d 在 10 的范围内，就会得到所有的数字
Dialogue: 0,0:21:56.50,0:21:58.80,*Default,NTP,0000,0000,0000,,但请注意，这个结果中没有两个
Dialogue: 0,0:21:59.20,0:22:01.30,*Default,NTP,0000,0000,0000,,因为这里没有元素
Dialogue: 0,0:22:01.67,0:22:03.33,*Default,NTP,0000,0000,0000,,以数字 2 结尾的
Dialogue: 0,0:22:04.37,0:22:07.30,*Default,NTP,0000,0000,0000,,因此，我需要过滤掉一些数字
Dialogue: 0,0:22:07.77,0:22:09.07,*Default,NTP,0000,0000,0000,,我们希望保留一个 d
Dialogue: 0,0:22:09.50,0:22:13.53,*Default,NTP,0000,0000,0000,,如果 s 中的任何元素以 d 结尾
Dialogue: 0,0:22:14.60,0:22:17.10,*Default,NTP,0000,0000,0000,,我们可以使用内置的任意函数
Dialogue: 0,0:22:17.77,0:22:20.87,*Default,NTP,0000,0000,0000,,s 中以 d 结尾的任何元素
Dialogue: 0,0:22:21.17,0:22:22.87,*Default,NTP,0000,0000,0000,,表示为
Dialogue: 0,0:22:23.17,0:22:23.97,*Default,NTP,0000,0000,0000,,任何
Dialogue: 0,0:22:24.53,0:22:27.67,*Default,NTP,0000,0000,0000,,元素以 d 结尾
Dialogue: 0,0:22:28.30,0:22:30.93,*Default,NTP,0000,0000,0000,,来表示 s 中的所有元素
Dialogue: 0,0:22:31.70,0:22:33.90,*Default,NTP,0000,0000,0000,,这就是过滤爪
Dialogue: 0,0:22:33.90,0:22:35.47,*Default,NTP,0000,0000,0000,,下面是我们要迭代的内容
Dialogue: 0,0:22:35.47,0:22:38.53,*Default,NTP,0000,0000,0000,,数字 0 1 2 3 4 5 6 7 8 9
Dialogue: 0,0:22:38.73,0:22:41.53,*Default,NTP,0000,0000,0000,,对于每个具有此属性的数字
Dialogue: 0,0:22:41.53,0:22:43.00,*Default,NTP,0000,0000,0000,,下面是我们正在构建的
Dialogue: 0,0:22:44.17,0:22:46.50,*Default,NTP,0000,0000,0000,,现在，为了弄清楚这是否真的有效
Dialogue: 0,0:22:46.60,0:22:49.10,*Default,NTP,0000,0000,0000,,我们需要将 s 设为这个值
Dialogue: 0,0:22:49.67,0:22:51.70,*Default,NTP,0000,0000,0000,,然后评估我们的大表达式
Dialogue: 0,0:22:52.20,0:22:53.70,*Default,NTP,0000,0000,0000,,看看我们得到了什么
Dialogue: 0,0:22:54.30,0:22:58.20,*Default,NTP,0000,0000,0000,,因此，一种实现方式就是返回
Dialogue: 0,0:22:58.47,0:22:59.27,*Default,NTP,0000,0000,0000,,返回
Dialogue: 0,0:22:59.90,0:23:01.47,*Default,NTP,0000,0000,0000,,虽然我们已经解决了这个问题
Dialogue: 0,0:23:01.47,0:23:03.70,*Default,NTP,0000,0000,0000,,这个表达式看起来很长
Dialogue: 0,0:23:03.77,0:23:06.13,*Default,NTP,0000,0000,0000,,所以也许我们应该以某种方式将它拆分开来
Dialogue: 0,0:23:06.77,0:23:08.30,*Default,NTP,0000,0000,0000,,将整个过程
Dialogue: 0,0:23:08.30,0:23:10.37,*Default,NTP,0000,0000,0000,,把整个过程分成几个步骤
Dialogue: 0,0:23:10.50,0:23:13.67,*Default,NTP,0000,0000,0000,,就是提前获取末位数列表
Dialogue: 0,0:23:14.47,0:23:16.37,*Default,NTP,0000,0000,0000,,那么
Dialogue: 0,0:23:17.33,0:23:18.90,*Default,NTP,0000,0000,0000,,的最后一位数是多少？
Dialogue: 0,0:23:19.13,0:23:23.20,*Default,NTP,0000,0000,0000,,那么 s 中 x 的十分之一就是 x
Dialogue: 0,0:23:23.73,0:23:25.30,*Default,NTP,0000,0000,0000,,然后我们可以把它改写成
Dialogue: 0,0:23:26.00,0:23:30.40,*Default,NTP,0000,0000,0000,,是末位数中的这个数字
Dialogue: 0,0:23:31.57,0:23:32.90,*Default,NTP,0000,0000,0000,,得到同样的结果
Dialogue: 0,0:23:33.87,0:23:35.30,*Default,NTP,0000,0000,0000,,虽然短了一点
Dialogue: 0,0:23:35.87,0:23:37.47,*Default,NTP,0000,0000,0000,,但至少只有一个大
Dialogue: 0,0:23:37.47,0:23:39.37,*Default,NTP,0000,0000,0000,,表达式，而不是两个
Dialogue: 0,0:23:41.33,0:23:42.77,*Default,NTP,0000,0000,0000,,好吧，下一个问题
Dialogue: 0,0:23:43.47,0:23:47.37,*Default,NTP,0000,0000,0000,,在 s 中，是否每个元素都等于其他元素
Dialogue: 0,0:23:48.70,0:23:50.33,*Default,NTP,0000,0000,0000,,下面是一个例子
Dialogue: 0,0:23:51.00,0:23:52.50,*Default,NTP,0000,0000,0000,,解决这个问题的方法之一
Dialogue: 0,0:23:52.50,0:23:55.47,*Default,NTP,0000,0000,0000,,就是关注某个特定的索引
Dialogue: 0,0:23:56.00,0:23:58.53,*Default,NTP,0000,0000,0000,,比方说，索引一
Dialogue: 0,0:23:59.20,0:24:01.97,*Default,NTP,0000,0000,0000,,s I 是 3
Dialogue: 0,0:24:02.87,0:24:05.73,*Default,NTP,0000,0000,0000,,我们可以通过建立一个包含所有内容的列表
Dialogue: 0,0:24:05.90,0:24:08.20,*Default,NTP,0000,0000,0000,,建立一个包含所有
Dialogue: 0,0:24:08.20,0:24:09.53,*Default,NTP,0000,0000,0000,,除了这个
Dialogue: 0,0:24:10.17,0:24:14.30,*Default,NTP,0000,0000,0000,,s 到 I 的所有内容
Dialogue: 0,0:24:14.33,0:24:16.33,*Default,NTP,0000,0000,0000,,但不包括三
Dialogue: 0,0:24:17.30,0:24:19.07,*Default,NTP,0000,0000,0000,,s I 加 1 上
Dialogue: 0,0:24:19.60,0:24:22.10,*Default,NTP,0000,0000,0000,,之后的所有内容
Dialogue: 0,0:24:22.87,0:24:25.07,*Default,NTP,0000,0000,0000,,所以如果我把这些加起来
Dialogue: 0,0:24:25.77,0:24:27.53,*Default,NTP,0000,0000,0000,,我将得到列表中的所有内容
Dialogue: 0,0:24:27.53,0:24:29.20,*Default,NTP,0000,0000,0000,,除了那个三
Dialogue: 0,0:24:29.27,0:24:30.87,*Default,NTP,0000,0000,0000,,我们并没有删除所有的 3
Dialogue: 0,0:24:30.87,0:24:34.10,*Default,NTP,0000,0000,0000,,我们只是去掉了索引 I 的元素
Dialogue: 0,0:24:35.33,0:24:38.13,*Default,NTP,0000,0000,0000,,我可以问索引 I 是否在
Dialogue: 0,0:24:38.80,0:24:42.17,*Default,NTP,0000,0000,0000,,这个新列表中是否没有元素 I？
Dialogue: 0,0:24:42.27,0:24:46.60,*Default,NTP,0000,0000,0000,,如果是，那就意味着 3 出现在了其他地方
Dialogue: 0,0:24:47.30,0:24:47.97,*Default,NTP,0000,0000,0000,,所以现在我们
Dialogue: 0,0:24:47.97,0:24:49.70,*Default,NTP,0000,0000,0000,,现在我们有了一个表达式来检查
Dialogue: 0,0:24:49.70,0:24:52.13,*Default,NTP,0000,0000,0000,,元素索引眼是否出现在
Dialogue: 0,0:24:52.40,0:24:54.30,*Default,NTP,0000,0000,0000,,是否出现在列表的其他地方
Dialogue: 0,0:24:54.60,0:24:57.53,*Default,NTP,0000,0000,0000,,我们就可以检查所有的眼睛
Dialogue: 0,0:24:57.80,0:25:01.40,*Default,NTP,0000,0000,0000,,以下条件是否全部为真
Dialogue: 0,0:25:02.13,0:25:06.87,*Default,NTP,0000,0000,0000,,这个表达式 s I 在不包括 I 的 s 的其余部分中
Dialogue: 0,0:25:07.10,0:25:08.47,*Default,NTP,0000,0000,0000,,对于
Dialogue: 0,0:25:09.17,0:25:10.77,*Default,NTP,0000,0000,0000,,都在 len s 的范围内
Dialogue: 0,0:25:12.10,0:25:14.67,*Default,NTP,0000,0000,0000,,让我把这些都正确地写在一行上
Dialogue: 0,0:25:14.97,0:25:16.73,*Default,NTP,0000,0000,0000,,不要忘记最后的括号
Dialogue: 0,0:25:16.73,0:25:18.07,*Default,NTP,0000,0000,0000,,这样你就能看到发生了什么
Dialogue: 0,0:25:19.47,0:25:21.27,*Default,NTP,0000,0000,0000,,这就是解决问题的一种方法
Dialogue: 0,0:25:22.47,0:25:25.50,*Default,NTP,0000,0000,0000,,但还有其他方法来推理同样的事情
Dialogue: 0,0:25:26.17,0:25:28.40,*Default,NTP,0000,0000,0000,,比方说，我们不想做关于指数的推理
Dialogue: 0,0:25:28.40,0:25:31.00,*Default,NTP,0000,0000,0000,,我们只想查看值本身
Dialogue: 0,0:25:31.57,0:25:33.70,*Default,NTP,0000,0000,0000,,那么一个有用的表达式是
Dialogue: 0,0:25:34.27,0:25:39.90,*Default,NTP,0000,0000,0000,,如果 y 等于 3，则 s 中的 y 为 y
Dialogue: 0,0:25:40.77,0:25:42.70,*Default,NTP,0000,0000,0000,,告诉我有多少个三
Dialogue: 0,0:25:43.33,0:25:44.87,*Default,NTP,0000,0000,0000,,我可以
Dialogue: 0,0:25:44.87,0:25:46.47,*Default,NTP,0000,0000,0000,,的长度
Dialogue: 0,0:25:46.87,0:25:48.30,*Default,NTP,0000,0000,0000,,或者
Dialogue: 0,0:25:48.50,0:25:52.53,*Default,NTP,0000,0000,0000,,我可以收集 1 而不是 3，然后求出总和
Dialogue: 0,0:25:52.70,0:25:53.93,*Default,NTP,0000,0000,0000,,来计算有多少个
Dialogue: 0,0:25:53.93,0:25:55.30,*Default,NTP,0000,0000,0000,,这样就能算出有多少个三
Dialogue: 0,0:25:56.33,0:25:58.40,*Default,NTP,0000,0000,0000,,但我们并不关心有多少个三
Dialogue: 0,0:25:58.40,0:25:59.93,*Default,NTP,0000,0000,0000,,我们关心的是有多少个
Dialogue: 0,0:25:59.93,0:26:01.60,*Default,NTP,0000,0000,0000,,有多少个
Dialogue: 0,0:26:01.93,0:26:04.00,*Default,NTP,0000,0000,0000,,所以我们可以把这个表达式写成
Dialogue: 0,0:26:04.00,0:26:04.90,*Default,NTP,0000,0000,0000,,列表的一部分
Dialogue: 0,0:26:04.90,0:26:05.80,*Default,NTP,0000,0000,0000,,理解
Dialogue: 0,0:26:06.60,0:26:08.20,*Default,NTP,0000,0000,0000,,我想这个问题可能会比较长
Dialogue: 0,0:26:08.80,0:26:12.17,*Default,NTP,0000,0000,0000,,在这里，我们希望每 x
Dialogue: 0,0:26:12.60,0:26:16.57,*Default,NTP,0000,0000,0000,,对于 s 中的 x，这两个中的一个意味着
Dialogue: 0,0:26:17.00,0:26:18.07,*Default,NTP,0000,0000,0000,,这意味着
Dialogue: 0,0:26:18.93,0:26:20.73,*Default,NTP,0000,0000,0000,,有两个四
Dialogue: 0,0:26:20.90,0:26:24.17,*Default,NTP,0000,0000,0000,,有两个三 有两个二
Dialogue: 0,0:26:24.33,0:26:25.93,*Default,NTP,0000,0000,0000,,然后再重新计算
Dialogue: 0,0:26:25.93,0:26:26.90,*Default,NTP,0000,0000,0000,,有两个三
Dialogue: 0,0:26:26.90,0:26:29.07,*Default,NTP,0000,0000,0000,,有两个二 有两个四
Dialogue: 0,0:26:29.33,0:26:32.97,*Default,NTP,0000,0000,0000,,如果我们要确保每一个都在两个以上
Dialogue: 0,0:26:33.90,0:26:34.70,*Default,NTP,0000,0000,0000,,那么
Dialogue: 0,0:26:34.70,0:26:37.57,*Default,NTP,0000,0000,0000,,方法是说这些都大于一
Dialogue: 0,0:26:38.33,0:26:39.50,*Default,NTP,0000,0000,0000,,另一种方法
Dialogue: 0,0:26:40.37,0:26:42.10,*Default,NTP,0000,0000,0000,,就是把它们都计算出来
Dialogue: 0,0:26:42.93,0:26:45.30,*Default,NTP,0000,0000,0000,,找出其中的最小值
Dialogue: 0,0:26:45.33,0:26:46.73,*Default,NTP,0000,0000,0000,,并确保最小值
Dialogue: 0,0:26:46.73,0:26:48.10,*Default,NTP,0000,0000,0000,,值大于 1
Dialogue: 0,0:26:48.13,0:26:49.87,*Default,NTP,0000,0000,0000,,现在你知道它们都大于 1 了
Dialogue: 0,0:26:50.27,0:26:54.07,*Default,NTP,0000,0000,0000,,所以这只是写出等价概念的两种方法
Dialogue: 0,0:26:54.70,0:26:56.13,*Default,NTP,0000,0000,0000,,我们在这里做的只是
Dialogue: 0,0:26:56.13,0:26:57.97,*Default,NTP,0000,0000,0000,,计算
Dialogue: 0,0:26:58.00,0:27:01.37,*Default,NTP,0000,0000,0000,,出现的次数
Dialogue: 0,0:27:02.37,0:27:04.53,*Default,NTP,0000,0000,0000,,事实上，这已经内置于
Dialogue: 0,0:27:05.10,0:27:06.87,*Default,NTP,0000,0000,0000,,我可以直接说 s 点数
Dialogue: 0,0:27:06.87,0:27:09.07,*Default,NTP,0000,0000,0000,,有多少个三，它就会告诉我
Dialogue: 0,0:27:10.33,0:27:12.70,*Default,NTP,0000,0000,0000,,所以我可以简化一下，说
Dialogue: 0,0:27:12.70,0:27:14.10,*Default,NTP,0000,0000,0000,,我想知道 s 点
Dialogue: 0,0:27:14.10,0:27:14.90,*Default,NTP,0000,0000,0000,,数
Dialogue: 0,0:27:15.30,0:27:18.00,*Default,NTP,0000,0000,0000,,对于 s 中的每个 x
Dialogue: 0,0:27:18.33,0:27:20.67,*Default,NTP,0000,0000,0000,,它就会告诉我最小的数是
Dialogue: 0,0:27:20.67,0:27:23.53,*Default,NTP,0000,0000,0000,,2，由于这些数都大于 1
Dialogue: 0,0:27:23.73,0:27:24.50,*Default,NTP,0000,0000,0000,,我们知道
Dialogue: 0,0:27:24.50,0:27:27.60,*Default,NTP,0000,0000,0000,,每个元素都等于 s 中的其他元素
Dialogue: 0,0:27:28.47,0:27:30.90,*Default,NTP,0000,0000,0000,,所以这也许是解决这个问题的最简单方法
Dialogue: 0,0:27:33.10,0:27:34.90,*Default,NTP,0000,0000,0000,,好吧，如果我们做对了
Dialogue: 0,0:27:35.00,0:27:37.70,*Default,NTP,0000,0000,0000,,那么我们所有的码头害虫都应该通过，而它们确实通过了
Dialogue: 0,0:27:37.80,0:27:39.77,*Default,NTP,0000,0000,0000,,看来我们已经解决了所有四个问题
Dialogue: 0,0:27:39.77,0:27:40.97,*Default,NTP,0000,0000,0000,,问题
Dialogue: 0,0:27:42.27,0:27:44.53,*Default,NTP,0000,0000,0000,,让我们做一些链表处理
Dialogue: 0,0:27:45.33,0:27:47.07,*Default,NTP,0000,0000,0000,,我只给你们演示几个练习
Dialogue: 0,0:27:47.07,0:27:48.53,*Default,NTP,0000,0000,0000,,你可以自己尝试解决它们
Dialogue: 0,0:27:48.53,0:27:50.20,*Default,NTP,0000,0000,0000,,然后我们一起解决它们
Dialogue: 0,0:27:50.93,0:27:51.93,*Default,NTP,0000,0000,0000,,如何编写一个函数
Dialogue: 0,0:27:51.93,0:27:53.57,*Default,NTP,0000,0000,0000,,来告诉我们一个链表
Dialogue: 0,0:27:53.57,0:27:55.67,*Default,NTP,0000,0000,0000,,是否从少到多排序
Dialogue: 0,0:27:55.80,0:27:57.30,*Default,NTP,0000,0000,0000,,的元素是
Dialogue: 0,0:27:57.53,0:27:59.00,*Default,NTP,0000,0000,0000,,的元素不是
Dialogue: 0,0:28:00.53,0:28:02.37,*Default,NTP,0000,0000,0000,,如何判断一个链表是否按
Dialogue: 0,0:28:02.37,0:28:03.27,*Default,NTP,0000,0000,0000,,从少到多
Dialogue: 0,0:28:03.27,0:28:05.00,*Default,NTP,0000,0000,0000,,绝对值
Dialogue: 0,0:28:05.90,0:28:10.40,*Default,NTP,0000,0000,0000,,所以这些是 1 3 4 是绝对值
Dialogue: 0,0:28:10.97,0:28:12.57,*Default,NTP,0000,0000,0000,,而这些不是
Dialogue: 0,0:28:13.53,0:28:14.97,*Default,NTP,0000,0000,0000,,为什么只应用蓝色值
Dialogue: 0,0:28:14.97,0:28:15.73,*Default,NTP,0000,0000,0000,,我们可以使用任何
Dialogue: 0,0:28:15.73,0:28:18.07,*Default,NTP,0000,0000,0000,,键函数，告诉我们它们是否有序
Dialogue: 0,0:28:18.13,0:28:20.67,*Default,NTP,0000,0000,0000,,调用每个元素上的 key 函数后
Dialogue: 0,0:28:21.90,0:28:23.50,*Default,NTP,0000,0000,0000,,下面是一个经典练习
Dialogue: 0,0:28:23.70,0:28:24.80,*Default,NTP,0000,0000,0000,,创建一个排序
Dialogue: 0,0:28:24.80,0:28:27.53,*Default,NTP,0000,0000,0000,,链接，其中包含两个排序链接
Dialogue: 0,0:28:27.53,0:28:28.70,*Default,NTP,0000,0000,0000,,s 和 t
Dialogue: 0,0:28:29.27,0:28:32.13,*Default,NTP,0000,0000,0000,,如果我有排序的 s 和排序的 t
Dialogue: 0,0:28:32.53,0:28:35.40,*Default,NTP,0000,0000,0000,,如何创建排序 s 和 t
Dialogue: 0,0:28:36.27,0:28:38.77,*Default,NTP,0000,0000,0000,,并从这两个链接列表中创建一个新的链接列表
Dialogue: 0,0:28:39.13,0:28:41.07,*Default,NTP,0000,0000,0000,,但如果我们想做同样的事情
Dialogue: 0,0:28:41.07,0:28:42.47,*Default,NTP,0000,0000,0000,,但不调用 link
Dialogue: 0,0:28:42.73,0:28:45.93,*Default,NTP,0000,0000,0000,,而不是调用 link
Dialogue: 0,0:28:46.17,0:28:48.70,*Default,NTP,0000,0000,0000,,并对它们进行变异，以创建
Dialogue: 0,0:28:48.87,0:28:50.93,*Default,NTP,0000,0000,0000,,链接列表结构
Dialogue: 0,0:28:51.33,0:28:52.47,*Default,NTP,0000,0000,0000,,我们该怎么做
Dialogue: 0,0:28:52.73,0:28:56.57,*Default,NTP,0000,0000,0000,,将 s 的其余部分改为 5
Dialogue: 0,0:28:56.73,0:29:02.00,*Default,NTP,0000,0000,0000,,s 的其余部分将是 1 4 5
Dialogue: 0,0:29:02.97,0:29:03.80,*Default,NTP,0000,0000,0000,,你可以在这里暂停
Dialogue: 0,0:29:03.80,0:29:05.40,*Default,NTP,0000,0000,0000,,并尝试自己解决这些问题
Dialogue: 0,0:29:06.27,0:29:08.17,*Default,NTP,0000,0000,0000,,现在我们一起来解决它们
Dialogue: 0,0:29:09.00,0:29:11.93,*Default,NTP,0000,0000,0000,,下面是我们的链接列表类
Dialogue: 0,0:29:12.13,0:29:13.57,*Default,NTP,0000,0000,0000,,需要一个首字符串和一个余字符串
Dialogue: 0,0:29:13.57,0:29:16.50,*Default,NTP,0000,0000,0000,,剩余部分默认为空
Dialogue: 0,0:29:16.77,0:29:18.53,*Default,NTP,0000,0000,0000,,我们如何检查是否有序呢？
Dialogue: 0,0:29:18.53,0:29:21.47,*Default,NTP,0000,0000,0000,,1 3 4 是有序的，1 和 4 3 不是有序的
Dialogue: 0,0:29:22.37,0:29:24.10,*Default,NTP,0000,0000,0000,,在这里，我们将使用重熔法
Dialogue: 0,0:29:24.60,0:29:26.50,*Default,NTP,0000,0000,0000,,检查前两个元素是否有序
Dialogue: 0,0:29:26.50,0:29:28.47,*Default,NTP,0000,0000,0000,,并确保之后的所有元素
Dialogue: 0,0:29:28.47,0:29:29.70,*Default,NTP,0000,0000,0000,,也是有序的
Dialogue: 0,0:29:30.30,0:29:32.30,*Default,NTP,0000,0000,0000,,如果 s
Dialogue: 0,0:29:32.67,0:29:36.30,*Default,NTP,0000,0000,0000,,是空的，或者 s 的其余部分是空的
Dialogue: 0,0:29:36.97,0:29:38.93,*Default,NTP,0000,0000,0000,,那么这个东西肯定是有序的
Dialogue: 0,0:29:39.27,0:29:41.57,*Default,NTP,0000,0000,0000,,因为它只有 0 个或 1 个元素
Dialogue: 0,0:29:41.57,0:29:43.77,*Default,NTP,0000,0000,0000,,没有足够的元素来破坏秩序
Dialogue: 0,0:29:44.57,0:29:47.87,*Default,NTP,0000,0000,0000,,如果 s 点前
Dialogue: 0,0:29:48.10,0:29:51.47,*Default,NTP,0000,0000,0000,,大于 s dot rest
Dialogue: 0,0:29:51.73,0:29:53.50,*Default,NTP,0000,0000,0000,,即元素索引
Dialogue: 0,0:29:53.50,0:29:56.10,*Default,NTP,0000,0000,0000,,大于元素索引 1
Dialogue: 0,0:29:56.13,0:29:57.53,*Default,NTP,0000,0000,0000,,那么它们就不是有序的
Dialogue: 0,0:29:58.33,0:29:59.87,*Default,NTP,0000,0000,0000,,如果你不知道它是有序的
Dialogue: 0,0:29:59.87,0:30:01.77,*Default,NTP,0000,0000,0000,,你不知道它不是有序的
Dialogue: 0,0:30:01.80,0:30:02.73,*Default,NTP,0000,0000,0000,,但你知道
Dialogue: 0,0:30:02.73,0:30:04.40,*Default,NTP,0000,0000,0000,,前两个元素是有序的
Dialogue: 0,0:30:04.40,0:30:06.70,*Default,NTP,0000,0000,0000,,那么就必须检查其他所有元素
Dialogue: 0,0:30:06.90,0:30:08.70,*Default,NTP,0000,0000,0000,,返回有序
Dialogue: 0,0:30:09.37,0:30:10.53,*Default,NTP,0000,0000,0000,,s 其余
Dialogue: 0,0:30:11.73,0:30:14.00,*Default,NTP,0000,0000,0000,,现在，如果你
Dialogue: 0,0:30:14.00,0:30:16.70,*Default,NTP,0000,0000,0000,,让关键函数告诉你
Dialogue: 0,0:30:16.97,0:30:19.90,*Default,NTP,0000,0000,0000,,你真正需要考虑排序的值是什么
Dialogue: 0,0:30:20.87,0:30:23.07,*Default,NTP,0000,0000,0000,,那么，我们是要对存在的值进行排序
Dialogue: 0,0:30:23.40,0:30:26.33,*Default,NTP,0000,0000,0000,,还是检查调用
Dialogue: 0,0:30:26.33,0:30:27.97,*Default,NTP,0000,0000,0000,,的顺序
Dialogue: 0,0:30:28.07,0:30:30.93,*Default,NTP,0000,0000,0000,,因此，abs 1 表示 1 abs -3 表示 3
Dialogue: 0,0:30:30.93,0:30:34.87,*Default,NTP,0000,0000,0000,,abs 4 abs 4 1 3 4 是有序的
Dialogue: 0,0:30:35.07,0:30:38.57,*Default,NTP,0000,0000,0000,,因此，使用键函数应用程序时，这将是正确的。
Dialogue: 0,0:30:38.80,0:30:41.90,*Default,NTP,0000,0000,0000,,我们使用这个函数的方式与使用 key 函数的方式大致相同
Dialogue: 0,0:30:42.00,0:30:44.27,*Default,NTP,0000,0000,0000,,排序或最小或最大
Dialogue: 0,0:30:45.70,0:30:47.73,*Default,NTP,0000,0000,0000,,我们必须添加第二个参数
Dialogue: 0,0:30:47.93,0:30:51.17,*Default,NTP,0000,0000,0000,,默认情况下，它只有 identity 函数
Dialogue: 0,0:30:51.73,0:30:53.53,*Default,NTP,0000,0000,0000,,但如果输入 abs
Dialogue: 0,0:30:53.53,0:30:55.77,*Default,NTP,0000,0000,0000,,那么这就是我们应该检查的条件
Dialogue: 0,0:30:55.90,0:31:00.47,*Default,NTP,0000,0000,0000,,abs s dot first 是否大于
Dialogue: 0,0:31:00.57,0:31:02.73,*Default,NTP,0000,0000,0000,,abs s rest first
Dialogue: 0,0:31:03.20,0:31:05.77,*Default,NTP,0000,0000,0000,,这样就能处理绝对值情况
Dialogue: 0,0:31:05.77,0:31:08.37,*Default,NTP,0000,0000,0000,,但我们希望它足够通用，以处理
Dialogue: 0,0:31:08.53,0:31:10.53,*Default,NTP,0000,0000,0000,,任何可能的键函数
Dialogue: 0,0:31:10.60,0:31:13.13,*Default,NTP,0000,0000,0000,,所以我们只需用 key 代替 abs
Dialogue: 0,0:31:13.77,0:31:15.87,*Default,NTP,0000,0000,0000,,这意味着默认情况下
Dialogue: 0,0:31:16.20,0:31:18.00,*Default,NTP,0000,0000,0000,,标识函数
Dialogue: 0,0:31:18.30,0:31:19.47,*Default,NTP,0000,0000,0000,,但如果你想
Dialogue: 0,0:31:19.47,0:31:22.50,*Default,NTP,0000,0000,0000,,它也可以使用 abs 函数并应用它
Dialogue: 0,0:31:23.60,0:31:25.07,*Default,NTP,0000,0000,0000,,好了，让我们看看下一个
Dialogue: 0,0:31:25.07,0:31:26.93,*Default,NTP,0000,0000,0000,,合并返回一个无序列表
Dialogue: 0,0:31:26.93,0:31:29.97,*Default,NTP,0000,0000,0000,,包含 s 和 t 的元素
Dialogue: 0,0:31:30.93,0:31:34.30,*Default,NTP,0000,0000,0000,,所以当我把 a 和 b 合并时，一个 5 和一个 4
Dialogue: 0,0:31:34.30,0:31:36.30,*Default,NTP,0000,0000,0000,,就会得到 1 1 4 5
Dialogue: 0,0:31:36.87,0:31:39.77,*Default,NTP,0000,0000,0000,,如果 s 是空链接
Dialogue: 0,0:31:40.10,0:31:43.00,*Default,NTP,0000,0000,0000,,那么合并后的结果就应该是
Dialogue: 0,0:31:43.00,0:31:44.67,*Default,NTP,0000,0000,0000,,t 中的所有内容
Dialogue: 0,0:31:45.40,0:31:46.17,*Default,NTP,0000,0000,0000,,如果
Dialogue: 0,0:31:46.17,0:31:50.80,*Default,NTP,0000,0000,0000,,t 是林肯车，但 s 不是，那么我认为保留
Dialogue: 0,0:31:51.30,0:31:54.60,*Default,NTP,0000,0000,0000,,合并结果应该是 s 中的所有内容
Dialogue: 0,0:31:55.07,0:31:58.17,*Default,NTP,0000,0000,0000,,现在我们知道 s 和 t 中都有元素了
Dialogue: 0,0:31:58.17,0:31:59.30,*Default,NTP,0000,0000,0000,,所以我们可以比较
Dialogue: 0,0:31:59.60,0:32:02.13,*Default,NTP,0000,0000,0000,,s 点在前和 t 点在前
Dialogue: 0,0:32:02.93,0:32:03.57,*Default,NTP,0000,0000,0000,,如果它们相等
Dialogue: 0,0:32:03.57,0:32:05.70,*Default,NTP,0000,0000,0000,,它们的顺序并不重要
Dialogue: 0,0:32:05.77,0:32:07.53,*Default,NTP,0000,0000,0000,,所以我们只需将小于等于
Dialogue: 0,0:32:07.53,0:32:10.00,*Default,NTP,0000,0000,0000,,但如果我们把小于
Dialogue: 0,0:32:11.60,0:32:14.07,*Default,NTP,0000,0000,0000,,在这里，我们将创建一个新的链接列表
Dialogue: 0,0:32:14.10,0:32:17.33,*Default,NTP,0000,0000,0000,,从最小的元素开始，先是
Dialogue: 0,0:32:17.47,0:32:18.90,*Default,NTP,0000,0000,0000,,之后是
Dialogue: 0,0:32:19.73,0:32:21.50,*Default,NTP,0000,0000,0000,,的合并版本
Dialogue: 0,0:32:21.73,0:32:25.13,*Default,NTP,0000,0000,0000,,中的所有元素和 t 中的所有元素
Dialogue: 0,0:32:25.67,0:32:27.93,*Default,NTP,0000,0000,0000,,这个结果包含了 s 中的所有元素
Dialogue: 0,0:32:28.07,0:32:29.77,*Default,NTP,0000,0000,0000,,有第一个，也有其余的
Dialogue: 0,0:32:29.80,0:32:31.87,*Default,NTP,0000,0000,0000,,并包含 t 中的所有内容
Dialogue: 0,0:32:33.00,0:32:35.87,*Default,NTP,0000,0000,0000,,否则，如果 t 点 1 是最小的元素
Dialogue: 0,0:32:35.93,0:32:37.40,*Default,NTP,0000,0000,0000,,那么它就应该是
Dialogue: 0,0:32:37.40,0:32:39.73,*Default,NTP,0000,0000,0000,,结果的第一个元素
Dialogue: 0,0:32:39.93,0:32:41.80,*Default,NTP,0000,0000,0000,,我们仍然需要 s 中的所有元素
Dialogue: 0,0:32:41.80,0:32:44.30,*Default,NTP,0000,0000,0000,,中的所有元素
Dialogue: 0,0:32:45.90,0:32:47.70,*Default,NTP,0000,0000,0000,,那么就地合并呢？
Dialogue: 0,0:32:48.17,0:32:50.93,*Default,NTP,0000,0000,0000,,这里的想法是，我们从 a 和 b 开始
Dialogue: 0,0:32:51.00,0:32:53.10,*Default,NTP,0000,0000,0000,,我们调用就地合并，得到
Dialogue: 0,0:32:53.20,0:32:56.07,*Default,NTP,0000,0000,0000,,a 和 b 中所有元素的排序顺序
Dialogue: 0,0:32:56.53,0:32:59.00,*Default,NTP,0000,0000,0000,,但我们从未调用 link
Dialogue: 0,0:32:59.73,0:33:00.53,*Default,NTP,0000,0000,0000,,事实上
Dialogue: 0,0:33:00.53,0:33:03.07,*Default,NTP,0000,0000,0000,,实现方法几乎与此相同
Dialogue: 0,0:33:04.27,0:33:05.87,*Default,NTP,0000,0000,0000,,基本情况是一样的
Dialogue: 0,0:33:06.33,0:33:08.57,*Default,NTP,0000,0000,0000,,但我们不需要调用 link
Dialogue: 0,0:33:08.67,0:33:11.77,*Default,NTP,0000,0000,0000,,我们需要做的是改变 s
Dialogue: 0,0:33:12.13,0:33:14.33,*Default,NTP,0000,0000,0000,,这样 s dot first 就不一样了
Dialogue: 0,0:33:14.60,0:33:16.50,*Default,NTP,0000,0000,0000,,但 s 点其余部分是一样的
Dialogue: 0,0:33:16.73,0:33:17.90,*Default,NTP,0000,0000,0000,,这看起来像什么呢？
Dialogue: 0,0:33:18.87,0:33:21.37,*Default,NTP,0000,0000,0000,,与其返回一个新的链接
Dialogue: 0,0:33:21.40,0:33:23.13,*Default,NTP,0000,0000,0000,,而是返回 s
Dialogue: 0,0:33:23.13,0:33:26.47,*Default,NTP,0000,0000,0000,,但我们要把 s rest 改为
Dialogue: 0,0:33:26.77,0:33:31.70,*Default,NTP,0000,0000,0000,,s rest 中的所有内容和 t 中的所有内容都是它的一部分
Dialogue: 0,0:33:32.47,0:33:35.50,*Default,NTP,0000,0000,0000,,同样，如果 t 的元素最小
Dialogue: 0,0:33:35.53,0:33:37.87,*Default,NTP,0000,0000,0000,,那么我们将返回的就是它
Dialogue: 0,0:33:37.90,0:33:39.67,*Default,NTP,0000,0000,0000,,但我们要修改它的
Dialogue: 0,0:33:39.67,0:33:42.57,*Default,NTP,0000,0000,0000,,其余部分，以确保它包含
Dialogue: 0,0:33:42.70,0:33:43.80,*Default,NTP,0000,0000,0000,,中的所有内容
Dialogue: 0,0:33:43.97,0:33:47.07,*Default,NTP,0000,0000,0000,,中的所有内容
Dialogue: 0,0:33:48.07,0:33:49.33,*Default,NTP,0000,0000,0000,,看看我们做得怎么样
Dialogue: 0,0:33:50.37,0:33:51.77,*Default,NTP,0000,0000,0000,,我们的医生通过了
Dialogue: 0,0:33:51.90,0:33:52.37,*Default,NTP,0000,0000,0000,,所以
Dialogue: 0,0:33:52.37,0:33:54.97,*Default,NTP,0000,0000,0000,,我们玩了一下链接列表
