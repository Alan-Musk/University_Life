[Script Info]
; Script generated by Bilibili Evolved Danmaku Converter
; https://github.com/the1812/Bilibili-Evolved/
Title: Lecture 10. Q&A - Lecture 10. Q&A
ScriptType: v4.00+
PlayResX: 1152
PlayResY: 720
Timer: 10.0000
WrapStyle: 0
ScaledBorderAndShadow: no

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: TopLeft,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,7,32,32,32,0
Style: TopCenter,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,8,32,32,32,0
Style: TopRight,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,9,32,32,32,0
Style: BottomLeft,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,1,32,32,32,0
Style: BottomCenter,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,2,32,32,32,0
Style: BottomRight,微软雅黑,48,&H00FFFFFF,&H00FFFFFF,&H99000000,&H99000000,0,0,0,0,100,100,0,0,3,1,0,3,32,32,32,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.80,0:00:03.12,BottomCenter,,0,0,0,,这是 61a 第 10 讲
Dialogue: 0,0:00:03.12,0:00:06.48,BottomCenter,,0,0,0,,qa 是的，问题是关于什么
Dialogue: 0,0:00:06.48,0:00:07.60,BottomCenter,,0,0,0,,意思是逃避
Dialogue: 0,0:00:07.60,0:00:10.16,BottomCenter,,0,0,0,,通常当你输入一个字符时
Dialogue: 0,0:00:10.16,0:00:10.96,BottomCenter,,0,0,0,,某物在
Dialogue: 0,0:00:10.96,0:00:14.88,BottomCenter,,0,0,0,,在引号中，例如每个字符都是
Dialogue: 0,0:00:14.88,0:00:17.60,BottomCenter,,0,0,0,,由 python 处理或解释时
Dialogue: 0,0:00:17.60,0:00:19.20,BottomCenter,,0,0,0,,你加了一个反斜杠
Dialogue: 0,0:00:19.20,0:00:21.84,BottomCenter,,0,0,0,,不是一个部门另一个另一个部门
Dialogue: 0,0:00:21.84,0:00:22.24,BottomCenter,,0,0,0,,一
Dialogue: 0,0:00:22.24,0:00:24.72,BottomCenter,,0,0,0,,本质上Python所做的是它需要
Dialogue: 0,0:00:24.72,0:00:26.24,BottomCenter,,0,0,0,,下一个字符
Dialogue: 0,0:00:26.24,0:00:28.64,BottomCenter,,0,0,0,,并将其与反斜杠捆绑在一起，这样
Dialogue: 0,0:00:28.64,0:00:29.52,BottomCenter,,0,0,0,,反斜杠
Dialogue: 0,0:00:29.52,0:00:31.68,BottomCenter,,0,0,0,,正如约翰在屏幕右侧所写的那样
Dialogue: 0,0:00:31.68,0:00:33.68,BottomCenter,,0,0,0,,现在是一个选项卡
Dialogue: 0,0:00:33.68,0:00:35.68,BottomCenter,,0,0,0,,所以它不会将其视为两个字符
Dialogue: 0,0:00:35.68,0:00:37.20,BottomCenter,,0,0,0,,反斜杠 t
Dialogue: 0,0:00:37.20,0:00:39.68,BottomCenter,,0,0,0,,这是一个字符，所以转义
Dialogue: 0,0:00:39.68,0:00:40.80,BottomCenter,,0,0,0,,字符的意思是
Dialogue: 0,0:00:40.80,0:00:42.40,BottomCenter,,0,0,0,,你本质上是在创建一个特殊的
Dialogue: 0,0:00:42.40,0:00:44.64,BottomCenter,,0,0,0,,符号 呃，有一个选项卡
Dialogue: 0,0:00:44.64,0:00:46.32,BottomCenter,,0,0,0,,有一条新线并且有一个号码
Dialogue: 0,0:00:46.32,0:00:49.04,BottomCenter,,0,0,0,,以及其他这些的
Dialogue: 0,0:00:49.04,0:00:50.88,BottomCenter,,0,0,0,,这是约翰的一个很好的例子
Dialogue: 0,0:00:50.88,0:00:52.16,BottomCenter,,0,0,0,,给你看
Dialogue: 0,0:00:52.16,0:00:54.88,BottomCenter,,0,0,0,,顺便说一下，你好的长度
Dialogue: 0,0:00:54.88,0:00:56.40,BottomCenter,,0,0,0,,当你打印 hello 时请注意
Dialogue: 0,0:00:56.40,0:00:58.16,BottomCenter,,0,0,0,,你会得到那个漂亮的标签
Dialogue: 0,0:00:58.16,0:01:00.56,BottomCenter,,0,0,0,,它正在替换转义的斜杠 t
Dialogue: 0,0:01:00.56,0:01:01.52,BottomCenter,,0,0,0,,出去
Dialogue: 0,0:01:01.52,0:01:03.43,BottomCenter,,0,0,0,,然后该列表的长度就是
Dialogue: 0,0:01:03.43,0:01:05.28,BottomCenter,,0,0,0,,你好的长度是五
Dialogue: 0,0:01:05.28,0:01:07.68,BottomCenter,,0,0,0,,那里的长度是五
Dialogue: 0,0:01:07.68,0:01:09.28,BottomCenter,,0,0,0,,然后还有一个
Dialogue: 0,0:01:09.28,0:01:11.59,BottomCenter,,0,0,0,,哪个选项卡效果非常好
Dialogue: 0,0:01:11.59,0:01:13.12,BottomCenter,,0,0,0,,约翰，当你跟上时
Dialogue: 0,0:01:13.12,0:01:16.08,BottomCenter,,0,0,0,,很好地突出显示
Dialogue: 0,0:01:17.43,0:01:18.72,BottomCenter,,0,0,0,,然后是选项卡的长度
Dialogue: 0,0:01:18.72,0:01:21.20,BottomCenter,,0,0,0,,一个字符而不是两个字符
Dialogue: 0,0:01:21.20,0:01:24.23,BottomCenter,,0,0,0,,所以呃所以换行或者换行
Dialogue: 0,0:01:24.23,0:01:26.79,BottomCenter,,0,0,0,,如果 john 写了一个 hello 反斜杠，就是这样
Dialogue: 0,0:01:26.79,0:01:28.64,BottomCenter,,0,0,0,,在那里
Dialogue: 0,0:01:28.64,0:01:31.92,BottomCenter,,0,0,0,,然后当你打印它时
Dialogue: 0,0:01:31.92,0:01:33.28,BottomCenter,,0,0,0,,当然，它的长度仍然是 11
Dialogue: 0,0:01:33.28,0:01:34.08,BottomCenter,,0,0,0,,当你打印它时
Dialogue: 0,0:01:34.08,0:01:37.36,BottomCenter,,0,0,0,,你只是有一个新行
Dialogue: 0,0:01:37.36,0:01:40.64,BottomCenter,,0,0,0,,在你知道的印刷品中
Dialogue: 0,0:01:40.64,0:01:42.48,BottomCenter,,0,0,0,,所以这和反斜杠是一样的
Dialogue: 0,0:01:42.48,0:01:44.48,BottomCenter,,0,0,0,,是一个字符并且是一个新行
Dialogue: 0,0:01:44.48,0:01:45.59,BottomCenter,,0,0,0,,或换行符
Dialogue: 0,0:01:45.59,0:01:48.64,BottomCenter,,0,0,0,,下一个字符算作一个字符
Dialogue: 0,0:01:48.64,0:01:49.36,BottomCenter,,0,0,0,,问题是
Dialogue: 0,0:01:49.36,0:01:52.56,BottomCenter,,0,0,0,,什么是字符串或列表的切片
Dialogue: 0,0:01:52.56,0:01:54.87,BottomCenter,,0,0,0,,这个话题在
Dialogue: 0,0:01:54.87,0:01:56.56,BottomCenter,,0,0,0,,今天的讲座但将涵盖
Dialogue: 0,0:01:56.56,0:01:59.92,BottomCenter,,0,0,0,,周五更深入
Dialogue: 0,0:01:59.92,0:02:03.76,BottomCenter,,0,0,0,,是的，这就是所谓的切片
Dialogue: 0,0:02:03.76,0:02:07.28,BottomCenter,,0,0,0,,而这称为项目选择
Dialogue: 0,0:02:07.28,0:02:08.80,BottomCenter,,0,0,0,,切片是当你有冒号时
Dialogue: 0,0:02:08.80,0:02:11.03,BottomCenter,,0,0,0,,方括号内的某处
Dialogue: 0,0:02:11.03,0:02:13.03,BottomCenter,,0,0,0,,但这两件事接连发生
Dialogue: 0,0:02:13.03,0:02:14.80,BottomCenter,,0,0,0,,表达式并且这个表达式必须
Dialogue: 0,0:02:14.80,0:02:16.31,BottomCenter,,0,0,0,,给你某种容器
Dialogue: 0,0:02:16.31,0:02:18.24,BottomCenter,,0,0,0,,就像列表或字符串中的行为一样
Dialogue: 0,0:02:18.24,0:02:19.36,BottomCenter,,0,0,0,,同样的方式
Dialogue: 0,0:02:19.36,0:02:21.43,BottomCenter,,0,0,0,,然后这部分告诉你如何获得
Dialogue: 0,0:02:21.43,0:02:24.24,BottomCenter,,0,0,0,,这一部分
Dialogue: 0,0:02:24.31,0:02:26.08,BottomCenter,,0,0,0,,项目选择将为您提供
Dialogue: 0,0:02:26.08,0:02:28.72,BottomCenter,,0,0,0,,无论这是什么的个别元素
Dialogue: 0,0:02:28.72,0:02:30.87,BottomCenter,,0,0,0,,一片会给你一些
Dialogue: 0,0:02:30.87,0:02:32.40,BottomCenter,,0,0,0,,子序列
Dialogue: 0,0:02:32.40,0:02:35.19,BottomCenter,,0,0,0,,我们谈论了很多
Dialogue: 0,0:02:35.19,0:02:37.75,BottomCenter,,0,0,0,,周五讲座中有详细内容但是呃
Dialogue: 0,0:02:37.75,0:02:39.75,BottomCenter,,0,0,0,,把它放在这里只是为了给你一个
Dialogue: 0,0:02:39.75,0:02:41.36,BottomCenter,,0,0,0,,其运作方式的想法
Dialogue: 0,0:02:41.36,0:02:44.56,BottomCenter,,0,0,0,,嗯，这说从索引一开始
Dialogue: 0,0:02:44.56,0:02:46.87,BottomCenter,,0,0,0,,并上升至但不包括索引
Dialogue: 0,0:02:46.87,0:02:47.75,BottomCenter,,0,0,0,,三
Dialogue: 0,0:02:47.75,0:02:50.08,BottomCenter,,0,0,0,,向上数，这样就加一
Dialogue: 0,0:02:50.08,0:02:50.87,BottomCenter,,0,0,0,,二
Dialogue: 0,0:02:50.87,0:02:53.19,BottomCenter,,0,0,0,,然后我们就完成了，因为我们打了三个
Dialogue: 0,0:02:53.19,0:02:55.03,BottomCenter,,0,0,0,,获取 s 的所有元素并将它们放入
Dialogue: 0,0:02:55.03,0:02:56.80,BottomCenter,,0,0,0,,成一个字符串所以
Dialogue: 0,0:02:56.80,0:02:59.84,BottomCenter,,0,0,0,,uh 元素零是 h 元素一是 e
Dialogue: 0,0:02:59.84,0:03:01.75,BottomCenter,,0,0,0,,元素二是 l 所以这就是你得到的原因
Dialogue: 0,0:03:01.75,0:03:05.59,BottomCenter,,0,0,0,,结果中的这个 e 和那个 l
Dialogue: 0,0:03:05.59,0:03:08.56,BottomCenter,,0,0,0,,如果我们列一个清单
Dialogue: 0,0:03:09.28,0:03:12.63,BottomCenter,,0,0,0,,好吧，让我们使用不同的数字
Dialogue: 0,0:03:15.12,0:03:19.43,BottomCenter,,0,0,0,,um 选择列表中的一个元素
Dialogue: 0,0:03:19.43,0:03:22.15,BottomCenter,,0,0,0,,只会给您一个个人号码
Dialogue: 0,0:03:22.15,0:03:24.08,BottomCenter,,0,0,0,,在这种情况下，因为这是一个完整的列表
Dialogue: 0,0:03:24.08,0:03:25.68,BottomCenter,,0,0,0,,它不会给你返回一个数字
Dialogue: 0,0:03:25.68,0:03:26.24,BottomCenter,,0,0,0,,列表
Dialogue: 0,0:03:26.24,0:03:28.40,BottomCenter,,0,0,0,,满了六个那是不同的事情所以
Dialogue: 0,0:03:28.40,0:03:29.36,BottomCenter,,0,0,0,,六
Dialogue: 0,0:03:29.36,0:03:32.40,BottomCenter,,0,0,0,,和六个是不同的东西，这个
Dialogue: 0,0:03:32.40,0:03:34.31,BottomCenter,,0,0,0,,语法 这个项目选择我们已经
Dialogue: 0,0:03:34.31,0:03:35.84,BottomCenter,,0,0,0,,本次讲座中使用了很多，只是给出了
Dialogue: 0,0:03:35.84,0:03:37.84,BottomCenter,,0,0,0,,你一个元素
Dialogue: 0,0:03:37.84,0:03:39.52,BottomCenter,,0,0,0,,切片实际上会给你一个新的
Dialogue: 0,0:03:39.52,0:03:42.24,BottomCenter,,0,0,0,,列出了一些元素，但没有
Dialogue: 0,0:03:42.24,0:03:43.28,BottomCenter,,0,0,0,,全部
Dialogue: 0,0:03:43.28,0:03:46.24,BottomCenter,,0,0,0,,所以如果我从 1 到 3 这是
Dialogue: 0,0:03:46.24,0:03:48.16,BottomCenter,,0,0,0,,元素零所以我们要跳过它
Dialogue: 0,0:03:48.16,0:03:50.16,BottomCenter,,0,0,0,,获取元素一和元素二及其
Dialogue: 0,0:03:50.16,0:03:52.47,BottomCenter,,0,0,0,,将其放入新列表中
Dialogue: 0,0:03:52.47,0:03:56.24,BottomCenter,,0,0,0,,嗯，事实证明这很常见
Dialogue: 0,0:03:56.24,0:03:57.84,BottomCenter,,0,0,0,,从列表的开头开始
Dialogue: 0,0:03:57.84,0:04:00.47,BottomCenter,,0,0,0,,到了一定程度，如果你忽略了
Dialogue: 0,0:04:00.47,0:04:03.12,BottomCenter,,0,0,0,,第一个索引然后它从零开始
Dialogue: 0,0:04:03.12,0:04:05.43,BottomCenter,,0,0,0,,从某个地方出发是很常见的
Dialogue: 0,0:04:05.43,0:04:06.15,BottomCenter,,0,0,0,,到最后
Dialogue: 0,0:04:06.15,0:04:07.75,BottomCenter,,0,0,0,,如果你省略第二个索引
Dialogue: 0,0:04:07.75,0:04:09.19,BottomCenter,,0,0,0,,然后就到了末尾
Dialogue: 0,0:04:09.19,0:04:10.63,BottomCenter,,0,0,0,,字符串相当于
Dialogue: 0,0:04:10.63,0:04:11.28,BottomCenter,,0,0,0,,说
Dialogue: 0,0:04:11.28,0:04:14.87,BottomCenter,,0,0,0,,一到 t um 的长度
Dialogue: 0,0:04:14.87,0:04:16.80,BottomCenter,,0,0,0,,事实上你可以省略两者
Dialogue: 0,0:04:16.80,0:04:18.80,BottomCenter,,0,0,0,,他们虽然你会得到
Dialogue: 0,0:04:18.80,0:04:22.07,BottomCenter,,0,0,0,,呃等价列表回来了所以有
Dialogue: 0,0:04:22.07,0:04:23.43,BottomCenter,,0,0,0,,我们将讨论这样做的理由
Dialogue: 0,0:04:23.43,0:04:24.87,BottomCenter,,0,0,0,,稍后在课程中
Dialogue: 0,0:04:24.87,0:04:27.83,BottomCenter,,0,0,0,,但是呃但是到目前为止就像你忽略了一样
Dialogue: 0,0:04:27.83,0:04:29.43,BottomCenter,,0,0,0,,第一个和最后你就不会得到
Dialogue: 0,0:04:29.43,0:04:30.87,BottomCenter,,0,0,0,,一个子序列，你就得到了整个
Dialogue: 0,0:04:30.87,0:04:31.92,BottomCenter,,0,0,0,,事物
Dialogue: 0,0:04:31.92,0:04:34.16,BottomCenter,,0,0,0,,所以你可以考虑一下切片
Dialogue: 0,0:04:34.16,0:04:35.92,BottomCenter,,0,0,0,,只是你知道我们做了这个范围
Dialogue: 0,0:04:35.92,0:04:38.48,BottomCenter,,0,0,0,,在 for 循环中它基本上指定了一个
Dialogue: 0,0:04:38.48,0:04:40.07,BottomCenter,,0,0,0,,值范围
Dialogue: 0,0:04:40.07,0:04:41.92,BottomCenter,,0,0,0,,你正在抓住这个范围
Dialogue: 0,0:04:41.92,0:04:43.12,BottomCenter,,0,0,0,,值来自任一
Dialogue: 0,0:04:43.12,0:04:46.56,BottomCenter,,0,0,0,,字符串或列表
Dialogue: 0,0:04:46.56,0:04:49.60,BottomCenter,,0,0,0,,嗯，还有会咬你的虫子
Dialogue: 0,0:04:49.60,0:04:50.95,BottomCenter,,0,0,0,,一遍又一遍地
Dialogue: 0,0:04:50.95,0:04:54.07,BottomCenter,,0,0,0,,是切片中的最后一个元素
Dialogue: 0,0:04:54.07,0:04:54.87,BottomCenter,,0,0,0,,范围是
Dialogue: 0,0:04:54.87,0:04:58.31,BottomCenter,,0,0,0,,不包容你从
Dialogue: 0,0:04:58.31,0:05:00.72,BottomCenter,,0,0,0,,切片中的第一个元素最多
Dialogue: 0,0:05:00.72,0:05:02.63,BottomCenter,,0,0,0,,减一，不包括最后一项，并且
Dialogue: 0,0:05:02.63,0:05:04.16,BottomCenter,,0,0,0,,那会咬你的
Dialogue: 0,0:05:04.16,0:05:05.92,BottomCenter,,0,0,0,,一次又一次它仍然咬人
Dialogue: 0,0:05:05.92,0:05:08.16,BottomCenter,,0,0,0,,我所以请注意
Dialogue: 0,0:05:08.16,0:05:10.16,BottomCenter,,0,0,0,,是的，如果你说我想要六七
Dialogue: 0,0:05:10.16,0:05:12.56,BottomCenter,,0,0,0,,从索引一开始的八个好吧
Dialogue: 0,0:05:12.56,0:05:14.48,BottomCenter,,0,0,0,,并上升到索引三，然后你尝试
Dialogue: 0,0:05:14.48,0:05:15.75,BottomCenter,,0,0,0,,从一到三
Dialogue: 0,0:05:15.75,0:05:17.68,BottomCenter,,0,0,0,,你不会有八个
Dialogue: 0,0:05:17.68,0:05:19.75,BottomCenter,,0,0,0,,这就是你想要查看的错误
Dialogue: 0,0:05:19.75,0:05:21.04,BottomCenter,,0,0,0,,顺便说一句，这是有充分理由的
Dialogue: 0,0:05:21.04,0:05:23.68,BottomCenter,,0,0,0,,那是因为指数
Dialogue: 0,0:05:23.68,0:05:26.24,BottomCenter,,0,0,0,,因为索引从零开始，当我们
Dialogue: 0,0:05:26.24,0:05:26.95,BottomCenter,,0,0,0,,说
Dialogue: 0,0:05:26.95,0:05:29.83,BottomCenter,,0,0,0,,零到列表的长度
Dialogue: 0,0:05:29.83,0:05:31.83,BottomCenter,,0,0,0,,列表的长度是该列表的索引
Dialogue: 0,0:05:31.83,0:05:33.68,BottomCenter,,0,0,0,,比最后一个元素多一个，所以
Dialogue: 0,0:05:33.68,0:05:35.83,BottomCenter,,0,0,0,,事实证明这很方便
Dialogue: 0,0:05:35.83,0:05:37.60,BottomCenter,,0,0,0,,我可以对长度说零
Dialogue: 0,0:05:37.60,0:05:39.51,BottomCenter,,0,0,0,,列表中的但是当你有点
Dialogue: 0,0:05:39.51,0:05:40.95,BottomCenter,,0,0,0,,手动做这些你得到的事情
Dialogue: 0,0:05:40.95,0:05:42.31,BottomCenter,,0,0,0,,顺便说一句，这是一个经典问题
Dialogue: 0,0:05:42.31,0:05:43.92,BottomCenter,,0,0,0,,我们称之为计算机科学
Dialogue: 0,0:05:43.92,0:05:45.12,BottomCenter,,0,0,0,,一个错误
Dialogue: 0,0:05:45.12,0:05:46.80,BottomCenter,,0,0,0,,嗯，你经常在
Dialogue: 0,0:05:46.80,0:05:48.63,BottomCenter,,0,0,0,,开始或结束时被它咬住
Dialogue: 0,0:05:48.63,0:05:52.31,BottomCenter,,0,0,0,,每个人都一遍又一遍
Dialogue: 0,0:05:52.31,0:05:55.04,BottomCenter,,0,0,0,,呃呃有人在聊天中问
Dialogue: 0,0:05:55.04,0:05:56.95,BottomCenter,,0,0,0,,t colin 创建一个新列表或
Dialogue: 0,0:05:56.95,0:06:00.31,BottomCenter,,0,0,0,,修改原来的列表嗯
Dialogue: 0,0:06:00.31,0:06:03.92,BottomCenter,,0,0,0,,我不太确定我是否理解
Dialogue: 0,0:06:03.92,0:06:05.43,BottomCenter,,0,0,0,,问题，但我认为你是什么
Dialogue: 0,0:06:05.43,0:06:08.48,BottomCenter,,0,0,0,,问的是我是否分配
Dialogue: 0,0:06:08.48,0:06:13.68,BottomCenter,,0,0,0,,结肠有东西，发生了什么
Dialogue: 0,0:06:13.68,0:06:16.07,BottomCenter,,0,0,0,,嗯，是的，所以让我们尝试一下然后
Dialogue: 0,0:06:16.07,0:06:17.75,BottomCenter,,0,0,0,,我们来谈谈正在发生的事情
Dialogue: 0,0:06:17.75,0:06:21.12,BottomCenter,,0,0,0,,如果我说 u 等于 t 然后我将所有切片
Dialogue: 0,0:06:21.12,0:06:22.80,BottomCenter,,0,0,0,,从头到尾的路
Dialogue: 0,0:06:22.80,0:06:25.36,BottomCenter,,0,0,0,,我能得到什么 原来你有两个
Dialogue: 0,0:06:25.36,0:06:27.51,BottomCenter,,0,0,0,,包含五个相同值的列表
Dialogue: 0,0:06:27.51,0:06:29.19,BottomCenter,,0,0,0,,六七八
Dialogue: 0,0:06:29.19,0:06:30.56,BottomCenter,,0,0,0,,为什么他们很重要
Dialogue: 0,0:06:30.56,0:06:32.39,BottomCenter,,0,0,0,,我们一开始就不同了
Dialogue: 0,0:06:32.39,0:06:34.00,BottomCenter,,0,0,0,,更改列表的内容
Dialogue: 0,0:06:34.00,0:06:34.95,BottomCenter,,0,0,0,,干的好
Dialogue: 0,0:06:34.95,0:06:38.72,BottomCenter,,0,0,0,,嗯，下周我想这很重要
Dialogue: 0,0:06:38.72,0:06:40.63,BottomCenter,,0,0,0,,到目前为止，这根本不重要
Dialogue: 0,0:06:40.63,0:06:42.48,BottomCenter,,0,0,0,,对你的生活事实上如果你
Dialogue: 0,0:06:42.48,0:06:44.24,BottomCenter,,0,0,0,,使用我们已有的做项目二
Dialogue: 0,0:06:44.24,0:06:45.51,BottomCenter,,0,0,0,,到目前为止教给你的
Dialogue: 0,0:06:45.51,0:06:48.24,BottomCenter,,0,0,0,,嗯，这个区别根本不重要
Dialogue: 0,0:06:48.24,0:06:49.92,BottomCenter,,0,0,0,,但这将开始变得相当重要
Dialogue: 0,0:06:49.92,0:06:51.68,BottomCenter,,0,0,0,,当我们开始计划三和
Dialogue: 0,0:06:51.68,0:06:52.80,BottomCenter,,0,0,0,,事情开始发生变化
Dialogue: 0,0:06:52.80,0:06:55.92,BottomCenter,,0,0,0,,所以嗯，所以这是一个重要的
Dialogue: 0,0:06:55.92,0:06:57.27,BottomCenter,,0,0,0,,最终区别
Dialogue: 0,0:06:57.27,0:07:00.80,BottomCenter,,0,0,0,,呃，还没有，下一个问题是
Dialogue: 0,0:07:00.80,0:07:02.87,BottomCenter,,0,0,0,,是否可以使用负数
Dialogue: 0,0:07:02.87,0:07:07.12,BottomCenter,,0,0,0,,如果是的话，它们是什么意思
Dialogue: 0,0:07:07.12,0:07:09.51,BottomCenter,,0,0,0,,很好的问题，呃，答案是
Dialogue: 0,0:07:09.51,0:07:10.24,BottomCenter,,0,0,0,,是的
Dialogue: 0,0:07:10.24,0:07:13.51,BottomCenter,,0,0,0,,你想做个例子吗 约翰 是的
Dialogue: 0,0:07:13.51,0:07:16.72,BottomCenter,,0,0,0,,所以实际上切片是
Dialogue: 0,0:07:16.72,0:07:19.60,BottomCenter,,0,0,0,,非常灵活，但你不需要知道
Dialogue: 0,0:07:19.60,0:07:21.51,BottomCenter,,0,0,0,,本课程的每个细节，例如
Dialogue: 0,0:07:21.51,0:07:24.31,BottomCenter,,0,0,0,,我们将专注于计数，但是在这里
Dialogue: 0,0:07:24.31,0:07:25.60,BottomCenter,,0,0,0,,有一些方便的东西
Dialogue: 0,0:07:25.60,0:07:30.87,BottomCenter,,0,0,0,,是用于选择一个元素
Dialogue: 0,0:07:30.87,0:07:32.63,BottomCenter,,0,0,0,,你实际上可以输入负数
Dialogue: 0,0:07:32.63,0:07:34.95,BottomCenter,,0,0,0,,数字将从
Dialogue: 0,0:07:34.95,0:07:38.16,BottomCenter,,0,0,0,,结束而不是从开始
Dialogue: 0,0:07:38.16,0:07:41.27,BottomCenter,,0,0,0,,所以负1表示最后一个元素
Dialogue: 0,0:07:41.27,0:07:43.75,BottomCenter,,0,0,0,,负数 2 表示倒数第二个
Dialogue: 0,0:07:43.75,0:07:44.63,BottomCenter,,0,0,0,,元素
Dialogue: 0,0:07:44.63,0:07:47.19,BottomCenter,,0,0,0,,以及使用否定的事实
Dialogue: 0,0:07:47.19,0:07:48.07,BottomCenter,,0,0,0,,指数
Dialogue: 0,0:07:48.07,0:07:51.44,BottomCenter,,0,0,0,,也适用于切片，所以如果我想要的话
Dialogue: 0,0:07:51.44,0:07:52.31,BottomCenter,,0,0,0,,切片
Dialogue: 0,0:07:52.31,0:07:56.56,BottomCenter,,0,0,0,,从这里的元素 1 开始
Dialogue: 0,0:07:56.56,0:08:00.56,BottomCenter,,0,0,0,,直到但不包括最后一个元素
Dialogue: 0,0:08:00.56,0:08:02.31,BottomCenter,,0,0,0,,我可以写这个并得到六七
Dialogue: 0,0:08:02.31,0:08:03.68,BottomCenter,,0,0,0,,八
Dialogue: 0,0:08:03.68,0:08:06.07,BottomCenter,,0,0,0,,嗯，这相当于
Dialogue: 0,0:08:06.07,0:08:08.48,BottomCenter,,0,0,0,,写作
Dialogue: 0,0:08:09.36,0:08:12.48,BottomCenter,,0,0,0,,这么
Dialogue: 0,0:08:12.48,0:08:15.92,BottomCenter,,0,0,0,,嗯，是的，我想这就是故事
Dialogue: 0,0:08:15.92,0:08:18.95,BottomCenter,,0,0,0,,使用负数索引
Dialogue: 0,0:08:18.95,0:08:21.43,BottomCenter,,0,0,0,,是他们从最后开始计数
Dialogue: 0,0:08:21.43,0:08:22.31,BottomCenter,,0,0,0,,也是一种方式
Dialogue: 0,0:08:22.31,0:08:26.07,BottomCenter,,0,0,0,,倒数 um 和
Dialogue: 0,0:08:26.07,0:08:27.83,BottomCenter,,0,0,0,,这样肯定不会出现
Dialogue: 0,0:08:27.83,0:08:29.75,BottomCenter,,0,0,0,,课程中的任何地方，除了它之外
Dialogue: 0,0:08:29.75,0:08:31.51,BottomCenter,,0,0,0,,出现在第一堂课所以
Dialogue: 0,0:08:31.51,0:08:34.55,BottomCenter,,0,0,0,,也许我们会在那里讨论它
Dialogue: 0,0:08:34.55,0:08:36.79,BottomCenter,,0,0,0,,做了一些反转字符串的演示
Dialogue: 0,0:08:36.79,0:08:38.32,BottomCenter,,0,0,0,,事实证明，一旦你
Dialogue: 0,0:08:38.32,0:08:40.79,BottomCenter,,0,0,0,,决定
Dialogue: 0,0:08:42.55,0:08:44.32,BottomCenter,,0,0,0,,你要从哪里开始以及从哪里开始
Dialogue: 0,0:08:44.32,0:08:46.15,BottomCenter,,0,0,0,,你将要结束你可以决定
Dialogue: 0,0:08:46.15,0:08:48.32,BottomCenter,,0,0,0,,如何从一个元素转到下一个元素
Dialogue: 0,0:08:48.32,0:08:50.00,BottomCenter,,0,0,0,,通常你会去
Dialogue: 0,0:08:50.00,0:08:52.15,BottomCenter,,0,0,0,,添加一个，但你可以改为
Dialogue: 0,0:08:52.15,0:08:53.27,BottomCenter,,0,0,0,,经过
Dialogue: 0,0:08:53.27,0:08:55.44,BottomCenter,,0,0,0,,减一，然后你就结束了
Dialogue: 0,0:08:55.44,0:08:58.08,BottomCenter,,0,0,0,,向后工作
Dialogue: 0,0:08:58.08,0:09:00.39,BottomCenter,,0,0,0,,就像一个不那么令人困惑的版本
Dialogue: 0,0:09:00.39,0:09:01.84,BottomCenter,,0,0,0,,如果我想去的话
Dialogue: 0,0:09:01.84,0:09:04.96,BottomCenter,,0,0,0,,从一开始一直到
Dialogue: 0,0:09:04.96,0:09:05.27,BottomCenter,,0,0,0,,结尾
Dialogue: 0,0:09:05.27,0:09:07.67,BottomCenter,,0,0,0,,并包括最后一个元素，但我想要
Dialogue: 0,0:09:07.67,0:09:08.96,BottomCenter,,0,0,0,,所有其他元素
Dialogue: 0,0:09:08.96,0:09:10.48,BottomCenter,,0,0,0,,然后我可以在那里添加 2 ，它会
Dialogue: 0,0:09:10.48,0:09:13.27,BottomCenter,,0,0,0,,给我 5、7 和 9。
Dialogue: 0,0:09:13.27,0:09:15.44,BottomCenter,,0,0,0,,这表示我想从最后开始
Dialogue: 0,0:09:15.44,0:09:17.84,BottomCenter,,0,0,0,,当我上升 2 但不包括时的元素
Dialogue: 0,0:09:17.84,0:09:18.32,BottomCenter,,0,0,0,,元素
Dialogue: 0,0:09:18.32,0:09:22.08,BottomCenter,,0,0,0,,1 即 6 um 得到
Dialogue: 0,0:09:22.08,0:09:25.84,BottomCenter,,0,0,0,,从九到下一个我减去
Dialogue: 0,0:09:25.84,0:09:27.60,BottomCenter,,0,0,0,,一个而不是添加一个
Dialogue: 0,0:09:27.60,0:09:29.67,BottomCenter,,0,0,0,,所以是的，这就是充分的灵活性
Dialogue: 0,0:09:29.67,0:09:30.79,BottomCenter,,0,0,0,,切片符号
Dialogue: 0,0:09:30.79,0:09:33.03,BottomCenter,,0,0,0,,是你可以有负面的
Dialogue: 0,0:09:33.03,0:09:34.72,BottomCenter,,0,0,0,,到处都有数字来描述
Dialogue: 0,0:09:34.72,0:09:37.12,BottomCenter,,0,0,0,,事情从最后开始计算，你是
Dialogue: 0,0:09:37.12,0:09:38.79,BottomCenter,,0,0,0,,允许有正或
Dialogue: 0,0:09:38.79,0:09:40.24,BottomCenter,,0,0,0,,这里的负数
Dialogue: 0,0:09:40.24,0:09:42.63,BottomCenter,,0,0,0,,告诉你如何推进
Dialogue: 0,0:09:42.63,0:09:43.91,BottomCenter,,0,0,0,,列表
Dialogue: 0,0:09:43.91,0:09:46.96,BottomCenter,,0,0,0,,所以你可以考虑一下这个列表
Dialogue: 0,0:09:46.96,0:09:49.20,BottomCenter,,0,0,0,,字符串不是在线上而是
Dialogue: 0,0:09:49.20,0:09:51.03,BottomCenter,,0,0,0,,在一个圆圈上
Dialogue: 0,0:09:51.03,0:09:54.00,BottomCenter,,0,0,0,,是的，所以当你到达终点时
Dialogue: 0,0:09:54.00,0:09:56.00,BottomCenter,,0,0,0,,下一个元素是第一个元素，所以
Dialogue: 0,0:09:56.00,0:09:58.08,BottomCenter,,0,0,0,,如果你只是想一想
Dialogue: 0,0:09:58.08,0:09:59.67,BottomCenter,,0,0,0,,然后负面的排序会产生一点
Dialogue: 0,0:09:59.67,0:10:01.60,BottomCenter,,0,0,0,,更有意义一点我觉得有点
Dialogue: 0,0:10:01.60,0:10:02.32,BottomCenter,,0,0,0,,诡异的
Dialogue: 0,0:10:02.32,0:10:05.03,BottomCenter,,0,0,0,,索引负数但事实证明
Dialogue: 0,0:10:05.03,0:10:06.15,BottomCenter,,0,0,0,,实际上方便
Dialogue: 0,0:10:06.15,0:10:08.39,BottomCenter,,0,0,0,,有时通过算法
Dialogue: 0,0:10:08.39,0:10:11.75,BottomCenter,,0,0,0,,当您想在列表中移动时
Dialogue: 0,0:10:12.39,0:10:15.67,BottomCenter,,0,0,0,,好问题，所以问题是针对
Dialogue: 0,0:10:15.67,0:10:16.55,BottomCenter,,0,0,0,,范围
Dialogue: 0,0:10:16.55,0:10:19.03,BottomCenter,,0,0,0,,我说这不是一个列表，那么它是什么？
Dialogue: 0,0:10:19.03,0:10:19.84,BottomCenter,,0,0,0,,这不是一个列表
Dialogue: 0,0:10:19.84,0:10:22.87,BottomCenter,,0,0,0,,答案是它是一个范围呃
Dialogue: 0,0:10:22.87,0:10:26.24,BottomCenter,,0,0,0,,所以这是它自己的事情，你可以说出来
Dialogue: 0,0:10:26.24,0:10:27.91,BottomCenter,,0,0,0,,这不是一个列表，因为它确实
Dialogue: 0,0:10:27.91,0:10:29.36,BottomCenter,,0,0,0,,看起来不像一个列表
Dialogue: 0,0:10:29.36,0:10:31.44,BottomCenter,,0,0,0,,你甚至可以问 python 这是什么
Dialogue: 0,0:10:31.44,0:10:33.51,BottomCenter,,0,0,0,,我们会说哦，这是一个范围
Dialogue: 0,0:10:33.51,0:10:34.87,BottomCenter,,0,0,0,,这与你得到的不同
Dialogue: 0,0:10:34.87,0:10:37.91,BottomCenter,,0,0,0,,当你建立一个列表时
Dialogue: 0,0:10:38.00,0:10:41.12,BottomCenter,,0,0,0,,其中的类型是
Dialogue: 0,0:10:41.12,0:10:43.51,BottomCenter,,0,0,0,,一个列表
Dialogue: 0,0:10:44.87,0:10:47.12,BottomCenter,,0,0,0,,不同的原因主要是
Dialogue: 0,0:10:47.12,0:10:48.08,BottomCenter,,0,0,0,,因为你能
Dialogue: 0,0:10:48.08,0:10:51.36,BottomCenter,,0,0,0,,非常紧凑地表示一个范围
Dialogue: 0,0:10:51.36,0:10:53.44,BottomCenter,,0,0,0,,记住它从哪里开始以及在哪里
Dialogue: 0,0:10:53.44,0:10:54.00,BottomCenter,,0,0,0,,是
Dialogue: 0,0:10:54.00,0:10:55.67,BottomCenter,,0,0,0,,然后只要你想要你就可以
Dialogue: 0,0:10:55.67,0:10:58.00,BottomCenter,,0,0,0,,计算中间的东西
Dialogue: 0,0:10:58.00,0:11:00.15,BottomCenter,,0,0,0,,这意味着我可以创建一个非常
Dialogue: 0,0:11:00.15,0:11:01.27,BottomCenter,,0,0,0,,长长的名单如果
Dialogue: 0,0:11:01.27,0:11:05.27,BottomCenter,,0,0,0,,我的意思是如果我愿意的话，范围很远
Dialogue: 0,0:11:05.44,0:11:08.32,BottomCenter,,0,0,0,,你知道 python 还没有真正做到这一点
Dialogue: 0,0:11:08.32,0:11:10.39,BottomCenter,,0,0,0,,任何工作，但它只是记住了
Dialogue: 0,0:11:10.39,0:11:12.79,BottomCenter,,0,0,0,,这是开始，也是结束
Dialogue: 0,0:11:12.79,0:11:14.00,BottomCenter,,0,0,0,,如果我想知道需要多长时间
Dialogue: 0,0:11:14.00,0:11:15.91,BottomCenter,,0,0,0,,很明显我就是喜欢
Dialogue: 0,0:11:15.91,0:11:17.67,BottomCenter,,0,0,0,,减去
Dialogue: 0,0:11:17.67,0:11:19.60,BottomCenter,,0,0,0,,从头开始，我知道如何
Dialogue: 0,0:11:19.60,0:11:21.91,BottomCenter,,0,0,0,,如果我真的想的话现在已经很久了
Dialogue: 0,0:11:21.91,0:11:24.32,BottomCenter,,0,0,0,,计算一些特定值
Dialogue: 0,0:11:24.32,0:11:26.00,BottomCenter,,0,0,0,,然后 python 会做一些类似的事情
Dialogue: 0,0:11:26.00,0:11:28.00,BottomCenter,,0,0,0,,如果我愿意的话，座位后面的聪明技巧
Dialogue: 0,0:11:28.00,0:11:28.55,BottomCenter,,0,0,0,,这
Dialogue: 0,0:11:28.55,0:11:30.24,BottomCenter,,0,0,0,,数千值然后它只会添加
Dialogue: 0,0:11:30.24,0:11:32.55,BottomCenter,,0,0,0,,数字 1000 到数字 3
Dialogue: 0,0:11:32.55,0:11:34.60,BottomCenter,,0,0,0,,为了找出结果是
Dialogue: 0,0:11:34.60,0:11:35.84,BottomCenter,,0,0,0,,1003
Dialogue: 0,0:11:35.84,0:11:37.84,BottomCenter,,0,0,0,,它并没有从
Dialogue: 0,0:11:37.84,0:11:39.67,BottomCenter,,0,0,0,,三到四到五到六到七到
Dialogue: 0,0:11:39.67,0:11:40.15,BottomCenter,,0,0,0,,八
Dialogue: 0,0:11:40.15,0:11:43.20,BottomCenter,,0,0,0,,它只是对另一个执行加法
Dialogue: 0,0:11:43.20,0:11:44.72,BottomCenter,,0,0,0,,如果我尝试握住手
Dialogue: 0,0:11:44.72,0:11:46.72,BottomCenter,,0,0,0,,里面的所有元素并将它们放入
Dialogue: 0,0:11:46.72,0:11:48.08,BottomCenter,,0,0,0,,到一个列表中
Dialogue: 0,0:11:48.08,0:11:51.03,BottomCenter,,0,0,0,,呃 python 会崩溃，因为列表是
Dialogue: 0,0:11:51.03,0:11:53.20,BottomCenter,,0,0,0,,像所有的一样明确表示
Dialogue: 0,0:11:53.20,0:11:54.08,BottomCenter,,0,0,0,,价值观
Dialogue: 0,0:11:54.08,0:11:57.36,BottomCenter,,0,0,0,,被分配在内存中，呃你有
Dialogue: 0,0:11:57.36,0:11:58.63,BottomCenter,,0,0,0,,有足够的内存
Dialogue: 0,0:11:58.63,0:12:01.51,BottomCenter,,0,0,0,,不管有多少元素
Dialogue: 0,0:12:01.51,0:12:01.84,BottomCenter,,0,0,0,,和
Dialogue: 0,0:12:01.84,0:12:03.67,BottomCenter,,0,0,0,,我的电脑显然没有，也许我
Dialogue: 0,0:12:03.67,0:12:06.00,BottomCenter,,0,0,0,,应该升级，但重点是
Dialogue: 0,0:12:06.00,0:12:06.63,BottomCenter,,0,0,0,,列表
Dialogue: 0,0:12:06.63,0:12:09.03,BottomCenter,,0,0,0,,从某种意义上来说有点不太灵活
Dialogue: 0,0:12:09.03,0:12:11.12,BottomCenter,,0,0,0,,它不能代表如此巨大的
Dialogue: 0,0:12:11.12,0:12:12.08,BottomCenter,,0,0,0,,范围
Dialogue: 0,0:12:12.08,0:12:13.91,BottomCenter,,0,0,0,,但更加灵活，并且该列表
Dialogue: 0,0:12:13.91,0:12:16.00,BottomCenter,,0,0,0,,可以代表任何任意类型
Dialogue: 0,0:12:16.00,0:12:18.55,BottomCenter,,0,0,0,,值的集合，而范围有
Dialogue: 0,0:12:18.55,0:12:21.44,BottomCenter,,0,0,0,,是某种连续的顺序
Dialogue: 0,0:12:21.44,0:12:22.96,BottomCenter,,0,0,0,,你可以把它想象成一种
Dialogue: 0,0:12:22.96,0:12:25.20,BottomCenter,,0,0,0,,列表的符号表示是
Dialogue: 0,0:12:25.20,0:12:26.24,BottomCenter,,0,0,0,,明确的
Dialogue: 0,0:12:26.24,0:12:27.91,BottomCenter,,0,0,0,,是的，你确实把所有这些都卡住了
Dialogue: 0,0:12:27.91,0:12:29.60,BottomCenter,,0,0,0,,价值观在那里，它们在那里
Dialogue: 0,0:12:29.60,0:12:30.87,BottomCenter,,0,0,0,,某处的记忆
Dialogue: 0,0:12:30.87,0:12:32.79,BottomCenter,,0,0,0,,这个范围有点象征意义
Dialogue: 0,0:12:32.79,0:12:34.39,BottomCenter,,0,0,0,,的承诺
Dialogue: 0,0:12:34.39,0:12:36.00,BottomCenter,,0,0,0,,当你去询问价值观时我会
Dialogue: 0,0:12:36.00,0:12:37.44,BottomCenter,,0,0,0,,能够弄清楚它们是什么并且
Dialogue: 0,0:12:37.44,0:12:38.87,BottomCenter,,0,0,0,,你会明白为什么还有这么多
Dialogue: 0,0:12:38.87,0:12:39.91,BottomCenter,,0,0,0,,高效的
Dialogue: 0,0:12:39.91,0:12:41.36,BottomCenter,,0,0,0,,它将即时完成所有事情
Dialogue: 0,0:12:41.36,0:12:43.20,BottomCenter,,0,0,0,,仅根据需要
Dialogue: 0,0:12:43.20,0:12:44.55,BottomCenter,,0,0,0,,是的，很好的问题，所以问题是
Dialogue: 0,0:12:44.55,0:12:46.63,BottomCenter,,0,0,0,,关于如何连接列表
Dialogue: 0,0:12:46.63,0:12:47.03,BottomCenter,,0,0,0,,加
Dialogue: 0,0:12:47.03,0:12:49.03,BottomCenter,,0,0,0,,你如何随时间重复列表
Dialogue: 0,0:12:49.03,0:12:52.48,BottomCenter,,0,0,0,,运营商喜欢那里发生的事情
Dialogue: 0,0:12:52.48,0:12:53.91,BottomCenter,,0,0,0,,所以也许我们会回顾一下这些
Dialogue: 0,0:12:53.91,0:12:55.91,BottomCenter,,0,0,0,,举例并稍微讨论一下
Dialogue: 0,0:12:55.91,0:12:56.96,BottomCenter,,0,0,0,,少量
Dialogue: 0,0:12:56.96,0:13:01.12,BottomCenter,,0,0,0,,嗯，如果我有三四五
Dialogue: 0,0:13:01.12,0:13:04.84,BottomCenter,,0,0,0,,我有呃八九
Dialogue: 0,0:13:04.84,0:13:07.84,BottomCenter,,0,0,0,,十
Dialogue: 0,0:13:09.12,0:13:12.63,BottomCenter,,0,0,0,,我添加了这些，这没有任何作用
Dialogue: 0,0:13:12.63,0:13:13.91,BottomCenter,,0,0,0,,添加
Dialogue: 0,0:13:13.91,0:13:16.72,BottomCenter,,0,0,0,,相反，在计算机科学中，这是
Dialogue: 0,0:13:16.72,0:13:18.08,BottomCenter,,0,0,0,,称为重载
Dialogue: 0,0:13:18.08,0:13:20.79,BottomCenter,,0,0,0,,运算符，这意味着它执行多个操作
Dialogue: 0,0:13:20.79,0:13:21.91,BottomCenter,,0,0,0,,事物
Dialogue: 0,0:13:21.91,0:13:24.87,BottomCenter,,0,0,0,,它做了一些特别的事情
Dialogue: 0,0:13:24.87,0:13:26.79,BottomCenter,,0,0,0,,如果这是一个列表，这是一个
Dialogue: 0,0:13:26.79,0:13:28.96,BottomCenter,,0,0,0,,list 是建立一个更长的列表
Dialogue: 0,0:13:28.96,0:13:30.87,BottomCenter,,0,0,0,,具有 s 的所有元素
Dialogue: 0,0:13:30.87,0:13:33.51,BottomCenter,,0,0,0,,后面是 t 的所有元素和
Dialogue: 0,0:13:33.51,0:13:35.67,BottomCenter,,0,0,0,,您仍然可以使用此运算符
Dialogue: 0,0:13:35.67,0:13:38.48,BottomCenter,,0,0,0,,有点像你会添加
Dialogue: 0,0:13:38.48,0:13:39.75,BottomCenter,,0,0,0,,像你一样的数字
Dialogue: 0,0:13:39.75,0:13:41.91,BottomCenter,,0,0,0,,得到这个结果并添加
Dialogue: 0,0:13:41.91,0:13:43.03,BottomCenter,,0,0,0,,还有别的东西
Dialogue: 0,0:13:43.03,0:13:44.63,BottomCenter,,0,0,0,,然后你会得到一个更长的列表
Dialogue: 0,0:13:44.63,0:13:46.32,BottomCenter,,0,0,0,,在这里我们看到我们添加了 t
Dialogue: 0,0:13:46.32,0:13:48.08,BottomCenter,,0,0,0,,实际上我们已经拥有了所有的
Dialogue: 0,0:13:48.08,0:13:49.84,BottomCenter,,0,0,0,,s 的元素和 t 的所有元素
Dialogue: 0,0:13:49.84,0:13:51.03,BottomCenter,,0,0,0,,然后 t 的所有元素
Dialogue: 0,0:13:51.03,0:13:54.48,BottomCenter,,0,0,0,,再次嗯
Dialogue: 0,0:13:54.48,0:13:57.67,BottomCenter,,0,0,0,,python 设计师决定就像哦
Dialogue: 0,0:13:57.67,0:14:00.24,BottomCenter,,0,0,0,,如果你可以将 t 和 t 加在一起那就是
Dialogue: 0,0:14:00.24,0:14:03.44,BottomCenter,,0,0,0,,有点像将 t 乘以 2。
Dialogue: 0,0:14:03.44,0:14:06.15,BottomCenter,,0,0,0,,所以事实证明如果你有一个清单
Dialogue: 0,0:14:06.15,0:14:08.55,BottomCenter,,0,0,0,,然后将其乘以一个整数
Dialogue: 0,0:14:08.55,0:14:11.67,BottomCenter,,0,0,0,,你最终得到的元素
Dialogue: 0,0:14:11.67,0:14:15.60,BottomCenter,,0,0,0,,其中多次列出
Dialogue: 0,0:14:15.60,0:14:18.32,BottomCenter,,0,0,0,,你需要了解这一点吗
Dialogue: 0,0:14:18.32,0:14:18.87,BottomCenter,,0,0,0,,一
Dialogue: 0,0:14:18.87,0:14:20.63,BottomCenter,,0,0,0,,我想我们已经教给你了所以现在你
Dialogue: 0,0:14:20.63,0:14:22.55,BottomCenter,,0,0,0,,知道它，你也可能知道它
Dialogue: 0,0:14:22.55,0:14:25.84,BottomCenter,,0,0,0,,嗯，它确实有时会出现
Dialogue: 0,0:14:25.84,0:14:29.27,BottomCenter,,0,0,0,,在实际程序中
Dialogue: 0,0:14:29.27,0:14:33.12,BottomCenter,,0,0,0,,嗯，是的
Dialogue: 0,0:14:33.12,0:14:36.15,BottomCenter,,0,0,0,,我并不经常觉得这有点冒犯
Dialogue: 0,0:14:36.15,0:14:38.00,BottomCenter,,0,0,0,,作为受过应用培训的人
Dialogue: 0,0:14:38.00,0:14:40.15,BottomCenter,,0,0,0,,数学，因为当我看到它时
Dialogue: 0,0:14:40.15,0:14:42.55,BottomCenter,,0,0,0,,t 或 si 将其视为向量并且
Dialogue: 0,0:14:42.55,0:14:44.39,BottomCenter,,0,0,0,,当我前面看到两次时
Dialogue: 0,0:14:44.39,0:14:46.24,BottomCenter,,0,0,0,,应该是向量乘法
Dialogue: 0,0:14:46.24,0:14:48.39,BottomCenter,,0,0,0,,以 matlab 为例
Dialogue: 0,0:14:48.39,0:14:51.51,BottomCenter,,0,0,0,,这是一个数字
Dialogue: 0,0:14:51.51,0:14:53.36,BottomCenter,,0,0,0,,编程环境两次
Dialogue: 0,0:14:53.36,0:14:54.55,BottomCenter,,0,0,0,,向量或列表是
Dialogue: 0,0:14:54.55,0:14:56.08,BottomCenter,,0,0,0,,你确实做到了 p 点明智
Dialogue: 0,0:14:56.08,0:14:58.00,BottomCenter,,0,0,0,,乘法所以我认为这是一个
Dialogue: 0,0:14:58.00,0:14:59.27,BottomCenter,,0,0,0,,有点奇怪
Dialogue: 0,0:14:59.27,0:15:02.15,BottomCenter,,0,0,0,,但让我提一件事
Dialogue: 0,0:15:02.15,0:15:03.91,BottomCenter,,0,0,0,,约翰说的是加号运算符和
Dialogue: 0,0:15:03.91,0:15:04.55,BottomCenter,,0,0,0,,时间点
Dialogue: 0,0:15:04.55,0:15:06.72,BottomCenter,,0,0,0,,已超载，您现在已经看到了三个
Dialogue: 0,0:15:06.72,0:15:09.27,BottomCenter,,0,0,0,,可以进行数值运算
Dialogue: 0,0:15:09.27,0:15:11.12,BottomCenter,,0,0,0,,添加整数或浮点值
Dialogue: 0,0:15:11.12,0:15:12.96,BottomCenter,,0,0,0,,可以进行字符串连接的字符串
Dialogue: 0,0:15:12.96,0:15:14.87,BottomCenter,,0,0,0,,使用加法运算符
Dialogue: 0,0:15:14.87,0:15:18.15,BottomCenter,,0,0,0,,现在也在名单上，这很奇怪
Dialogue: 0,0:15:18.15,0:15:18.55,BottomCenter,,0,0,0,,事物
Dialogue: 0,0:15:18.55,0:15:20.96,BottomCenter,,0,0,0,,关于 python 不是强类型
Dialogue: 0,0:15:20.96,0:15:21.91,BottomCenter,,0,0,0,,语言是
Dialogue: 0,0:15:21.91,0:15:23.67,BottomCenter,,0,0,0,,如果你只看到一行代码你就知道
Dialogue: 0,0:15:23.67,0:15:25.75,BottomCenter,,0,0,0,,这说明你知道 s 加 t
Dialogue: 0,0:15:25.75,0:15:27.27,BottomCenter,,0,0,0,,你可能不知道你是谁
Dialogue: 0,0:15:27.27,0:15:29.20,BottomCenter,,0,0,0,,不知道加的是不是
Dialogue: 0,0:15:29.20,0:15:32.39,BottomCenter,,0,0,0,,数字呃版本字符串连接
Dialogue: 0,0:15:32.39,0:15:34.08,BottomCenter,,0,0,0,,或列表串联，这样就可以了
Dialogue: 0,0:15:34.08,0:15:35.67,BottomCenter,,0,0,0,,其中一个奇怪的小方面
Dialogue: 0,0:15:35.67,0:15:37.20,BottomCenter,,0,0,0,,非类型语言
Dialogue: 0,0:15:37.20,0:15:40.24,BottomCenter,,0,0,0,,或者明确输入语言所以是的
Dialogue: 0,0:15:40.24,0:15:41.44,BottomCenter,,0,0,0,,好问题所以
Dialogue: 0,0:15:41.44,0:15:43.36,BottomCenter,,0,0,0,,这个问题有两个部分：一
Dialogue: 0,0:15:43.36,0:15:44.72,BottomCenter,,0,0,0,,关于列表的结构
Dialogue: 0,0:15:44.72,0:15:46.63,BottomCenter,,0,0,0,,理解及其工作原理
Dialogue: 0,0:15:46.63,0:15:48.63,BottomCenter,,0,0,0,,其中一个是关于a的含义
Dialogue: 0,0:15:48.63,0:15:50.55,BottomCenter,,0,0,0,,字面意义，并且某些东西需要成为
Dialogue: 0,0:15:50.55,0:15:51.91,BottomCenter,,0,0,0,,文字是a的一部分
Dialogue: 0,0:15:51.91,0:15:55.27,BottomCenter,,0,0,0,,列表理解术语字面量
Dialogue: 0,0:15:55.27,0:15:58.39,BottomCenter,,0,0,0,,实际上只是描述嗯
Dialogue: 0,0:15:58.39,0:16:01.51,BottomCenter,,0,0,0,,您构建的情况
Dialogue: 0,0:16:01.51,0:16:04.00,BottomCenter,,0,0,0,,只需写出它的东西
Dialogue: 0,0:16:04.00,0:16:04.79,BottomCenter,,0,0,0,,内容
Dialogue: 0,0:16:04.79,0:16:07.27,BottomCenter,,0,0,0,,在代码中而不是构建它
Dialogue: 0,0:16:07.27,0:16:08.63,BottomCenter,,0,0,0,,出去
Dialogue: 0,0:16:08.63,0:16:10.48,BottomCenter,,0,0,0,,以编程方式通过迭代或
Dialogue: 0,0:16:10.48,0:16:12.24,BottomCenter,,0,0,0,,类似这样的事情
Dialogue: 0,0:16:12.24,0:16:15.27,BottomCenter,,0,0,0,,字符串文字是当你构建一个
Dialogue: 0,0:16:15.27,0:16:15.84,BottomCenter,,0,0,0,,细绳
Dialogue: 0,0:16:15.84,0:16:18.08,BottomCenter,,0,0,0,,只需写下报价，然后
Dialogue: 0,0:16:18.08,0:16:19.84,BottomCenter,,0,0,0,,字符串的内容然后结束
Dialogue: 0,0:16:19.84,0:16:20.48,BottomCenter,,0,0,0,,引用
Dialogue: 0,0:16:20.48,0:16:23.03,BottomCenter,,0,0,0,,列表文字是当你构建一个
Dialogue: 0,0:16:23.03,0:16:23.67,BottomCenter,,0,0,0,,列表
Dialogue: 0,0:16:23.67,0:16:26.48,BottomCenter,,0,0,0,,只需在里面输入它的元素
Dialogue: 0,0:16:26.48,0:16:28.79,BottomCenter,,0,0,0,,方括号的意思就是这个词
Dialogue: 0,0:16:28.79,0:16:31.67,BottomCenter,,0,0,0,,字面意思，呃还有其他的意思
Dialogue: 0,0:16:31.67,0:16:33.20,BottomCenter,,0,0,0,,构建相同字符串的方法
Dialogue: 0,0:16:33.20,0:16:34.15,BottomCenter,,0,0,0,,就像我可以的那样
Dialogue: 0,0:16:34.15,0:16:37.27,BottomCenter,,0,0,0,,构建它的呃他和
Dialogue: 0,0:16:37.27,0:16:40.55,BottomCenter,,0,0,0,,llo，这不是通过构建的
Dialogue: 0,0:16:40.55,0:16:42.48,BottomCenter,,0,0,0,,相反，这是一个字符串文字
Dialogue: 0,0:16:42.48,0:16:43.75,BottomCenter,,0,0,0,,通过化合物构造
Dialogue: 0,0:16:43.75,0:16:45.36,BottomCenter,,0,0,0,,有两个小字符串的表达式
Dialogue: 0,0:16:45.36,0:16:46.32,BottomCenter,,0,0,0,,其中的文字
Dialogue: 0,0:16:46.32,0:16:48.87,BottomCenter,,0,0,0,,和一个加法运算符，同样
Dialogue: 0,0:16:48.87,0:16:50.08,BottomCenter,,0,0,0,,你也可以做同样的事情
Dialogue: 0,0:16:50.08,0:16:55.51,BottomCenter,,0,0,0,,嗯在这里所以嗯列表理解
Dialogue: 0,0:16:55.51,0:16:59.84,BottomCenter,,0,0,0,,是一种方式
Dialogue: 0,0:16:59.84,0:17:03.03,BottomCenter,,0,0,0,,从元素构建一个新列表
Dialogue: 0,0:17:03.03,0:17:04.64,BottomCenter,,0,0,0,,其他一些容器的
Dialogue: 0,0:17:04.64,0:17:07.92,BottomCenter,,0,0,0,,所以我可以建立一个呃列表
Dialogue: 0,0:17:07.92,0:17:12.24,BottomCenter,,0,0,0,,x 加一，我需要想出
Dialogue: 0,0:17:12.24,0:17:14.40,BottomCenter,,0,0,0,,我的价值观是什么
Dialogue: 0,0:17:14.40,0:17:16.07,BottomCenter,,0,0,0,,添加 1 到
Dialogue: 0,0:17:16.07,0:17:18.48,BottomCenter,,0,0,0,,然后 x 给你每个的名字
Dialogue: 0,0:17:18.48,0:17:19.35,BottomCenter,,0,0,0,,元素
Dialogue: 0,0:17:19.35,0:17:21.83,BottomCenter,,0,0,0,,结果是 x 加一
Dialogue: 0,0:17:21.83,0:17:22.40,BottomCenter,,0,0,0,,元素
Dialogue: 0,0:17:22.40,0:17:24.72,BottomCenter,,0,0,0,,好吧，我可以在这里写
Dialogue: 0,0:17:24.72,0:17:25.59,BottomCenter,,0,0,0,,任何表达
Dialogue: 0,0:17:25.59,0:17:27.11,BottomCenter,,0,0,0,,所以它不一定是字面意思
Dialogue: 0,0:17:27.11,0:17:28.88,BottomCenter,,0,0,0,,可以是任何东西呃
Dialogue: 0,0:17:28.88,0:17:32.07,BottomCenter,,0,0,0,,但它确实必须有元素所以
Dialogue: 0,0:17:32.07,0:17:35.68,BottomCenter,,0,0,0,,我可以写一个列表文字来做到这一点
Dialogue: 0,0:17:35.68,0:17:38.72,BottomCenter,,0,0,0,,此时我会将 x 绑定到 3
Dialogue: 0,0:17:38.72,0:17:41.35,BottomCenter,,0,0,0,,计算出 x 加 1 为 4，并将其代入
Dialogue: 0,0:17:41.35,0:17:42.64,BottomCenter,,0,0,0,,结果
Dialogue: 0,0:17:42.64,0:17:45.44,BottomCenter,,0,0,0,,或者我可以使用一个名字，如果我已经
Dialogue: 0,0:17:45.44,0:17:48.00,BottomCenter,,0,0,0,,我可以写的名字里有345
Dialogue: 0,0:17:48.00,0:17:51.03,BottomCenter,,0,0,0,,x 加 1（t 和 t 中的 x）
Dialogue: 0,0:17:51.03,0:17:53.03,BottomCenter,,0,0,0,,实际上不是一个字面意思，而是一个名字
Dialogue: 0,0:17:53.03,0:17:54.88,BottomCenter,,0,0,0,,它就像一个变量名引用
Dialogue: 0,0:17:54.88,0:17:57.44,BottomCenter,,0,0,0,,一些已经存在的列表
Dialogue: 0,0:17:57.44,0:18:00.24,BottomCenter,,0,0,0,,所以从这个意义上来说没有任何限制
Dialogue: 0,0:18:00.24,0:18:03.11,BottomCenter,,0,0,0,,你在这里用什么表达方式
Dialogue: 0,0:18:03.11,0:18:05.35,BottomCenter,,0,0,0,,的值有限制
Dialogue: 0,0:18:05.35,0:18:07.03,BottomCenter,,0,0,0,,那个表达是它必须
Dialogue: 0,0:18:07.03,0:18:09.03,BottomCenter,,0,0,0,,是你可以迭代的东西
Dialogue: 0,0:18:09.03,0:18:10.07,BottomCenter,,0,0,0,,所以如果我只是把
Dialogue: 0,0:18:10.07,0:18:13.03,BottomCenter,,0,0,0,,5 在这里我会得到一个错误，因为它是
Dialogue: 0,0:18:13.03,0:18:14.31,BottomCenter,,0,0,0,,将尝试分配
Dialogue: 0,0:18:14.31,0:18:17.27,BottomCenter,,0,0,0,,x 到 5 中的每个元素，但 5 不是 a
Dialogue: 0,0:18:17.27,0:18:19.35,BottomCenter,,0,0,0,,容器没有任何元素
Dialogue: 0,0:18:19.35,0:18:21.92,BottomCenter,,0,0,0,,这就是 int 对象的含义
Dialogue: 0,0:18:21.92,0:18:22.96,BottomCenter,,0,0,0,,不可迭代
Dialogue: 0,0:18:22.96,0:18:25.51,BottomCenter,,0,0,0,,int 对象指的是 5 和
Dialogue: 0,0:18:25.51,0:18:27.11,BottomCenter,,0,0,0,,这不是你能做到的
Dialogue: 0,0:18:27.11,0:18:30.55,BottomCenter,,0,0,0,,具有该表达式的值
Dialogue: 0,0:18:30.55,0:18:34.88,BottomCenter,,0,0,0,,嗯，是的，这确实是唯一的
Dialogue: 0,0:18:34.88,0:18:38.00,BottomCenter,,0,0,0,,呃限制你可以放任何
Dialogue: 0,0:18:38.00,0:18:39.59,BottomCenter,,0,0,0,,你想要的表达这里没有
Dialogue: 0,0:18:39.59,0:18:41.11,BottomCenter,,0,0,0,,对此的限制
Dialogue: 0,0:18:41.11,0:18:43.59,BottomCenter,,0,0,0,,在这里你只需输入名字，所以这不是
Dialogue: 0,0:18:43.59,0:18:44.96,BottomCenter,,0,0,0,,放置较大的地方
Dialogue: 0,0:18:44.96,0:18:45.92,BottomCenter,,0,0,0,,表达式
Dialogue: 0,0:18:45.92,0:18:48.16,BottomCenter,,0,0,0,,但它只是说这是
Dialogue: 0,0:18:48.16,0:18:50.07,BottomCenter,,0,0,0,,我将用来指代的名字
Dialogue: 0,0:18:50.07,0:18:52.07,BottomCenter,,0,0,0,,此处和此处的元素
Dialogue: 0,0:18:52.07,0:18:53.83,BottomCenter,,0,0,0,,你可以输入任何你想要的表达方式
Dialogue: 0,0:18:53.83,0:18:56.16,BottomCenter,,0,0,0,,只要它评估为某事
Dialogue: 0,0:18:56.16,0:18:58.64,BottomCenter,,0,0,0,,你可以迭代
Dialogue: 0,0:18:58.64,0:19:00.96,BottomCenter,,0,0,0,,让我在这里声明显而易见的事实
Dialogue: 0,0:19:00.96,0:19:02.31,BottomCenter,,0,0,0,,意味着这只是一个捷径
Dialogue: 0,0:19:02.31,0:19:04.55,BottomCenter,,0,0,0,,你可以明确地写出你的
Dialogue: 0,0:19:04.55,0:19:06.55,BottomCenter,,0,0,0,,自己的for循环来做到这一点
Dialogue: 0,0:19:06.55,0:19:08.40,BottomCenter,,0,0,0,,是的，你可以说四幕
Dialogue: 0,0:19:08.40,0:19:10.64,BottomCenter,,0,0,0,,该列表创建一个新列表，其中每个
Dialogue: 0,0:19:10.64,0:19:12.24,BottomCenter,,0,0,0,,该列表的元素是
Dialogue: 0,0:19:12.24,0:19:14.31,BottomCenter,,0,0,0,,加上前一个元素
Dialogue: 0,0:19:14.31,0:19:15.83,BottomCenter,,0,0,0,,列出所以这只是简写
Dialogue: 0,0:19:15.83,0:19:17.35,BottomCenter,,0,0,0,,因为这是一件很常见的事情
Dialogue: 0,0:19:17.35,0:19:18.72,BottomCenter,,0,0,0,,我们在名单上做但是
Dialogue: 0,0:19:18.72,0:19:19.83,BottomCenter,,0,0,0,,你知道你可以写出来
Dialogue: 0,0:19:19.83,0:19:21.83,BottomCenter,,0,0,0,,for 循环全部由你自己完成
Dialogue: 0,0:19:21.83,0:19:23.11,BottomCenter,,0,0,0,,python创建者端
Dialogue: 0,0:19:23.11,0:19:24.88,BottomCenter,,0,0,0,,这是很常见的事情，让我们来做吧
Dialogue: 0,0:19:24.88,0:19:26.55,BottomCenter,,0,0,0,,有点容易
Dialogue: 0,0:19:26.55,0:19:30.24,BottomCenter,,0,0,0,,是的，这完全正确，也是
Dialogue: 0,0:19:30.24,0:19:32.24,BottomCenter,,0,0,0,,对于预防错误非常有用，因为
Dialogue: 0,0:19:32.24,0:19:32.88,BottomCenter,,0,0,0,,没有
Dialogue: 0,0:19:32.88,0:19:35.44,BottomCenter,,0,0,0,,就像操纵一些列表
Dialogue: 0,0:19:35.44,0:19:37.44,BottomCenter,,0,0,0,,可能已经存在或者你刚刚的任何东西
Dialogue: 0,0:19:37.44,0:19:38.24,BottomCenter,,0,0,0,,就像说哦
Dialogue: 0,0:19:38.24,0:19:41.03,BottomCenter,,0,0,0,,这是存在的东西然后
Dialogue: 0,0:19:41.03,0:19:42.64,BottomCenter,,0,0,0,,一次完成，你就可以建造一些东西
Dialogue: 0,0:19:42.64,0:19:44.88,BottomCenter,,0,0,0,,新的
Dialogue: 0,0:19:46.00,0:19:47.44,BottomCenter,,0,0,0,,是的，所以问题是什么是
Dialogue: 0,0:19:47.44,0:19:50.31,BottomCenter,,0,0,0,,容器是什么意思
Dialogue: 0,0:19:50.31,0:19:52.64,BottomCenter,,0,0,0,,还有其他容器吗
Dialogue: 0,0:19:52.64,0:19:54.79,BottomCenter,,0,0,0,,所以我们试着给你一些例子
Dialogue: 0,0:19:54.79,0:19:57.20,BottomCenter,,0,0,0,,就像范围也是一个容器一样
Dialogue: 0,0:19:57.20,0:19:58.07,BottomCenter,,0,0,0,,不是一个列表
Dialogue: 0,0:19:58.07,0:20:00.00,BottomCenter,,0,0,0,,但里面有很多元素
Dialogue: 0,0:20:00.00,0:20:01.68,BottomCenter,,0,0,0,,你可以迭代这些元素
Dialogue: 0,0:20:01.68,0:20:03.35,BottomCenter,,0,0,0,,你可以判断某个元素是否
Dialogue: 0,0:20:03.35,0:20:04.96,BottomCenter,,0,0,0,,在那里所以
Dialogue: 0,0:20:04.96,0:20:08.07,BottomCenter,,0,0,0,,嗯，如果我有 r，其范围是
Dialogue: 0,0:20:08.07,0:20:09.75,BottomCenter,,0,0,0,,三到六
Dialogue: 0,0:20:09.75,0:20:12.79,BottomCenter,,0,0,0,,然后我有 s ，它是三
Dialogue: 0,0:20:12.79,0:20:15.68,BottomCenter,,0,0,0,,四和五
Dialogue: 0,0:20:15.92,0:20:18.31,BottomCenter,,0,0,0,,对于其余的代码实际上
Dialogue: 0,0:20:18.31,0:20:19.68,BottomCenter,,0,0,0,,有点不重要
Dialogue: 0,0:20:19.68,0:20:22.31,BottomCenter,,0,0,0,,这是一个范围，这是一个列表
Dialogue: 0,0:20:22.31,0:20:24.40,BottomCenter,,0,0,0,,不管怎样我都写同样的东西
Dialogue: 0,0:20:24.40,0:20:28.00,BottomCenter,,0,0,0,,说 4 和 r 就像说 4 和 s 一样
Dialogue: 0,0:20:28.00,0:20:32.00,BottomCenter,,0,0,0,,我可以得到索引1处的元素。
Dialogue: 0,0:20:32.00,0:20:34.55,BottomCenter,,0,0,0,,出现在 r 的索引一处的元素
Dialogue: 0,0:20:34.55,0:20:36.24,BottomCenter,,0,0,0,,就像我可以获得索引的元素一样
Dialogue: 0,0:20:36.24,0:20:37.44,BottomCenter,,0,0,0,,一个在 s
Dialogue: 0,0:20:37.44,0:20:39.92,BottomCenter,,0,0,0,,所以当我们在中使用术语“容器”时
Dialogue: 0,0:20:39.92,0:20:41.51,BottomCenter,,0,0,0,,我们正在描述的这门课程
Dialogue: 0,0:20:41.51,0:20:44.55,BottomCenter,,0,0,0,,可以操纵的东西
Dialogue: 0,0:20:44.55,0:20:47.59,BottomCenter,,0,0,0,,以这种方式使用项目选择
Dialogue: 0,0:20:47.59,0:20:49.59,BottomCenter,,0,0,0,,this in 运算符来判断是否
Dialogue: 0,0:20:49.59,0:20:51.35,BottomCenter,,0,0,0,,里面有东西
Dialogue: 0,0:20:51.35,0:20:53.20,BottomCenter,,0,0,0,,实际上是否并不重要
Dialogue: 0,0:20:53.20,0:20:55.44,BottomCenter,,0,0,0,,某物是列表或范围
Dialogue: 0,0:20:55.44,0:20:56.79,BottomCenter,,0,0,0,,或者很快我们就会讨论
Dialogue: 0,0:20:56.79,0:20:58.88,BottomCenter,,0,0,0,,还有一个叫做元组的东西
Dialogue: 0,0:20:58.88,0:21:00.48,BottomCenter,,0,0,0,,我们星期三会讨论一些事情
Dialogue: 0,0:21:00.48,0:21:02.72,BottomCenter,,0,0,0,,调用字典和所有这些
Dialogue: 0,0:21:02.72,0:21:04.72,BottomCenter,,0,0,0,,只是遏制的方式
Dialogue: 0,0:21:04.72,0:21:06.40,BottomCenter,,0,0,0,,价值观如此
Dialogue: 0,0:21:06.40,0:21:08.72,BottomCenter,,0,0,0,,我想这就是简短的答案
Dialogue: 0,0:21:08.72,0:21:10.07,BottomCenter,,0,0,0,,容器不像
Dialogue: 0,0:21:10.07,0:21:13.51,BottomCenter,,0,0,0,,那是某事
Dialogue: 0,0:21:13.68,0:21:16.72,BottomCenter,,0,0,0,,一个特定的类型，而是它
Dialogue: 0,0:21:16.72,0:21:17.83,BottomCenter,,0,0,0,,描述
Dialogue: 0,0:21:17.83,0:21:20.79,BottomCenter,,0,0,0,,所有可用于 for 的类型
Dialogue: 0,0:21:20.79,0:21:21.27,BottomCenter,,0,0,0,,循环
Dialogue: 0,0:21:21.27,0:21:24.96,BottomCenter,,0,0,0,,与元素选择一起使用
Dialogue: 0,0:21:24.96,0:21:28.16,BottomCenter,,0,0,0,,在Python中，技术术语是
Dialogue: 0,0:21:28.16,0:21:29.03,BottomCenter,,0,0,0,,这些
Dialogue: 0,0:21:29.03,0:21:30.88,BottomCenter,,0,0,0,,呃略有不同，具体取决于
Dialogue: 0,0:21:30.88,0:21:32.16,BottomCenter,,0,0,0,,到底是哪一个
Dialogue: 0,0:21:32.16,0:21:35.20,BottomCenter,,0,0,0,,您可以使用嗯但最常用的操作
Dialogue: 0,0:21:35.20,0:21:35.92,BottomCenter,,0,0,0,,常用术语
Dialogue: 0,0:21:35.92,0:21:37.68,BottomCenter,,0,0,0,,这些是可迭代的值
Dialogue: 0,0:21:37.68,0:21:39.35,BottomCenter,,0,0,0,,意思是你可以呃
Dialogue: 0,0:21:39.35,0:21:42.24,BottomCenter,,0,0,0,,使用四种状态迭代它们
Dialogue: 0,0:21:42.24,0:21:43.44,BottomCenter,,0,0,0,,你知道我只是想
Dialogue: 0,0:21:43.44,0:21:44.31,BottomCenter,,0,0,0,,再次强调
Dialogue: 0,0:21:44.31,0:21:46.31,BottomCenter,,0,0,0,,抽象的力量在这里事实
Dialogue: 0,0:21:46.31,0:21:47.92,BottomCenter,,0,0,0,,这些东西都是在后面实现的
Dialogue: 0,0:21:47.92,0:21:49.03,BottomCenter,,0,0,0,,场景不同
Dialogue: 0,0:21:49.03,0:21:50.72,BottomCenter,,0,0,0,,从你的角度来看，你并不真的
Dialogue: 0,0:21:50.72,0:21:52.96,BottomCenter,,0,0,0,,关心嗯，现在你在这里做
Dialogue: 0,0:21:52.96,0:21:54.72,BottomCenter,,0,0,0,,由于计算和其他原因
Dialogue: 0,0:21:54.72,0:21:56.31,BottomCenter,,0,0,0,,但从程序的角度来看
Dialogue: 0,0:21:56.31,0:21:57.27,BottomCenter,,0,0,0,,看法
Dialogue: 0,0:21:57.27,0:21:59.11,BottomCenter,,0,0,0,,你索引你切片你做一切
Dialogue: 0,0:21:59.11,0:22:01.11,BottomCenter,,0,0,0,,完全一样，太好了，太好了
Dialogue: 0,0:22:01.11,0:22:02.40,BottomCenter,,0,0,0,,你不必有不同的
Dialogue: 0,0:22:02.40,0:22:03.83,BottomCenter,,0,0,0,,一切的语法
Dialogue: 0,0:22:03.83,0:22:05.68,BottomCenter,,0,0,0,,拖累
Dialogue: 0,0:22:05.68,0:22:07.11,BottomCenter,,0,0,0,,哦，有一个后续问题
Dialogue: 0,0:22:07.11,0:22:09.68,BottomCenter,,0,0,0,,这是
Dialogue: 0,0:22:09.68,0:22:13.11,BottomCenter,,0,0,0,,呃 是一个字符串 一个容器 是的 字符串
Dialogue: 0,0:22:13.11,0:22:15.20,BottomCenter,,0,0,0,,字符串很像列表，但它们不一样
Dialogue: 0,0:22:15.20,0:22:17.44,BottomCenter,,0,0,0,,行为完全相同
Dialogue: 0,0:22:17.44,0:22:19.11,BottomCenter,,0,0,0,,但最好的思考方式是
Dialogue: 0,0:22:19.11,0:22:20.64,BottomCenter,,0,0,0,,它是字母的容器
Dialogue: 0,0:22:20.64,0:22:22.96,BottomCenter,,0,0,0,,字符串中的那些
Dialogue: 0,0:22:22.96,0:22:24.96,BottomCenter,,0,0,0,,字符串的奇怪之处在于
Dialogue: 0,0:22:24.96,0:22:26.48,BottomCenter,,0,0,0,,当你有一个字符串时
Dialogue: 0,0:22:26.48,0:22:29.03,BottomCenter,,0,0,0,,你会从中得到一个元素
Dialogue: 0,0:22:29.03,0:22:30.16,BottomCenter,,0,0,0,,回弦
Dialogue: 0,0:22:30.16,0:22:32.16,BottomCenter,,0,0,0,,你可以从中得到一个元素
Dialogue: 0,0:22:32.16,0:22:33.75,BottomCenter,,0,0,0,,你会从中得到一个元素
Dialogue: 0,0:22:33.75,0:22:35.35,BottomCenter,,0,0,0,,类似的列表通常不起作用
Dialogue: 0,0:22:35.35,0:22:36.88,BottomCenter,,0,0,0,,这样字符串就有点了
Dialogue: 0,0:22:36.88,0:22:38.31,BottomCenter,,0,0,0,,与其他一切不同，但是是的
Dialogue: 0,0:22:38.31,0:22:40.79,BottomCenter,,0,0,0,,还有一个容器
Dialogue: 0,0:22:40.79,0:22:42.07,BottomCenter,,0,0,0,,是的，我想我明白这个问题
Dialogue: 0,0:22:42.07,0:22:44.16,BottomCenter,,0,0,0,,所以让我尝试重新表述一下
Dialogue: 0,0:22:44.16,0:22:46.55,BottomCenter,,0,0,0,,所以你问我可以计算 n
Dialogue: 0,0:22:46.55,0:22:47.44,BottomCenter,,0,0,0,,阶乘
Dialogue: 0,0:22:47.44,0:22:50.16,BottomCenter,,0,0,0,,n 乘以 n 减一乘以 n 减二
Dialogue: 0,0:22:50.16,0:22:51.75,BottomCenter,,0,0,0,,一直到我可以写的
Dialogue: 0,0:22:51.75,0:22:52.96,BottomCenter,,0,0,0,,表达出来
Dialogue: 0,0:22:52.96,0:22:56.24,BottomCenter,,0,0,0,,或者我可以写成 1 乘以 2 乘以 3
Dialogue: 0,0:22:56.24,0:22:58.24,BottomCenter,,0,0,0,,最多 n 个，而你问是否有一个
Dialogue: 0,0:22:58.24,0:23:00.72,BottomCenter,,0,0,0,,比其他优先
Dialogue: 0,0:23:00.72,0:23:03.68,BottomCenter,,0,0,0,,嗯，我得想清楚我所做的一切
Dialogue: 0,0:23:03.68,0:23:05.11,BottomCenter,,0,0,0,,不明白为什么
Dialogue: 0,0:23:05.11,0:23:06.40,BottomCenter,,0,0,0,,首先让我们同意这个答案
Dialogue: 0,0:23:06.40,0:23:08.00,BottomCenter,,0,0,0,,与其中的顺序完全相同
Dialogue: 0,0:23:08.00,0:23:09.20,BottomCenter,,0,0,0,,你做乘法
Dialogue: 0,0:23:09.20,0:23:11.20,BottomCenter,,0,0,0,,或者如果我们正在做其他事情
Dialogue: 0,0:23:11.20,0:23:13.20,BottomCenter,,0,0,0,,添加绝对不重要
Dialogue: 0,0:23:13.20,0:23:15.51,BottomCenter,,0,0,0,,所以在数学上没有
Dialogue: 0,0:23:15.51,0:23:17.35,BottomCenter,,0,0,0,,我不相信差异计算
Dialogue: 0,0:23:17.35,0:23:19.27,BottomCenter,,0,0,0,,有区别
Dialogue: 0,0:23:19.27,0:23:21.44,BottomCenter,,0,0,0,,嗯，约翰，你看到两者之间有什么区别吗？
Dialogue: 0,0:23:21.44,0:23:24.31,BottomCenter,,0,0,0,,你去的顺序
Dialogue: 0,0:23:24.31,0:23:27.68,BottomCenter,,0,0,0,,嗯，阶乘确实是这样
Dialogue: 0,0:23:27.68,0:23:28.88,BottomCenter,,0,0,0,,没关系
Dialogue: 0,0:23:28.88,0:23:32.31,BottomCenter,,0,0,0,,你按什么顺序去是的但是
Dialogue: 0,0:23:32.31,0:23:35.51,BottomCenter,,0,0,0,,对于其他问题，它可以如此并且在
Dialogue: 0,0:23:35.51,0:23:36.07,BottomCenter,,0,0,0,,特别的
Dialogue: 0,0:23:36.07,0:23:38.55,BottomCenter,,0,0,0,,这个作业问题叫“乒乓球”
Dialogue: 0,0:23:38.55,0:23:40.00,BottomCenter,,0,0,0,,很容易知道接下来会发生什么
Dialogue: 0,0:23:40.00,0:23:42.24,BottomCenter,,0,0,0,,数字是如果你知道你在哪里
Dialogue: 0,0:23:42.24,0:23:44.16,BottomCenter,,0,0,0,,很难像以前那样知道什么
Dialogue: 0,0:23:44.16,0:23:45.68,BottomCenter,,0,0,0,,数量是
Dialogue: 0,0:23:45.68,0:23:47.75,BottomCenter,,0,0,0,,这更复杂，而
Dialogue: 0,0:23:47.75,0:23:50.00,BottomCenter,,0,0,0,,你知道阶乘是没有
Dialogue: 0,0:23:50.00,0:23:52.96,BottomCenter,,0,0,0,,比倒数更难但让
Dialogue: 0,0:23:52.96,0:23:54.07,BottomCenter,,0,0,0,,我只是告诉你什么
Dialogue: 0,0:23:54.07,0:23:55.75,BottomCenter,,0,0,0,,如果你是阶乘看起来像
Dialogue: 0,0:23:55.75,0:23:58.55,BottomCenter,,0,0,0,,计数并使用递归
Dialogue: 0,0:23:58.55,0:24:02.16,BottomCenter,,0,0,0,,然后你就知道怎么做了
Dialogue: 0,0:24:02.16,0:24:04.72,BottomCenter,,0,0,0,,所以首先你所在的版本
Dialogue: 0,0:24:04.72,0:24:07.27,BottomCenter,,0,0,0,,倒数
Dialogue: 0,0:24:15.35,0:24:19.59,BottomCenter,,0,0,0,,有这个很好的属性，那就是
Dialogue: 0,0:24:19.59,0:24:21.68,BottomCenter,,0,0,0,,你知道什么时候完成
Dialogue: 0,0:24:21.68,0:24:24.79,BottomCenter,,0,0,0,,只是通过这个特殊值零时
Dialogue: 0,0:24:24.79,0:24:26.00,BottomCenter,,0,0,0,,你正在数数
Dialogue: 0,0:24:26.00,0:24:28.31,BottomCenter,,0,0,0,,这不是真的，你必须知道
Dialogue: 0,0:24:28.31,0:24:29.68,BottomCenter,,0,0,0,,你在哪里
Dialogue: 0,0:24:29.68,0:24:33.51,BottomCenter,,0,0,0,,你必须知道你是否完成了
Dialogue: 0,0:24:33.51,0:24:38.48,BottomCenter,,0,0,0,,因此，出于这个原因，如果您正在计算
Dialogue: 0,0:24:39.35,0:24:42.40,BottomCenter,,0,0,0,,阶乘式的工作方式
Dialogue: 0,0:24:42.40,0:24:46.07,BottomCenter,,0,0,0,,那么你必须知道你在哪里
Dialogue: 0,0:24:46.07,0:24:48.79,BottomCenter,,0,0,0,,所以你必须知道你要去
Dialogue: 0,0:24:48.79,0:24:50.79,BottomCenter,,0,0,0,,我们正在计算 n 的阶乘
Dialogue: 0,0:24:50.79,0:24:54.16,BottomCenter,,0,0,0,,现在你在 k
Dialogue: 0,0:24:54.16,0:24:57.51,BottomCenter,,0,0,0,,如果 n 恰好等于 k
Dialogue: 0,0:24:57.51,0:24:59.11,BottomCenter,,0,0,0,,好吧，那么你已经到达终点了
Dialogue: 0,0:24:59.11,0:25:00.72,BottomCenter,,0,0,0,,是这样
Dialogue: 0,0:25:00.72,0:25:03.68,BottomCenter,,0,0,0,,在这种情况下你可以返回但是
Dialogue: 0,0:25:03.68,0:25:04.64,BottomCenter,,0,0,0,,否则
Dialogue: 0,0:25:04.64,0:25:07.83,BottomCenter,,0,0,0,,你会想好好回来
Dialogue: 0,0:25:07.83,0:25:09.92,BottomCenter,,0,0,0,,也许我们会做你想做的事
Dialogue: 0,0:25:09.92,0:25:12.96,BottomCenter,,0,0,0,,返回调用结果的k倍
Dialogue: 0,0:25:12.96,0:25:14.07,BottomCenter,,0,0,0,,事实助手
Dialogue: 0,0:25:14.07,0:25:17.27,BottomCenter,,0,0,0,,n 和 k 加 1。
Dialogue: 0,0:25:17.27,0:25:20.64,BottomCenter,,0,0,0,,所以现在我们用 k 来计数
Dialogue: 0,0:25:20.64,0:25:22.55,BottomCenter,,0,0,0,,但这有错误的签名
Dialogue: 0,0:25:22.55,0:25:24.40,BottomCenter,,0,0,0,,说呃
Dialogue: 0,0:25:24.40,0:25:27.75,BottomCenter,,0,0,0,,计算从 k 开始的 n 的阶乘
Dialogue: 0,0:25:27.75,0:25:30.96,BottomCenter,,0,0,0,,那么这实际上是做什么的
Dialogue: 0,0:25:30.96,0:25:32.64,BottomCenter,,0,0,0,,计算
Dialogue: 0,0:25:32.64,0:25:36.88,BottomCenter,,0,0,0,,k 乘以 k 加 1
Dialogue: 0,0:25:37.20,0:25:40.55,BottomCenter,,0,0,0,,乘以 k 加 2
Dialogue: 0,0:25:40.55,0:25:43.27,BottomCenter,,0,0,0,,一直到n 好吧我应该有
Dialogue: 0,0:25:43.27,0:25:44.79,BottomCenter,,0,0,0,,在第一种情况下称之为 n
Dialogue: 0,0:25:44.79,0:25:46.48,BottomCenter,,0,0,0,,这并不重要，因为 k 或 n 他们是
Dialogue: 0,0:25:46.48,0:25:47.92,BottomCenter,,0,0,0,,同样如此
Dialogue: 0,0:25:47.92,0:25:50.00,BottomCenter,,0,0,0,,嗯，如果这就是它的作用那么
Dialogue: 0,0:25:50.00,0:25:51.59,BottomCenter,,0,0,0,,阶乘的定义
Dialogue: 0,0:25:51.59,0:25:54.64,BottomCenter,,0,0,0,,实际上已经不再是这样了
Dialogue: 0,0:25:54.64,0:25:58.00,BottomCenter,,0,0,0,,但它的调用返回结果
Dialogue: 0,0:25:58.00,0:26:01.44,BottomCenter,,0,0,0,,从 n 开始调用事实助手
Dialogue: 0,0:26:01.44,0:26:04.16,BottomCenter,,0,0,0,,头号
Dialogue: 0,0:26:09.03,0:26:11.83,BottomCenter,,0,0,0,,然后我们可以计算阶乘 4 是 1
Dialogue: 0,0:26:11.83,0:26:14.16,BottomCenter,,0,0,0,,次 2 次 3 次 4 次。
Dialogue: 0,0:26:14.16,0:26:16.40,BottomCenter,,0,0,0,,所以这是一种方法
Dialogue: 0,0:26:16.40,0:26:18.00,BottomCenter,,0,0,0,,实际上是第三种方式
Dialogue: 0,0:26:18.00,0:26:21.75,BottomCenter,,0,0,0,,边走边计数并积累
Dialogue: 0,0:26:21.75,0:26:23.68,BottomCenter,,0,0,0,,我认为我们应该谈谈
Dialogue: 0,0:26:23.68,0:26:25.44,BottomCenter,,0,0,0,,所以你知道什么是完全的灵活性
Dialogue: 0,0:26:25.44,0:26:26.07,BottomCenter,,0,0,0,,你可以做
Dialogue: 0,0:26:26.07,0:26:31.03,BottomCenter,,0,0,0,,通过递归你可以说嗯
Dialogue: 0,0:26:33.83,0:26:37.59,BottomCenter,,0,0,0,,这会计算出这个结果
Dialogue: 0,0:26:37.59,0:26:42.55,BottomCenter,,0,0,0,,通过将结果累积到
Dialogue: 0,0:26:43.03,0:26:46.16,BottomCenter,,0,0,0,,结果很好
Dialogue: 0,0:26:46.16,0:26:49.51,BottomCenter,,0,0,0,,太多了
Dialogue: 0,0:26:49.51,0:26:51.83,BottomCenter,,0,0,0,,我们在第三个参数中添加结果
Dialogue: 0,0:26:51.83,0:26:53.59,BottomCenter,,0,0,0,,如果我们到达终点
Dialogue: 0,0:26:53.59,0:26:56.64,BottomCenter,,0,0,0,,意味着我们已经到达终点
Dialogue: 0,0:26:56.64,0:26:59.75,BottomCenter,,0,0,0,,然后我们需要把
Dialogue: 0,0:26:59.75,0:27:01.83,BottomCenter,,0,0,0,,将最后的 k 放入结果中，但是
Dialogue: 0,0:27:01.83,0:27:03.83,BottomCenter,,0,0,0,,结果使其他一切都成倍增加
Dialogue: 0,0:27:03.83,0:27:06.55,BottomCenter,,0,0,0,,已经进入其中
Dialogue: 0,0:27:06.55,0:27:10.07,BottomCenter,,0,0,0,,这会做什么
Dialogue: 0,0:27:10.07,0:27:13.20,BottomCenter,,0,0,0,,是在 n 上调用事实助手 k 上的
Dialogue: 0,0:27:13.20,0:27:16.55,BottomCenter,,0,0,0,,加 1 并将 k 乘以
Dialogue: 0,0:27:16.55,0:27:19.51,BottomCenter,,0,0,0,,结果到目前为止
Dialogue: 0,0:27:19.51,0:27:21.35,BottomCenter,,0,0,0,,让我确保这有效，然后我
Dialogue: 0,0:27:21.35,0:27:25.51,BottomCenter,,0,0,0,,会尝试描述刚刚发生的事情
Dialogue: 0,0:27:25.59,0:27:29.20,BottomCenter,,0,0,0,,哦，太好了，这就是说的
Dialogue: 0,0:27:29.20,0:27:31.68,BottomCenter,,0,0,0,,调用阶乘助手我们要
Dialogue: 0,0:27:31.68,0:27:33.11,BottomCenter,,0,0,0,,计算阶乘
Dialogue: 0,0:27:33.11,0:27:35.03,BottomCenter,,0,0,0,,nk 将从 1 开始，然后
Dialogue: 0,0:27:35.03,0:27:36.64,BottomCenter,,0,0,0,,我们会努力向上
Dialogue: 0,0:27:36.64,0:27:40.07,BottomCenter,,0,0,0,,整个阶乘的结果是
Dialogue: 0,0:27:40.07,0:27:42.31,BottomCenter,,0,0,0,,将从 1 开始，因为我们还没有
Dialogue: 0,0:27:42.31,0:27:45.11,BottomCenter,,0,0,0,,还乘以任何东西
Dialogue: 0,0:27:45.11,0:27:49.03,BottomCenter,,0,0,0,,那么如果我们到达终点
Dialogue: 0,0:27:49.03,0:27:51.44,BottomCenter,,0,0,0,,那么我们需要乘以 k 但是
Dialogue: 0,0:27:51.44,0:27:52.72,BottomCenter,,0,0,0,,然后我们就完成了
Dialogue: 0,0:27:52.72,0:27:56.07,BottomCenter,,0,0,0,,嗯否则
Dialogue: 0,0:27:56.07,0:27:58.79,BottomCenter,,0,0,0,,我们要把结果变得更大
Dialogue: 0,0:27:58.79,0:28:00.31,BottomCenter,,0,0,0,,并传递那个更大的东西
Dialogue: 0,0:28:00.31,0:28:03.75,BottomCenter,,0,0,0,,进入递归调用，以便 k 得到
Dialogue: 0,0:28:03.75,0:28:05.20,BottomCenter,,0,0,0,,在那里乘以
Dialogue: 0,0:28:05.20,0:28:06.64,BottomCenter,,0,0,0,,这实际上只是为了跟踪
Dialogue: 0,0:28:06.64,0:28:09.20,BottomCenter,,0,0,0,,我们现在在哪里，这是为了
Dialogue: 0,0:28:09.20,0:28:12.31,BottomCenter,,0,0,0,,嗯知道我们什么时候完成，事实上
Dialogue: 0,0:28:12.31,0:28:13.75,BottomCenter,,0,0,0,,我们可以得到相同的结果
Dialogue: 0,0:28:13.75,0:28:15.75,BottomCenter,,0,0,0,,如果我们真的想变得花哨
Dialogue: 0,0:28:15.75,0:28:17.27,BottomCenter,,0,0,0,,说如果 k 大于
Dialogue: 0,0:28:17.27,0:28:21.51,BottomCenter,,0,0,0,,然后我们一切都成倍增加
Dialogue: 0,0:28:21.92,0:28:25.03,BottomCenter,,0,0,0,,这是计算阶乘的另一种方法
Dialogue: 0,0:28:25.03,0:28:29.20,BottomCenter,,0,0,0,,所以嗯，我猜是乒乓球
Dialogue: 0,0:28:29.20,0:28:30.16,BottomCenter,,0,0,0,,例子
Dialogue: 0,0:28:30.16,0:28:33.51,BottomCenter,,0,0,0,,家庭作业会促使你
Dialogue: 0,0:28:33.51,0:28:35.44,BottomCenter,,0,0,0,,探索其中一些不同的方式
Dialogue: 0,0:28:35.44,0:28:37.11,BottomCenter,,0,0,0,,您可以在其中跟踪结果
Dialogue: 0,0:28:37.11,0:28:38.64,BottomCenter,,0,0,0,,情况并非总是如此
Dialogue: 0,0:28:38.64,0:28:41.92,BottomCenter,,0,0,0,,你想要计算的结果
Dialogue: 0,0:28:41.92,0:28:44.72,BottomCenter,,0,0,0,,递归调用然后相乘
Dialogue: 0,0:28:44.72,0:28:45.75,BottomCenter,,0,0,0,,里面有一些东西
Dialogue: 0,0:28:45.75,0:28:47.92,BottomCenter,,0,0,0,,也许你可以先乘以
Dialogue: 0,0:28:47.92,0:28:49.75,BottomCenter,,0,0,0,,因为乘法是可交换的
Dialogue: 0,0:28:49.75,0:28:52.79,BottomCenter,,0,0,0,,你怎么做并不重要
Dialogue: 0,0:28:52.79,0:28:54.40,BottomCenter,,0,0,0,,无论哪种方式你都可以获得相同的结果
Dialogue: 0,0:28:54.40,0:28:56.55,BottomCenter,,0,0,0,,有阶乘但有其他问题
Dialogue: 0,0:28:56.55,0:28:58.16,BottomCenter,,0,0,0,,有时很难以一种方式做到这一点
Dialogue: 0,0:28:58.16,0:29:00.64,BottomCenter,,0,0,0,,做另一个更容易
Dialogue: 0,0:29:00.64,0:29:02.24,BottomCenter,,0,0,0,,顺便说一下，这很像
Dialogue: 0,0:29:02.24,0:29:03.75,BottomCenter,,0,0,0,,像你说的那样的赋值语句
Dialogue: 0,0:29:03.75,0:29:06.88,BottomCenter,,0,0,0,,n 等于四 k 等于一
Dialogue: 0,0:29:06.88,0:29:10.07,BottomCenter,,0,0,0,,结果等于 1 呃你知道的
Dialogue: 0,0:29:10.07,0:29:10.83,BottomCenter,,0,0,0,,喜欢
Dialogue: 0,0:29:10.83,0:29:15.20,BottomCenter,,0,0,0,,而 k 小于或等于 n
Dialogue: 0,0:29:15.20,0:29:18.79,BottomCenter,,0,0,0,,我们不会改变
Dialogue: 0,0:29:18.79,0:29:21.03,BottomCenter,,0,0,0,,但我们要增加 k 并且
Dialogue: 0,0:29:21.03,0:29:22.72,BottomCenter,,0,0,0,,我们会说结果等于 k
Dialogue: 0,0:29:22.72,0:29:26.07,BottomCenter,,0,0,0,,次结果是这样的
Dialogue: 0,0:29:26.07,0:29:29.68,BottomCenter,,0,0,0,,版本看起来非常像
Dialogue: 0,0:29:29.68,0:29:32.96,BottomCenter,,0,0,0,,呃将 k 设置为 1
Dialogue: 0,0:29:32.96,0:29:36.24,BottomCenter,,0,0,0,,将结果设置为 1 while uh k
Dialogue: 0,0:29:36.24,0:29:38.55,BottomCenter,,0,0,0,,小于或等于 n 或者我们会
Dialogue: 0,0:29:38.55,0:29:40.72,BottomCenter,,0,0,0,,尽可能明确地表达出来
Dialogue: 0,0:29:40.72,0:29:43.51,BottomCenter,,0,0,0,,k 大于 n，这是表达式
Dialogue: 0,0:29:43.51,0:29:45.03,BottomCenter,,0,0,0,,我们在那里写的
Dialogue: 0,0:29:45.03,0:29:48.16,BottomCenter,,0,0,0,,那么我们可以呃重新分配
Dialogue: 0,0:29:48.16,0:29:51.27,BottomCenter,,0,0,0,,k 和 k 加 1 和 k 次的结果
Dialogue: 0,0:29:51.27,0:29:52.00,BottomCenter,,0,0,0,,结果
Dialogue: 0,0:29:52.00,0:29:54.96,BottomCenter,,0,0,0,,然后最终返回结果
Dialogue: 0,0:29:54.96,0:29:55.35,BottomCenter,,0,0,0,,喜欢
Dialogue: 0,0:29:55.35,0:29:59.83,BottomCenter,,0,0,0,,这就是这个递归版本
Dialogue: 0,0:29:59.83,0:30:03.03,BottomCenter,,0,0,0,,基本上这段代码只是呃
Dialogue: 0,0:30:03.03,0:30:05.11,BottomCenter,,0,0,0,,通过使用避免赋值语句
Dialogue: 0,0:30:05.11,0:30:08.24,BottomCenter,,0,0,0,,呃函数调用代替
Dialogue: 0,0:30:08.24,0:30:09.92,BottomCenter,,0,0,0,,我要添加最后一件事，虽然是我
Dialogue: 0,0:30:09.92,0:30:11.35,BottomCenter,,0,0,0,,不认为这特别重要
Dialogue: 0,0:30:11.35,0:30:13.20,BottomCenter,,0,0,0,,这个类的顺序是
Dialogue: 0,0:30:13.20,0:30:14.16,BottomCenter,,0,0,0,,操作可以
Dialogue: 0,0:30:14.16,0:30:16.79,BottomCenter,,0,0,0,,例如，当
Dialogue: 0,0:30:16.79,0:30:18.40,BottomCenter,,0,0,0,,你正在处理非常非常大的事情
Dialogue: 0,0:30:18.40,0:30:19.20,BottomCenter,,0,0,0,,数字或
Dialogue: 0,0:30:19.20,0:30:21.59,BottomCenter,,0,0,0,,非常非常小的数字的顺序
Dialogue: 0,0:30:21.59,0:30:23.59,BottomCenter,,0,0,0,,你所做的事情可以创造数字
Dialogue: 0,0:30:23.59,0:30:25.92,BottomCenter,,0,0,0,,不稳定所以例如如果你
Dialogue: 0,0:30:25.92,0:30:27.44,BottomCenter,,0,0,0,,将一大堆小数相乘
Dialogue: 0,0:30:27.44,0:30:28.79,BottomCenter,,0,0,0,,一开始就在一起
Dialogue: 0,0:30:28.79,0:30:30.31,BottomCenter,,0,0,0,,得到这些令人讨厌的小舍入
Dialogue: 0,0:30:30.31,0:30:31.35,BottomCenter,,0,0,0,,文物
Dialogue: 0,0:30:31.35,0:30:32.79,BottomCenter,,0,0,0,,所以有时你必须考虑
Dialogue: 0,0:30:32.79,0:30:34.64,BottomCenter,,0,0,0,,在这些非常复杂的数字中
Dialogue: 0,0:30:34.64,0:30:35.03,BottomCenter,,0,0,0,,事物
Dialogue: 0,0:30:35.03,0:30:36.55,BottomCenter,,0,0,0,,对于我们在这里所做的事情来说，它不会
Dialogue: 0,0:30:36.55,0:30:38.55,BottomCenter,,0,0,0,,真的很重要
Dialogue: 0,0:30:38.55,0:30:40.31,BottomCenter,,0,0,0,,这是一个很好的问题，所以我认为
Dialogue: 0,0:30:40.31,0:30:41.59,BottomCenter,,0,0,0,,问题是a之间的区别
Dialogue: 0,0:30:41.59,0:30:43.35,BottomCenter,,0,0,0,,辅助函数和相互递归
Dialogue: 0,0:30:43.35,0:30:45.03,BottomCenter,,0,0,0,,让我们看看约翰有什么
Dialogue: 0,0:30:45.03,0:30:46.64,BottomCenter,,0,0,0,,屏幕就在这里
Dialogue: 0,0:30:46.64,0:30:48.88,BottomCenter,,0,0,0,,所以这不是一个相互的例子
Dialogue: 0,0:30:48.88,0:30:51.83,BottomCenter,,0,0,0,,递归这只是递归
Dialogue: 0,0:30:51.83,0:30:53.44,BottomCenter,,0,0,0,,唯一的帮助者
Dialogue: 0,0:30:53.44,0:30:55.27,BottomCenter,,0,0,0,,函数正在做
Dialogue: 0,0:30:55.27,0:30:57.44,BottomCenter,,0,0,0,,有点隐藏了这样一个事实
Dialogue: 0,0:30:57.44,0:30:58.31,BottomCenter,,0,0,0,,递归的
Dialogue: 0,0:30:58.31,0:31:01.75,BottomCenter,,0,0,0,,call 需要三个参数，而
Dialogue: 0,0:31:01.75,0:31:04.00,BottomCenter,,0,0,0,,调用签名的类型
Dialogue: 0,0:31:04.00,0:31:06.55,BottomCenter,,0,0,0,,阶乘只需要一个参数
Dialogue: 0,0:31:06.55,0:31:07.83,BottomCenter,,0,0,0,,我的意思是，例如我们可以
Dialogue: 0,0:31:07.83,0:31:09.68,BottomCenter,,0,0,0,,说看看你是否想递归调用
Dialogue: 0,0:31:09.68,0:31:10.64,BottomCenter,,0,0,0,,阶乘
Dialogue: 0,0:31:10.64,0:31:12.55,BottomCenter,,0,0,0,,你必须用 1 来初始化它
Dialogue: 0,0:31:12.55,0:31:14.40,BottomCenter,,0,0,0,,一个用于这些其他事情的但那是
Dialogue: 0,0:31:14.40,0:31:16.16,BottomCenter,,0,0,0,,这对用户来说不太好
Dialogue: 0,0:31:16.16,0:31:17.75,BottomCenter,,0,0,0,,所以我们想隐藏这一点
Dialogue: 0,0:31:17.75,0:31:19.44,BottomCenter,,0,0,0,,实施细节
Dialogue: 0,0:31:19.44,0:31:21.83,BottomCenter,,0,0,0,,所以我们创造了这种这样的
Dialogue: 0,0:31:21.83,0:31:23.35,BottomCenter,,0,0,0,,门面一点点
Dialogue: 0,0:31:23.35,0:31:25.59,BottomCenter,,0,0,0,,右调用事实与 n 然后所有
Dialogue: 0,0:31:25.59,0:31:26.88,BottomCenter,,0,0,0,,要做的就是打电话给另一个人
Dialogue: 0,0:31:26.88,0:31:28.88,BottomCenter,,0,0,0,,本身是递归的函数
Dialogue: 0,0:31:28.88,0:31:30.40,BottomCenter,,0,0,0,,是的，所以如果你看一下递归
Dialogue: 0,0:31:30.40,0:31:32.24,BottomCenter,,0,0,0,,实际上在这里打电话给助手
Dialogue: 0,0:31:32.24,0:31:33.68,BottomCenter,,0,0,0,,我用鼠标指向
Dialogue: 0,0:31:33.68,0:31:35.11,BottomCenter,,0,0,0,,顺便说一句，屏幕不起作用
Dialogue: 0,0:31:35.11,0:31:36.00,BottomCenter,,0,0,0,,事实证明
Dialogue: 0,0:31:36.00,0:31:38.96,BottomCenter,,0,0,0,,嗯，谢谢你，约翰，那就是它本身
Dialogue: 0,0:31:38.96,0:31:39.75,BottomCenter,,0,0,0,,递归的
Dialogue: 0,0:31:39.75,0:31:42.88,BottomCenter,,0,0,0,,是的，我忘记了相互递归
Dialogue: 0,0:31:42.88,0:31:44.79,BottomCenter,,0,0,0,,我认为这是信用的例子
Dialogue: 0,0:31:44.79,0:31:46.16,BottomCenter,,0,0,0,,卡片示例，其中
Dialogue: 0,0:31:46.16,0:31:48.55,BottomCenter,,0,0,0,,一个函数调用另一个函数
Dialogue: 0,0:31:48.55,0:31:50.72,BottomCenter,,0,0,0,,which 和 that 函数调用
Dialogue: 0,0:31:50.72,0:31:52.55,BottomCenter,,0,0,0,,以前的功能，所以是一个事实帮助者
Dialogue: 0,0:31:52.55,0:31:54.40,BottomCenter,,0,0,0,,某种称为事实的原因
Dialogue: 0,0:31:54.40,0:31:56.31,BottomCenter,,0,0,0,,那么这将是相互递归的
Dialogue: 0,0:31:56.31,0:31:57.92,BottomCenter,,0,0,0,,这只是递归
Dialogue: 0,0:31:57.92,0:31:59.92,BottomCenter,,0,0,0,,涂上一点糖衣
Dialogue: 0,0:31:59.92,0:32:03.83,BottomCenter,,0,0,0,,top 隐藏实现细节
Dialogue: 0,0:32:04.64,0:32:07.03,BottomCenter,,0,0,0,,现在这是完全正确的，这是
Dialogue: 0,0:32:07.03,0:32:08.00,BottomCenter,,0,0,0,,不相关但是
Dialogue: 0,0:32:08.00,0:32:10.24,BottomCenter,,0,0,0,,也可能相关，因为它是
Dialogue: 0,0:32:10.24,0:32:11.51,BottomCenter,,0,0,0,,混乱的根源
Dialogue: 0,0:32:11.51,0:32:13.59,BottomCenter,,0,0,0,,有时不是定义一个新的
Dialogue: 0,0:32:13.59,0:32:14.79,BottomCenter,,0,0,0,,功能
Dialogue: 0,0:32:14.79,0:32:17.75,BottomCenter,,0,0,0,,并编写事实助手并传入
Dialogue: 0,0:32:17.75,0:32:18.48,BottomCenter,,0,0,0,,这
Dialogue: 0,0:32:18.48,0:32:20.55,BottomCenter,,0,0,0,,我认为初始值很好
Dialogue: 0,0:32:20.55,0:32:21.59,BottomCenter,,0,0,0,,实践
Dialogue: 0,0:32:21.59,0:32:23.35,BottomCenter,,0,0,0,,有时你会看到人们
Dialogue: 0,0:32:23.35,0:32:26.16,BottomCenter,,0,0,0,,将提供默认值
Dialogue: 0,0:32:26.16,0:32:29.92,BottomCenter,,0,0,0,,为此然后
Dialogue: 0,0:32:29.92,0:32:33.11,BottomCenter,,0,0,0,,称这件事为事实
Dialogue: 0,0:32:33.11,0:32:36.16,BottomCenter,,0,0,0,,现在完全摆脱这个
Dialogue: 0,0:32:36.16,0:32:39.44,BottomCenter,,0,0,0,,这仍然有效不会起作用呃
Dialogue: 0,0:32:39.44,0:32:40.00,BottomCenter,,0,0,0,,因为我们
Dialogue: 0,0:32:40.00,0:32:43.83,BottomCenter,,0,0,0,,称之为好吧呃这仍然有效
Dialogue: 0,0:32:43.83,0:32:46.79,BottomCenter,,0,0,0,,这里发生的事情是这些
Dialogue: 0,0:32:46.79,0:32:48.07,BottomCenter,,0,0,0,,数字一和一
Dialogue: 0,0:32:48.07,0:32:50.64,BottomCenter,,0,0,0,,只有当你用一个来称呼事实时才重要
Dialogue: 0,0:32:50.64,0:32:51.27,BottomCenter,,0,0,0,,争论
Dialogue: 0,0:32:51.27,0:32:52.88,BottomCenter,,0,0,0,,一旦你进行递归调用
Dialogue: 0,0:32:52.88,0:32:54.40,BottomCenter,,0,0,0,,我们传递两个不同的参数
Dialogue: 0,0:32:54.40,0:32:54.88,BottomCenter,,0,0,0,,意思是
Dialogue: 0,0:32:54.88,0:32:57.20,BottomCenter,,0,0,0,,忽略默认值并使用它们
Dialogue: 0,0:32:57.20,0:32:58.72,BottomCenter,,0,0,0,,值代替
Dialogue: 0,0:32:58.72,0:33:01.03,BottomCenter,,0,0,0,,嗯，因此我们有一个
Dialogue: 0,0:33:01.03,0:33:03.03,BottomCenter,,0,0,0,,那种有效的功能
Dialogue: 0,0:33:03.03,0:33:06.96,BottomCenter,,0,0,0,,呃，这没关系，但旧版本是
Dialogue: 0,0:33:06.96,0:33:07.68,BottomCenter,,0,0,0,,更好的
Dialogue: 0,0:33:07.68,0:33:09.92,BottomCenter,,0,0,0,,因为旧版本说你知道
Dialogue: 0,0:33:09.92,0:33:10.96,BottomCenter,,0,0,0,,这就是你所说的
Dialogue: 0,0:33:10.96,0:33:12.24,BottomCenter,,0,0,0,,你只需要传入一个
Dialogue: 0,0:33:12.24,0:33:13.44,BottomCenter,,0,0,0,,争论，你甚至不必
Dialogue: 0,0:33:13.44,0:33:15.44,BottomCenter,,0,0,0,,想想 k 和结果是什么
Dialogue: 0,0:33:15.44,0:33:16.31,BottomCenter,,0,0,0,,像
Dialogue: 0,0:33:16.31,0:33:18.00,BottomCenter,,0,0,0,,深埋和一些辅助功能
Dialogue: 0,0:33:18.00,0:33:20.07,BottomCenter,,0,0,0,,你永远不应该说得那么友善
Dialogue: 0,0:33:20.07,0:33:21.03,BottomCenter,,0,0,0,,像这个版本的
Dialogue: 0,0:33:21.03,0:33:23.35,BottomCenter,,0,0,0,,哦，抱歉，我同意上帝的观点，我喜欢这样
Dialogue: 0,0:33:23.35,0:33:24.55,BottomCenter,,0,0,0,,版本也还有
Dialogue: 0,0:33:24.55,0:33:26.07,BottomCenter,,0,0,0,,另一个版本有
Dialogue: 0,0:33:26.07,0:33:27.59,BottomCenter,,0,0,0,,默认参数
Dialogue: 0,0:33:27.59,0:33:30.31,BottomCenter,,0,0,0,,用户可能会错误地调用事实四
Dialogue: 0,0:33:30.31,0:33:30.64,BottomCenter,,0,0,0,,曾是
Dialogue: 0,0:33:30.64,0:33:32.72,BottomCenter,,0,0,0,,你知道二和三，现在你
Dialogue: 0,0:33:32.72,0:33:33.83,BottomCenter,,0,0,0,,去比赛
Dialogue: 0,0:33:33.83,0:33:35.44,BottomCenter,,0,0,0,,所以你甚至不打开
Dialogue: 0,0:33:35.44,0:33:37.68,BottomCenter,,0,0,0,,能力之门
Dialogue: 0,0:33:37.68,0:33:41.03,BottomCenter,,0,0,0,,错误地称呼事实 i 的核心功能
Dialogue: 0,0:33:41.03,0:33:42.40,BottomCenter,,0,0,0,,我确实喜欢这个，尽管确实如此
Dialogue: 0,0:33:42.40,0:33:45.59,BottomCenter,,0,0,0,,需要更多代码
Dialogue: 0,0:33:45.59,0:33:47.27,BottomCenter,,0,0,0,,下一个问题是什么是助手
Dialogue: 0,0:33:47.27,0:33:48.96,BottomCenter,,0,0,0,,功能
Dialogue: 0,0:33:48.96,0:33:50.96,BottomCenter,,0,0,0,,这是一个很好的问题，所以这个术语助手
Dialogue: 0,0:33:50.96,0:33:52.07,BottomCenter,,0,0,0,,功能
Dialogue: 0,0:33:52.07,0:33:56.88,BottomCenter,,0,0,0,,用于描述一个函数
Dialogue: 0,0:33:57.03,0:33:59.68,BottomCenter,,0,0,0,,本身并没有多大用处
Dialogue: 0,0:33:59.68,0:34:01.92,BottomCenter,,0,0,0,,这是实施的一部分
Dialogue: 0,0:34:01.92,0:34:03.92,BottomCenter,,0,0,0,,另一个功能
Dialogue: 0,0:34:03.92,0:34:07.11,BottomCenter,,0,0,0,,以及某物是否有帮助
Dialogue: 0,0:34:07.11,0:34:09.67,BottomCenter,,0,0,0,,确实需要解释
Dialogue: 0,0:34:09.67,0:34:10.48,BottomCenter,,0,0,0,,所以
Dialogue: 0,0:34:10.48,0:34:12.71,BottomCenter,,0,0,0,,在你的养猪项目中我想我会
Dialogue: 0,0:34:12.71,0:34:13.92,BottomCenter,,0,0,0,,描述
Dialogue: 0,0:34:13.92,0:34:16.55,BottomCenter,,0,0,0,,呃轮流作为辅助函数
Dialogue: 0,0:34:16.55,0:34:17.76,BottomCenter,,0,0,0,,播放功能
Dialogue: 0,0:34:17.76,0:34:19.59,BottomCenter,,0,0,0,,意思是它可以帮助你
Dialogue: 0,0:34:19.59,0:34:21.51,BottomCenter,,0,0,0,,实现播放功能
Dialogue: 0,0:34:21.51,0:34:24.40,BottomCenter,,0,0,0,,呃通过描述一些逻辑
Dialogue: 0,0:34:24.40,0:34:25.67,BottomCenter,,0,0,0,,在其中
Dialogue: 0,0:34:25.67,0:34:27.36,BottomCenter,,0,0,0,,但后来又轮流了
Dialogue: 0,0:34:27.36,0:34:29.03,BottomCenter,,0,0,0,,本身很有用，因为我们做了一些
Dialogue: 0,0:34:29.03,0:34:30.48,BottomCenter,,0,0,0,,各种类似的分析
Dialogue: 0,0:34:30.48,0:34:32.71,BottomCenter,,0,0,0,,就像骰子的数量给你
Dialogue: 0,0:34:32.71,0:34:34.40,BottomCenter,,0,0,0,,最高回合分数
Dialogue: 0,0:34:34.40,0:34:36.23,BottomCenter,,0,0,0,,所以从这个意义上说，这不仅仅是一个
Dialogue: 0,0:34:36.23,0:34:38.07,BottomCenter,,0,0,0,,辅助功能很有用
Dialogue: 0,0:34:38.07,0:34:41.03,BottomCenter,,0,0,0,,对于其他东西也是如此
Dialogue: 0,0:34:41.03,0:34:42.71,BottomCenter,,0,0,0,,解释部分的问题但在
Dialogue: 0,0:34:42.71,0:34:43.92,BottomCenter,,0,0,0,,一般意味着什么
Dialogue: 0,0:34:43.92,0:34:45.59,BottomCenter,,0,0,0,,我称这个事实助手的原因是
Dialogue: 0,0:34:45.59,0:34:47.28,BottomCenter,,0,0,0,,将其描述为辅助函数
Dialogue: 0,0:34:47.28,0:34:49.19,BottomCenter,,0,0,0,,我写它的唯一原因是
Dialogue: 0,0:34:49.19,0:34:50.63,BottomCenter,,0,0,0,,帮助落实事实
Dialogue: 0,0:34:50.63,0:34:52.71,BottomCenter,,0,0,0,,事实上是主要事件，这是
Dialogue: 0,0:34:52.71,0:34:56.15,BottomCenter,,0,0,0,,只是呃在那里帮助它
Dialogue: 0,0:34:56.15,0:34:57.92,BottomCenter,,0,0,0,,是的，我也是这样定义的
Dialogue: 0,0:34:57.92,0:34:59.28,BottomCenter,,0,0,0,,我思考这些事情的方式是
Dialogue: 0,0:34:59.28,0:35:00.15,BottomCenter,,0,0,0,,有一种
Dialogue: 0,0:35:00.15,0:35:02.48,BottomCenter,,0,0,0,,朝内和朝外
Dialogue: 0,0:35:02.48,0:35:03.44,BottomCenter,,0,0,0,,功能性
Dialogue: 0,0:35:03.44,0:35:04.96,BottomCenter,,0,0,0,,我们创建了一个库
Dialogue: 0,0:35:04.96,0:35:06.96,BottomCenter,,0,0,0,,计算正弦的数学例程
Dialogue: 0,0:35:06.96,0:35:08.63,BottomCenter,,0,0,0,,余弦阶乘
Dialogue: 0,0:35:08.63,0:35:10.32,BottomCenter,,0,0,0,,正切平方根和所有这些东西
Dialogue: 0,0:35:10.32,0:35:12.00,BottomCenter,,0,0,0,,我希望用户能够打电话
Dialogue: 0,0:35:12.00,0:35:13.51,BottomCenter,,0,0,0,,那些功能
Dialogue: 0,0:35:13.51,0:35:15.11,BottomCenter,,0,0,0,,为了让我能够实施
Dialogue: 0,0:35:15.11,0:35:16.96,BottomCenter,,0,0,0,,那些我可能需要做一些粗暴的事情
Dialogue: 0,0:35:16.96,0:35:18.96,BottomCenter,,0,0,0,,数学运算
Dialogue: 0,0:35:18.96,0:35:20.32,BottomCenter,,0,0,0,,用户不需要知道
Dialogue: 0,0:35:20.32,0:35:21.76,BottomCenter,,0,0,0,,那些我要打电话的人
Dialogue: 0,0:35:21.76,0:35:24.07,BottomCenter,,0,0,0,,辅助或辅助功能是
Dialogue: 0,0:35:24.07,0:35:24.71,BottomCenter,,0,0,0,,有点
Dialogue: 0,0:35:24.71,0:35:26.71,BottomCenter,,0,0,0,,隐藏起来，用于内部
Dialogue: 0,0:35:26.71,0:35:29.03,BottomCenter,,0,0,0,,工作但外部
Dialogue: 0,0:35:29.03,0:35:30.32,BottomCenter,,0,0,0,,你知道这些功能是什么
Dialogue: 0,0:35:30.32,0:35:32.23,BottomCenter,,0,0,0,,被称为这就是事实
Dialogue: 0,0:35:32.23,0:35:35.59,BottomCenter,,0,0,0,,是的，这是一个很好的问题，所以
Dialogue: 0,0:35:35.59,0:35:37.03,BottomCenter,,0,0,0,,就像你什么时候会使用递归
Dialogue: 0,0:35:37.03,0:35:38.32,BottomCenter,,0,0,0,,而不是迭代
Dialogue: 0,0:35:38.32,0:35:39.92,BottomCenter,,0,0,0,,如果有一个简单的迭代
Dialogue: 0,0:35:39.92,0:35:41.44,BottomCenter,,0,0,0,,那么它通常是正确的
Dialogue: 0,0:35:41.44,0:35:42.55,BottomCenter,,0,0,0,,使用的东西
Dialogue: 0,0:35:42.55,0:35:44.48,BottomCenter,,0,0,0,,递归唯一明显的优点
Dialogue: 0,0:35:44.48,0:35:45.92,BottomCenter,,0,0,0,,是如果你想追踪如何
Dialogue: 0,0:35:45.92,0:35:47.84,BottomCenter,,0,0,0,,很多时候某事发生
Dialogue: 0,0:35:47.84,0:35:51.51,BottomCenter,,0,0,0,,或者嗯嗯你想要
Dialogue: 0,0:35:51.51,0:35:53.44,BottomCenter,,0,0,0,,以某种方式设置它，以便在每个
Dialogue: 0,0:35:53.44,0:35:55.11,BottomCenter,,0,0,0,,像其他迭代一样
Dialogue: 0,0:35:55.11,0:35:56.80,BottomCenter,,0,0,0,,副作用就像某件事发生一样
Dialogue: 0,0:35:56.80,0:35:58.80,BottomCenter,,0,0,0,,写入日志或类似的东西
Dialogue: 0,0:35:58.80,0:36:00.15,BottomCenter,,0,0,0,,那么就可以方便的做到这一点
Dialogue: 0,0:36:00.15,0:36:01.84,BottomCenter,,0,0,0,,递归地因为这样你就可以
Dialogue: 0,0:36:01.84,0:36:03.36,BottomCenter,,0,0,0,,装饰函数并且每次都
Dialogue: 0,0:36:03.36,0:36:04.15,BottomCenter,,0,0,0,,被叫到
Dialogue: 0,0:36:04.15,0:36:06.88,BottomCenter,,0,0,0,,就像信息被捕获一样
Dialogue: 0,0:36:06.88,0:36:08.15,BottomCenter,,0,0,0,,某处
Dialogue: 0,0:36:08.15,0:36:09.92,BottomCenter,,0,0,0,,所以你知道这是主要优点
Dialogue: 0,0:36:09.92,0:36:11.36,BottomCenter,,0,0,0,,递归地做一些你想做的事情
Dialogue: 0,0:36:11.36,0:36:12.71,BottomCenter,,0,0,0,,可以迭代地做
Dialogue: 0,0:36:12.71,0:36:14.71,BottomCenter,,0,0,0,,但这是一个很小的优势所以
Dialogue: 0,0:36:14.71,0:36:16.32,BottomCenter,,0,0,0,,大多数时候你只是想写
Dialogue: 0,0:36:16.32,0:36:18.32,BottomCenter,,0,0,0,,如果可以的话，迭代地进行事情
Dialogue: 0,0:36:18.32,0:36:20.23,BottomCenter,,0,0,0,,现在是树递归的例子
Dialogue: 0,0:36:20.23,0:36:21.84,BottomCenter,,0,0,0,,我们真的讨论过
Dialogue: 0,0:36:21.84,0:36:23.92,BottomCenter,,0,0,0,,如果你写的话会更简单
Dialogue: 0,0:36:23.92,0:36:25.51,BottomCenter,,0,0,0,,他们
Dialogue: 0,0:36:25.51,0:36:27.76,BottomCenter,,0,0,0,,递归而不是迭代如果
Dialogue: 0,0:36:27.76,0:36:29.44,BottomCenter,,0,0,0,,然后你想迭代地编写它们
Dialogue: 0,0:36:29.44,0:36:30.63,BottomCenter,,0,0,0,,你必须跟踪
Dialogue: 0,0:36:30.63,0:36:32.55,BottomCenter,,0,0,0,,您所在的位置以及计算
Dialogue: 0,0:36:32.55,0:36:34.63,BottomCenter,,0,0,0,,口译员会做的一种方式
Dialogue: 0,0:36:34.63,0:36:35.76,BottomCenter,,0,0,0,,如果你只是写的话
Dialogue: 0,0:36:35.76,0:36:37.11,BottomCenter,,0,0,0,,预递归所以这就像
Dialogue: 0,0:36:37.11,0:36:39.51,BottomCenter,,0,0,0,,比赛或河内塔
Dialogue: 0,0:36:39.51,0:36:41.03,BottomCenter,,0,0,0,,例子
Dialogue: 0,0:36:41.03,0:36:42.48,BottomCenter,,0,0,0,,我认为这些情况
Dialogue: 0,0:36:42.48,0:36:44.40,BottomCenter,,0,0,0,,递归版本通常是
Dialogue: 0,0:36:44.40,0:36:46.15,BottomCenter,,0,0,0,,只是首选，因为它太多了
Dialogue: 0,0:36:46.15,0:36:48.55,BottomCenter,,0,0,0,,更简单
Dialogue: 0,0:36:50.07,0:36:51.51,BottomCenter,,0,0,0,,是的，我唯一要补充的是
Dialogue: 0,0:36:51.51,0:36:53.92,BottomCenter,,0,0,0,,我肯定偶然发现了一些
Dialogue: 0,0:36:53.92,0:36:56.07,BottomCenter,,0,0,0,,我生活中的问题在哪里
Dialogue: 0,0:36:56.07,0:36:58.00,BottomCenter,,0,0,0,,只是迭代的只是一只熊
Dialogue: 0,0:36:58.00,0:36:59.84,BottomCenter,,0,0,0,,来实现，递归的是
Dialogue: 0,0:36:59.84,0:37:00.71,BottomCenter,,0,0,0,,就这样
Dialogue: 0,0:37:00.71,0:37:03.44,BottomCenter,,0,0,0,,有点优雅和美丽，但对于
Dialogue: 0,0:37:03.44,0:37:04.96,BottomCenter,,0,0,0,,大部分我认为我认为约翰的
Dialogue: 0,0:37:04.96,0:37:06.23,BottomCenter,,0,0,0,,正确的是迭代是
Dialogue: 0,0:37:06.23,0:37:07.67,BottomCenter,,0,0,0,,可能要走的路
Dialogue: 0,0:37:07.67,0:37:11.36,BottomCenter,,0,0,0,,效率和易于实施
Dialogue: 0,0:37:11.36,0:37:13.19,BottomCenter,,0,0,0,,问题是你想把
Dialogue: 0,0:37:13.19,0:37:14.40,BottomCenter,,0,0,0,,辅助函数
Dialogue: 0,0:37:14.40,0:37:18.07,BottomCenter,,0,0,0,,在 main 函数体内
Dialogue: 0,0:37:18.07,0:37:21.19,BottomCenter,,0,0,0,,或者之后你可以做
Dialogue: 0,0:37:21.19,0:37:22.55,BottomCenter,,0,0,0,,不管怎样你都可以把它变成
Dialogue: 0,0:37:22.55,0:37:23.84,BottomCenter,,0,0,0,,局部功能
Dialogue: 0,0:37:23.84,0:37:27.28,BottomCenter,,0,0,0,,呃那个嗯
Dialogue: 0,0:37:27.28,0:37:31.44,BottomCenter,,0,0,0,,呃，那只在事实范围内有效
Dialogue: 0,0:37:31.44,0:37:32.96,BottomCenter,,0,0,0,,是的，实际上就像有一样
Dialogue: 0,0:37:32.96,0:37:35.28,BottomCenter,,0,0,0,,聊天中的相关问题也许我可以
Dialogue: 0,0:37:35.28,0:37:36.23,BottomCenter,,0,0,0,,回答他们两个
Dialogue: 0,0:37:36.23,0:37:39.28,BottomCenter,,0,0,0,,问题就像呃
Dialogue: 0,0:37:39.28,0:37:41.28,BottomCenter,,0,0,0,,为什么这是它自己的功能而不是
Dialogue: 0,0:37:41.28,0:37:43.44,BottomCenter,,0,0,0,,在事实中被定义
Dialogue: 0,0:37:43.44,0:37:46.32,BottomCenter,,0,0,0,,你总是需要一个辅助函数吗
Dialogue: 0,0:37:46.32,0:37:47.51,BottomCenter,,0,0,0,,你什么时候知道你是否需要
Dialogue: 0,0:37:47.51,0:37:49.19,BottomCenter,,0,0,0,,是否有辅助功能
Dialogue: 0,0:37:49.19,0:37:52.00,BottomCenter,,0,0,0,,嗯，特别是递归的方式
Dialogue: 0,0:37:52.00,0:37:53.76,BottomCenter,,0,0,0,,知道你需要一个辅助函数
Dialogue: 0,0:37:53.76,0:37:55.51,BottomCenter,,0,0,0,,是你想要追踪更多的东西
Dialogue: 0,0:37:55.51,0:37:57.59,BottomCenter,,0,0,0,,比你有争论所以如果你
Dialogue: 0,0:37:57.59,0:37:58.71,BottomCenter,,0,0,0,,想要追踪
Dialogue: 0,0:37:58.71,0:38:01.67,BottomCenter,,0,0,0,,n 和 k 以及结果然后你需要 n
Dialogue: 0,0:38:01.67,0:38:02.07,BottomCenter,,0,0,0,,和 k
Dialogue: 0,0:38:02.07,0:38:04.48,BottomCenter,,0,0,0,,并产生签名，如果
Dialogue: 0,0:38:04.48,0:38:05.36,BottomCenter,,0,0,0,,他们不在那儿
Dialogue: 0,0:38:05.36,0:38:07.67,BottomCenter,,0,0,0,,那么你需要编写一个辅助函数
Dialogue: 0,0:38:07.67,0:38:09.28,BottomCenter,,0,0,0,,这应该是
Dialogue: 0,0:38:09.28,0:38:13.76,BottomCenter,,0,0,0,,在这里，呃，有一个很小的
Dialogue: 0,0:38:13.76,0:38:15.11,BottomCenter,,0,0,0,,微小的优势
Dialogue: 0,0:38:15.11,0:38:17.44,BottomCenter,,0,0,0,,也许不是那么小，那就是我们
Dialogue: 0,0:38:17.44,0:38:18.96,BottomCenter,,0,0,0,,不需要追踪
Dialogue: 0,0:38:18.96,0:38:22.32,BottomCenter,,0,0,0,,在这种情况下所以
Dialogue: 0,0:38:22.32,0:38:24.23,BottomCenter,,0,0,0,,当我们
Dialogue: 0,0:38:24.23,0:38:26.15,BottomCenter,,0,0,0,,将其写为内部函数
Dialogue: 0,0:38:26.15,0:38:27.84,BottomCenter,,0,0,0,,这将是这样做的动机之一
Dialogue: 0,0:38:27.84,0:38:29.51,BottomCenter,,0,0,0,,这边 嗯
Dialogue: 0,0:38:29.51,0:38:31.76,BottomCenter,,0,0,0,,因为这个结局从未改变
Dialogue: 0,0:38:31.76,0:38:33.67,BottomCenter,,0,0,0,,总是可以参考那个
Dialogue: 0,0:38:33.67,0:38:34.80,BottomCenter,,0,0,0,,你必须摆脱它，你必须
Dialogue: 0,0:38:34.80,0:38:36.55,BottomCenter,,0,0,0,,摆脱那里的n2 是的，得到
Dialogue: 0,0:38:36.55,0:38:38.00,BottomCenter,,0,0,0,,摆脱那个
Dialogue: 0,0:38:38.00,0:38:40.32,BottomCenter,,0,0,0,,一
Dialogue: 0,0:38:41.03,0:38:43.03,BottomCenter,,0,0,0,,这样做的另一个优点是没有
Dialogue: 0,0:38:43.03,0:38:44.55,BottomCenter,,0,0,0,,有人可以打电话给
Dialogue: 0,0:38:44.55,0:38:46.88,BottomCenter,,0,0,0,,事实助手，因为它不可用
Dialogue: 0,0:38:46.88,0:38:48.48,BottomCenter,,0,0,0,,不再这样了，这是另一个原因
Dialogue: 0,0:38:48.48,0:38:50.48,BottomCenter,,0,0,0,,有时人们编写内部函数
Dialogue: 0,0:38:50.48,0:38:52.15,BottomCenter,,0,0,0,,这就像在
Dialogue: 0,0:38:52.15,0:38:54.07,BottomCenter,,0,0,0,,javascript 由于某种原因就像
Dialogue: 0,0:38:54.07,0:38:55.44,BottomCenter,,0,0,0,,所有功能都隐藏在其他功能中
Dialogue: 0,0:38:55.44,0:38:56.55,BottomCenter,,0,0,0,,功能只是
Dialogue: 0,0:38:56.55,0:38:58.40,BottomCenter,,0,0,0,,作为确保错误的一种方法
Dialogue: 0,0:38:58.40,0:39:00.23,BottomCenter,,0,0,0,,人们从来不打电话给他们
Dialogue: 0,0:39:00.23,0:39:02.00,BottomCenter,,0,0,0,,嗯，它每隔一段时间就会出现一次
Dialogue: 0,0:39:02.00,0:39:03.92,BottomCenter,,0,0,0,,在 python 代码库中虽然我认为呃
Dialogue: 0,0:39:03.92,0:39:04.96,BottomCenter,,0,0,0,,更罕见
Dialogue: 0,0:39:04.96,0:39:07.11,BottomCenter,,0,0,0,,是的所以是的所以这基本上就是
Dialogue: 0,0:39:07.11,0:39:08.32,BottomCenter,,0,0,0,,故事就像如果你要分享
Dialogue: 0,0:39:08.32,0:39:10.23,BottomCenter,,0,0,0,,名字那么它可以很方便，但也
Dialogue: 0,0:39:10.23,0:39:11.11,BottomCenter,,0,0,0,,它隐藏了
Dialogue: 0,0:39:11.11,0:39:12.88,BottomCenter,,0,0,0,,隐藏辅助功能，这样就没有人
Dialogue: 0,0:39:12.88,0:39:14.15,BottomCenter,,0,0,0,,调用下一个音符
Dialogue: 0,0:39:14.15,0:39:15.59,BottomCenter,,0,0,0,,这就是我会做的 我会
Dialogue: 0,0:39:15.59,0:39:17.59,BottomCenter,,0,0,0,,已经嵌入其中也许如果ii
Dialogue: 0,0:39:17.59,0:39:19.11,BottomCenter,,0,0,0,,不想让别人称呼它为我
Dialogue: 0,0:39:19.11,0:39:20.88,BottomCenter,,0,0,0,,不希望它污染名称空间
Dialogue: 0,0:39:20.88,0:39:21.84,BottomCenter,,0,0,0,,所以我会
Dialogue: 0,0:39:21.84,0:39:23.76,BottomCenter,,0,0,0,,我本来会把它排除在外，但我的意思是他们
