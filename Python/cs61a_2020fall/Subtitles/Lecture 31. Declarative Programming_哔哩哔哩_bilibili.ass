[Script Info]
Title: Lecture 31. Declarative Programming_哔哩哔哩_bilibili
ScriptType: v4.00+
Collisions: Reverse
PlayResX: 1280
PlayResY: 720
WrapStyle: 3
ScaledBorderAndShadow: yes
; ----------------------
; 本字幕由CC字幕助手自动转换
; 字幕来源https://www.bilibili.com/video/BV1s3411G7yM?p=74&vd_source=6ffca0aa1006734a4fba52f389036611
; 脚本地址https://greasyfork.org/scripts/378513
; 设置了字幕过长自动换行，但若字幕中没有空格换行将无效
; 字体大小依据720p 48号字体等比缩放
; 如显示不正常请尝试使用SRT格式

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Segoe UI,48,&H00FFFFFF,&HF0000000,&H00000000,&HF0000000,1,0,0,0,100,100,0,0.00,1,1,3,2,30,30,20,1

[Events]
Format: Layer, Start, End, Style, Actor, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.70,0:00:02.73,*Default,NTP,0000,0000,0000,,61 electra No.31
Dialogue: 0,0:00:03.10,0:00:04.13,*Default,NTP,0000,0000,0000,,announcements
Dialogue: 0,0:00:04.47,0:00:06.40,*Default,NTP,0000,0000,0000,,homework seven is due to date
Dialogue: 0,0:00:06.67,0:00:10.10,*Default,NTP,0000,0000,0000,,and next week is a big week because there's a lab
Dialogue: 0,0:00:10.57,0:00:13.20,*Default,NTP,0000,0000,0000,,and it's a lab about a new topic
Dialogue: 0,0:00:13.60,0:00:15.47,*Default,NTP,0000,0000,0000,,the sql programming language
Dialogue: 0,0:00:15.47,0:00:17.27,*Default,NTP,0000,0000,0000,,which we'll begin to cover today
Dialogue: 0,0:00:17.73,0:00:19.90,*Default,NTP,0000,0000,0000,,there will be another lecture on that Monday
Dialogue: 0,0:00:19.90,0:00:21.57,*Default,NTP,0000,0000,0000,,and get another one on Wednesday
Dialogue: 0,0:00:22.10,0:00:23.87,*Default,NTP,0000,0000,0000,,the lab doesn't cover all that stuff
Dialogue: 0,0:00:23.87,0:00:24.90,*Default,NTP,0000,0000,0000,,but it does cover
Dialogue: 0,0:00:24.90,0:00:27.47,*Default,NTP,0000,0000,0000,,content from today and Monday's lecture
Dialogue: 0,0:00:28.07,0:00:30.07,*Default,NTP,0000,0000,0000,,and while it's due next Tuesday
Dialogue: 0,0:00:30.07,0:00:31.77,*Default,NTP,0000,0000,0000,,I recommend you do it Monday
Dialogue: 0,0:00:31.87,0:00:33.13,*Default,NTP,0000,0000,0000,,we have lab parties
Dialogue: 0,0:00:33.20,0:00:34.57,*Default,NTP,0000,0000,0000,,and if you get it done on Monday
Dialogue: 0,0:00:34.57,0:00:36.90,*Default,NTP,0000,0000,0000,,then you can worry about the rest of the assignments
Dialogue: 0,0:00:36.90,0:00:38.30,*Default,NTP,0000,0000,0000,,going on in this class
Dialogue: 0,0:00:38.30,0:00:39.37,*Default,NTP,0000,0000,0000,,for the rest of the week
Dialogue: 0,0:00:39.97,0:00:41.57,*Default,NTP,0000,0000,0000,,there will be a small homework
Dialogue: 0,0:00:41.87,0:00:44.27,*Default,NTP,0000,0000,0000,,we've shortened it a bit from its usual length
Dialogue: 0,0:00:44.27,0:00:46.13,*Default,NTP,0000,0000,0000,,by making part of it optional
Dialogue: 0,0:00:46.37,0:00:48.47,*Default,NTP,0000,0000,0000,,just because there's a lot going on on the world
Dialogue: 0,0:00:48.47,0:00:49.93,*Default,NTP,0000,0000,0000,,and I know you could use a break
Dialogue: 0,0:00:50.33,0:00:53.07,*Default,NTP,0000,0000,0000,,it's to next Thursday and it just lets you practice
Dialogue: 0,0:00:53.27,0:00:55.33,*Default,NTP,0000,0000,0000,,manipulating scheme expressions
Dialogue: 0,0:00:55.60,0:00:57.07,*Default,NTP,0000,0000,0000,,but the big thing that's going on
Dialogue: 0,0:00:57.07,0:00:58.53,*Default,NTP,0000,0000,0000,,is there's a scheme project
Dialogue: 0,0:00:59.00,0:01:01.07,*Default,NTP,0000,0000,0000,,we'll have a project party next Tuesday
Dialogue: 0,0:01:01.13,0:01:02.70,*Default,NTP,0000,0000,0000,,to help you make progress
Dialogue: 0,0:01:03.17,0:01:06.80,*Default,NTP,0000,0000,0000,,you definitely should finish checkpoint one by Tuesday
Dialogue: 0,0:01:06.80,0:01:07.60,*Default,NTP,0000,0000,0000,,that's when it's du
Dialogue: 0,0:01:08.13,0:01:09.87,*Default,NTP,0000,0000,0000,,checkpoint two by Friday
Dialogue: 0,0:01:10.00,0:01:12.10,*Default,NTP,0000,0000,0000,,and the whole project does not do next week
Dialogue: 0,0:01:12.10,0:01:14.10,*Default,NTP,0000,0000,0000,,but it is do the following Tuesday
Dialogue: 0,0:01:14.37,0:01:16.53,*Default,NTP,0000,0000,0000,,and if you finish it the following Monday
Dialogue: 0,0:01:16.73,0:01:18.77,*Default,NTP,0000,0000,0000,,you get an early submissioned bonus point
Dialogue: 0,0:01:18.87,0:01:20.67,*Default,NTP,0000,0000,0000,,which I definitely recommend getting
Dialogue: 0,0:01:21.20,0:01:23.70,*Default,NTP,0000,0000,0000,,it's even better if you're farther than just checkpoint
Dialogue: 0,0:01:23.70,0:01:24.77,*Default,NTP,0000,0000,0000,,one on Tuesday
Dialogue: 0,0:01:25.17,0:01:26.37,*Default,NTP,0000,0000,0000,,in fact a great goal
Dialogue: 0,0:01:26.37,0:01:28.50,*Default,NTP,0000,0000,0000,,would be to finish up the project next week
Dialogue: 0,0:01:28.97,0:01:31.00,*Default,NTP,0000,0000,0000,,then you can have thanksgiving week off
Dialogue: 0,0:01:31.73,0:01:34.33,*Default,NTP,0000,0000,0000,,it's a big project but if you make progress every day
Dialogue: 0,0:01:34.33,0:01:35.33,*Default,NTP,0000,0000,0000,,you'll get through it
Dialogue: 0,0:01:35.57,0:01:38.20,*Default,NTP,0000,0000,0000,,and this is really the home stretch of 61 a
Dialogue: 0,0:01:38.67,0:01:40.47,*Default,NTP,0000,0000,0000,,you finish the scheme project
Dialogue: 0,0:01:40.77,0:01:42.67,*Default,NTP,0000,0000,0000,,then there's just one more homework
Dialogue: 0,0:01:42.67,0:01:44.53,*Default,NTP,0000,0000,0000,,do after that on sql
Dialogue: 0,0:01:44.87,0:01:46.70,*Default,NTP,0000,0000,0000,,and it covers the only three
Dialogue: 0,0:01:46.70,0:01:48.37,*Default,NTP,0000,0000,0000,,lectures that are left in the course
Dialogue: 0,0:01:48.40,0:01:51.07,*Default,NTP,0000,0000,0000,,today's lecture next Monday and Wednesday
Dialogue: 0,0:01:51.13,0:01:53.70,*Default,NTP,0000,0000,0000,,and we will have finished covering new content
Dialogue: 0,0:01:54.27,0:01:57.33,*Default,NTP,0000,0000,0000,,we will have more lectures but they're all optional
Dialogue: 0,0:01:57.53,0:01:58.90,*Default,NTP,0000,0000,0000,,I hope you watch them
Dialogue: 0,0:01:58.97,0:01:59.40,*Default,NTP,0000,0000,0000,,but
Dialogue: 0,0:01:59.40,0:02:02.00,*Default,NTP,0000,0000,0000,,the design of the course is to make sure that you have
Dialogue: 0,0:02:02.00,0:02:04.30,*Default,NTP,0000,0000,0000,,enough time to review the material
Dialogue: 0,0:02:04.50,0:02:05.70,*Default,NTP,0000,0000,0000,,get comfortable with it
Dialogue: 0,0:02:05.70,0:02:07.53,*Default,NTP,0000,0000,0000,,and get ready for the final exam
Dialogue: 0,0:02:08.37,0:02:10.67,*Default,NTP,0000,0000,0000,,so I know there's a lot going on next week
Dialogue: 0,0:02:11.10,0:02:13.33,*Default,NTP,0000,0000,0000,,la band a checkpoint Tuesday
Dialogue: 0,0:02:13.47,0:02:16.73,*Default,NTP,0000,0000,0000,,homework Thursday another checkpoint on Friday
Dialogue: 0,0:02:17.00,0:02:19.77,*Default,NTP,0000,0000,0000,,if you miss checkpoints there are only points like
Dialogue: 0,0:02:20.00,0:02:21.07,*Default,NTP,0000,0000,0000,,one point each
Dialogue: 0,0:02:21.13,0:02:22.87,*Default,NTP,0000,0000,0000,,so it's not totally catastrophic
Dialogue: 0,0:02:22.87,0:02:26.10,*Default,NTP,0000,0000,0000,,but it is really a good recommendation that you
Dialogue: 0,0:02:26.33,0:02:27.47,*Default,NTP,0000,0000,0000,,stay ahead of the project
Dialogue: 0,0:02:27.47,0:02:29.00,*Default,NTP,0000,0000,0000,,don't leave it to the last minute
Dialogue: 0,0:02:29.07,0:02:30.57,*Default,NTP,0000,0000,0000,,and hit these checkpoints
Dialogue: 0,0:02:30.60,0:02:32.40,*Default,NTP,0000,0000,0000,,so that you can turn the whole thing in
Dialogue: 0,0:02:32.60,0:02:35.10,*Default,NTP,0000,0000,0000,,early on Monday the 23rd
Dialogue: 0,0:02:35.33,0:02:37.50,*Default,NTP,0000,0000,0000,,and I know that's a lot but if you get through it
Dialogue: 0,0:02:37.53,0:02:39.33,*Default,NTP,0000,0000,0000,,then you can have a nice thanksgiving
Dialogue: 0,0:02:39.40,0:02:42.67,*Default,NTP,0000,0000,0000,,and the rest of the semester will be pretty relaxed
Dialogue: 0,0:02:43.30,0:02:44.27,*Default,NTP,0000,0000,0000,,so keep it up
Dialogue: 0,0:02:44.27,0:02:45.53,*Default,NTP,0000,0000,0000,,thanks for working hard
Dialogue: 0,0:02:45.80,0:02:48.30,*Default,NTP,0000,0000,0000,,and here we go learning a new topic
Dialogue: 0,0:02:48.77,0:02:51.70,*Default,NTP,0000,0000,0000,,declarative programming with sql
Dialogue: 0,0:02:53.50,0:02:57.87,*Default,NTP,0000,0000,0000,,today we start a discussion of declarative languages
Dialogue: 0,0:02:58.93,0:03:01.50,*Default,NTP,0000,0000,0000,,and we'll use as our canonical example
Dialogue: 0,0:03:01.50,0:03:03.90,*Default,NTP,0000,0000,0000,,a database management system
Dialogue: 0,0:03:04.60,0:03:05.80,*Default,NTP,0000,0000,0000,,so database men in front
Dialogue: 0,0:03:05.87,0:03:07.10,*Default,NTP,0000,0000,0000,,systems are important
Dialogue: 0,0:03:07.60,0:03:10.07,*Default,NTP,0000,0000,0000,,heavily used and interesting
Dialogue: 0,0:03:10.50,0:03:11.87,*Default,NTP,0000,0000,0000,,systems in general
Dialogue: 0,0:03:11.87,0:03:14.87,*Default,NTP,0000,0000,0000,,is an area of research within computer science
Dialogue: 0,0:03:15.07,0:03:17.33,*Default,NTP,0000,0000,0000,,that works on things like operating systems
Dialogue: 0,0:03:17.33,0:03:19.50,*Default,NTP,0000,0000,0000,,that's probably their most important and most
Dialogue: 0,0:03:19.50,0:03:20.67,*Default,NTP,0000,0000,0000,,used application
Dialogue: 0,0:03:20.87,0:03:22.53,*Default,NTP,0000,0000,0000,,but the runner up to that is a
Dialogue: 0,0:03:22.53,0:03:24.37,*Default,NTP,0000,0000,0000,,database management system
Dialogue: 0,0:03:24.70,0:03:25.47,*Default,NTP,0000,0000,0000,,and these
Dialogue: 0,0:03:25.47,0:03:28.40,*Default,NTP,0000,0000,0000,,systems have huge deployments across lots of companies
Dialogue: 0,0:03:28.40,0:03:30.47,*Default,NTP,0000,0000,0000,,for lots of different applications
Dialogue: 0,0:03:30.50,0:03:33.17,*Default,NTP,0000,0000,0000,,they hold data and they process it
Dialogue: 0,0:03:33.87,0:03:37.07,*Default,NTP,0000,0000,0000,,so database is a collection of tables
Dialogue: 0,0:03:37.07,0:03:38.97,*Default,NTP,0000,0000,0000,,and tables are where you put your data
Dialogue: 0,0:03:39.33,0:03:41.37,*Default,NTP,0000,0000,0000,,and then the database management system
Dialogue: 0,0:03:41.47,0:03:43.30,*Default,NTP,0000,0000,0000,,helps you keep track of those tables
Dialogue: 0,0:03:43.30,0:03:46.90,*Default,NTP,0000,0000,0000,,create new tables delete the old ones make updates
Dialogue: 0,0:03:46.90,0:03:48.17,*Default,NTP,0000,0000,0000,,all these different operations
Dialogue: 0,0:03:48.17,0:03:49.60,*Default,NTP,0000,0000,0000,,that you might want to apply
Dialogue: 0,0:03:49.60,0:03:50.53,*Default,NTP,0000,0000,0000,,to your data
Dialogue: 0,0:03:51.60,0:03:54.57,*Default,NTP,0000,0000,0000,,a table is a collection of records
Dialogue: 0,0:03:54.70,0:03:57.90,*Default,NTP,0000,0000,0000,,which are rows that have a value for each column
Dialogue: 0,0:03:59.27,0:04:00.50,*Default,NTP,0000,0000,0000,,so here's a table
Dialogue: 0,0:04:01.17,0:04:02.80,*Default,NTP,0000,0000,0000,,which contains the latitude
Dialogue: 0,0:04:02.80,0:04:05.77,*Default,NTP,0000,0000,0000,,longitude and name of different cities
Dialogue: 0,0:04:06.53,0:04:09.97,*Default,NTP,0000,0000,0000,,berkeley is at latitude 38 longitude 1 22
Dialogue: 0,0:04:10.90,0:04:12.07,*Default,NTP,0000,0000,0000,,Cambridge here
Dialogue: 0,0:04:12.30,0:04:13.13,*Default,NTP,0000,0000,0000,,what we might wonder
Dialogue: 0,0:04:13.13,0:04:15.87,*Default,NTP,0000,0000,0000,,is it Cambridge Massachusetts or Cambridge england
Dialogue: 0,0:04:15.93,0:04:18.77,*Default,NTP,0000,0000,0000,,the longitude tells us it's in Massachusetts
Dialogue: 0,0:04:19.20,0:04:22.13,*Default,NTP,0000,0000,0000,,and Minneapolis has a very high latitude
Dialogue: 0,0:04:22.13,0:04:24.13,*Default,NTP,0000,0000,0000,,which is why it's very cold there
Dialogue: 0,0:04:24.87,0:04:27.70,*Default,NTP,0000,0000,0000,,this is a table which has columns and rolls
Dialogue: 0,0:04:28.57,0:04:30.73,*Default,NTP,0000,0000,0000,,a column has a name
Dialogue: 0,0:04:30.87,0:04:32.07,*Default,NTP,0000,0000,0000,,this one's called name
Dialogue: 0,0:04:32.47,0:04:34.70,*Default,NTP,0000,0000,0000,,and a type it's full of strings
Dialogue: 0,0:04:34.97,0:04:38.27,*Default,NTP,0000,0000,0000,,this column's called longitude and it's full of numbers
Dialogue: 0,0:04:39.53,0:04:42.70,*Default,NTP,0000,0000,0000,,a row has a value for each column
Dialogue: 0,0:04:42.93,0:04:46.07,*Default,NTP,0000,0000,0000,,so all the rows have the same structure within a table
Dialogue: 0,0:04:46.57,0:04:49.87,*Default,NTP,0000,0000,0000,,they all in this table have three values
Dialogue: 0,0:04:49.87,0:04:50.97,*Default,NTP,0000,0000,0000,,and the first two values
Dialogue: 0,0:04:50.97,0:04:53.07,*Default,NTP,0000,0000,0000,,the latitude and the longitude are numbers
Dialogue: 0,0:04:53.10,0:04:54.37,*Default,NTP,0000,0000,0000,,and the name is a string
Dialogue: 0,0:04:54.87,0:04:57.60,*Default,NTP,0000,0000,0000,,so there's regularity in the structure of the data
Dialogue: 0,0:04:57.73,0:04:59.33,*Default,NTP,0000,0000,0000,,in a table now
Dialogue: 0,0:04:59.33,0:05:01.80,*Default,NTP,0000,0000,0000,,a database can have multiple different tables
Dialogue: 0,0:05:01.80,0:05:03.20,*Default,NTP,0000,0000,0000,,with different structures
Dialogue: 0,0:05:03.80,0:05:07.17,*Default,NTP,0000,0000,0000,,a structured query language or sequel
Dialogue: 0,0:05:07.67,0:05:11.07,*Default,NTP,0000,0000,0000,,is perhaps the most widely used programming language
Dialogue: 0,0:05:11.17,0:05:12.40,*Default,NTP,0000,0000,0000,,in terms of the number
Dialogue: 0,0:05:12.40,0:05:14.57,*Default,NTP,0000,0000,0000,,of people who write programs in it
Dialogue: 0,0:05:15.07,0:05:16.07,*Default,NTP,0000,0000,0000,,why is that
Dialogue: 0,0:05:16.27,0:05:18.67,*Default,NTP,0000,0000,0000,,while software engineers use it all the time
Dialogue: 0,0:05:18.67,0:05:20.30,*Default,NTP,0000,0000,0000,,in order to access data
Dialogue: 0,0:05:20.30,0:05:21.60,*Default,NTP,0000,0000,0000,,for their programs
Dialogue: 0,0:05:21.80,0:05:23.00,*Default,NTP,0000,0000,0000,,and lots of people who
Dialogue: 0,0:05:23.00,0:05:26.07,*Default,NTP,0000,0000,0000,,aren't software engineers use sequel as well
Dialogue: 0,0:05:26.40,0:05:28.67,*Default,NTP,0000,0000,0000,,in order to extract information
Dialogue: 0,0:05:28.67,0:05:31.20,*Default,NTP,0000,0000,0000,,that they want to use in order to make decisions
Dialogue: 0,0:05:31.60,0:05:33.90,*Default,NTP,0000,0000,0000,,so companies organizations
Dialogue: 0,0:05:33.90,0:05:36.10,*Default,NTP,0000,0000,0000,,I'll keep their data in databases
Dialogue: 0,0:05:36.13,0:05:37.93,*Default,NTP,0000,0000,0000,,and the structured query language
Dialogue: 0,0:05:38.00,0:05:40.70,*Default,NTP,0000,0000,0000,,is the language that almost everybody uses
Dialogue: 0,0:05:40.73,0:05:42.40,*Default,NTP,0000,0000,0000,,to access that information
Dialogue: 0,0:05:44.07,0:05:47.00,*Default,NTP,0000,0000,0000,,sql is a declarative programming language
Dialogue: 0,0:05:47.77,0:05:48.57,*Default,NTP,0000,0000,0000,,what's that
Dialogue: 0,0:05:49.37,0:05:51.00,*Default,NTP,0000,0000,0000,,well in a declarative language
Dialogue: 0,0:05:51.17,0:05:53.37,*Default,NTP,0000,0000,0000,,sql is the most common example
Dialogue: 0,0:05:53.37,0:05:55.57,*Default,NTP,0000,0000,0000,,but there are many others such as prologue
Dialogue: 0,0:05:56.33,0:05:59.93,*Default,NTP,0000,0000,0000,,a program is a description of the desired result
Dialogue: 0,0:06:00.00,0:06:03.10,*Default,NTP,0000,0000,0000,,that you want your computer to generate
Dialogue: 0,0:06:04.10,0:06:06.13,*Default,NTP,0000,0000,0000,,the interpreter's job is to figure out how to
Dialogue: 0,0:06:06.13,0:06:07.40,*Default,NTP,0000,0000,0000,,generate that result
Dialogue: 0,0:06:07.40,0:06:08.20,*Default,NTP,0000,0000,0000,,for you
Dialogue: 0,0:06:08.80,0:06:11.47,*Default,NTP,0000,0000,0000,,that's different from an imperative language
Dialogue: 0,0:06:11.53,0:06:13.73,*Default,NTP,0000,0000,0000,,such as python or scheme
Dialogue: 0,0:06:14.07,0:06:16.97,*Default,NTP,0000,0000,0000,,or instead when you write a program in that language
Dialogue: 0,0:06:17.10,0:06:18.47,*Default,NTP,0000,0000,0000,,it's a description of some
Dialogue: 0,0:06:18.47,0:06:21.27,*Default,NTP,0000,0000,0000,,computational process or processes
Dialogue: 0,0:06:21.27,0:06:22.97,*Default,NTP,0000,0000,0000,,that you want to be carried out
Dialogue: 0,0:06:23.40,0:06:26.40,*Default,NTP,0000,0000,0000,,the job of an interpreter in an imperative language
Dialogue: 0,0:06:26.40,0:06:28.40,*Default,NTP,0000,0000,0000,,is to carry out the execution
Dialogue: 0,0:06:28.40,0:06:29.87,*Default,NTP,0000,0000,0000,,and evaluation rules
Dialogue: 0,0:06:30.10,0:06:32.87,*Default,NTP,0000,0000,0000,,in order to have a correctly interpreted program
Dialogue: 0,0:06:33.07,0:06:35.17,*Default,NTP,0000,0000,0000,,and you've done this in your project
Dialogue: 0,0:06:36.00,0:06:38.80,*Default,NTP,0000,0000,0000,,so there's more flexibility in a declarative
Dialogue: 0,0:06:38.80,0:06:40.27,*Default,NTP,0000,0000,0000,,language interpreter
Dialogue: 0,0:06:40.53,0:06:43.17,*Default,NTP,0000,0000,0000,,we'll see what I mean by that in time
Dialogue: 0,0:06:43.40,0:06:45.00,*Default,NTP,0000,0000,0000,,but here's a place to start
Dialogue: 0,0:06:45.77,0:06:47.33,*Default,NTP,0000,0000,0000,,in an imperative language
Dialogue: 0,0:06:47.33,0:06:50.27,*Default,NTP,0000,0000,0000,,if you write a quadratic time algorithm
Dialogue: 0,0:06:50.97,0:06:53.93,*Default,NTP,0000,0000,0000,,by specifying that computational process
Dialogue: 0,0:06:54.27,0:06:57.30,*Default,NTP,0000,0000,0000,,it's probably gonna run in quadratic time
Dialogue: 0,0:06:58.27,0:06:59.77,*Default,NTP,0000,0000,0000,,but in a declarative language
Dialogue: 0,0:06:59.77,0:07:01.33,*Default,NTP,0000,0000,0000,,you just say what you want
Dialogue: 0,0:07:01.87,0:07:04.33,*Default,NTP,0000,0000,0000,,and if there are multiple ways to compute that
Dialogue: 0,0:07:04.57,0:07:06.77,*Default,NTP,0000,0000,0000,,one of which runs in quadratic time
Dialogue: 0,0:07:06.77,0:07:08.87,*Default,NTP,0000,0000,0000,,one of which runs in linear time
Dialogue: 0,0:07:09.47,0:07:11.37,*Default,NTP,0000,0000,0000,,well it's up to the interpreter to
Dialogue: 0,0:07:11.37,0:07:13.20,*Default,NTP,0000,0000,0000,,choose among those options
Dialogue: 0,0:07:13.50,0:07:14.47,*Default,NTP,0000,0000,0000,,in order
Dialogue: 0,0:07:14.60,0:07:18.00,*Default,NTP,0000,0000,0000,,to compute what you want as efficiently as possible
Dialogue: 0,0:07:18.80,0:07:20.53,*Default,NTP,0000,0000,0000,,so a lot of the interesting research
Dialogue: 0,0:07:20.53,0:07:22.17,*Default,NTP,0000,0000,0000,,and declarative languages
Dialogue: 0,0:07:22.27,0:07:23.80,*Default,NTP,0000,0000,0000,,is in making decisions
Dialogue: 0,0:07:23.80,0:07:26.20,*Default,NTP,0000,0000,0000,,about how to compute the desired result
Dialogue: 0,0:07:26.53,0:07:29.73,*Default,NTP,0000,0000,0000,,given that there are many ways to compute it correctly
Dialogue: 0,0:07:29.73,0:07:32.13,*Default,NTP,0000,0000,0000,,but some of them are faster than others
Dialogue: 0,0:07:33.93,0:07:36.47,*Default,NTP,0000,0000,0000,,okay so what are these languages actually look like
Dialogue: 0,0:07:36.67,0:07:38.67,*Default,NTP,0000,0000,0000,,we're going to focus on sequel
Dialogue: 0,0:07:39.47,0:07:42.73,*Default,NTP,0000,0000,0000,,in sequel you can have statements such as
Dialogue: 0,0:07:43.00,0:07:45.53,*Default,NTP,0000,0000,0000,,create tapal cities as
Dialogue: 0,0:07:46.13,0:07:48.67,*Default,NTP,0000,0000,0000,,select 38 as latitude one
Dialogue: 0,0:07:48.67,0:07:51.27,*Default,NTP,0000,0000,0000,,22 as longitude berkeley as name
Dialogue: 0,0:07:52.73,0:07:54.57,*Default,NTP,0000,0000,0000,,okay so what's happened so far
Dialogue: 0,0:07:54.80,0:07:57.10,*Default,NTP,0000,0000,0000,,is we've said we're going to create a table called
Dialogue: 0,0:07:57.10,0:07:57.90,*Default,NTP,0000,0000,0000,,cities
Dialogue: 0,0:07:58.20,0:08:01.27,*Default,NTP,0000,0000,0000,,we're going to have columns latitude longitude and name
Dialogue: 0,0:08:01.70,0:08:03.90,*Default,NTP,0000,0000,0000,,and in the first row we have thirty eight
Dialogue: 0,0:08:03.90,0:08:07.37,*Default,NTP,0000,0000,0000,,one twenty two and berkeley as the values in that row
Dialogue: 0,0:08:08.70,0:08:10.67,*Default,NTP,0000,0000,0000,,we want to union this with other rows
Dialogue: 0,0:08:10.67,0:08:12.07,*Default,NTP,0000,0000,0000,,so that we can select 42
Dialogue: 0,0:08:12.07,0:08:13.67,*Default,NTP,0000,0000,0000,,71 Cambridge
Dialogue: 0,0:08:13.77,0:08:16.70,*Default,NTP,0000,0000,0000,,we can select 4593 Minneapolis
Dialogue: 0,0:08:16.73,0:08:19.87,*Default,NTP,0000,0000,0000,,and with a semicolon at the end of our statement
Dialogue: 0,0:08:19.87,0:08:21.57,*Default,NTP,0000,0000,0000,,we've created this table
Dialogue: 0,0:08:22.53,0:08:23.67,*Default,NTP,0000,0000,0000,,given a table
Dialogue: 0,0:08:23.87,0:08:25.77,*Default,NTP,0000,0000,0000,,you can also create other tables
Dialogue: 0,0:08:26.57,0:08:29.07,*Default,NTP,0000,0000,0000,,so here's another sequel statement
Dialogue: 0,0:08:29.27,0:08:32.53,*Default,NTP,0000,0000,0000,,select west coast as region name from cities
Dialogue: 0,0:08:32.57,0:08:36.77,*Default,NTP,0000,0000,0000,,where longitude is greater than requal to 115 union
Dialogue: 0,0:08:36.77,0:08:38.67,*Default,NTP,0000,0000,0000,,select other name from cities
Dialogue: 0,0:08:38.67,0:08:41.13,*Default,NTP,0000,0000,0000,,where longitude is less than 115
Dialogue: 0,0:08:41.47,0:08:43.07,*Default,NTP,0000,0000,0000,,hundred and fifteen is somewhere
Dialogue: 0,0:08:43.13,0:08:45.50,*Default,NTP,0000,0000,0000,,not too far away from san diego
Dialogue: 0,0:08:45.67,0:08:47.27,*Default,NTP,0000,0000,0000,,and this is supposed to define
Dialogue: 0,0:08:47.33,0:08:49.67,*Default,NTP,0000,0000,0000,,what's on the west coast versus what's not
Dialogue: 0,0:08:50.17,0:08:53.60,*Default,NTP,0000,0000,0000,,executing this statement will give us another table
Dialogue: 0,0:08:53.97,0:08:56.70,*Default,NTP,0000,0000,0000,,with a region column that says west coast or other
Dialogue: 0,0:08:57.00,0:08:59.90,*Default,NTP,0000,0000,0000,,and a name column which is the name of the city
Dialogue: 0,0:09:00.10,0:09:01.67,*Default,NTP,0000,0000,0000,,berkeley's on the west coast
Dialogue: 0,0:09:03.20,0:09:04.13,*Default,NTP,0000,0000,0000,,now I'm going to go
Dialogue: 0,0:09:04.13,0:09:04.53,*Default,NTP,0000,0000,0000,,through all the
Dialogue: 0,0:09:04.53,0:09:05.70,*Default,NTP,0000,0000,0000,,details of what's going
Dialogue: 0,0:09:05.70,0:09:07.50,*Default,NTP,0000,0000,0000,,on in these different statements
Dialogue: 0,0:09:07.80,0:09:10.57,*Default,NTP,0000,0000,0000,,but the point that you should take away it right now
Dialogue: 0,0:09:10.80,0:09:11.30,*Default,NTP,0000,0000,0000,,is that
Dialogue: 0,0:09:11.30,0:09:13.47,*Default,NTP,0000,0000,0000,,these are statements about the structure of the
Dialogue: 0,0:09:13.47,0:09:14.57,*Default,NTP,0000,0000,0000,,thing that's created
Dialogue: 0,0:09:15.17,0:09:18.13,*Default,NTP,0000,0000,0000,,and they don't necessarily say how to compute it
Dialogue: 0,0:09:18.60,0:09:21.30,*Default,NTP,0000,0000,0000,,that's up to the language interpreter
Dialogue: 0,0:09:23.50,0:09:25.87,*Default,NTP,0000,0000,0000,,the next video is going to teach you
Dialogue: 0,0:09:25.87,0:09:28.00,*Default,NTP,0000,0000,0000,,about a new programming language
Dialogue: 0,0:09:28.40,0:09:32.07,*Default,NTP,0000,0000,0000,,called sql the structured query language
Dialogue: 0,0:09:32.80,0:09:35.27,*Default,NTP,0000,0000,0000,,I like the video but it's out of date
Dialogue: 0,0:09:35.77,0:09:37.87,*Default,NTP,0000,0000,0000,,so instead of re recording it
Dialogue: 0,0:09:37.93,0:09:40.57,*Default,NTP,0000,0000,0000,,I'm going to tell you the part that's out of date
Dialogue: 0,0:09:41.33,0:09:44.93,*Default,NTP,0000,0000,0000,,we have a brand new way to run sequel in the browser
Dialogue: 0,0:09:45.13,0:09:47.10,*Default,NTP,0000,0000,0000,,that's a great way to get started
Dialogue: 0,0:09:47.90,0:09:49.20,*Default,NTP,0000,0000,0000,,if you press code
Dialogue: 0,0:09:50.37,0:09:54.27,*Default,NTP,0000,0000,0000,,it will bring you to code csixtuna org
Dialogue: 0,0:09:54.90,0:09:58.07,*Default,NTP,0000,0000,0000,,which has a python interpreter a scheme interpreter
Dialogue: 0,0:09:58.13,0:10:00.00,*Default,NTP,0000,0000,0000,,and a sequel interpreter
Dialogue: 0,0:10:00.97,0:10:04.77,*Default,NTP,0000,0000,0000,,the sequel interpreter does take a few seconds to load
Dialogue: 0,0:10:04.93,0:10:06.53,*Default,NTP,0000,0000,0000,,but once it's loaded
Dialogue: 0,0:10:06.70,0:10:09.87,*Default,NTP,0000,0000,0000,,it's a really nice way to interact with sequel
Dialogue: 0,0:10:10.20,0:10:13.67,*Default,NTP,0000,0000,0000,,and also has all of the tables from the
Dialogue: 0,0:10:13.73,0:10:16.53,*Default,NTP,0000,0000,0000,,lecture examples built in
Dialogue: 0,0:10:18.07,0:10:19.77,*Default,NTP,0000,0000,0000,,so when the following video
Dialogue: 0,0:10:19.77,0:10:22.33,*Default,NTP,0000,0000,0000,,gives you an array of options for how
Dialogue: 0,0:10:22.33,0:10:24.10,*Default,NTP,0000,0000,0000,,to interact with sequel
Dialogue: 0,0:10:24.40,0:10:25.73,*Default,NTP,0000,0000,0000,,they're all valid
Dialogue: 0,0:10:25.87,0:10:27.77,*Default,NTP,0000,0000,0000,,but this one's valid too
Dialogue: 0,0:10:27.97,0:10:30.37,*Default,NTP,0000,0000,0000,,and it's designed for this course
Dialogue: 0,0:10:30.47,0:10:31.80,*Default,NTP,0000,0000,0000,,to help students learn
Dialogue: 0,0:10:32.53,0:10:34.37,*Default,NTP,0000,0000,0000,,so I suggest you try it out
Dialogue: 0,0:10:36.33,0:10:38.30,*Default,NTP,0000,0000,0000,,time to learn a new programming language
Dialogue: 0,0:10:38.30,0:10:40.00,*Default,NTP,0000,0000,0000,,the structured query language
Dialogue: 0,0:10:40.77,0:10:44.40,*Default,NTP,0000,0000,0000,,sequel is standardized based on a specification
Dialogue: 0,0:10:44.40,0:10:48.07,*Default,NTP,0000,0000,0000,,except both by americans and internationally
Dialogue: 0,0:10:48.70,0:10:51.27,*Default,NTP,0000,0000,0000,,but the only people who don't accept it
Dialogue: 0,0:10:51.33,0:10:52.53,*Default,NTP,0000,0000,0000,,is the people who actually
Dialogue: 0,0:10:52.53,0:10:54.90,*Default,NTP,0000,0000,0000,,build database management systems
Dialogue: 0,0:10:54.93,0:10:56.90,*Default,NTP,0000,0000,0000,,so there are lots of different variance
Dialogue: 0,0:10:56.90,0:10:58.13,*Default,NTP,0000,0000,0000,,of this language
Dialogue: 0,0:10:58.33,0:11:01.37,*Default,NTP,0000,0000,0000,,but mostly the language behaves in the same way
Dialogue: 0,0:11:01.53,0:11:04.20,*Default,NTP,0000,0000,0000,,regardless of which database management system
Dialogue: 0,0:11:04.20,0:11:05.27,*Default,NTP,0000,0000,0000,,you're using
Dialogue: 0,0:11:05.90,0:11:07.30,*Default,NTP,0000,0000,0000,,although these
Dialogue: 0,0:11:07.30,0:11:09.50,*Default,NTP,0000,0000,0000,,different fenders that produce these big software
Dialogue: 0,0:11:09.50,0:11:11.77,*Default,NTP,0000,0000,0000,,packages are competing with each other
Dialogue: 0,0:11:11.90,0:11:14.00,*Default,NTP,0000,0000,0000,,and so they add various features
Dialogue: 0,0:11:14.00,0:11:15.40,*Default,NTP,0000,0000,0000,,that the other ones don't add
Dialogue: 0,0:11:16.07,0:11:20.70,*Default,NTP,0000,0000,0000,,we'll focus on a part of the language that's universal
Dialogue: 0,0:11:21.67,0:11:25.00,*Default,NTP,0000,0000,0000,,a select statement creates a new table
Dialogue: 0,0:11:25.53,0:11:28.67,*Default,NTP,0000,0000,0000,,either from scratch or by projecting a table
Dialogue: 0,0:11:30.50,0:11:35.00,*Default,NTP,0000,0000,0000,,a create table statement gives a global name to a table
Dialogue: 0,0:11:35.77,0:11:39.30,*Default,NTP,0000,0000,0000,,so you can use select in order to create a table
Dialogue: 0,0:11:39.30,0:11:40.93,*Default,NTP,0000,0000,0000,,but you need to create table in order
Dialogue: 0,0:11:40.93,0:11:41.93,*Default,NTP,0000,0000,0000,,to give it a name
Dialogue: 0,0:11:41.93,0:11:43.07,*Default,NTP,0000,0000,0000,,that you can reuse
Dialogue: 0,0:11:44.77,0:11:46.67,*Default,NTP,0000,0000,0000,,and that's all we'll really focus on
Dialogue: 0,0:11:46.67,0:11:48.47,*Default,NTP,0000,0000,0000,,lots of other statements exist
Dialogue: 0,0:11:48.60,0:11:52.00,*Default,NTP,0000,0000,0000,,and allows the lead explain insert for place update etc
Dialogue: 0,0:11:52.00,0:11:53.67,*Default,NTP,0000,0000,0000,,actually there are several more
Dialogue: 0,0:11:54.13,0:11:55.73,*Default,NTP,0000,0000,0000,,and they're important
Dialogue: 0,0:11:55.73,0:11:57.30,*Default,NTP,0000,0000,0000,,if you're actually going to use one of these
Dialogue: 0,0:11:57.30,0:11:58.70,*Default,NTP,0000,0000,0000,,systems in a large
Dialogue: 0,0:11:58.70,0:12:00.30,*Default,NTP,0000,0000,0000,,industrial application
Dialogue: 0,0:12:01.00,0:12:02.93,*Default,NTP,0000,0000,0000,,but they're not too important for
Dialogue: 0,0:12:03.07,0:12:06.33,*Default,NTP,0000,0000,0000,,understanding the heart of how sequel works
Dialogue: 0,0:12:07.07,0:12:10.60,*Default,NTP,0000,0000,0000,,most of the important action is in the select statement
Dialogue: 0,0:12:10.60,0:12:13.87,*Default,NTP,0000,0000,0000,,so we're going to focus almost exclusively on how
Dialogue: 0,0:12:13.87,0:12:15.13,*Default,NTP,0000,0000,0000,,select works
Dialogue: 0,0:12:17.00,0:12:20.30,*Default,NTP,0000,0000,0000,,a code for executing select statements
Dialogue: 0,0:12:20.30,0:12:22.53,*Default,NTP,0000,0000,0000,,fits on a single sheet of paper
Dialogue: 0,0:12:22.93,0:12:25.77,*Default,NTP,0000,0000,0000,,so you can build an interpreter for this language
Dialogue: 0,0:12:25.93,0:12:28.20,*Default,NTP,0000,0000,0000,,quite easily using python
Dialogue: 0,0:12:28.27,0:12:30.57,*Default,NTP,0000,0000,0000,,and will go over the details of that
Dialogue: 0,0:12:30.57,0:12:32.07,*Default,NTP,0000,0000,0000,,in the next lecture
Dialogue: 0,0:12:32.60,0:12:35.40,*Default,NTP,0000,0000,0000,,but first we have to learn how to use the language
Dialogue: 0,0:12:36.67,0:12:38.07,*Default,NTP,0000,0000,0000,,we're going to take a break
Dialogue: 0,0:12:38.10,0:12:42.10,*Default,NTP,0000,0000,0000,,from fibonacci sequences and integer sequences
Dialogue: 0,0:12:42.10,0:12:43.27,*Default,NTP,0000,0000,0000,,and all of that
Dialogue: 0,0:12:43.33,0:12:45.93,*Default,NTP,0000,0000,0000,,and instead focus on a theme for the day
Dialogue: 0,0:12:45.93,0:12:48.27,*Default,NTP,0000,0000,0000,,and that theme is dogs
Dialogue: 0,0:12:48.60,0:12:50.10,*Default,NTP,0000,0000,0000,,I love dogs
Dialogue: 0,0:12:50.80,0:12:53.33,*Default,NTP,0000,0000,0000,,don't actually own this many dogs
Dialogue: 0,0:12:53.33,0:12:55.80,*Default,NTP,0000,0000,0000,,but I picked this picture off of the internet
Dialogue: 0,0:12:55.93,0:12:57.67,*Default,NTP,0000,0000,0000,,because that dog right there
Dialogue: 0,0:12:57.77,0:13:00.13,*Default,NTP,0000,0000,0000,,looks an awful lot like my dog
Dialogue: 0,0:13:03.07,0:13:06.07,*Default,NTP,0000,0000,0000,,if you want to follow along which I highly recommend
Dialogue: 0,0:13:06.17,0:13:08.10,*Default,NTP,0000,0000,0000,,you should install sequel light
Dialogue: 0,0:13:08.30,0:13:10.70,*Default,NTP,0000,0000,0000,,which is the simplest and free
Dialogue: 0,0:13:10.93,0:13:12.80,*Default,NTP,0000,0000,0000,,database management system
Dialogue: 0,0:13:13.37,0:13:14.87,*Default,NTP,0000,0000,0000,,you can download it here
Dialogue: 0,0:13:15.13,0:13:17.40,*Default,NTP,0000,0000,0000,,there's an online version of sequel light
Dialogue: 0,0:13:17.60,0:13:18.97,*Default,NTP,0000,0000,0000,,at this address
Dialogue: 0,0:13:19.37,0:13:21.13,*Default,NTP,0000,0000,0000,,or if you want
Dialogue: 0,0:13:21.27,0:13:24.27,*Default,NTP,0000,0000,0000,,you can use the sequel example python program
Dialogue: 0,0:13:24.40,0:13:25.67,*Default,NTP,0000,0000,0000,,from the textbook
Dialogue: 0,0:13:25.97,0:13:27.30,*Default,NTP,0000,0000,0000,,which you can find here
Dialogue: 0,0:13:27.57,0:13:30.87,*Default,NTP,0000,0000,0000,,it's certainly not as feature complete as equal life
Dialogue: 0,0:13:30.97,0:13:33.10,*Default,NTP,0000,0000,0000,,because it's only supposed to demonstrate
Dialogue: 0,0:13:33.10,0:13:34.20,*Default,NTP,0000,0000,0000,,how to interpret
Dialogue: 0,0:13:34.40,0:13:36.33,*Default,NTP,0000,0000,0000,,the essence of a select statement
Dialogue: 0,0:13:36.67,0:13:37.77,*Default,NTP,0000,0000,0000,,but it will run
Dialogue: 0,0:13:37.80,0:13:40.07,*Default,NTP,0000,0000,0000,,all of the examples that we'll talk about in this
Dialogue: 0,0:13:40.07,0:13:41.30,*Default,NTP,0000,0000,0000,,lecture in the next
Dialogue: 0,0:13:41.37,0:13:43.77,*Default,NTP,0000,0000,0000,,so that's one option for you to get started
Dialogue: 0,0:13:44.93,0:13:48.53,*Default,NTP,0000,0000,0000,,our first step is to get some data in some tables
Dialogue: 0,0:13:48.73,0:13:51.17,*Default,NTP,0000,0000,0000,,and so we'll use a select statement for that
Dialogue: 0,0:13:51.33,0:13:53.53,*Default,NTP,0000,0000,0000,,using literal expressions
Dialogue: 0,0:13:53.67,0:13:56.17,*Default,NTP,0000,0000,0000,,in order to declare which data we want
Dialogue: 0,0:13:57.30,0:13:59.60,*Default,NTP,0000,0000,0000,,how select statement always includes a
Dialogue: 0,0:13:59.60,0:14:00.90,*Default,NTP,0000,0000,0000,,comma separated list
Dialogue: 0,0:14:00.90,0:14:03.10,*Default,NTP,0000,0000,0000,,of column descriptions
Dialogue: 0,0:14:03.67,0:14:06.30,*Default,NTP,0000,0000,0000,,a column description is an expression
Dialogue: 0,0:14:06.57,0:14:08.57,*Default,NTP,0000,0000,0000,,optionally followed by as
Dialogue: 0,0:14:09.17,0:14:10.10,*Default,NTP,0000,0000,0000,,and a name
Dialogue: 0,0:14:11.10,0:14:12.57,*Default,NTP,0000,0000,0000,,so I can say select
Dialogue: 0,0:14:12.87,0:14:15.13,*Default,NTP,0000,0000,0000,,expression tells me what I'm selecting
Dialogue: 0,0:14:15.20,0:14:19.17,*Default,NTP,0000,0000,0000,,and then as name name tells me the name of the column
Dialogue: 0,0:14:19.87,0:14:21.33,*Default,NTP,0000,0000,0000,,and if I put a comma there
Dialogue: 0,0:14:21.40,0:14:23.53,*Default,NTP,0000,0000,0000,,and some more expression as names
Dialogue: 0,0:14:23.90,0:14:26.80,*Default,NTP,0000,0000,0000,,then I'll have multiple columns in the result
Dialogue: 0,0:14:27.30,0:14:30.33,*Default,NTP,0000,0000,0000,,so this would create a two column table
Dialogue: 0,0:14:31.53,0:14:34.33,*Default,NTP,0000,0000,0000,,as and the name are optional
Dialogue: 0,0:14:35.13,0:14:36.80,*Default,NTP,0000,0000,0000,,you can have more of these
Dialogue: 0,0:14:36.97,0:14:39.77,*Default,NTP,0000,0000,0000,,whenever you're done declaring different columns
Dialogue: 0,0:14:39.80,0:14:42.37,*Default,NTP,0000,0000,0000,,you should put a semicolon at the end
Dialogue: 0,0:14:42.67,0:14:45.80,*Default,NTP,0000,0000,0000,,all of sequel statements end in a semicolon
Dialogue: 0,0:14:47.93,0:14:50.00,*Default,NTP,0000,0000,0000,,if you select literals
Dialogue: 0,0:14:50.37,0:14:52.57,*Default,NTP,0000,0000,0000,,which are expressions like the No.2
Dialogue: 0,0:14:52.57,0:14:54.00,*Default,NTP,0000,0000,0000,,or the string berkeley
Dialogue: 0,0:14:54.37,0:14:56.60,*Default,NTP,0000,0000,0000,,that will create a one row table
Dialogue: 0,0:14:58.40,0:15:01.13,*Default,NTP,0000,0000,0000,,but if you want to create a multi road table
Dialogue: 0,0:15:01.33,0:15:04.40,*Default,NTP,0000,0000,0000,,you can union together two select statements
Dialogue: 0,0:15:04.77,0:15:07.77,*Default,NTP,0000,0000,0000,,the union of two select statements is another table
Dialogue: 0,0:15:07.77,0:15:09.60,*Default,NTP,0000,0000,0000,,but it contains the rows of both
Dialogue: 0,0:15:11.00,0:15:12.60,*Default,NTP,0000,0000,0000,,you can only union together
Dialogue: 0,0:15:12.60,0:15:15.07,*Default,NTP,0000,0000,0000,,tables that have the same number of columns
Dialogue: 0,0:15:15.07,0:15:17.67,*Default,NTP,0000,0000,0000,,and the same type of information in each column
Dialogue: 0,0:15:18.27,0:15:21.37,*Default,NTP,0000,0000,0000,,but the two select statements that your union together
Dialogue: 0,0:15:21.60,0:15:24.60,*Default,NTP,0000,0000,0000,,don't need to have the same names for the columns
Dialogue: 0,0:15:24.90,0:15:26.70,*Default,NTP,0000,0000,0000,,it will just use the names
Dialogue: 0,0:15:26.70,0:15:28.57,*Default,NTP,0000,0000,0000,,of the first select statement
Dialogue: 0,0:15:28.97,0:15:33.17,*Default,NTP,0000,0000,0000,,in order to name the columns in the final result
Dialogue: 0,0:15:34.33,0:15:36.40,*Default,NTP,0000,0000,0000,,okay I promised your dogs
Dialogue: 0,0:15:36.57,0:15:38.87,*Default,NTP,0000,0000,0000,,let's pretend I have a lot of dogs
Dialogue: 0,0:15:39.00,0:15:41.77,*Default,NTP,0000,0000,0000,,so many that I need to put them in a database
Dialogue: 0,0:15:42.17,0:15:46.33,*Default,NTP,0000,0000,0000,,and I like to name my dogs alphabetically
Dialogue: 0,0:15:46.40,0:15:48.70,*Default,NTP,0000,0000,0000,,naturally so that I can keep track of them
Dialogue: 0,0:15:48.93,0:15:51.67,*Default,NTP,0000,0000,0000,,and I also really like us presidents
Dialogue: 0,0:15:51.97,0:15:54.47,*Default,NTP,0000,0000,0000,,then I might have a dog named abraham
Dialogue: 0,0:15:54.50,0:15:56.47,*Default,NTP,0000,0000,0000,,and a dog named barack
Dialogue: 0,0:15:56.70,0:15:59.33,*Default,NTP,0000,0000,0000,,and I might put those into a table
Dialogue: 0,0:15:59.73,0:16:01.20,*Default,NTP,0000,0000,0000,,so a select statement
Dialogue: 0,0:16:01.53,0:16:05.57,*Default,NTP,0000,0000,0000,,with literals abraham and barack will create
Dialogue: 0,0:16:05.67,0:16:07.27,*Default,NTP,0000,0000,0000,,a one row table
Dialogue: 0,0:16:08.00,0:16:11.40,*Default,NTP,0000,0000,0000,,with two columns a parent column and a child column
Dialogue: 0,0:16:11.90,0:16:13.73,*Default,NTP,0000,0000,0000,,and the values that go in those
Dialogue: 0,0:16:13.77,0:16:15.30,*Default,NTP,0000,0000,0000,,are the values of the literals
Dialogue: 0,0:16:15.30,0:16:17.77,*Default,NTP,0000,0000,0000,,abraham the string and barack the string
Dialogue: 0,0:16:18.57,0:16:20.67,*Default,NTP,0000,0000,0000,,now if I have more dogs which I do
Dialogue: 0,0:16:21.07,0:16:23.40,*Default,NTP,0000,0000,0000,,then I'll need to union
Dialogue: 0,0:16:23.40,0:16:25.90,*Default,NTP,0000,0000,0000,,instead of putting the semicolin at the end
Dialogue: 0,0:16:26.40,0:16:27.50,*Default,NTP,0000,0000,0000,,and write out
Dialogue: 0,0:16:27.53,0:16:28.90,*Default,NTP,0000,0000,0000,,the other rows
Dialogue: 0,0:16:28.90,0:16:31.30,*Default,NTP,0000,0000,0000,,that I want to include in the final result
Dialogue: 0,0:16:31.93,0:16:35.40,*Default,NTP,0000,0000,0000,,so if I also select abraham comma clinton
Dialogue: 0,0:16:35.53,0:16:37.90,*Default,NTP,0000,0000,0000,,that will add another rope that says
Dialogue: 0,0:16:37.93,0:16:40.20,*Default,NTP,0000,0000,0000,,abraham is the parent of clinton
Dialogue: 0,0:16:40.60,0:16:41.47,*Default,NTP,0000,0000,0000,,and over here
Dialogue: 0,0:16:41.47,0:16:44.33,*Default,NTP,0000,0000,0000,,I'm just drawing the family tree of all my dogs
Dialogue: 0,0:16:45.53,0:16:47.57,*Default,NTP,0000,0000,0000,,delano's the parent of herbert
Dialogue: 0,0:16:47.67,0:16:49.77,*Default,NTP,0000,0000,0000,,filmore's the parent of abraham
Dialogue: 0,0:16:49.87,0:16:51.77,*Default,NTP,0000,0000,0000,,filmore's the parent of delano
Dialogue: 0,0:16:51.87,0:16:53.90,*Default,NTP,0000,0000,0000,,filmore's the parent of grover
Dialogue: 0,0:16:53.97,0:16:56.90,*Default,NTP,0000,0000,0000,,and eisenhower's the parent of filmore
Dialogue: 0,0:16:57.57,0:16:58.30,*Default,NTP,0000,0000,0000,,there is no
Dialogue: 0,0:16:58.30,0:17:01.57,*Default,NTP,0000,0000,0000,,interesting historical allegory going on here
Dialogue: 0,0:17:01.93,0:17:04.80,*Default,NTP,0000,0000,0000,,I just picked this structure arbitrarily
Dialogue: 0,0:17:04.90,0:17:09.00,*Default,NTP,0000,0000,0000,,and I picked the names because they go from a to h
Dialogue: 0,0:17:10.20,0:17:13.27,*Default,NTP,0000,0000,0000,,so over here on the left is a valid sequel statement
Dialogue: 0,0:17:13.33,0:17:17.37,*Default,NTP,0000,0000,0000,,and it will create a table with seven rows
Dialogue: 0,0:17:17.80,0:17:20.73,*Default,NTP,0000,0000,0000,,two columns a parent and a child column
Dialogue: 0,0:17:20.87,0:17:21.27,*Default,NTP,0000,0000,0000,,and
Dialogue: 0,0:17:21.27,0:17:24.47,*Default,NTP,0000,0000,0000,,these are the data that will be stored in those ropes
Dialogue: 0,0:17:26.37,0:17:27.17,*Default,NTP,0000,0000,0000,,now
Dialogue: 0,0:17:27.77,0:17:30.47,*Default,NTP,0000,0000,0000,,sequel is often uses an interactive language
Dialogue: 0,0:17:30.47,0:17:32.67,*Default,NTP,0000,0000,0000,,you just want to see what's in the database
Dialogue: 0,0:17:33.00,0:17:34.00,*Default,NTP,0000,0000,0000,,and so
Dialogue: 0,0:17:34.73,0:17:37.70,*Default,NTP,0000,0000,0000,,by default the result of a select statement
Dialogue: 0,0:17:37.70,0:17:39.17,*Default,NTP,0000,0000,0000,,or a bunch of select statements
Dialogue: 0,0:17:39.17,0:17:40.17,*Default,NTP,0000,0000,0000,,union together
Dialogue: 0,0:17:40.37,0:17:41.93,*Default,NTP,0000,0000,0000,,won't be stored
Dialogue: 0,0:17:42.80,0:17:43.77,*Default,NTP,0000,0000,0000,,the result of a select
Dialogue: 0,0:17:43.77,0:17:46.47,*Default,NTP,0000,0000,0000,,statement is displayed to the user instead
Dialogue: 0,0:17:47.00,0:17:48.40,*Default,NTP,0000,0000,0000,,if you want to store it
Dialogue: 0,0:17:48.40,0:17:50.70,*Default,NTP,0000,0000,0000,,give it a name and be able to use it later
Dialogue: 0,0:17:50.87,0:17:53.07,*Default,NTP,0000,0000,0000,,you need a create table statement
Dialogue: 0,0:17:53.53,0:17:55.87,*Default,NTP,0000,0000,0000,,so create table just says create table
Dialogue: 0,0:17:55.97,0:17:58.50,*Default,NTP,0000,0000,0000,,give the name of the table and then as
Dialogue: 0,0:17:58.73,0:18:01.57,*Default,NTP,0000,0000,0000,,and you can write any select statement there you want
Dialogue: 0,0:18:02.33,0:18:04.33,*Default,NTP,0000,0000,0000,,so here's one big select statement
Dialogue: 0,0:18:05.17,0:18:08.00,*Default,NTP,0000,0000,0000,,if I write create table parents as
Dialogue: 0,0:18:08.70,0:18:10.53,*Default,NTP,0000,0000,0000,,conventionally I will indent this
Dialogue: 0,0:18:10.53,0:18:12.27,*Default,NTP,0000,0000,0000,,although that's not necessary
Dialogue: 0,0:18:12.60,0:18:14.53,*Default,NTP,0000,0000,0000,,spacing is totally arbitrary
Dialogue: 0,0:18:14.53,0:18:16.60,*Default,NTP,0000,0000,0000,,I've only spaced things out in this way
Dialogue: 0,0:18:16.77,0:18:18.40,*Default,NTP,0000,0000,0000,,so that it's easy to read
Dialogue: 0,0:18:19.97,0:18:23.33,*Default,NTP,0000,0000,0000,,this is also a fully correct
Dialogue: 0,0:18:24.33,0:18:25.60,*Default,NTP,0000,0000,0000,,sequel statement
Dialogue: 0,0:18:25.77,0:18:27.37,*Default,NTP,0000,0000,0000,,that creates a table cult
Dialogue: 0,0:18:27.37,0:18:29.47,*Default,NTP,0000,0000,0000,,parents with this data inside
Dialogue: 0,0:18:30.67,0:18:33.27,*Default,NTP,0000,0000,0000,,and if we wanted to draw that out explicitly
Dialogue: 0,0:18:33.27,0:18:35.20,*Default,NTP,0000,0000,0000,,we might write something like parents
Dialogue: 0,0:18:35.20,0:18:37.80,*Default,NTP,0000,0000,0000,,with a parent column and a child column
Dialogue: 0,0:18:37.80,0:18:39.30,*Default,NTP,0000,0000,0000,,and all this stuff inside
Dialogue: 0,0:18:42.27,0:18:45.30,*Default,NTP,0000,0000,0000,,now that we know how to create tables from scratch
Dialogue: 0,0:18:45.53,0:18:47.97,*Default,NTP,0000,0000,0000,,let's talk about projecting tables
Dialogue: 0,0:18:49.30,0:18:52.13,*Default,NTP,0000,0000,0000,,so select statements can project existing tables
Dialogue: 0,0:18:52.13,0:18:53.30,*Default,NTP,0000,0000,0000,,into new tables
Dialogue: 0,0:18:54.60,0:18:57.50,*Default,NTP,0000,0000,0000,,a select statement can specify an input
Dialogue: 0,0:18:57.87,0:18:59.60,*Default,NTP,0000,0000,0000,,using a from claws
Dialogue: 0,0:19:00.37,0:19:02.57,*Default,NTP,0000,0000,0000,,so I told you that select statements look like this
Dialogue: 0,0:19:02.57,0:19:04.70,*Default,NTP,0000,0000,0000,,expression is name expression is names
Dialogue: 0,0:19:05.20,0:19:06.47,*Default,NTP,0000,0000,0000,,these together
Dialogue: 0,0:19:06.67,0:19:10.50,*Default,NTP,0000,0000,0000,,are all just descriptions of the columns of the result
Dialogue: 0,0:19:11.17,0:19:12.67,*Default,NTP,0000,0000,0000,,select statements can have other
Dialogue: 0,0:19:12.67,0:19:15.00,*Default,NTP,0000,0000,0000,,things than just column descriptions
Dialogue: 0,0:19:15.70,0:19:17.90,*Default,NTP,0000,0000,0000,,the from claws says which table
Dialogue: 0,0:19:17.90,0:19:19.57,*Default,NTP,0000,0000,0000,,are going to take crows from
Dialogue: 0,0:19:19.87,0:19:21.80,*Default,NTP,0000,0000,0000,,in order to create these columns
Dialogue: 0,0:19:23.70,0:19:26.80,*Default,NTP,0000,0000,0000,,a subset of the rows of the input table can be selected
Dialogue: 0,0:19:26.80,0:19:28.67,*Default,NTP,0000,0000,0000,,using a ware claws
Dialogue: 0,0:19:29.17,0:19:31.13,*Default,NTP,0000,0000,0000,,so I could say from somewhere
Dialogue: 0,0:19:31.30,0:19:33.37,*Default,NTP,0000,0000,0000,,where some condition holds
Dialogue: 0,0:19:33.37,0:19:34.47,*Default,NTP,0000,0000,0000,,and then I'll only get
Dialogue: 0,0:19:34.47,0:19:36.30,*Default,NTP,0000,0000,0000,,some of the rows from this table
Dialogue: 0,0:19:37.33,0:19:38.50,*Default,NTP,0000,0000,0000,,and in what order
Dialogue: 0,0:19:38.73,0:19:40.87,*Default,NTP,0000,0000,0000,,while an ordering over the remaining rows
Dialogue: 0,0:19:40.87,0:19:43.37,*Default,NTP,0000,0000,0000,,can be declared using an order by claws
Dialogue: 0,0:19:44.90,0:19:46.00,*Default,NTP,0000,0000,0000,,so now we can see
Dialogue: 0,0:19:46.00,0:19:48.13,*Default,NTP,0000,0000,0000,,that there are lots of different parts
Dialogue: 0,0:19:48.13,0:19:49.60,*Default,NTP,0000,0000,0000,,to a select statement
Dialogue: 0,0:19:50.37,0:19:53.50,*Default,NTP,0000,0000,0000,,column descriptions determine how each input row
Dialogue: 0,0:19:53.93,0:19:55.70,*Default,NTP,0000,0000,0000,,that remains after you
Dialogue: 0,0:19:55.77,0:19:58.60,*Default,NTP,0000,0000,0000,,filter it with where and order it with order by
Dialogue: 0,0:19:58.93,0:20:01.07,*Default,NTP,0000,0000,0000,,is projected into a result row
Dialogue: 0,0:20:01.57,0:20:03.80,*Default,NTP,0000,0000,0000,,so every select statement creates a new table
Dialogue: 0,0:20:03.80,0:20:05.33,*Default,NTP,0000,0000,0000,,with rows and columns
Dialogue: 0,0:20:05.37,0:20:07.13,*Default,NTP,0000,0000,0000,,the columns are described here
Dialogue: 0,0:20:07.40,0:20:09.00,*Default,NTP,0000,0000,0000,,the rows that we choose are here
Dialogue: 0,0:20:09.27,0:20:12.20,*Default,NTP,0000,0000,0000,,but the input rows get transformed or projected
Dialogue: 0,0:20:12.20,0:20:13.60,*Default,NTP,0000,0000,0000,,into the output rows
Dialogue: 0,0:20:14.77,0:20:16.90,*Default,NTP,0000,0000,0000,,so imagine I have my parents table
Dialogue: 0,0:20:16.90,0:20:18.70,*Default,NTP,0000,0000,0000,,which I already told you about
Dialogue: 0,0:20:19.50,0:20:21.73,*Default,NTP,0000,0000,0000,,and then I read another select statement
Dialogue: 0,0:20:21.90,0:20:24.00,*Default,NTP,0000,0000,0000,,select child from parents
Dialogue: 0,0:20:24.27,0:20:25.77,*Default,NTP,0000,0000,0000,,parents is the name of the table
Dialogue: 0,0:20:25.77,0:20:27.33,*Default,NTP,0000,0000,0000,,that contains these data
Dialogue: 0,0:20:28.00,0:20:30.13,*Default,NTP,0000,0000,0000,,where parent equals abraham
Dialogue: 0,0:20:31.67,0:20:35.70,*Default,NTP,0000,0000,0000,,well here are all of the different child parent pairs
Dialogue: 0,0:20:35.70,0:20:37.37,*Default,NTP,0000,0000,0000,,where the parent is abraham
Dialogue: 0,0:20:37.57,0:20:39.93,*Default,NTP,0000,0000,0000,,and the children are barack and clinton
Dialogue: 0,0:20:40.33,0:20:43.50,*Default,NTP,0000,0000,0000,,so by executing this select statement
Dialogue: 0,0:20:43.70,0:20:44.93,*Default,NTP,0000,0000,0000,,will get a table
Dialogue: 0,0:20:45.13,0:20:49.33,*Default,NTP,0000,0000,0000,,with a child column with barack and clinton as the rose
Dialogue: 0,0:20:50.90,0:20:53.60,*Default,NTP,0000,0000,0000,,if instead I said to select parent from parents
Dialogue: 0,0:20:53.60,0:20:55.87,*Default,NTP,0000,0000,0000,,where parent is greater than child
Dialogue: 0,0:20:56.47,0:20:58.80,*Default,NTP,0000,0000,0000,,comparison of string values
Dialogue: 0,0:20:58.87,0:21:00.87,*Default,NTP,0000,0000,0000,,will choose their alphabetical order
Dialogue: 0,0:21:00.87,0:21:04.10,*Default,NTP,0000,0000,0000,,so this has parent is later in the alphabet than child
Dialogue: 0,0:21:04.87,0:21:07.67,*Default,NTP,0000,0000,0000,,what will be created in the output table
Dialogue: 0,0:21:10.00,0:21:12.50,*Default,NTP,0000,0000,0000,,we'll have a table with a single column
Dialogue: 0,0:21:12.93,0:21:14.33,*Default,NTP,0000,0000,0000,,the parent column
Dialogue: 0,0:21:14.57,0:21:15.87,*Default,NTP,0000,0000,0000,,which will contain
Dialogue: 0,0:21:16.17,0:21:18.17,*Default,NTP,0000,0000,0000,,all of the different parents
Dialogue: 0,0:21:18.30,0:21:21.17,*Default,NTP,0000,0000,0000,,that come later in the alphabet than their children
Dialogue: 0,0:21:22.13,0:21:23.67,*Default,NTP,0000,0000,0000,,fillmore comes after abraham
Dialogue: 0,0:21:23.67,0:21:26.10,*Default,NTP,0000,0000,0000,,fillmore also comes after delano
Dialogue: 0,0:21:26.30,0:21:28.33,*Default,NTP,0000,0000,0000,,there aren't any other cases like that
Dialogue: 0,0:21:28.50,0:21:30.30,*Default,NTP,0000,0000,0000,,and so we get fillmore twice
Dialogue: 0,0:21:30.47,0:21:33.97,*Default,NTP,0000,0000,0000,,so here we can see it's possible to have the same row
Dialogue: 0,0:21:34.17,0:21:35.53,*Default,NTP,0000,0000,0000,,in terms of its values
Dialogue: 0,0:21:35.53,0:21:37.80,*Default,NTP,0000,0000,0000,,repeated multiple times in the table
Dialogue: 0,0:21:39.53,0:21:42.47,*Default,NTP,0000,0000,0000,,let's actually execute these different statements
Dialogue: 0,0:21:42.47,0:21:43.77,*Default,NTP,0000,0000,0000,,and watch how they work
Dialogue: 0,0:21:44.60,0:21:47.77,*Default,NTP,0000,0000,0000,,I'm going to use the online sequel interpreter
Dialogue: 0,0:21:48.77,0:21:51.80,*Default,NTP,0000,0000,0000,,here is the create table statement for parents
Dialogue: 0,0:21:52.10,0:21:53.53,*Default,NTP,0000,0000,0000,,if I execute it
Dialogue: 0,0:21:53.77,0:21:55.70,*Default,NTP,0000,0000,0000,,then parents is defined
Dialogue: 0,0:21:56.80,0:21:57.93,*Default,NTP,0000,0000,0000,,I could select
Dialogue: 0,0:21:57.97,0:22:01.40,*Default,NTP,0000,0000,0000,,all of the columns as shorthand for all of the columns
Dialogue: 0,0:22:02.07,0:22:03.50,*Default,NTP,0000,0000,0000,,from parents
Dialogue: 0,0:22:04.40,0:22:06.37,*Default,NTP,0000,0000,0000,,in order to see what's in that table
Dialogue: 0,0:22:07.27,0:22:10.70,*Default,NTP,0000,0000,0000,,and it says that parent and child are the two columns
Dialogue: 0,0:22:10.70,0:22:12.13,*Default,NTP,0000,0000,0000,,and here's all the data within
Dialogue: 0,0:22:14.07,0:22:16.73,*Default,NTP,0000,0000,0000,,so if I want to select the child
Dialogue: 0,0:22:17.53,0:22:19.40,*Default,NTP,0000,0000,0000,,from parents where
Dialogue: 0,0:22:20.57,0:22:23.77,*Default,NTP,0000,0000,0000,,the parent is named abraham
Dialogue: 0,0:22:26.47,0:22:29.67,*Default,NTP,0000,0000,0000,,executing that will give me barack and clinton
Dialogue: 0,0:22:30.47,0:22:33.57,*Default,NTP,0000,0000,0000,,if instead I want the parent
Dialogue: 0,0:22:34.50,0:22:35.93,*Default,NTP,0000,0000,0000,,where the parent
Dialogue: 0,0:22:36.33,0:22:38.07,*Default,NTP,0000,0000,0000,,is greater than the child
Dialogue: 0,0:22:40.93,0:22:43.47,*Default,NTP,0000,0000,0000,,we see that fillmore appears twice
Dialogue: 0,0:22:44.33,0:22:45.90,*Default,NTP,0000,0000,0000,,it's certainly also possible
Dialogue: 0,0:22:46.47,0:22:49.40,*Default,NTP,0000,0000,0000,,to investigate all of these examples in sequel light
Dialogue: 0,0:22:49.40,0:22:50.67,*Default,NTP,0000,0000,0000,,from the command line
Dialogue: 0,0:22:50.93,0:22:54.13,*Default,NTP,0000,0000,0000,,I can create the table that I talked about before
Dialogue: 0,0:22:54.87,0:22:56.20,*Default,NTP,0000,0000,0000,,and then select star
Dialogue: 0,0:22:56.33,0:22:59.30,*Default,NTP,0000,0000,0000,,from parents to get the entire table
Dialogue: 0,0:22:59.47,0:23:00.67,*Default,NTP,0000,0000,0000,,which is printed out
Dialogue: 0,0:23:00.67,0:23:03.27,*Default,NTP,0000,0000,0000,,as values separated by vertical bars
Dialogue: 0,0:23:03.77,0:23:05.90,*Default,NTP,0000,0000,0000,,if I only want the child
Dialogue: 0,0:23:06.20,0:23:09.80,*Default,NTP,0000,0000,0000,,from parents where the parent is abraham
Dialogue: 0,0:23:11.47,0:23:13.30,*Default,NTP,0000,0000,0000,,I'll get bar rock and clinton
Dialogue: 0,0:23:17.67,0:23:20.07,*Default,NTP,0000,0000,0000,,select statements can perform arithmetic
Dialogue: 0,0:23:23.27,0:23:24.73,*Default,NTP,0000,0000,0000,,in a select expression
Dialogue: 0,0:23:25.07,0:23:27.70,*Default,NTP,0000,0000,0000,,column names evaluate to row values
Dialogue: 0,0:23:28.17,0:23:30.30,*Default,NTP,0000,0000,0000,,and arithmetic expressions can
Dialogue: 0,0:23:30.37,0:23:32.80,*Default,NTP,0000,0000,0000,,combine row values and constance together
Dialogue: 0,0:23:32.80,0:23:34.27,*Default,NTP,0000,0000,0000,,to create new values
Dialogue: 0,0:23:35.87,0:23:38.00,*Default,NTP,0000,0000,0000,,we're going to do an example based on
Dialogue: 0,0:23:38.00,0:23:40.67,*Default,NTP,0000,0000,0000,,chairlifts at ski resorts
Dialogue: 0,0:23:41.40,0:23:44.60,*Default,NTP,0000,0000,0000,,let's say that every lift chair has a number
Dialogue: 0,0:23:45.17,0:23:48.93,*Default,NTP,0000,0000,0000,,and it also has the number of single riders
Dialogue: 0,0:23:48.97,0:23:52.60,*Default,NTP,0000,0000,0000,,and the number of couples riding the chairlift
Dialogue: 0,0:23:54.53,0:23:59.13,*Default,NTP,0000,0000,0000,,so this table would describe for example that chair 101
Dialogue: 0,0:23:59.60,0:24:02.33,*Default,NTP,0000,0000,0000,,has two single riders and two couples
Dialogue: 0,0:24:02.33,0:24:04.13,*Default,NTP,0000,0000,0000,,here shown in green and blue
Dialogue: 0,0:24:04.97,0:24:07.10,*Default,NTP,0000,0000,0000,,chair one oh two is three different couples
Dialogue: 0,0:24:07.37,0:24:10.00,*Default,NTP,0000,0000,0000,,and one oh three is mostly single riders
Dialogue: 0,0:24:10.00,0:24:11.70,*Default,NTP,0000,0000,0000,,okay let's say I wanted to check
Dialogue: 0,0:24:11.70,0:24:14.20,*Default,NTP,0000,0000,0000,,the total number of people on each chair
Dialogue: 0,0:24:14.77,0:24:17.33,*Default,NTP,0000,0000,0000,,I would write select the chair number
Dialogue: 0,0:24:17.50,0:24:20.20,*Default,NTP,0000,0000,0000,,and then an arithmetic expression
Dialogue: 0,0:24:20.40,0:24:22.73,*Default,NTP,0000,0000,0000,,single plus two times couple
Dialogue: 0,0:24:23.10,0:24:26.53,*Default,NTP,0000,0000,0000,,which is going to evaluate for each row
Dialogue: 0,0:24:26.87,0:24:29.50,*Default,NTP,0000,0000,0000,,the total number of people on the chair
Dialogue: 0,0:24:30.30,0:24:31.50,*Default,NTP,0000,0000,0000,,so here is a row
Dialogue: 0,0:24:31.77,0:24:37.07,*Default,NTP,0000,0000,0000,,this chair has 2+2 times two equals six people in total
Dialogue: 0,0:24:37.30,0:24:38.90,*Default,NTP,0000,0000,0000,,matching this picture
Dialogue: 0,0:24:40.47,0:24:41.50,*Default,NTP,0000,0000,0000,,and in fact
Dialogue: 0,0:24:41.70,0:24:45.13,*Default,NTP,0000,0000,0000,,it turns out that each row has six people in total
Dialogue: 0,0:24:45.27,0:24:48.00,*Default,NTP,0000,0000,0000,,just in different configurations as we can see
Dialogue: 0,0:24:48.80,0:24:51.57,*Default,NTP,0000,0000,0000,,now at no point in evaluating this select statement
Dialogue: 0,0:24:51.67,0:24:53.17,*Default,NTP,0000,0000,0000,,did I mix together
Dialogue: 0,0:24:53.37,0:24:55.27,*Default,NTP,0000,0000,0000,,numbers from different rows
Dialogue: 0,0:24:55.37,0:24:58.93,*Default,NTP,0000,0000,0000,,instead I computed this output row from this input row
Dialogue: 0,0:24:59.57,0:25:02.30,*Default,NTP,0000,0000,0000,,this output row from this input row etc
Dialogue: 0,0:25:03.13,0:25:05.27,*Default,NTP,0000,0000,0000,,and I used the names of columns
Dialogue: 0,0:25:05.30,0:25:07.93,*Default,NTP,0000,0000,0000,,to select the values in each row
Dialogue: 0,0:25:07.97,0:25:10.07,*Default,NTP,0000,0000,0000,,and then combine them here with a constant
Dialogue: 0,0:25:10.10,0:25:12.27,*Default,NTP,0000,0000,0000,,and do some multiplication and addition
Dialogue: 0,0:25:13.80,0:25:15.53,*Default,NTP,0000,0000,0000,,here's the discussion question
Dialogue: 0,0:25:15.93,0:25:17.33,*Default,NTP,0000,0000,0000,,given the table ince
Dialogue: 0,0:25:17.33,0:25:19.47,*Default,NTP,0000,0000,0000,,that describes how to some powers of two
Dialogue: 0,0:25:19.47,0:25:21.13,*Default,NTP,0000,0000,0000,,to form various integers
Dialogue: 0,0:25:21.60,0:25:22.80,*Default,NTP,0000,0000,0000,,compute the following
Dialogue: 0,0:25:23.10,0:25:24.73,*Default,NTP,0000,0000,0000,,well before I show you what to compute
Dialogue: 0,0:25:24.73,0:25:26.33,*Default,NTP,0000,0000,0000,,let's take a look at this table
Dialogue: 0,0:25:27.10,0:25:31.00,*Default,NTP,0000,0000,0000,,so this gives the word names of various integers
Dialogue: 0,0:25:31.47,0:25:33.73,*Default,NTP,0000,0000,0000,,it turns out that each positive integer
Dialogue: 0,0:25:33.73,0:25:35.60,*Default,NTP,0000,0000,0000,,can be expressed as a sum
Dialogue: 0,0:25:35.60,0:25:36.97,*Default,NTP,0000,0000,0000,,of powers of two
Dialogue: 0,0:25:37.27,0:25:37.90,*Default,NTP,0000,0000,0000,,and in fact
Dialogue: 0,0:25:37.90,0:25:40.73,*Default,NTP,0000,0000,0000,,there's only one way to do so for each integer
Dialogue: 0,0:25:42.97,0:25:46.13,*Default,NTP,0000,0000,0000,,this table is just enumerating how to
Dialogue: 0,0:25:46.30,0:25:48.17,*Default,NTP,0000,0000,0000,,express each of these integers
Dialogue: 0,0:25:48.17,0:25:49.97,*Default,NTP,0000,0000,0000,,as sums of powers of two
Dialogue: 0,0:25:50.20,0:25:52.57,*Default,NTP,0000,0000,0000,,where the first four powers of two are one two
Dialogue: 0,0:25:52.60,0:25:53.67,*Default,NTP,0000,0000,0000,,four and eight
Dialogue: 0,0:25:54.40,0:25:55.40,*Default,NTP,0000,0000,0000,,so for example
Dialogue: 0,0:25:55.40,0:25:56.60,*Default,NTP,0000,0000,0000,,we can make seven
Dialogue: 0,0:25:56.60,0:25:59.37,*Default,NTP,0000,0000,0000,,by adding together one and two and four
Dialogue: 0,0:25:59.60,0:26:03.17,*Default,NTP,0000,0000,0000,,or I can make five by adding together one and four
Dialogue: 0,0:26:03.30,0:26:05.80,*Default,NTP,0000,0000,0000,,so the four column either has zero
Dialogue: 0,0:26:05.87,0:26:09.57,*Default,NTP,0000,0000,0000,,if zero isn't included in building up this number here
Dialogue: 0,0:26:10.00,0:26:10.90,*Default,NTP,0000,0000,0000,,or it has a four
Dialogue: 0,0:26:11.40,0:26:12.37,*Default,NTP,0000,0000,0000,,and you can probably
Dialogue: 0,0:26:12.37,0:26:13.53,*Default,NTP,0000,0000,0000,,start to see the pattern
Dialogue: 0,0:26:13.53,0:26:15.33,*Default,NTP,0000,0000,0000,,of how to construct integers out of
Dialogue: 0,0:26:15.33,0:26:16.27,*Default,NTP,0000,0000,0000,,powers of two
Dialogue: 0,0:26:16.40,0:26:19.50,*Default,NTP,0000,0000,0000,,just by scanning what's going on in these columns
Dialogue: 0,0:26:20.93,0:26:22.80,*Default,NTP,0000,0000,0000,,okay so on to the questions
Dialogue: 0,0:26:22.87,0:26:25.30,*Default,NTP,0000,0000,0000,,write a select statement for a two column table
Dialogue: 0,0:26:25.30,0:26:27.73,*Default,NTP,0000,0000,0000,,of the word and value for each integer
Dialogue: 0,0:26:28.10,0:26:31.50,*Default,NTP,0000,0000,0000,,so it should say that the value for three is three
Dialogue: 0,0:26:32.53,0:26:35.33,*Default,NTP,0000,0000,0000,,and include this value for every element here
Dialogue: 0,0:26:37.27,0:26:38.40,*Default,NTP,0000,0000,0000,,and when you're finished with that
Dialogue: 0,0:26:38.40,0:26:39.00,*Default,NTP,0000,0000,0000,,write a different
Dialogue: 0,0:26:39.00,0:26:39.80,*Default,NTP,0000,0000,0000,,select statement
Dialogue: 0,0:26:39.80,0:26:41.97,*Default,NTP,0000,0000,0000,,for the word names of the powers of two
Dialogue: 0,0:26:42.33,0:26:44.33,*Default,NTP,0000,0000,0000,,so given a table with this structure
Dialogue: 0,0:26:44.40,0:26:47.70,*Default,NTP,0000,0000,0000,,how would you build the words one two four and eight
Dialogue: 0,0:26:47.73,0:26:48.47,*Default,NTP,0000,0000,0000,,but leave out
Dialogue: 0,0:26:48.47,0:26:50.87,*Default,NTP,0000,0000,0000,,five and seven because they're not powers of two
Dialogue: 0,0:26:52.30,0:26:53.77,*Default,NTP,0000,0000,0000,,think about it for a moment
Dialogue: 0,0:26:54.00,0:26:55.57,*Default,NTP,0000,0000,0000,,then we'll go through it together
Dialogue: 0,0:26:56.87,0:26:58.37,*Default,NTP,0000,0000,0000,,here's the table of vince
Dialogue: 0,0:27:01.97,0:27:03.47,*Default,NTP,0000,0000,0000,,if I start sql light
Dialogue: 0,0:27:03.67,0:27:06.90,*Default,NTP,0000,0000,0000,,I can load that table and look at it using select star
Dialogue: 0,0:27:06.90,0:27:07.87,*Default,NTP,0000,0000,0000,,from its
Dialogue: 0,0:27:09.07,0:27:10.77,*Default,NTP,0000,0000,0000,,notice something quite interesting
Dialogue: 0,0:27:11.37,0:27:13.40,*Default,NTP,0000,0000,0000,,these rows don't appear in the order
Dialogue: 0,0:27:13.40,0:27:15.47,*Default,NTP,0000,0000,0000,,that I wrote them out in the first place
Dialogue: 0,0:27:16.27,0:27:19.10,*Default,NTP,0000,0000,0000,,when your union together a bunch of select statements
Dialogue: 0,0:27:19.10,0:27:22.33,*Default,NTP,0000,0000,0000,,you get no guarantees about the order of the result
Dialogue: 0,0:27:22.57,0:27:25.40,*Default,NTP,0000,0000,0000,,that's up to the declarative programming engine
Dialogue: 0,0:27:25.50,0:27:27.93,*Default,NTP,0000,0000,0000,,which tries to compute the result efficiently
Dialogue: 0,0:27:28.97,0:27:32.27,*Default,NTP,0000,0000,0000,,now one thing that union does is it discards repeats
Dialogue: 0,0:27:32.30,0:27:35.17,*Default,NTP,0000,0000,0000,,and the way that it discards repeats in some cases
Dialogue: 0,0:27:35.20,0:27:37.07,*Default,NTP,0000,0000,0000,,is to sort all the rows
Dialogue: 0,0:27:37.07,0:27:39.10,*Default,NTP,0000,0000,0000,,to look for whether there's repetition
Dialogue: 0,0:27:39.37,0:27:40.93,*Default,NTP,0000,0000,0000,,and that's exactly what happened here
Dialogue: 0,0:27:40.93,0:27:42.60,*Default,NTP,0000,0000,0000,,so you can see that it's
Dialogue: 0,0:27:42.87,0:27:44.60,*Default,NTP,0000,0000,0000,,written all of these in an
Dialogue: 0,0:27:44.77,0:27:47.50,*Default,NTP,0000,0000,0000,,alphabetical order according to the word
Dialogue: 0,0:27:48.10,0:27:50.33,*Default,NTP,0000,0000,0000,,which is not what I asked for in the first place
Dialogue: 0,0:27:50.40,0:27:51.57,*Default,NTP,0000,0000,0000,,but that's what I got
Dialogue: 0,0:27:52.10,0:27:54.47,*Default,NTP,0000,0000,0000,,and this is one of the properties of declarative
Dialogue: 0,0:27:54.47,0:27:55.80,*Default,NTP,0000,0000,0000,,programming languages
Dialogue: 0,0:27:56.67,0:27:59.07,*Default,NTP,0000,0000,0000,,there's no particular procedure
Dialogue: 0,0:27:59.37,0:28:01.10,*Default,NTP,0000,0000,0000,,that's defined in advance
Dialogue: 0,0:28:01.10,0:28:03.00,*Default,NTP,0000,0000,0000,,that tells me how to compute the result
Dialogue: 0,0:28:03.00,0:28:05.87,*Default,NTP,0000,0000,0000,,of unioning together a bunch of select statements
Dialogue: 0,0:28:06.00,0:28:07.90,*Default,NTP,0000,0000,0000,,instead it's up to the system
Dialogue: 0,0:28:07.93,0:28:09.80,*Default,NTP,0000,0000,0000,,to create the correct result
Dialogue: 0,0:28:10.07,0:28:11.77,*Default,NTP,0000,0000,0000,,and this is the correct result
Dialogue: 0,0:28:12.67,0:28:14.57,*Default,NTP,0000,0000,0000,,in whatever way it chooses
Dialogue: 0,0:28:14.77,0:28:16.77,*Default,NTP,0000,0000,0000,,and that might involve building the table
Dialogue: 0,0:28:16.77,0:28:18.80,*Default,NTP,0000,0000,0000,,in a different order than you might expect
Dialogue: 0,0:28:21.47,0:28:22.47,*Default,NTP,0000,0000,0000,,okay moving on
Dialogue: 0,0:28:22.47,0:28:25.57,*Default,NTP,0000,0000,0000,,to the question of how to write a select statement
Dialogue: 0,0:28:25.73,0:28:28.00,*Default,NTP,0000,0000,0000,,that gives the value for each word
Dialogue: 0,0:28:28.77,0:28:33.27,*Default,NTP,0000,0000,0000,,well I need to sum up all of the numbers in each row
Dialogue: 0,0:28:33.40,0:28:36.73,*Default,NTP,0000,0000,0000,,and I do that by using their column names
Dialogue: 0,0:28:36.73,0:28:40.07,*Default,NTP,0000,0000,0000,,so one plus two plus four plus eight
Dialogue: 0,0:28:42.57,0:28:46.67,*Default,NTP,0000,0000,0000,,as value and I select these from the ins table
Dialogue: 0,0:28:48.33,0:28:49.27,*Default,NTP,0000,0000,0000,,now even though
Dialogue: 0,0:28:49.27,0:28:52.97,*Default,NTP,0000,0000,0000,,these are names that appear in this column
Dialogue: 0,0:28:53.13,0:28:54.40,*Default,NTP,0000,0000,0000,,that doesn't matter
Dialogue: 0,0:28:54.57,0:28:56.30,*Default,NTP,0000,0000,0000,,it's always the case that a select
Dialogue: 0,0:28:56.30,0:28:57.87,*Default,NTP,0000,0000,0000,,statement's expression
Dialogue: 0,0:28:58.00,0:29:01.57,*Default,NTP,0000,0000,0000,,will be referring to a column names these one
Dialogue: 0,0:29:01.57,0:29:03.57,*Default,NTP,0000,0000,0000,,two four and eight appear
Dialogue: 0,0:29:05.30,0:29:09.70,*Default,NTP,0000,0000,0000,,the 2nd question was how do I select only the words
Dialogue: 0,0:29:10.20,0:29:13.47,*Default,NTP,0000,0000,0000,,from the ins table that are powers of two
Dialogue: 0,0:29:14.57,0:29:18.13,*Default,NTP,0000,0000,0000,,well in order to do that I need to write a wear clothes
Dialogue: 0,0:29:18.27,0:29:21.87,*Default,NTP,0000,0000,0000,,that's true only for the rows that are powers of two
Dialogue: 0,0:29:23.00,0:29:26.07,*Default,NTP,0000,0000,0000,,and I can find those rows by finding rows where
Dialogue: 0,0:29:26.53,0:29:31.00,*Default,NTP,0000,0000,0000,,one of these numbers is positive and the rest are zero
Dialogue: 0,0:29:32.13,0:29:33.97,*Default,NTP,0000,0000,0000,,one way I thought to compute that
Dialogue: 0,0:29:34.10,0:29:37.97,*Default,NTP,0000,0000,0000,,was just to add up all of the values in the rows
Dialogue: 0,0:29:38.17,0:29:39.40,*Default,NTP,0000,0000,0000,,but divide out
Dialogue: 0,0:29:39.50,0:29:43.57,*Default,NTP,0000,0000,0000,,two here so that it looks more like 0 0 1 1 0 0 1 1
Dialogue: 0,0:29:43.60,0:29:46.20,*Default,NTP,0000,0000,0000,,and divide by four here so that these all become
Dialogue: 0,0:29:46.20,0:29:47.30,*Default,NTP,0000,0000,0000,,ones as well
Dialogue: 0,0:29:49.60,0:29:50.70,*Default,NTP,0000,0000,0000,,once I've done that
Dialogue: 0,0:29:50.70,0:29:52.93,*Default,NTP,0000,0000,0000,,I can check whether exactly one of them
Dialogue: 0,0:29:52.93,0:29:57.93,*Default,NTP,0000,0000,0000,,is one by computing the sum and checking its equality
Dialogue: 0,0:29:58.80,0:30:01.37,*Default,NTP,0000,0000,0000,,and there they are the powers of two